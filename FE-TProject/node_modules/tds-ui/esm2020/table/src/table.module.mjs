import { BidiModule } from '@angular/cdk/bidi';
import { PlatformModule } from '@angular/cdk/platform';
import { ScrollingModule } from '@angular/cdk/scrolling';
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { TDSButtonModule } from 'tds-ui/button';
import { TDSOutletModule } from 'tds-ui/core/outlet';
import { TDSResizeObserverModule } from 'tds-ui/core/resize-observers';
import { TDSDropDownModule } from 'tds-ui/dropdown';
import { TDSEmptyModule } from 'tds-ui/empty';
import { TDSI18nModule } from 'tds-ui/i18n';
import { TDSPaginationModule } from 'tds-ui/pagination';
import { TDSSpinnerModule } from 'tds-ui/progress-spinner';
import { TDSRadioModule } from 'tds-ui/radio';
import { TDSCheckBoxModule } from 'tds-ui/tds-checkbox';
import { TDSFilterTriggerComponent } from './addon/filter-trigger.component';
import { TDSTableFilterComponent } from './addon/filter.component';
import { TDSRowExpandButtonDirective } from './addon/row-expand-button.directive';
import { TDSRowIndentDirective } from './addon/row-indent.directive';
import { TDSTableSelectionComponent } from './addon/selection.component';
import { TDSTableSortersComponent } from './addon/sorters.component';
import { TDSCellFixedDirective } from './cell/cell-fixed.directive';
import { TDSTableCellDirective } from './cell/cell.directive';
import { TDSTdAddOnComponent } from './cell/td-addon.component';
import { TDSThAddOnComponent } from './cell/th-addon.component';
import { TDSThMeasureDirective } from './cell/th-measure.directive';
import { TDSThSelectionComponent } from './cell/th-selection.component';
import { TDSCellAlignDirective } from './styled/align.directive';
import { TDSCellEllipsisDirective } from './styled/ellipsis.directive';
import { TDSCellBreakWordDirective } from './styled/word-break.directive';
import { TDSTableContentComponent } from './table/table-content.component';
import { TDSTableFixedRowComponent } from './table/table-fixed-row.component';
import { TDSTableInnerDefaultComponent } from './table/table-inner-default.component';
import { TDSTableInnerScrollComponent } from './table/table-inner-scroll.component';
import { TDSTableVirtualScrollDirective } from './table/table-virtual-scroll.directive';
import { TDSTableComponent } from './table/table.component';
import { TDSTbodyComponent } from './table/tbody.component';
import { TDSTheadComponent } from './table/thead.component';
import { TDSTableTitleFooterComponent } from './table/title-footer.component';
import { TDSTrExpandDirective } from './table/tr-expand.directive';
import { TDSTrMeasureComponent } from './table/tr-measure.component';
import { TDSTrDirective } from './table/tr.directive';
import * as i0 from "@angular/core";
export class TDSTableModule {
}
TDSTableModule.ɵfac = function TDSTableModule_Factory(t) { return new (t || TDSTableModule)(); };
TDSTableModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: TDSTableModule });
TDSTableModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [[
            BidiModule,
            FormsModule,
            TDSOutletModule,
            TDSRadioModule,
            TDSCheckBoxModule,
            TDSDropDownModule,
            TDSButtonModule,
            CommonModule,
            PlatformModule,
            TDSPaginationModule,
            TDSResizeObserverModule,
            TDSSpinnerModule,
            TDSI18nModule,
            TDSEmptyModule,
            ScrollingModule,
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSTableModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    TDSTableComponent,
                    TDSThAddOnComponent,
                    TDSTableCellDirective,
                    TDSThMeasureDirective,
                    TDSTdAddOnComponent,
                    TDSTheadComponent,
                    TDSTbodyComponent,
                    TDSTrDirective,
                    TDSTrExpandDirective,
                    TDSTableVirtualScrollDirective,
                    TDSCellFixedDirective,
                    TDSTableContentComponent,
                    TDSTableTitleFooterComponent,
                    TDSTableInnerDefaultComponent,
                    TDSTableInnerScrollComponent,
                    TDSTrMeasureComponent,
                    TDSRowIndentDirective,
                    TDSRowExpandButtonDirective,
                    TDSCellBreakWordDirective,
                    TDSCellAlignDirective,
                    TDSTableSortersComponent,
                    TDSTableFilterComponent,
                    TDSTableSelectionComponent,
                    TDSCellEllipsisDirective,
                    TDSFilterTriggerComponent,
                    TDSTableFixedRowComponent,
                    TDSThSelectionComponent
                ],
                exports: [
                    TDSTableComponent,
                    TDSThAddOnComponent,
                    TDSTableCellDirective,
                    TDSThMeasureDirective,
                    TDSTdAddOnComponent,
                    TDSTheadComponent,
                    TDSTbodyComponent,
                    TDSTrDirective,
                    TDSTableVirtualScrollDirective,
                    TDSCellFixedDirective,
                    TDSFilterTriggerComponent,
                    TDSTrExpandDirective,
                    TDSCellBreakWordDirective,
                    TDSCellAlignDirective,
                    TDSCellEllipsisDirective,
                    TDSTableFixedRowComponent,
                    TDSThSelectionComponent
                ],
                imports: [
                    BidiModule,
                    FormsModule,
                    TDSOutletModule,
                    TDSRadioModule,
                    TDSCheckBoxModule,
                    TDSDropDownModule,
                    TDSButtonModule,
                    CommonModule,
                    PlatformModule,
                    TDSPaginationModule,
                    TDSResizeObserverModule,
                    TDSSpinnerModule,
                    TDSI18nModule,
                    TDSEmptyModule,
                    ScrollingModule,
                ]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0.ɵɵsetNgModuleScope(TDSTableModule, { declarations: [TDSTableComponent,
        TDSThAddOnComponent,
        TDSTableCellDirective,
        TDSThMeasureDirective,
        TDSTdAddOnComponent,
        TDSTheadComponent,
        TDSTbodyComponent,
        TDSTrDirective,
        TDSTrExpandDirective,
        TDSTableVirtualScrollDirective,
        TDSCellFixedDirective,
        TDSTableContentComponent,
        TDSTableTitleFooterComponent,
        TDSTableInnerDefaultComponent,
        TDSTableInnerScrollComponent,
        TDSTrMeasureComponent,
        TDSRowIndentDirective,
        TDSRowExpandButtonDirective,
        TDSCellBreakWordDirective,
        TDSCellAlignDirective,
        TDSTableSortersComponent,
        TDSTableFilterComponent,
        TDSTableSelectionComponent,
        TDSCellEllipsisDirective,
        TDSFilterTriggerComponent,
        TDSTableFixedRowComponent,
        TDSThSelectionComponent], imports: [BidiModule,
        FormsModule,
        TDSOutletModule,
        TDSRadioModule,
        TDSCheckBoxModule,
        TDSDropDownModule,
        TDSButtonModule,
        CommonModule,
        PlatformModule,
        TDSPaginationModule,
        TDSResizeObserverModule,
        TDSSpinnerModule,
        TDSI18nModule,
        TDSEmptyModule,
        ScrollingModule], exports: [TDSTableComponent,
        TDSThAddOnComponent,
        TDSTableCellDirective,
        TDSThMeasureDirective,
        TDSTdAddOnComponent,
        TDSTheadComponent,
        TDSTbodyComponent,
        TDSTrDirective,
        TDSTableVirtualScrollDirective,
        TDSCellFixedDirective,
        TDSFilterTriggerComponent,
        TDSTrExpandDirective,
        TDSCellBreakWordDirective,
        TDSCellAlignDirective,
        TDSCellEllipsisDirective,
        TDSTableFixedRowComponent,
        TDSThSelectionComponent] }); })();
//# sourceMappingURL=data:application/json;base64,