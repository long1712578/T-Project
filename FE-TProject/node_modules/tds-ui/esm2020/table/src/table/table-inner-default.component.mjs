import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "./table-content.component";
export class TDSTableInnerDefaultComponent {
    constructor(elementRef) {
        this.elementRef = elementRef;
        this.tableLayout = 'auto';
        this.listOfColWidth = [];
        this.theadTemplate = null;
        this.contentTemplate = null;
        // TODO: move to host after View Engine deprecation
        this.elementRef.nativeElement.classList.add('tds-table-container');
    }
}
TDSTableInnerDefaultComponent.ɵfac = function TDSTableInnerDefaultComponent_Factory(t) { return new (t || TDSTableInnerDefaultComponent)(i0.ɵɵdirectiveInject(i0.ElementRef)); };
TDSTableInnerDefaultComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TDSTableInnerDefaultComponent, selectors: [["tds-table-inner-default"]], inputs: { tableLayout: "tableLayout", listOfColWidth: "listOfColWidth", theadTemplate: "theadTemplate", contentTemplate: "contentTemplate" }, decls: 2, vars: 4, consts: [[1, "tds-table-content"], ["tds-table-content", "", 3, "contentTemplate", "tableLayout", "listOfColWidth", "theadTemplate"]], template: function TDSTableInnerDefaultComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 0);
        i0.ɵɵelement(1, "table", 1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("contentTemplate", ctx.contentTemplate)("tableLayout", ctx.tableLayout)("listOfColWidth", ctx.listOfColWidth)("theadTemplate", ctx.theadTemplate);
    } }, directives: [i1.TDSTableContentComponent], encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSTableInnerDefaultComponent, [{
        type: Component,
        args: [{
                selector: 'tds-table-inner-default',
                changeDetection: ChangeDetectionStrategy.OnPush,
                encapsulation: ViewEncapsulation.None,
                template: `
    <div class="tds-table-content">
      <table
        tds-table-content
        [contentTemplate]="contentTemplate"
        [tableLayout]="tableLayout"
        [listOfColWidth]="listOfColWidth"
        [theadTemplate]="theadTemplate"
      ></table>
    </div>
  `
            }]
    }], function () { return [{ type: i0.ElementRef }]; }, { tableLayout: [{
            type: Input
        }], listOfColWidth: [{
            type: Input
        }], theadTemplate: [{
            type: Input
        }], contentTemplate: [{
            type: Input
        }] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUtaW5uZXItZGVmYXVsdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy90ZHMtdWkvdGFibGUvc3JjL3RhYmxlL3RhYmxlLWlubmVyLWRlZmF1bHQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQWMsS0FBSyxFQUFlLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDOzs7QUFxQnRILE1BQU0sT0FBTyw2QkFBNkI7SUFNeEMsWUFBb0IsVUFBc0I7UUFBdEIsZUFBVSxHQUFWLFVBQVUsQ0FBWTtRQUxqQyxnQkFBVyxHQUFtQixNQUFNLENBQUM7UUFDckMsbUJBQWMsR0FBaUMsRUFBRSxDQUFDO1FBQ2xELGtCQUFhLEdBQW1DLElBQUksQ0FBQztRQUNyRCxvQkFBZSxHQUFtQyxJQUFJLENBQUM7UUFHOUQsbURBQW1EO1FBQ25ELElBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMscUJBQXFCLENBQUMsQ0FBQztJQUNyRSxDQUFDOzswR0FUVSw2QkFBNkI7Z0ZBQTdCLDZCQUE2QjtRQVh0Qyw4QkFBK0I7UUFDN0IsMkJBTVM7UUFDWCxpQkFBTTs7UUFMRixlQUFtQztRQUFuQyxxREFBbUMsZ0NBQUEsc0NBQUEsb0NBQUE7O3VGQVE5Qiw2QkFBNkI7Y0FoQnpDLFNBQVM7ZUFBQztnQkFDVCxRQUFRLEVBQUUseUJBQXlCO2dCQUNuQyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtnQkFDL0MsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7Z0JBQ3JDLFFBQVEsRUFBRTs7Ozs7Ozs7OztHQVVUO2FBQ0Y7NkRBRVUsV0FBVztrQkFBbkIsS0FBSztZQUNHLGNBQWM7a0JBQXRCLEtBQUs7WUFDRyxhQUFhO2tCQUFyQixLQUFLO1lBQ0csZUFBZTtrQkFBdkIsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5pbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBJbnB1dCwgVGVtcGxhdGVSZWYsIFZpZXdFbmNhcHN1bGF0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFREU1NhZmVBbnkgfSBmcm9tICd0ZHMtdWkvc2hhcmVkL3V0aWxpdHknO1xyXG5cclxuaW1wb3J0IHsgVERTVGFibGVMYXlvdXQgfSBmcm9tICcuLi90YWJsZS50eXBlcyc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ3Rkcy10YWJsZS1pbm5lci1kZWZhdWx0JyxcclxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcclxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8ZGl2IGNsYXNzPVwidGRzLXRhYmxlLWNvbnRlbnRcIj5cclxuICAgICAgPHRhYmxlXHJcbiAgICAgICAgdGRzLXRhYmxlLWNvbnRlbnRcclxuICAgICAgICBbY29udGVudFRlbXBsYXRlXT1cImNvbnRlbnRUZW1wbGF0ZVwiXHJcbiAgICAgICAgW3RhYmxlTGF5b3V0XT1cInRhYmxlTGF5b3V0XCJcclxuICAgICAgICBbbGlzdE9mQ29sV2lkdGhdPVwibGlzdE9mQ29sV2lkdGhcIlxyXG4gICAgICAgIFt0aGVhZFRlbXBsYXRlXT1cInRoZWFkVGVtcGxhdGVcIlxyXG4gICAgICA+PC90YWJsZT5cclxuICAgIDwvZGl2PlxyXG4gIGBcclxufSlcclxuZXhwb3J0IGNsYXNzIFREU1RhYmxlSW5uZXJEZWZhdWx0Q29tcG9uZW50IHtcclxuICBASW5wdXQoKSB0YWJsZUxheW91dDogVERTVGFibGVMYXlvdXQgPSAnYXV0byc7XHJcbiAgQElucHV0KCkgbGlzdE9mQ29sV2lkdGg6IFJlYWRvbmx5QXJyYXk8c3RyaW5nIHwgbnVsbD4gPSBbXTtcclxuICBASW5wdXQoKSB0aGVhZFRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxURFNTYWZlQW55PiB8IG51bGwgPSBudWxsO1xyXG4gIEBJbnB1dCgpIGNvbnRlbnRUZW1wbGF0ZTogVGVtcGxhdGVSZWY8VERTU2FmZUFueT4gfCBudWxsID0gbnVsbDtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBlbGVtZW50UmVmOiBFbGVtZW50UmVmKSB7XHJcbiAgICAvLyBUT0RPOiBtb3ZlIHRvIGhvc3QgYWZ0ZXIgVmlldyBFbmdpbmUgZGVwcmVjYXRpb25cclxuICAgIHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ3Rkcy10YWJsZS1jb250YWluZXInKTtcclxuICB9XHJcbn1cclxuIl19