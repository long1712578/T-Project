import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "tds-ui/tds-checkbox";
import * as i3 from "@angular/forms";
import * as i4 from "tds-ui/dropdown";
function TDSTableSelectionComponent_tds_checkbox_0_Template(rf, ctx) { if (rf & 1) {
    const _r3 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "tds-checkbox", 2);
    i0.ɵɵlistener("ngModelChange", function TDSTableSelectionComponent_tds_checkbox_0_Template_tds_checkbox_ngModelChange_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r2 = i0.ɵɵnextContext(); return ctx_r2.onCheckedChange($event); });
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵclassProp("tds-table-selection-select-all-custom", ctx_r0.showRowSelection);
    i0.ɵɵproperty("ngModel", ctx_r0.checked)("disabled", ctx_r0.disabled)("indeterminate", ctx_r0.indeterminate);
} }
function TDSTableSelectionComponent_div_1_div_6_Template(rf, ctx) { if (rf & 1) {
    const _r8 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 9);
    i0.ɵɵlistener("click", function TDSTableSelectionComponent_div_1_div_6_Template_div_click_0_listener() { const restoredCtx = i0.ɵɵrestoreView(_r8); const selection_r6 = restoredCtx.$implicit; return selection_r6.onSelect(); });
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const selection_r6 = ctx.$implicit;
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1(" ", selection_r6.text, " ");
} }
function TDSTableSelectionComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 3)(1, "span", 4);
    i0.ɵɵelement(2, "i", 5);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(3, "tds-dropdown-menu", null, 6)(5, "div", 7);
    i0.ɵɵtemplate(6, TDSTableSelectionComponent_div_1_div_6_Template, 2, 1, "div", 8);
    i0.ɵɵelementEnd()()();
} if (rf & 2) {
    const _r4 = i0.ɵɵreference(4);
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("tdsDropdownMenu", _r4);
    i0.ɵɵadvance(5);
    i0.ɵɵproperty("ngForOf", ctx_r1.listOfSelections);
} }
export class TDSTableSelectionComponent {
    constructor(elementRef) {
        this.elementRef = elementRef;
        this.listOfSelections = [];
        this.checked = false;
        this.disabled = false;
        this.indeterminate = false;
        this.showCheckbox = false;
        this.showRowSelection = false;
        this.checkedChange = new EventEmitter();
        // TODO: move to host after View Engine deprecation
        this.elementRef.nativeElement.classList.add('tds-table-selection');
    }
    onCheckedChange(checked) {
        this.checked = checked;
        this.checkedChange.emit(checked);
    }
}
TDSTableSelectionComponent.ɵfac = function TDSTableSelectionComponent_Factory(t) { return new (t || TDSTableSelectionComponent)(i0.ɵɵdirectiveInject(i0.ElementRef)); };
TDSTableSelectionComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TDSTableSelectionComponent, selectors: [["tds-table-selection"]], inputs: { listOfSelections: "listOfSelections", checked: "checked", disabled: "disabled", indeterminate: "indeterminate", showCheckbox: "showCheckbox", showRowSelection: "showRowSelection" }, outputs: { checkedChange: "checkedChange" }, decls: 2, vars: 2, consts: [[3, "tds-table-selection-select-all-custom", "ngModel", "disabled", "indeterminate", "ngModelChange", 4, "ngIf"], ["class", "tds-table-selection-extra inline", 4, "ngIf"], [3, "ngModel", "disabled", "indeterminate", "ngModelChange"], [1, "tds-table-selection-extra", "inline"], ["tds-dropdown", "", "placement", "bottomLeft", 1, "tds-table-selection-down", 3, "tdsDropdownMenu"], [1, "tdsi-arrow-down-fill"], ["selectionMenu", "tdsDropdownMenu"], [1, "w-full"], ["tds-dropdown-item", "", 3, "click", 4, "ngFor", "ngForOf"], ["tds-dropdown-item", "", 3, "click"]], template: function TDSTableSelectionComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵtemplate(0, TDSTableSelectionComponent_tds_checkbox_0_Template, 1, 5, "tds-checkbox", 0);
        i0.ɵɵtemplate(1, TDSTableSelectionComponent_div_1_Template, 7, 2, "div", 1);
    } if (rf & 2) {
        i0.ɵɵproperty("ngIf", ctx.showCheckbox);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx.showRowSelection);
    } }, directives: [i1.NgIf, i2.TDSCheckbox, i3.NgControlStatus, i3.NgModel, i4.TDSDropDownDirective, i4.TDSDropdownMenuComponent, i1.NgForOf, i4.TDSDropDownItemDirective], encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSTableSelectionComponent, [{
        type: Component,
        args: [{
                selector: 'tds-table-selection',
                preserveWhitespaces: false,
                changeDetection: ChangeDetectionStrategy.OnPush,
                encapsulation: ViewEncapsulation.None,
                template: `
  <tds-checkbox 
  *ngIf="showCheckbox"
  [class.tds-table-selection-select-all-custom]="showRowSelection"
  [ngModel]="checked"
  [disabled]="disabled"
  [indeterminate]="indeterminate"
  (ngModelChange)="onCheckedChange($event)"
  >
  </tds-checkbox>
   
    <div class="tds-table-selection-extra inline" *ngIf="showRowSelection">
      <span tds-dropdown class="tds-table-selection-down" placement="bottomLeft" [tdsDropdownMenu]="selectionMenu">
          <i class="tdsi-arrow-down-fill"></i>
      </span>
      <tds-dropdown-menu #selectionMenu="tdsDropdownMenu">
        <div class="w-full" >
            <div  tds-dropdown-item *ngFor="let selection of listOfSelections" (click)="selection.onSelect()">
            {{ selection.text }}
            </div>            
        </div>
      </tds-dropdown-menu>    
    </div>
  `
            }]
    }], function () { return [{ type: i0.ElementRef }]; }, { listOfSelections: [{
            type: Input
        }], checked: [{
            type: Input
        }], disabled: [{
            type: Input
        }], indeterminate: [{
            type: Input
        }], showCheckbox: [{
            type: Input
        }], showRowSelection: [{
            type: Input
        }], checkedChange: [{
            type: Output
        }] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0aW9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3Rkcy11aS90YWJsZS9zcmMvYWRkb24vc2VsZWN0aW9uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQ0wsdUJBQXVCLEVBQ3ZCLFNBQVMsRUFFVCxZQUFZLEVBQ1osS0FBSyxFQUNMLE1BQU0sRUFDTixpQkFBaUIsRUFDbEIsTUFBTSxlQUFlLENBQUM7Ozs7Ozs7O0lBV3JCLHVDQU9DO0lBREQsNE1BQWlCLDhCQUF1QixJQUFDO0lBRXpDLGlCQUFlOzs7SUFOZixnRkFBZ0U7SUFDaEUsd0NBQW1CLDZCQUFBLHVDQUFBOzs7O0lBYVQsOEJBQWtHO0lBQS9CLHVNQUFTLHVCQUFvQixJQUFDO0lBQ2pHLFlBQ0E7SUFBQSxpQkFBTTs7O0lBRE4sZUFDQTtJQURBLGtEQUNBOzs7SUFSUiw4QkFBdUUsY0FBQTtJQUVqRSx1QkFBb0M7SUFDeEMsaUJBQU87SUFDUCxrREFBb0QsYUFBQTtJQUU5QyxpRkFFTTtJQUNWLGlCQUFNLEVBQUEsRUFBQTs7OztJQVJtRSxlQUFpQztJQUFqQyxxQ0FBaUM7SUFLeEQsZUFBbUI7SUFBbkIsaURBQW1COztBQVE3RSxNQUFNLE9BQU8sMEJBQTBCO0lBU3JDLFlBQW9CLFVBQXNCO1FBQXRCLGVBQVUsR0FBVixVQUFVLENBQVk7UUFSakMscUJBQWdCLEdBQXlFLEVBQUUsQ0FBQztRQUM1RixZQUFPLEdBQUcsS0FBSyxDQUFDO1FBQ2hCLGFBQVEsR0FBRyxLQUFLLENBQUM7UUFDakIsa0JBQWEsR0FBRyxLQUFLLENBQUM7UUFDdEIsaUJBQVksR0FBRyxLQUFLLENBQUM7UUFDckIscUJBQWdCLEdBQUcsS0FBSyxDQUFDO1FBQ2Ysa0JBQWEsR0FBRyxJQUFJLFlBQVksRUFBVyxDQUFDO1FBRzdELG1EQUFtRDtRQUNuRCxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLHFCQUFxQixDQUFDLENBQUM7SUFDckUsQ0FBQztJQUVELGVBQWUsQ0FBQyxPQUFnQjtRQUM5QixJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztRQUN2QixJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUNuQyxDQUFDOztvR0FqQlUsMEJBQTBCOzZFQUExQiwwQkFBMEI7UUF4QnJDLDZGQVFlO1FBRWIsMkVBV007O1FBcEJQLHVDQUFrQjtRQVM4QixlQUFzQjtRQUF0QiwyQ0FBc0I7O3VGQWM1RCwwQkFBMEI7Y0E5QnRDLFNBQVM7ZUFBQztnQkFDVCxRQUFRLEVBQUUscUJBQXFCO2dCQUMvQixtQkFBbUIsRUFBRSxLQUFLO2dCQUMxQixlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtnQkFDL0MsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7Z0JBQ3JDLFFBQVEsRUFBRTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0F1QlQ7YUFDRjs2REFFVSxnQkFBZ0I7a0JBQXhCLEtBQUs7WUFDRyxPQUFPO2tCQUFmLEtBQUs7WUFDRyxRQUFRO2tCQUFoQixLQUFLO1lBQ0csYUFBYTtrQkFBckIsS0FBSztZQUNHLFlBQVk7a0JBQXBCLEtBQUs7WUFDRyxnQkFBZ0I7a0JBQXhCLEtBQUs7WUFDYSxhQUFhO2tCQUEvQixNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmltcG9ydCB7XHJcbiAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXHJcbiAgQ29tcG9uZW50LFxyXG4gIEVsZW1lbnRSZWYsXHJcbiAgRXZlbnRFbWl0dGVyLFxyXG4gIElucHV0LFxyXG4gIE91dHB1dCxcclxuICBWaWV3RW5jYXBzdWxhdGlvblxyXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBURFNTYWZlQW55IH0gZnJvbSAndGRzLXVpL3NoYXJlZC91dGlsaXR5JztcclxuXHJcblxyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICd0ZHMtdGFibGUtc2VsZWN0aW9uJyxcclxuICBwcmVzZXJ2ZVdoaXRlc3BhY2VzOiBmYWxzZSxcclxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcclxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgPHRkcy1jaGVja2JveCBcclxuICAqbmdJZj1cInNob3dDaGVja2JveFwiXHJcbiAgW2NsYXNzLnRkcy10YWJsZS1zZWxlY3Rpb24tc2VsZWN0LWFsbC1jdXN0b21dPVwic2hvd1Jvd1NlbGVjdGlvblwiXHJcbiAgW25nTW9kZWxdPVwiY2hlY2tlZFwiXHJcbiAgW2Rpc2FibGVkXT1cImRpc2FibGVkXCJcclxuICBbaW5kZXRlcm1pbmF0ZV09XCJpbmRldGVybWluYXRlXCJcclxuICAobmdNb2RlbENoYW5nZSk9XCJvbkNoZWNrZWRDaGFuZ2UoJGV2ZW50KVwiXHJcbiAgPlxyXG4gIDwvdGRzLWNoZWNrYm94PlxyXG4gICBcclxuICAgIDxkaXYgY2xhc3M9XCJ0ZHMtdGFibGUtc2VsZWN0aW9uLWV4dHJhIGlubGluZVwiICpuZ0lmPVwic2hvd1Jvd1NlbGVjdGlvblwiPlxyXG4gICAgICA8c3BhbiB0ZHMtZHJvcGRvd24gY2xhc3M9XCJ0ZHMtdGFibGUtc2VsZWN0aW9uLWRvd25cIiBwbGFjZW1lbnQ9XCJib3R0b21MZWZ0XCIgW3Rkc0Ryb3Bkb3duTWVudV09XCJzZWxlY3Rpb25NZW51XCI+XHJcbiAgICAgICAgICA8aSBjbGFzcz1cInRkc2ktYXJyb3ctZG93bi1maWxsXCI+PC9pPlxyXG4gICAgICA8L3NwYW4+XHJcbiAgICAgIDx0ZHMtZHJvcGRvd24tbWVudSAjc2VsZWN0aW9uTWVudT1cInRkc0Ryb3Bkb3duTWVudVwiPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJ3LWZ1bGxcIiA+XHJcbiAgICAgICAgICAgIDxkaXYgIHRkcy1kcm9wZG93bi1pdGVtICpuZ0Zvcj1cImxldCBzZWxlY3Rpb24gb2YgbGlzdE9mU2VsZWN0aW9uc1wiIChjbGljayk9XCJzZWxlY3Rpb24ub25TZWxlY3QoKVwiPlxyXG4gICAgICAgICAgICB7eyBzZWxlY3Rpb24udGV4dCB9fVxyXG4gICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgICBcclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgPC90ZHMtZHJvcGRvd24tbWVudT4gICAgXHJcbiAgICA8L2Rpdj5cclxuICBgXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBURFNUYWJsZVNlbGVjdGlvbkNvbXBvbmVudCB7XHJcbiAgQElucHV0KCkgbGlzdE9mU2VsZWN0aW9uczogQXJyYXk8eyB0ZXh0OiBzdHJpbmc7IG9uU2VsZWN0KC4uLmFyZ3M6IFREU1NhZmVBbnlbXSk6IFREU1NhZmVBbnkgfT4gPSBbXTtcclxuICBASW5wdXQoKSBjaGVja2VkID0gZmFsc2U7XHJcbiAgQElucHV0KCkgZGlzYWJsZWQgPSBmYWxzZTtcclxuICBASW5wdXQoKSBpbmRldGVybWluYXRlID0gZmFsc2U7XHJcbiAgQElucHV0KCkgc2hvd0NoZWNrYm94ID0gZmFsc2U7XHJcbiAgQElucHV0KCkgc2hvd1Jvd1NlbGVjdGlvbiA9IGZhbHNlO1xyXG4gIEBPdXRwdXQoKSByZWFkb25seSBjaGVja2VkQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcjxib29sZWFuPigpO1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYpIHtcclxuICAgIC8vIFRPRE86IG1vdmUgdG8gaG9zdCBhZnRlciBWaWV3IEVuZ2luZSBkZXByZWNhdGlvblxyXG4gICAgdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQuY2xhc3NMaXN0LmFkZCgndGRzLXRhYmxlLXNlbGVjdGlvbicpO1xyXG4gIH1cclxuXHJcbiAgb25DaGVja2VkQ2hhbmdlKGNoZWNrZWQ6IGJvb2xlYW4pOiB2b2lkIHtcclxuICAgIHRoaXMuY2hlY2tlZCA9IGNoZWNrZWQ7XHJcbiAgICB0aGlzLmNoZWNrZWRDaGFuZ2UuZW1pdChjaGVja2VkKTtcclxuICB9XHJcbn1cclxuIl19