import { Directive, Optional } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../table-style.service";
export class TDSTableCellDirective {
    constructor(tdsTableStyleService) {
        this.isInsideTable = false;
        this.isInsideTable = !!tdsTableStyleService;
    }
}
TDSTableCellDirective.ɵfac = function TDSTableCellDirective_Factory(t) { return new (t || TDSTableCellDirective)(i0.ɵɵdirectiveInject(i1.TDSTableStyleService, 8)); };
TDSTableCellDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: TDSTableCellDirective, selectors: [["th", 9, "tds-disable-th", 3, "mat-cell", ""], ["td", 9, "tds-disable-td", 3, "mat-cell", ""]], hostVars: 2, hostBindings: function TDSTableCellDirective_HostBindings(rf, ctx) { if (rf & 2) {
        i0.ɵɵclassProp("tds-table-cell", ctx.isInsideTable);
    } } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSTableCellDirective, [{
        type: Directive,
        args: [{
                selector: 'th:not(.tds-disable-th):not([mat-cell]), td:not(.tds-disable-td):not([mat-cell])',
                host: {
                    '[class.tds-table-cell]': 'isInsideTable',
                }
            }]
    }], function () { return [{ type: i1.TDSTableStyleService, decorators: [{
                type: Optional
            }] }]; }, null); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2VsbC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy90ZHMtdWkvdGFibGUvc3JjL2NlbGwvY2VsbC5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7OztBQVdwRCxNQUFNLE9BQU8scUJBQXFCO0lBRWhDLFlBQXdCLG9CQUEwQztRQURsRSxrQkFBYSxHQUFHLEtBQUssQ0FBQztRQUVwQixJQUFJLENBQUMsYUFBYSxHQUFHLENBQUMsQ0FBQyxvQkFBb0IsQ0FBQztJQUM5QyxDQUFDOzswRkFKVSxxQkFBcUI7d0VBQXJCLHFCQUFxQjs7O3VGQUFyQixxQkFBcUI7Y0FQakMsU0FBUztlQUFDO2dCQUNULFFBQVEsRUFBRSxrRkFBa0Y7Z0JBQzVGLElBQUksRUFBRTtvQkFDSix3QkFBd0IsRUFBRSxlQUFlO2lCQUUxQzthQUNGOztzQkFHYyxRQUFRIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmltcG9ydCB7IERpcmVjdGl2ZSwgT3B0aW9uYWwgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbmltcG9ydCB7IFREU1RhYmxlU3R5bGVTZXJ2aWNlIH0gZnJvbSAnLi4vdGFibGUtc3R5bGUuc2VydmljZSc7XHJcblxyXG5ARGlyZWN0aXZlKHtcclxuICBzZWxlY3RvcjogJ3RoOm5vdCgudGRzLWRpc2FibGUtdGgpOm5vdChbbWF0LWNlbGxdKSwgdGQ6bm90KC50ZHMtZGlzYWJsZS10ZCk6bm90KFttYXQtY2VsbF0pJyxcclxuICBob3N0OiB7XHJcbiAgICAnW2NsYXNzLnRkcy10YWJsZS1jZWxsXSc6ICdpc0luc2lkZVRhYmxlJyxcclxuICAgIFxyXG4gIH1cclxufSlcclxuZXhwb3J0IGNsYXNzIFREU1RhYmxlQ2VsbERpcmVjdGl2ZSB7XHJcbiAgaXNJbnNpZGVUYWJsZSA9IGZhbHNlO1xyXG4gIGNvbnN0cnVjdG9yKEBPcHRpb25hbCgpIHRkc1RhYmxlU3R5bGVTZXJ2aWNlOiBURFNUYWJsZVN0eWxlU2VydmljZSkge1xyXG4gICAgdGhpcy5pc0luc2lkZVRhYmxlID0gISF0ZHNUYWJsZVN0eWxlU2VydmljZTtcclxuICB9XHJcbn1cclxuIl19