import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { differenceInMinutes, isSameDay, setHours, setMinutes } from 'date-fns';
import { BehaviorSubject, interval } from 'rxjs';
import { map, startWith, switchMapTo, takeUntil } from 'rxjs/operators';
import { TDSDestroyService } from 'tds-ui/core/services';
import * as i0 from "@angular/core";
import * as i1 from "tds-ui/core/services";
import * as i2 from "@angular/common";
function TDSCalendarCurrentTimeComponent_ng_template_0_div_0_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 3)(1, "div", 4)(2, "div", 5);
    i0.ɵɵtext(3);
    i0.ɵɵpipe(4, "date");
    i0.ɵɵelementEnd()()();
} if (rf & 2) {
    const ctx_r12 = i0.ɵɵnextContext();
    const topPx_r9 = ctx_r12.topPx;
    const now_r10 = ctx_r12.now;
    const ctx_r11 = i0.ɵɵnextContext();
    i0.ɵɵstyleProp("top", topPx_r9, "px")("left", ctx_r11.widthColTime, "px");
    i0.ɵɵadvance(3);
    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(4, 5, now_r10, "HH:mm"));
} }
function TDSCalendarCurrentTimeComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtemplate(0, TDSCalendarCurrentTimeComponent_ng_template_0_div_0_Template, 5, 8, "div", 2);
} if (rf & 2) {
    const isVisible_r8 = ctx.isVisible;
    i0.ɵɵproperty("ngIf", isVisible_r8);
} }
function TDSCalendarCurrentTimeComponent_ng_template_2_Template(rf, ctx) { }
const _c0 = function (a0, a1, a2, a3, a4, a5, a6, a7) { return { columnDate: a0, dayStartHour: a1, dayStartMinute: a2, dayEndHour: a3, dayEndMinute: a4, isVisible: a5, topPx: a6, now: a7 }; };
export class TDSCalendarCurrentTimeComponent {
    constructor(zone, cdr, destroy$) {
        this.zone = zone;
        this.cdr = cdr;
        this.destroy$ = destroy$;
        this.columnDate$ = new BehaviorSubject(undefined);
        //1 phút hiển thị 1 lần
        this.marker$ = interval(60 * 1000).pipe(
        // switchMap(() => ),
        startWith(0), switchMapTo(this.columnDate$), map((columnDate) => {
            const now = new Date();
            const startOfDay = setMinutes(setHours(columnDate, this.dayStartHour), this.dayStartMinute);
            const endOfDay = setMinutes(setHours(columnDate, this.dayEndHour), this.dayEndMinute);
            const hourHeightModifier = (this.hourSegments * this.hourSegmentHeight) /
                (this.hourDuration || 60);
            return {
                isVisible: isSameDay(columnDate, now) &&
                    now >= startOfDay &&
                    now <= endOfDay,
                top: differenceInMinutes(now, startOfDay) *
                    hourHeightModifier,
                now: now
            };
        }), takeUntil(this.destroy$));
    }
    ngOnChanges(changes) {
        if (changes.columnDate) {
            this.columnDate$.next(changes.columnDate.currentValue);
        }
    }
}
TDSCalendarCurrentTimeComponent.ɵfac = function TDSCalendarCurrentTimeComponent_Factory(t) { return new (t || TDSCalendarCurrentTimeComponent)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.TDSDestroyService)); };
TDSCalendarCurrentTimeComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TDSCalendarCurrentTimeComponent, selectors: [["tds-calendar-current-time"]], inputs: { columnDate: "columnDate", dayStartHour: "dayStartHour", dayStartMinute: "dayStartMinute", dayEndHour: "dayEndHour", dayEndMinute: "dayEndMinute", hourSegments: "hourSegments", hourDuration: "hourDuration", hourSegmentHeight: "hourSegmentHeight", customTemplate: "customTemplate", widthColTime: "widthColTime" }, features: [i0.ɵɵProvidersFeature([
            TDSDestroyService
        ]), i0.ɵɵNgOnChangesFeature], decls: 6, vars: 17, consts: [["defaultTemplate", ""], [3, "ngTemplateOutlet", "ngTemplateOutletContext"], ["class", "cal-current-time-marker bg-primary-1 absolute inset-0 h-px ", 3, "top", "left", 4, "ngIf"], [1, "cal-current-time-marker", "bg-primary-1", "absolute", "inset-0", "h-px"], [1, "w-full", "flex", "items-center", "justify-center", "relative"], [1, "absolute", "-left-[60px]", "text-primary-1", "z-10", "bg-white"]], template: function TDSCalendarCurrentTimeComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵtemplate(0, TDSCalendarCurrentTimeComponent_ng_template_0_Template, 1, 1, "ng-template", null, 0, i0.ɵɵtemplateRefExtractor);
        i0.ɵɵtemplate(2, TDSCalendarCurrentTimeComponent_ng_template_2_Template, 0, 0, "ng-template", 1);
        i0.ɵɵpipe(3, "async");
        i0.ɵɵpipe(4, "async");
        i0.ɵɵpipe(5, "async");
    } if (rf & 2) {
        const _r0 = i0.ɵɵreference(1);
        let tmp_1_0;
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngTemplateOutlet", ctx.customTemplate || _r0)("ngTemplateOutletContext", i0.ɵɵpureFunction8(8, _c0, ctx.columnDate, ctx.dayStartHour, ctx.dayStartMinute, ctx.dayEndHour, ctx.dayEndMinute, (tmp_1_0 = i0.ɵɵpipeBind1(3, 2, ctx.marker$)) == null ? null : tmp_1_0.isVisible, (tmp_1_0 = i0.ɵɵpipeBind1(4, 4, ctx.marker$)) == null ? null : tmp_1_0.top, (tmp_1_0 = i0.ɵɵpipeBind1(5, 6, ctx.marker$)) == null ? null : tmp_1_0.now));
    } }, directives: [i2.NgIf, i2.NgTemplateOutlet], pipes: [i2.DatePipe, i2.AsyncPipe], encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSCalendarCurrentTimeComponent, [{
        type: Component,
        args: [{ selector: 'tds-calendar-current-time', changeDetection: ChangeDetectionStrategy.OnPush, providers: [
                    TDSDestroyService
                ], template: "<ng-template #defaultTemplate let-columnDate=\"columnDate\" let-dayStartHour=\"dayStartHour\"\n    let-dayStartMinute=\"dayStartMinute\" let-dayEndHour=\"dayEndHour\" let-dayEndMinute=\"dayEndMinute\"\n    let-isVisible=\"isVisible\" let-topPx=\"topPx\" let-now=\"now\">\n\n    <div class=\"cal-current-time-marker bg-primary-1 absolute inset-0 h-px \" *ngIf=\"isVisible\"\n        [style.top.px]=\"topPx\" [style.left.px]=\"widthColTime\">\n        <div class=\"w-full flex items-center justify-center relative \">\n            <div class=\"absolute -left-[60px] text-primary-1 z-10  bg-white\">{{ now | date:\"HH:mm\"}}</div>            \n        </div>\n    </div>\n</ng-template>\n<ng-template [ngTemplateOutlet]=\"customTemplate || defaultTemplate\" [ngTemplateOutletContext]=\"{\n  columnDate: columnDate,\n  dayStartHour: dayStartHour,\n  dayStartMinute: dayStartMinute,\n  dayEndHour: dayEndHour,\n  dayEndMinute: dayEndMinute,\n  isVisible: (marker$ | async)?.isVisible,\n  topPx: (marker$ | async)?.top,\n  now: (marker$ | async)?.now\n}\">\n</ng-template>" }]
    }], function () { return [{ type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i1.TDSDestroyService }]; }, { columnDate: [{
            type: Input
        }], dayStartHour: [{
            type: Input
        }], dayStartMinute: [{
            type: Input
        }], dayEndHour: [{
            type: Input
        }], dayEndMinute: [{
            type: Input
        }], hourSegments: [{
            type: Input
        }], hourDuration: [{
            type: Input
        }], hourSegmentHeight: [{
            type: Input
        }], customTemplate: [{
            type: Input
        }], widthColTime: [{
            type: Input
        }] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGRzLWNhbGVuZGFyLWN1cnJlbnQtdGltZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy90ZHMtdWkvY2FsZW5kYXIvdGRzLWNhbGVuZGFyLWN1cnJlbnQtdGltZS5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi9wcm9qZWN0cy90ZHMtdWkvY2FsZW5kYXIvdGRzLWNhbGVuZGFyLWN1cnJlbnQtdGltZS5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQXFCLFNBQVMsRUFBRSxLQUFLLEVBQWlELE1BQU0sZUFBZSxDQUFDO0FBQzVJLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFFLFVBQVUsRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUNoRixPQUFPLEVBQUUsZUFBZSxFQUFFLFFBQVEsRUFBYyxNQUFNLE1BQU0sQ0FBQztBQUM3RCxPQUFPLEVBQUUsR0FBRyxFQUFFLFNBQVMsRUFBYSxXQUFXLEVBQUUsU0FBUyxFQUFPLE1BQU0sZ0JBQWdCLENBQUM7QUFDeEYsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7Ozs7O0lDQXJELDhCQUMwRCxhQUFBLGFBQUE7SUFFZSxZQUF1Qjs7SUFBQSxpQkFBTSxFQUFBLEVBQUE7Ozs7OztJQUZsRyxxQ0FBc0Isb0NBQUE7SUFFK0MsZUFBdUI7SUFBdkIsNERBQXVCOzs7SUFIaEcsOEZBS007OztJQUxvRSxtQ0FBZTs7OztBRFc3RixNQUFNLE9BQU8sK0JBQStCO0lBMEQxQyxZQUNVLElBQVksRUFDWixHQUFzQixFQUN0QixRQUEwQjtRQUYxQixTQUFJLEdBQUosSUFBSSxDQUFRO1FBQ1osUUFBRyxHQUFILEdBQUcsQ0FBbUI7UUFDdEIsYUFBUSxHQUFSLFFBQVEsQ0FBa0I7UUF6Q3BDLGdCQUFXLEdBQUcsSUFBSSxlQUFlLENBQW1CLFNBQVMsQ0FBQyxDQUFDO1FBQy9ELHVCQUF1QjtRQUN2QixZQUFPLEdBSUYsUUFBUSxDQUFDLEVBQUUsR0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJO1FBQ3pCLHFCQUFxQjtRQUNyQixTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQ1osV0FBVyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsRUFDN0IsR0FBRyxDQUFDLENBQUMsVUFBVSxFQUFFLEVBQUU7WUFDakIsTUFBTSxHQUFHLEdBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQztZQUN2QixNQUFNLFVBQVUsR0FBRyxVQUFVLENBQzNCLFFBQVEsQ0FBQyxVQUFXLEVBQUUsSUFBSSxDQUFDLFlBQVksQ0FBQyxFQUN4QyxJQUFJLENBQUMsY0FBYyxDQUNwQixDQUFDO1lBQ0YsTUFBTSxRQUFRLEdBQUcsVUFBVSxDQUN6QixRQUFRLENBQUMsVUFBVyxFQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsRUFDdEMsSUFBSSxDQUFDLFlBQVksQ0FDbEIsQ0FBQztZQUNGLE1BQU0sa0JBQWtCLEdBQ3RCLENBQUMsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsaUJBQWlCLENBQUM7Z0JBQzVDLENBQUMsSUFBSSxDQUFDLFlBQVksSUFBSSxFQUFFLENBQUMsQ0FBQztZQUU1QixPQUFPO2dCQUNMLFNBQVMsRUFDUCxTQUFTLENBQUMsVUFBVyxFQUFFLEdBQUcsQ0FBQztvQkFDM0IsR0FBRyxJQUFJLFVBQVU7b0JBQ2pCLEdBQUcsSUFBSSxRQUFRO2dCQUNqQixHQUFHLEVBQ0QsbUJBQW1CLENBQUMsR0FBRyxFQUFFLFVBQVUsQ0FBQztvQkFDcEMsa0JBQWtCO2dCQUNsQixHQUFHLEVBQUMsR0FBRzthQUNWLENBQUM7UUFDSixDQUFDLENBQUMsRUFDRixTQUFTLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUN6QixDQUFDO0lBTUksQ0FBQztJQUVQLFdBQVcsQ0FBQyxPQUFzQjtRQUNoQyxJQUFJLE9BQU8sQ0FBQyxVQUFVLEVBQUU7WUFDdEIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxZQUFZLENBQUMsQ0FBQztTQUN4RDtJQUNILENBQUM7OzhHQXBFVSwrQkFBK0I7a0ZBQS9CLCtCQUErQixpWkFKL0I7WUFDVCxpQkFBaUI7U0FDbEI7UUNiSCxpSUFVYztRQUNkLGdHQVVjOzs7Ozs7O1FBVkQsZUFBc0Q7UUFBdEQsNERBQXNELHlYQUFBOzt1RkRJdEQsK0JBQStCO2NBUjNDLFNBQVM7MkJBQ0UsMkJBQTJCLG1CQUVwQix1QkFBdUIsQ0FBQyxNQUFNLGFBQ3BDO29CQUNULGlCQUFpQjtpQkFDbEI7eUhBR1EsVUFBVTtrQkFBbEIsS0FBSztZQUVHLFlBQVk7a0JBQXBCLEtBQUs7WUFFRyxjQUFjO2tCQUF0QixLQUFLO1lBRUcsVUFBVTtrQkFBbEIsS0FBSztZQUVHLFlBQVk7a0JBQXBCLEtBQUs7WUFFRyxZQUFZO2tCQUFwQixLQUFLO1lBRUcsWUFBWTtrQkFBcEIsS0FBSztZQUVHLGlCQUFpQjtrQkFBekIsS0FBSztZQUVHLGNBQWM7a0JBQXRCLEtBQUs7WUFFRyxZQUFZO2tCQUFwQixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENoYW5nZURldGVjdG9yUmVmLCBDb21wb25lbnQsIElucHV0LCBOZ1pvbmUsIE9uQ2hhbmdlcywgU2ltcGxlQ2hhbmdlcywgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgZGlmZmVyZW5jZUluTWludXRlcywgaXNTYW1lRGF5LCBzZXRIb3Vycywgc2V0TWludXRlcyB9IGZyb20gJ2RhdGUtZm5zJztcclxuaW1wb3J0IHsgQmVoYXZpb3JTdWJqZWN0LCBpbnRlcnZhbCwgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQgeyBtYXAsIHN0YXJ0V2l0aCwgc3dpdGNoTWFwLCBzd2l0Y2hNYXBUbywgdGFrZVVudGlsLCB0YXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XHJcbmltcG9ydCB7IFREU0Rlc3Ryb3lTZXJ2aWNlIH0gZnJvbSAndGRzLXVpL2NvcmUvc2VydmljZXMnO1xyXG5cclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAndGRzLWNhbGVuZGFyLWN1cnJlbnQtdGltZScsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL3Rkcy1jYWxlbmRhci1jdXJyZW50LXRpbWUuY29tcG9uZW50Lmh0bWwnLFxyXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxyXG4gIHByb3ZpZGVyczogW1xyXG4gICAgVERTRGVzdHJveVNlcnZpY2VcclxuICBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBURFNDYWxlbmRhckN1cnJlbnRUaW1lQ29tcG9uZW50IGltcGxlbWVudHMgT25DaGFuZ2VzIHtcclxuICBASW5wdXQoKSBjb2x1bW5EYXRlITogRGF0ZTtcclxuXHJcbiAgQElucHV0KCkgZGF5U3RhcnRIb3VyITogbnVtYmVyO1xyXG5cclxuICBASW5wdXQoKSBkYXlTdGFydE1pbnV0ZSE6IG51bWJlcjtcclxuXHJcbiAgQElucHV0KCkgZGF5RW5kSG91ciE6IG51bWJlcjtcclxuXHJcbiAgQElucHV0KCkgZGF5RW5kTWludXRlITogbnVtYmVyO1xyXG5cclxuICBASW5wdXQoKSBob3VyU2VnbWVudHMhOiBudW1iZXI7XHJcblxyXG4gIEBJbnB1dCgpIGhvdXJEdXJhdGlvbiE6IG51bWJlcjtcclxuXHJcbiAgQElucHV0KCkgaG91clNlZ21lbnRIZWlnaHQhOiBudW1iZXI7XHJcblxyXG4gIEBJbnB1dCgpIGN1c3RvbVRlbXBsYXRlITogVGVtcGxhdGVSZWY8YW55PjtcclxuXHJcbiAgQElucHV0KCkgd2lkdGhDb2xUaW1lITogbnVtYmVyO1xyXG4gIGNvbHVtbkRhdGUkID0gbmV3IEJlaGF2aW9yU3ViamVjdDxEYXRlIHwgdW5kZWZpbmVkPih1bmRlZmluZWQpO1xyXG4gIC8vMSBwaMO6dCBoaeG7g24gdGjhu4sgMSBs4bqnblxyXG4gIG1hcmtlciQ6IE9ic2VydmFibGU8e1xyXG4gICAgaXNWaXNpYmxlOiBib29sZWFuO1xyXG4gICAgdG9wOiBudW1iZXI7XHJcbiAgICBub3c6RGF0ZTtcclxuICB9PiA9IGludGVydmFsKDYwKjEwMDApLnBpcGUoXHJcbiAgICAvLyBzd2l0Y2hNYXAoKCkgPT4gKSxcclxuICAgIHN0YXJ0V2l0aCgwKSxcclxuICAgIHN3aXRjaE1hcFRvKHRoaXMuY29sdW1uRGF0ZSQpLFxyXG4gICAgbWFwKChjb2x1bW5EYXRlKSA9PiB7XHJcbiAgICAgIGNvbnN0IG5vdyA9IG5ldyBEYXRlKCk7XHJcbiAgICAgIGNvbnN0IHN0YXJ0T2ZEYXkgPSBzZXRNaW51dGVzKFxyXG4gICAgICAgIHNldEhvdXJzKGNvbHVtbkRhdGUhLCB0aGlzLmRheVN0YXJ0SG91ciksXHJcbiAgICAgICAgdGhpcy5kYXlTdGFydE1pbnV0ZVxyXG4gICAgICApO1xyXG4gICAgICBjb25zdCBlbmRPZkRheSA9IHNldE1pbnV0ZXMoXHJcbiAgICAgICAgc2V0SG91cnMoY29sdW1uRGF0ZSEsIHRoaXMuZGF5RW5kSG91ciksXHJcbiAgICAgICAgdGhpcy5kYXlFbmRNaW51dGVcclxuICAgICAgKTtcclxuICAgICAgY29uc3QgaG91ckhlaWdodE1vZGlmaWVyID1cclxuICAgICAgICAodGhpcy5ob3VyU2VnbWVudHMgKiB0aGlzLmhvdXJTZWdtZW50SGVpZ2h0KSAvXHJcbiAgICAgICAgKHRoaXMuaG91ckR1cmF0aW9uIHx8IDYwKTsgICAgICBcclxuICAgICAgXHJcbiAgICAgIHJldHVybiB7XHJcbiAgICAgICAgaXNWaXNpYmxlOlxyXG4gICAgICAgICAgaXNTYW1lRGF5KGNvbHVtbkRhdGUhLCBub3cpICYmXHJcbiAgICAgICAgICBub3cgPj0gc3RhcnRPZkRheSAmJlxyXG4gICAgICAgICAgbm93IDw9IGVuZE9mRGF5LFxyXG4gICAgICAgIHRvcDpcclxuICAgICAgICAgIGRpZmZlcmVuY2VJbk1pbnV0ZXMobm93LCBzdGFydE9mRGF5KSAqXHJcbiAgICAgICAgICBob3VySGVpZ2h0TW9kaWZpZXIsXHJcbiAgICAgICAgICBub3c6bm93XHJcbiAgICAgIH07XHJcbiAgICB9KSxcclxuICAgIHRha2VVbnRpbCh0aGlzLmRlc3Ryb3kkKVxyXG4gICk7XHJcblxyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgcHJpdmF0ZSB6b25lOiBOZ1pvbmUsXHJcbiAgICBwcml2YXRlIGNkcjogQ2hhbmdlRGV0ZWN0b3JSZWYsXHJcbiAgICBwcml2YXRlIGRlc3Ryb3kkOlREU0Rlc3Ryb3lTZXJ2aWNlXHJcbiAgICApIHsgfVxyXG5cclxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XHJcbiAgICBpZiAoY2hhbmdlcy5jb2x1bW5EYXRlKSB7XHJcbiAgICAgIHRoaXMuY29sdW1uRGF0ZSQubmV4dChjaGFuZ2VzLmNvbHVtbkRhdGUuY3VycmVudFZhbHVlKTtcclxuICAgIH1cclxuICB9XHJcbiAgXHJcbn0iLCI8bmctdGVtcGxhdGUgI2RlZmF1bHRUZW1wbGF0ZSBsZXQtY29sdW1uRGF0ZT1cImNvbHVtbkRhdGVcIiBsZXQtZGF5U3RhcnRIb3VyPVwiZGF5U3RhcnRIb3VyXCJcbiAgICBsZXQtZGF5U3RhcnRNaW51dGU9XCJkYXlTdGFydE1pbnV0ZVwiIGxldC1kYXlFbmRIb3VyPVwiZGF5RW5kSG91clwiIGxldC1kYXlFbmRNaW51dGU9XCJkYXlFbmRNaW51dGVcIlxuICAgIGxldC1pc1Zpc2libGU9XCJpc1Zpc2libGVcIiBsZXQtdG9wUHg9XCJ0b3BQeFwiIGxldC1ub3c9XCJub3dcIj5cblxuICAgIDxkaXYgY2xhc3M9XCJjYWwtY3VycmVudC10aW1lLW1hcmtlciBiZy1wcmltYXJ5LTEgYWJzb2x1dGUgaW5zZXQtMCBoLXB4IFwiICpuZ0lmPVwiaXNWaXNpYmxlXCJcbiAgICAgICAgW3N0eWxlLnRvcC5weF09XCJ0b3BQeFwiIFtzdHlsZS5sZWZ0LnB4XT1cIndpZHRoQ29sVGltZVwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwidy1mdWxsIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIHJlbGF0aXZlIFwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImFic29sdXRlIC1sZWZ0LVs2MHB4XSB0ZXh0LXByaW1hcnktMSB6LTEwICBiZy13aGl0ZVwiPnt7IG5vdyB8IGRhdGU6XCJISDptbVwifX08L2Rpdj4gICAgICAgICAgICBcbiAgICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG48L25nLXRlbXBsYXRlPlxuPG5nLXRlbXBsYXRlIFtuZ1RlbXBsYXRlT3V0bGV0XT1cImN1c3RvbVRlbXBsYXRlIHx8IGRlZmF1bHRUZW1wbGF0ZVwiIFtuZ1RlbXBsYXRlT3V0bGV0Q29udGV4dF09XCJ7XG4gIGNvbHVtbkRhdGU6IGNvbHVtbkRhdGUsXG4gIGRheVN0YXJ0SG91cjogZGF5U3RhcnRIb3VyLFxuICBkYXlTdGFydE1pbnV0ZTogZGF5U3RhcnRNaW51dGUsXG4gIGRheUVuZEhvdXI6IGRheUVuZEhvdXIsXG4gIGRheUVuZE1pbnV0ZTogZGF5RW5kTWludXRlLFxuICBpc1Zpc2libGU6IChtYXJrZXIkIHwgYXN5bmMpPy5pc1Zpc2libGUsXG4gIHRvcFB4OiAobWFya2VyJCB8IGFzeW5jKT8udG9wLFxuICBub3c6IChtYXJrZXIkIHwgYXN5bmMpPy5ub3dcbn1cIj5cbjwvbmctdGVtcGxhdGU+Il19