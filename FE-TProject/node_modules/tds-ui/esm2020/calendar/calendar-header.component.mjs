import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';
import { CandyDate } from 'tds-ui/core/time';
import * as i0 from "@angular/core";
import * as i1 from "tds-ui/i18n";
import * as i2 from "tds-ui/radio";
import * as i3 from "@angular/forms";
import * as i4 from "@angular/common";
import * as i5 from "tds-ui/button";
import * as i6 from "./tds-calendar-datepicker.component";
function TDSCalendarHeaderComponent_button_10_Template(rf, ctx) { if (rf & 1) {
    const _r2 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "button", 7);
    i0.ɵɵlistener("click", function TDSCalendarHeaderComponent_button_10_Template_button_click_0_listener($event) { i0.ɵɵrestoreView(_r2); const ctx_r1 = i0.ɵɵnextContext(); return ctx_r1.onToday($event); });
    i0.ɵɵelementStart(1, "span", 8);
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd()();
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1(" ", ctx_r0.toDayTypeText, " ");
} }
export class TDSCalendarHeaderComponent {
    constructor(i18n, dateHelper, cdr) {
        this.i18n = i18n;
        this.dateHelper = dateHelper;
        this.cdr = cdr;
        this.tdsMode = 'month';
        this.tdsFullscreen = true;
        this.tdsViewDate = new Date();
        this.tdsModeChange = new EventEmitter();
        this.tdsActiveDateChange = new EventEmitter();
        this.tdsViewDateChange = new EventEmitter();
        this.hiddenTodaybtn = false;
        this.activeDate = new CandyDate();
    }
    get activeYear() {
        return this.activeDate.getYear();
    }
    get activeMonth() {
        return this.activeDate.getMonth();
    }
    get size() {
        return this.tdsFullscreen ? 'md' : 'sm';
    }
    get dayTypeText() {
        return this.i18n.getLocale().Calendar.lang.day;
    }
    get weekTypeText() {
        return this.i18n.getLocale().Calendar.lang.week;
    }
    get yearTypeText() {
        return this.i18n.getLocale().Calendar.lang.year;
    }
    get monthTypeText() {
        return this.i18n.getLocale().Calendar.lang.month;
    }
    get toDayTypeText() {
        return this.i18n.getLocale().Calendar.lang.today;
    }
    ngOnInit() {
        this.updateDate(this.tdsViewDate);
    }
    onToday(e) {
        e.preventDefault();
        e.stopImmediatePropagation();
        this.activeDate = new CandyDate(new Date());
        this.tdsViewDateChange.emit(this.activeDate.nativeDate);
        // this.checkHiddenTodayBtn();    
    }
    onModeChange(e) {
        this.tdsModeChange.emit(e);
        this.checkHiddenTodayBtn();
    }
    onValueChange(date) {
        this.tdsActiveDateChange.emit(new CandyDate(date));
        this.tdsViewDateChange.emit(date);
        this.checkHiddenTodayBtn();
    }
    ngOnChanges(changes) {
        if (changes.tdsViewDate) {
            this.updateDate(this.tdsViewDate);
            this.checkHiddenTodayBtn();
        }
    }
    updateDate(date) {
        this.activeDate = new CandyDate(date);
    }
    checkHiddenTodayBtn() {
        this.hiddenTodaybtn = this.tdsMode == "date" && !this.activeDate.isSame(new Date());
        this.cdr.markForCheck();
    }
}
TDSCalendarHeaderComponent.ɵfac = function TDSCalendarHeaderComponent_Factory(t) { return new (t || TDSCalendarHeaderComponent)(i0.ɵɵdirectiveInject(i1.TDSI18nService), i0.ɵɵdirectiveInject(i1.DateHelperService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); };
TDSCalendarHeaderComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TDSCalendarHeaderComponent, selectors: [["tds-calendar-header"]], hostAttrs: [1, "tds-fullcalendar-header", "tds-picker-calendar-header", "w-full", "flex", "items-center", "justify-between", "py-2", "px-3"], inputs: { tdsMode: "tdsMode", tdsFullscreen: "tdsFullscreen", tdsViewDate: "tdsViewDate" }, outputs: { tdsModeChange: "tdsModeChange", tdsActiveDateChange: "tdsActiveDateChange", tdsViewDateChange: "tdsViewDateChange" }, exportAs: ["tdsCalendarHeader"], features: [i0.ɵɵNgOnChangesFeature], decls: 14, vars: 12, consts: [[1, "tds-calendar-header-left", "flex", "items-center"], [1, "mr-2", 3, "ngModel", "ngModelChange"], ["tds-radio-button", "", 3, "value"], ["tds-button-flat", "", "color", "primary", 3, "click", 4, "ngIf"], [1, "tds-calendar-header-middle"], [3, "tdsViewDate", "tdsMode", "tdsViewDateChange"], [1, "tds-calendar-header-right", "min-w-[30%]"], ["tds-button-flat", "", "color", "primary", 3, "click"], [1, "flex", "items-center"]], template: function TDSCalendarHeaderComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 0)(1, "tds-radio-group", 1);
        i0.ɵɵlistener("ngModelChange", function TDSCalendarHeaderComponent_Template_tds_radio_group_ngModelChange_1_listener($event) { return ctx.tdsMode = $event; })("ngModelChange", function TDSCalendarHeaderComponent_Template_tds_radio_group_ngModelChange_1_listener($event) { return ctx.onModeChange($event); });
        i0.ɵɵelementStart(2, "label", 2);
        i0.ɵɵtext(3);
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(4, "label", 2);
        i0.ɵɵtext(5);
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(6, "label", 2);
        i0.ɵɵtext(7);
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(8, "label", 2);
        i0.ɵɵtext(9);
        i0.ɵɵelementEnd()();
        i0.ɵɵtemplate(10, TDSCalendarHeaderComponent_button_10_Template, 3, 1, "button", 3);
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(11, "div", 4)(12, "tds-calendar-datepicker", 5);
        i0.ɵɵlistener("tdsViewDateChange", function TDSCalendarHeaderComponent_Template_tds_calendar_datepicker_tdsViewDateChange_12_listener($event) { return ctx.onValueChange($event); });
        i0.ɵɵelementEnd()();
        i0.ɵɵelement(13, "div", 6);
    } if (rf & 2) {
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngModel", ctx.tdsMode);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("value", "date");
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate(ctx.dayTypeText);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("value", "week");
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate(ctx.weekTypeText);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("value", "month");
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate(ctx.monthTypeText);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("value", "year");
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate(ctx.yearTypeText);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx.hiddenTodaybtn);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("tdsViewDate", ctx.tdsViewDate)("tdsMode", ctx.tdsMode);
    } }, directives: [i2.TDSRadioGroupComponent, i3.NgControlStatus, i3.NgModel, i2.TDSRadioComponent, i2.TDSRadioButtonDirective, i4.NgIf, i5.TDSButtonFlatComponent, i6.TDSCalendarDatepickerComponent], encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSCalendarHeaderComponent, [{
        type: Component,
        args: [{
                encapsulation: ViewEncapsulation.None,
                changeDetection: ChangeDetectionStrategy.OnPush,
                selector: 'tds-calendar-header',
                exportAs: 'tdsCalendarHeader',
                template: `
    <div class="tds-calendar-header-left flex items-center ">
          <tds-radio-group class="mr-2" [(ngModel)]="tdsMode" (ngModelChange)="onModeChange($event)">
            <label tds-radio-button [value]="'date'">{{dayTypeText}}</label>
            <label tds-radio-button [value]="'week'">{{weekTypeText}}</label>
            <label tds-radio-button [value]="'month'">{{monthTypeText}}</label>
            <label tds-radio-button [value]="'year'">{{yearTypeText}}</label>            
          </tds-radio-group>
          <button tds-button-flat color="primary" *ngIf="hiddenTodaybtn" (click)="onToday($event)">
            <span class="flex items-center"> {{toDayTypeText}} </span>
          </button>
        </div>
        <div class="tds-calendar-header-middle">
          <tds-calendar-datepicker [tdsViewDate]="tdsViewDate" [tdsMode]="tdsMode" (tdsViewDateChange)="onValueChange($event)"></tds-calendar-datepicker>
        </div>
        <div class="tds-calendar-header-right min-w-[30%]">
        <!-- <tds-radio-group [(ngModel)]="tdsMode">
            <label tds-radio-button [value]="'date'">Hangzhou</label>
            <label tds-radio-button [value]="'week'">Chengdu</label>
            <label tds-radio-button [value]="'month'">Shanghai</label>
            <label tds-radio-button [value]="'year'">Beijing</label>            
          </tds-radio-group> -->
        </div>
  `,
                host: {
                    class: 'tds-fullcalendar-header tds-picker-calendar-header w-full flex items-center justify-between py-2 px-3',
                }
            }]
    }], function () { return [{ type: i1.TDSI18nService }, { type: i1.DateHelperService }, { type: i0.ChangeDetectorRef }]; }, { tdsMode: [{
            type: Input
        }], tdsFullscreen: [{
            type: Input
        }], tdsViewDate: [{
            type: Input
        }], tdsModeChange: [{
            type: Output
        }], tdsActiveDateChange: [{
            type: Output
        }], tdsViewDateChange: [{
            type: Output
        }] }); })();
//# sourceMappingURL=data:application/json;base64,