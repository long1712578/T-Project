// @dynamic
export class TDSHelperArray {
    static joinNumber(arr) {
        if (this.hasListValue(arr)) {
            return arr.join(",");
        }
        return "";
    }
    static joinString(arr) {
        if (this.hasListValue(arr)) {
            return arr.join("],[");
        }
        return "";
    }
    static hasListValue(value) {
        return !(value === undefined || value === null || value.length == 0);
    }
    static isArray(a) {
        a = Object.prototype.toString.call(a);
        return "[object Array]" === a || "[object Array Iterator]" === a;
    }
    static arrayMin(a) {
        for (var c = a.length, k = a[0]; c--;)
            a[c] < k && (k = a[c]);
        return k;
    }
    static arrayMax(a) {
        for (var c = a.length, k = a[0]; c--;)
            a[c] > k && (k = a[c]);
        return k;
    }
    /**
     * gộp mảng 2 vào mảng 1
     * @param array1
     * @param array2
     */
    static concat(array1, array2) {
        array1.push.apply(array1, array2);
    }
    //   var exampleData = [
    //     { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },
    //     { position: 1, name: 'Helium', weight: 4.0026, symbol: 'H' },
    //     { position: 2, name: 'Lithium', weight: 6.941, symbol: 'L' },    //    
    //   ]
    //   // expect 
    //   // key = ['symbol']
    //   var TREE1 = [
    //     {
    //       symbol: 'H',
    //       children: [
    //         { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },
    //         { position: 1, name: 'Helium', weight: 4.0026, symbol: 'H' },
    //       ]
    //     },
    //     {
    //       symbol: 'L',
    //       children: [
    //         { position: 2, name: 'Lithium', weight: 6.941, symbol: 'L' },
    //       ]
    //     },
    //   ]
    //   // OR -------------------------------------------------------------------------
    //   // key = ['symbol', 'position']
    //   var TREE2 = [ 
    //     {
    //       symbol: 'H',
    //       children: [
    //         {
    //           position: 1,
    //           children: [
    //             { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },
    //             { position: 1, name: 'Helium', weight: 4.0026, symbol: 'H' },
    //           ]
    //         }
    //       ]
    //     },
    //     {
    //       symbol: 'N',
    //       children: [
    //         {
    //           position: 5,
    //           children: [{ position: 5, name: 'Nitrogen', weight: 14.0067, symbol: 'N' }]
    //         },
    //         {
    //           position: 8,
    //           children: [{ position: 8, name: 'Neon', weight: 20.1797, symbol: 'N' }]
    //         }
    //       ]
    //     },
    //   ]
    /**
     *
     * @param items mảng đối tượng
     * @param keys các  fields cần groupby
     * @returns [[field groupby]:'',children:[]]
     */
    static groupByKey(items, ...keys) {
        if (!this.hasListValue(keys)) {
            return items;
        }
        const result = [];
        const keySet = new Set();
        const groupByKey = keys.shift();
        items.forEach(item => {
            if (!keySet.has(item[groupByKey])) {
                keySet.add(item[groupByKey]);
                result.push({ [groupByKey]: item[groupByKey], children: [item] });
            }
            else {
                result.find((res) => res[groupByKey] === item[groupByKey]).children.push(item);
            }
        });
        if (keys.length) {
            result.forEach((res) => {
                res.children = this.groupByKey(res.children, ...keys);
            });
        }
        return result;
    }
}
//# sourceMappingURL=data:application/json;base64,