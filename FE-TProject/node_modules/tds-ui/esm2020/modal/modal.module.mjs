import { BidiModule } from '@angular/cdk/bidi';
import { OverlayModule } from '@angular/cdk/overlay';
import { PortalModule } from '@angular/cdk/portal';
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { TDSButtonModule } from 'tds-ui/button';
import { TDSOutletModule } from 'tds-ui/core/outlet';
import { TDSPipesModule } from 'tds-ui/core/pipes';
import { TdsModalCloseComponent } from './modal-close.component';
import { TDSModalConfirmContainerComponent } from './modal-confirm-container.component';
import { TDSModalContainerComponent } from './modal-container.component';
import { TDSModalContentDirective } from './modal-content.directive';
import { TDSModalFooterComponent } from './modal-footer.component';
import { TDSModalFooterDirective } from './modal-footer.directive';
import { TDSModalTitleComponent } from './modal-title.component';
import { TDSModalTitleDirective } from './modal-title.directive';
import { TDSModalComponent } from './modal.component';
import { TDSModalService } from './modal.service';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/cdk/portal";
import * as i3 from "tds-ui/core/pipes";
export class TDSModalModule {
}
TDSModalModule.ɵfac = function TDSModalModule_Factory(t) { return new (t || TDSModalModule)(); };
TDSModalModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: TDSModalModule });
TDSModalModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ providers: [TDSModalService], imports: [[
            CommonModule,
            BidiModule,
            OverlayModule,
            TDSOutletModule,
            PortalModule,
            TDSPipesModule,
            TDSButtonModule
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSModalModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CommonModule,
                    BidiModule,
                    OverlayModule,
                    TDSOutletModule,
                    PortalModule,
                    TDSPipesModule,
                    TDSButtonModule
                ],
                exports: [TDSModalComponent, TDSModalFooterDirective, TDSModalContentDirective, TDSModalTitleDirective],
                providers: [TDSModalService],
                declarations: [
                    TDSModalComponent,
                    TDSModalFooterDirective,
                    TDSModalContentDirective,
                    TdsModalCloseComponent,
                    TDSModalFooterComponent,
                    TDSModalTitleComponent,
                    TDSModalTitleDirective,
                    TDSModalContainerComponent,
                    TDSModalConfirmContainerComponent,
                    TDSModalComponent
                ]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0.ɵɵsetNgModuleScope(TDSModalModule, { declarations: [TDSModalComponent,
        TDSModalFooterDirective,
        TDSModalContentDirective,
        TdsModalCloseComponent,
        TDSModalFooterComponent,
        TDSModalTitleComponent,
        TDSModalTitleDirective,
        TDSModalContainerComponent,
        TDSModalConfirmContainerComponent,
        TDSModalComponent], imports: [CommonModule,
        BidiModule,
        OverlayModule,
        TDSOutletModule,
        PortalModule,
        TDSPipesModule,
        TDSButtonModule], exports: [TDSModalComponent, TDSModalFooterDirective, TDSModalContentDirective, TDSModalTitleDirective] }); })();
i0.ɵɵsetComponentScope(TDSModalContainerComponent, [i1.NgClass, i1.NgStyle, i1.NgIf, TdsModalCloseComponent,
    TDSModalTitleComponent, i2.CdkPortalOutlet, TDSModalFooterComponent], [i3.TDSToCssUnitPipe]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kYWwubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvdGRzLXVpL21vZGFsL21vZGFsLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDL0MsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNuRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2hELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFHbkQsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDakUsT0FBTyxFQUFFLGlDQUFpQyxFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDeEYsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDekUsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDckUsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDbkUsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDbkUsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDakUsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDakUsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDdEQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGlCQUFpQixDQUFDOzs7OztBQTJCbEQsTUFBTSxPQUFPLGNBQWM7OzRFQUFkLGNBQWM7Z0VBQWQsY0FBYztxRUFkWixDQUFDLGVBQWUsQ0FBQyxZQVZuQjtZQUNMLFlBQVk7WUFDWixVQUFVO1lBQ1YsYUFBYTtZQUNiLGVBQWU7WUFDZixZQUFZO1lBQ1osY0FBYztZQUNkLGVBQWU7U0FDbEI7dUZBZ0JRLGNBQWM7Y0F6QjFCLFFBQVE7ZUFBQztnQkFDTixPQUFPLEVBQUU7b0JBQ0wsWUFBWTtvQkFDWixVQUFVO29CQUNWLGFBQWE7b0JBQ2IsZUFBZTtvQkFDZixZQUFZO29CQUNaLGNBQWM7b0JBQ2QsZUFBZTtpQkFDbEI7Z0JBQ0QsT0FBTyxFQUFFLENBQUMsaUJBQWlCLEVBQUUsdUJBQXVCLEVBQUUsd0JBQXdCLEVBQUUsc0JBQXNCLENBQUM7Z0JBQ3ZHLFNBQVMsRUFBRSxDQUFDLGVBQWUsQ0FBQztnQkFDNUIsWUFBWSxFQUFFO29CQUNWLGlCQUFpQjtvQkFDakIsdUJBQXVCO29CQUN2Qix3QkFBd0I7b0JBQ3hCLHNCQUFzQjtvQkFDdEIsdUJBQXVCO29CQUN2QixzQkFBc0I7b0JBQ3RCLHNCQUFzQjtvQkFDdEIsMEJBQTBCO29CQUMxQixpQ0FBaUM7b0JBQ2pDLGlCQUFpQjtpQkFDcEI7YUFDSjs7d0ZBQ1ksY0FBYyxtQkFabkIsaUJBQWlCO1FBQ2pCLHVCQUF1QjtRQUN2Qix3QkFBd0I7UUFDeEIsc0JBQXNCO1FBQ3RCLHVCQUF1QjtRQUN2QixzQkFBc0I7UUFDdEIsc0JBQXNCO1FBQ3RCLDBCQUEwQjtRQUMxQixpQ0FBaUM7UUFDakMsaUJBQWlCLGFBcEJqQixZQUFZO1FBQ1osVUFBVTtRQUNWLGFBQWE7UUFDYixlQUFlO1FBQ2YsWUFBWTtRQUNaLGNBQWM7UUFDZCxlQUFlLGFBRVQsaUJBQWlCLEVBQUUsdUJBQXVCLEVBQUUsd0JBQXdCLEVBQUUsc0JBQXNCO3VCQVVsRywwQkFBMEIsb0NBSjFCLHNCQUFzQjtJQUV0QixzQkFBc0Isc0JBRHRCLHVCQUF1QiIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5cclxuaW1wb3J0IHsgQmlkaU1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9iaWRpJztcclxuaW1wb3J0IHsgT3ZlcmxheU1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9vdmVybGF5JztcclxuaW1wb3J0IHsgUG9ydGFsTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL3BvcnRhbCc7XHJcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFREU0J1dHRvbk1vZHVsZSB9IGZyb20gJ3Rkcy11aS9idXR0b24nO1xyXG5pbXBvcnQgeyBURFNPdXRsZXRNb2R1bGUgfSBmcm9tICd0ZHMtdWkvY29yZS9vdXRsZXQnO1xyXG5pbXBvcnQgeyBURFNQaXBlc01vZHVsZSB9IGZyb20gJ3Rkcy11aS9jb3JlL3BpcGVzJztcclxuXHJcblxyXG5pbXBvcnQgeyBUZHNNb2RhbENsb3NlQ29tcG9uZW50IH0gZnJvbSAnLi9tb2RhbC1jbG9zZS5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBURFNNb2RhbENvbmZpcm1Db250YWluZXJDb21wb25lbnQgfSBmcm9tICcuL21vZGFsLWNvbmZpcm0tY29udGFpbmVyLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFREU01vZGFsQ29udGFpbmVyQ29tcG9uZW50IH0gZnJvbSAnLi9tb2RhbC1jb250YWluZXIuY29tcG9uZW50JztcclxuaW1wb3J0IHsgVERTTW9kYWxDb250ZW50RGlyZWN0aXZlIH0gZnJvbSAnLi9tb2RhbC1jb250ZW50LmRpcmVjdGl2ZSc7XHJcbmltcG9ydCB7IFREU01vZGFsRm9vdGVyQ29tcG9uZW50IH0gZnJvbSAnLi9tb2RhbC1mb290ZXIuY29tcG9uZW50JztcclxuaW1wb3J0IHsgVERTTW9kYWxGb290ZXJEaXJlY3RpdmUgfSBmcm9tICcuL21vZGFsLWZvb3Rlci5kaXJlY3RpdmUnO1xyXG5pbXBvcnQgeyBURFNNb2RhbFRpdGxlQ29tcG9uZW50IH0gZnJvbSAnLi9tb2RhbC10aXRsZS5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBURFNNb2RhbFRpdGxlRGlyZWN0aXZlIH0gZnJvbSAnLi9tb2RhbC10aXRsZS5kaXJlY3RpdmUnO1xyXG5pbXBvcnQgeyBURFNNb2RhbENvbXBvbmVudCB9IGZyb20gJy4vbW9kYWwuY29tcG9uZW50JztcclxuaW1wb3J0IHsgVERTTW9kYWxTZXJ2aWNlIH0gZnJvbSAnLi9tb2RhbC5zZXJ2aWNlJztcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgICBpbXBvcnRzOiBbXHJcbiAgICAgICAgQ29tbW9uTW9kdWxlLFxyXG4gICAgICAgIEJpZGlNb2R1bGUsXHJcbiAgICAgICAgT3ZlcmxheU1vZHVsZSxcclxuICAgICAgICBURFNPdXRsZXRNb2R1bGUsXHJcbiAgICAgICAgUG9ydGFsTW9kdWxlLFxyXG4gICAgICAgIFREU1BpcGVzTW9kdWxlLFxyXG4gICAgICAgIFREU0J1dHRvbk1vZHVsZVxyXG4gICAgXSxcclxuICAgIGV4cG9ydHM6IFtURFNNb2RhbENvbXBvbmVudCwgVERTTW9kYWxGb290ZXJEaXJlY3RpdmUsIFREU01vZGFsQ29udGVudERpcmVjdGl2ZSwgVERTTW9kYWxUaXRsZURpcmVjdGl2ZV0sXHJcbiAgICBwcm92aWRlcnM6IFtURFNNb2RhbFNlcnZpY2VdLFxyXG4gICAgZGVjbGFyYXRpb25zOiBbXHJcbiAgICAgICAgVERTTW9kYWxDb21wb25lbnQsXHJcbiAgICAgICAgVERTTW9kYWxGb290ZXJEaXJlY3RpdmUsXHJcbiAgICAgICAgVERTTW9kYWxDb250ZW50RGlyZWN0aXZlLFxyXG4gICAgICAgIFRkc01vZGFsQ2xvc2VDb21wb25lbnQsXHJcbiAgICAgICAgVERTTW9kYWxGb290ZXJDb21wb25lbnQsXHJcbiAgICAgICAgVERTTW9kYWxUaXRsZUNvbXBvbmVudCxcclxuICAgICAgICBURFNNb2RhbFRpdGxlRGlyZWN0aXZlLFxyXG4gICAgICAgIFREU01vZGFsQ29udGFpbmVyQ29tcG9uZW50LFxyXG4gICAgICAgIFREU01vZGFsQ29uZmlybUNvbnRhaW5lckNvbXBvbmVudCxcclxuICAgICAgICBURFNNb2RhbENvbXBvbmVudFxyXG4gICAgXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgVERTTW9kYWxNb2R1bGUge31cclxuIl19