import { CdkPortalOutlet } from '@angular/cdk/portal';
import { DOCUMENT } from '@angular/common';
import { ChangeDetectionStrategy, Component, EventEmitter, Inject, Optional, Output, ViewChild } from '@angular/core';
import { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';
import { TDSModalAnimations } from './modal-animations';
import { BaseModalContainerComponent } from './modal-container';
import * as i0 from "@angular/core";
import * as i1 from "@angular/cdk/a11y";
import * as i2 from "@angular/cdk/overlay";
import * as i3 from "tds-ui/core/config";
import * as i4 from "./modal-types";
import * as i5 from "@angular/common";
import * as i6 from "tds-ui/core/outlet";
import * as i7 from "@angular/cdk/portal";
import * as i8 from "tds-ui/button";
import * as i9 from "tds-ui/core/pipes";
const _c0 = ["modalElement"];
function TDSModalConfirmContainerComponent_ng_container_5_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainer(0);
} }
function TDSModalConfirmContainerComponent_ng_container_5_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtemplate(1, TDSModalConfirmContainerComponent_ng_container_5_ng_container_1_Template, 1, 0, "ng-container", 7);
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    i0.ɵɵnextContext();
    const _r3 = i0.ɵɵreference(8);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngTemplateOutlet", _r3);
} }
function TDSModalConfirmContainerComponent_ng_container_6_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainer(0);
} }
function TDSModalConfirmContainerComponent_ng_container_6_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtemplate(1, TDSModalConfirmContainerComponent_ng_container_6_ng_container_1_Template, 1, 0, "ng-container", 7);
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    i0.ɵɵnextContext();
    const _r5 = i0.ɵɵreference(10);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngTemplateOutlet", _r5);
} }
const _c1 = function (a0, a1, a2, a3) { return { "text-warning-400 dark:text-d-warning-400": a0, "text-info-400 dark:text-d-info-400": a1, "text-success-400 dark:text-d-success-400": a2, "text-error-400 dark:text-d-error-400": a3 }; };
function TDSModalConfirmContainerComponent_ng_template_7_div_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 20);
    i0.ɵɵelement(1, "i", 21);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r9 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction4(2, _c1, ctx_r9.config.confirmType == "warning", ctx_r9.config.confirmType == "info", ctx_r9.config.confirmType == "success", ctx_r9.config.confirmType == "error"));
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngClass", ctx_r9.config.iconType);
} }
const _c2 = function (a0, a1, a2, a3) { return { "bg-warning-400 dark:bg-d-warning-400": a0, "bg-info-400 dark:bg-d-info-400": a1, "bg-success-400 dark:bg-d-success-400": a2, "bg-error-400 dark:bg-d-error-400": a3 }; };
function TDSModalConfirmContainerComponent_ng_template_7_div_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 22)(1, "div", 23);
    i0.ɵɵelement(2, "i", 24);
    i0.ɵɵelementEnd()();
} if (rf & 2) {
    const ctx_r10 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction4(2, _c2, ctx_r10.config.confirmType == "warning", ctx_r10.config.confirmType == "info", ctx_r10.config.confirmType == "success", ctx_r10.config.confirmType == "error"));
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngClass", ctx_r10.config.confirmIcon);
} }
function TDSModalConfirmContainerComponent_ng_template_7_ng_container_5_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵelement(1, "span", 25);
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r11 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("innerHTML", ctx_r11.config.title, i0.ɵɵsanitizeHtml);
} }
function TDSModalConfirmContainerComponent_ng_template_7_ng_template_7_Template(rf, ctx) { }
function TDSModalConfirmContainerComponent_ng_template_7_div_8_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "div", 25);
} if (rf & 2) {
    const ctx_r13 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("innerHTML", ctx_r13.config.content, i0.ɵɵsanitizeHtml);
} }
function TDSModalConfirmContainerComponent_ng_template_7_button_10_Template(rf, ctx) { if (rf & 1) {
    const _r17 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "button", 26);
    i0.ɵɵlistener("click", function TDSModalConfirmContainerComponent_ng_template_7_button_10_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r17); const ctx_r16 = i0.ɵɵnextContext(2); return ctx_r16.onCancel(); });
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r14 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("disabled", ctx_r14.config.cancelDisabled);
    i0.ɵɵattribute("cdkFocusInitial", ctx_r14.config.autofocus === "cancel" || null);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1(" ", ctx_r14.config.cancelText || ctx_r14.locale.cancelText, " ");
} }
function TDSModalConfirmContainerComponent_ng_template_7_button_11_Template(rf, ctx) { if (rf & 1) {
    const _r19 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "button", 27);
    i0.ɵɵlistener("click", function TDSModalConfirmContainerComponent_ng_template_7_button_11_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r19); const ctx_r18 = i0.ɵɵnextContext(2); return ctx_r18.onOk(); });
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r15 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("color", ctx_r15.config.confirmType === "confirm" ? "primary" : ctx_r15.config.confirmType)("disabled", ctx_r15.config.okDisabled);
    i0.ɵɵattribute("cdkFocusInitial", ctx_r15.config.autofocus === "ok" || null);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1(" ", ctx_r15.config.okText || ctx_r15.locale.okText, " ");
} }
function TDSModalConfirmContainerComponent_ng_template_7_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 8);
    i0.ɵɵtemplate(1, TDSModalConfirmContainerComponent_ng_template_7_div_1_Template, 2, 7, "div", 9);
    i0.ɵɵtemplate(2, TDSModalConfirmContainerComponent_ng_template_7_div_2_Template, 3, 7, "div", 10);
    i0.ɵɵelementStart(3, "div", 11)(4, "div", 12);
    i0.ɵɵtemplate(5, TDSModalConfirmContainerComponent_ng_template_7_ng_container_5_Template, 2, 1, "ng-container", 13);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(6, "div", 14);
    i0.ɵɵtemplate(7, TDSModalConfirmContainerComponent_ng_template_7_ng_template_7_Template, 0, 0, "ng-template", 15);
    i0.ɵɵtemplate(8, TDSModalConfirmContainerComponent_ng_template_7_div_8_Template, 1, 1, "div", 16);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(9, "div", 17);
    i0.ɵɵtemplate(10, TDSModalConfirmContainerComponent_ng_template_7_button_10_Template, 2, 3, "button", 18);
    i0.ɵɵtemplate(11, TDSModalConfirmContainerComponent_ng_template_7_button_11_Template, 2, 4, "button", 19);
    i0.ɵɵelementEnd()();
} if (rf & 2) {
    const ctx_r4 = i0.ɵɵnextContext();
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", !(ctx_r4.config == null ? null : ctx_r4.config.confirmIcon));
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", !!(ctx_r4.config == null ? null : ctx_r4.config.confirmIcon));
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("tdsStringTemplateOutlet", ctx_r4.config.title);
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("ngIf", ctx_r4.isStringContent);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r4.config.cancelText !== null);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r4.config.okText !== null);
} }
function TDSModalConfirmContainerComponent_ng_template_9_div_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 38);
    i0.ɵɵelement(1, "i", 39);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r20 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction4(2, _c1, ctx_r20.config.confirmType == "warning", ctx_r20.config.confirmType == "info", ctx_r20.config.confirmType == "success", ctx_r20.config.confirmType == "error"));
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngClass", ctx_r20.config.iconType);
} }
function TDSModalConfirmContainerComponent_ng_template_9_div_3_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 40)(1, "div", 41);
    i0.ɵɵelement(2, "i", 42);
    i0.ɵɵelementEnd()();
} if (rf & 2) {
    const ctx_r21 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction4(2, _c2, ctx_r21.config.confirmType == "warning", ctx_r21.config.confirmType == "info", ctx_r21.config.confirmType == "success", ctx_r21.config.confirmType == "error"));
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngClass", ctx_r21.config.confirmIcon);
} }
function TDSModalConfirmContainerComponent_ng_template_9_ng_container_7_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵelement(1, "span", 25);
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r22 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("innerHTML", ctx_r22.config.title, i0.ɵɵsanitizeHtml);
} }
function TDSModalConfirmContainerComponent_ng_template_9_ng_template_9_Template(rf, ctx) { }
function TDSModalConfirmContainerComponent_ng_template_9_div_10_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "div", 25);
} if (rf & 2) {
    const ctx_r24 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("innerHTML", ctx_r24.config.content, i0.ɵɵsanitizeHtml);
} }
function TDSModalConfirmContainerComponent_ng_template_9_button_12_Template(rf, ctx) { if (rf & 1) {
    const _r28 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "button", 43);
    i0.ɵɵlistener("click", function TDSModalConfirmContainerComponent_ng_template_9_button_12_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r28); const ctx_r27 = i0.ɵɵnextContext(2); return ctx_r27.onCancel(); });
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r25 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("disabled", ctx_r25.config.cancelDisabled);
    i0.ɵɵattribute("cdkFocusInitial", ctx_r25.config.autofocus === "cancel" || null);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1(" ", ctx_r25.config.cancelText || ctx_r25.locale.cancelText, " ");
} }
function TDSModalConfirmContainerComponent_ng_template_9_button_13_Template(rf, ctx) { if (rf & 1) {
    const _r30 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "button", 44);
    i0.ɵɵlistener("click", function TDSModalConfirmContainerComponent_ng_template_9_button_13_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r30); const ctx_r29 = i0.ɵɵnextContext(2); return ctx_r29.onOk(); });
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r26 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("color", ctx_r26.config.confirmType === "confirm" ? "primary" : ctx_r26.config.confirmType)("disabled", ctx_r26.config.okDisabled);
    i0.ɵɵattribute("cdkFocusInitial", ctx_r26.config.autofocus === "ok" || null);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1(" ", ctx_r26.config.okText || ctx_r26.locale.okText, " ");
} }
function TDSModalConfirmContainerComponent_ng_template_9_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 8)(1, "div", 28);
    i0.ɵɵtemplate(2, TDSModalConfirmContainerComponent_ng_template_9_div_2_Template, 2, 7, "div", 29);
    i0.ɵɵtemplate(3, TDSModalConfirmContainerComponent_ng_template_9_div_3_Template, 3, 7, "div", 30);
    i0.ɵɵelementStart(4, "div", 31)(5, "div", 32)(6, "div", 33);
    i0.ɵɵtemplate(7, TDSModalConfirmContainerComponent_ng_template_9_ng_container_7_Template, 2, 1, "ng-container", 13);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(8, "div", 34);
    i0.ɵɵtemplate(9, TDSModalConfirmContainerComponent_ng_template_9_ng_template_9_Template, 0, 0, "ng-template", 15);
    i0.ɵɵtemplate(10, TDSModalConfirmContainerComponent_ng_template_9_div_10_Template, 1, 1, "div", 16);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(11, "div", 35);
    i0.ɵɵtemplate(12, TDSModalConfirmContainerComponent_ng_template_9_button_12_Template, 2, 3, "button", 36);
    i0.ɵɵtemplate(13, TDSModalConfirmContainerComponent_ng_template_9_button_13_Template, 2, 4, "button", 37);
    i0.ɵɵelementEnd()()()();
} if (rf & 2) {
    const ctx_r6 = i0.ɵɵnextContext();
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", !(ctx_r6.config == null ? null : ctx_r6.config.confirmIcon));
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", !!(ctx_r6.config == null ? null : ctx_r6.config.confirmIcon));
    i0.ɵɵadvance(4);
    i0.ɵɵproperty("tdsStringTemplateOutlet", ctx_r6.config.title);
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("ngIf", ctx_r6.isStringContent);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r6.config.cancelText !== null);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r6.config.okText !== null);
} }
const _c3 = function (a0, a1) { return { "px-6 pb-4": a0, "px-4 pb-6": a1 }; };
export class TDSModalConfirmContainerComponent extends BaseModalContainerComponent {
    constructor(elementRef, focusTrapFactory, cdr, render, overlayRef, tdsConfigService, config, document, animationType) {
        super(elementRef, focusTrapFactory, cdr, render, overlayRef, tdsConfigService, config, document, animationType);
        this.config = config;
        this.cancelTriggered = new EventEmitter();
        this.okTriggered = new EventEmitter();
        this.locale = {
            okText: "Đồng ý",
            cancelText: "Hủy"
        };
    }
    onCancel() {
        this.cancelTriggered.emit();
    }
    onOk() {
        this.okTriggered.emit();
    }
}
TDSModalConfirmContainerComponent.ɵfac = function TDSModalConfirmContainerComponent_Factory(t) { return new (t || TDSModalConfirmContainerComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.FocusTrapFactory), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i2.OverlayRef), i0.ɵɵdirectiveInject(i3.TDSConfigService), i0.ɵɵdirectiveInject(i4.ModalOptions), i0.ɵɵdirectiveInject(DOCUMENT, 8), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };
TDSModalConfirmContainerComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TDSModalConfirmContainerComponent, selectors: [["tds-modal-confirm-container"]], viewQuery: function TDSModalConfirmContainerComponent_Query(rf, ctx) { if (rf & 1) {
        i0.ɵɵviewQuery(CdkPortalOutlet, 7);
        i0.ɵɵviewQuery(_c0, 7);
    } if (rf & 2) {
        let _t;
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.portalOutlet = _t.first);
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.modalElementRef = _t.first);
    } }, hostAttrs: ["tabindex", "-1", "role", "dialog"], hostVars: 10, hostBindings: function TDSModalConfirmContainerComponent_HostBindings(rf, ctx) { if (rf & 1) {
        i0.ɵɵsyntheticHostListener("@modalContainer.start", function TDSModalConfirmContainerComponent_animation_modalContainer_start_HostBindingHandler($event) { return ctx.onAnimationStart($event); })("@modalContainer.done", function TDSModalConfirmContainerComponent_animation_modalContainer_done_HostBindingHandler($event) { return ctx.onAnimationDone($event); });
        i0.ɵɵlistener("click", function TDSModalConfirmContainerComponent_click_HostBindingHandler($event) { return ctx.onContainerClick($event); })("mouseup", function TDSModalConfirmContainerComponent_mouseup_HostBindingHandler() { return ctx.onMouseup(); });
    } if (rf & 2) {
        i0.ɵɵsyntheticHostProperty("@.disabled", ctx.config.noAnimation)("@modalContainer", ctx.state);
        i0.ɵɵclassMap(ctx.config.wrapClassName ? "tds-modal-wrap fixed top-0 left-0 right-0 bottom-0 overflow-auto outline-none" + ctx.config.wrapClassName : "tds-modal-wrap fixed top-0 left-0 right-0 bottom-0 overflow-auto outline-none");
        i0.ɵɵstyleProp("z-index", ctx.config.zindex);
        i0.ɵɵclassProp("tds-modal-wrap-rtl", ctx.dir === "rtl")("tds-modal-centered", ctx.config.centered);
    } }, outputs: { cancelTriggered: "cancelTriggered", okTriggered: "okTriggered" }, exportAs: ["tdsModalConfirmContainer"], features: [i0.ɵɵInheritDefinitionFeature], decls: 11, vars: 13, consts: [["role", "document", 1, "tds-modal", "bg-white", "dark:bg-d-neutral-3-200", "text-neutral-1-900", "dark:text-d-neutral-1-900", "top-24", "rounded-md", "border-box", "pointer-events-none", "relative", "my-auto", "mx-auto", 3, "ngClass", "ngStyle", "mousedown"], ["modalElement", ""], [1, "tds-modal-content", "pt-7", "pointer-events-auto", 3, "ngClass"], [1, "tds-modal-body", 3, "ngStyle"], [4, "ngIf"], ["defaultTemplate", ""], ["compactTemplate", ""], [4, "ngTemplateOutlet"], [1, "tds-modal-confirm-body-wrapper"], ["class", "tds-modal-confirm-icon w-full flex items-center justify-center pb-6", 3, "ngClass", 4, "ngIf"], ["class", "tds-modal-confirm-icon w-full flex items-center justify-center pb-6", 4, "ngIf"], [1, "tds-modal-confirm-body", "pb-4"], [1, "tds-modal-confirm-title", "text-center", "break-words", "text-header-1", "text-neutral-1-900", "dark:text-d-neutral-1-900", "font-semibold"], [4, "tdsStringTemplateOutlet"], [1, "tds-modal-confirm-content", "pt-2", "text-center", "break-words", "text=neutral-1-900", "dark:text-d-neutral-1-900", "text-body-2", "font-regular"], ["cdkPortalOutlet", ""], [3, "innerHTML", 4, "ngIf"], [1, "tds-modal-confirm-btns", "p-4", "pb-0", "flex", "justify-center"], ["class", "min-w-[100px]", "tds-button", "", "color", "secondary", 3, "disabled", "click", 4, "ngIf"], ["class", "ml-4 min-w-[100px]", "tds-button", "", 3, "color", "disabled", "click", 4, "ngIf"], [1, "tds-modal-confirm-icon", "w-full", "flex", "items-center", "justify-center", "pb-6", 3, "ngClass"], [2, "font-size", "60px", 3, "ngClass"], [1, "tds-modal-confirm-icon", "w-full", "flex", "items-center", "justify-center", "pb-6"], [1, "w-[60px]", "h-[60px]", "rounded-full", "text-white", "p-3", 3, "ngClass"], [1, "text-4xl", "leading-9", 3, "ngClass"], [3, "innerHTML"], ["tds-button", "", "color", "secondary", 1, "min-w-[100px]", 3, "disabled", "click"], ["tds-button", "", 1, "ml-4", "min-w-[100px]", 3, "color", "disabled", "click"], [1, "w-full", "flex"], ["class", "tds-modal-confirm-icon", 3, "ngClass", 4, "ngIf"], ["class", "tds-modal-confirm-icon text-white", 4, "ngIf"], [1, "pl-6", "flex-auto"], [1, "tds-modal-confirm-body", "w-full", "pb-8"], [1, "tds-modal-confirm-title", "break-words", "text-header-1", "text-neutral-1-900", "dark:text-d-neutral-1-900", "font-semibold"], [1, "tds-modal-confirm-content", "pt-4", "break-words", "text=neutral-1-900", "dark:text-d-neutral-1-900", "text-body-2", "font-regular"], [1, "tds-modal-confirm-btns", "w-full", "flex", "justify-end"], ["class", "min-w-[100px", "tds-button", "", "color", "secondary", 3, "disabled", "click", 4, "ngIf"], ["class", "ml-4 min-w-[100px", "tds-button", "", 3, "color", "disabled", "click", 4, "ngIf"], [1, "tds-modal-confirm-icon", 3, "ngClass"], [1, "text-[32px]", "leading-8", 3, "ngClass"], [1, "tds-modal-confirm-icon", "text-white"], [1, "w-[32px]", "h-[32px]", "rounded-full", "p-1.5", 3, "ngClass"], [1, "text-xl", "leading-5", 3, "ngClass"], ["tds-button", "", "color", "secondary", 1, "min-w-[100px", 3, "disabled", "click"], ["tds-button", "", 1, "ml-4", "min-w-[100px", 3, "color", "disabled", "click"]], template: function TDSModalConfirmContainerComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 0, 1);
        i0.ɵɵlistener("mousedown", function TDSModalConfirmContainerComponent_Template_div_mousedown_0_listener() { return ctx.onMousedown(); });
        i0.ɵɵpipe(2, "tdsToCssUnit");
        i0.ɵɵelementStart(3, "div", 2)(4, "div", 3);
        i0.ɵɵtemplate(5, TDSModalConfirmContainerComponent_ng_container_5_Template, 2, 1, "ng-container", 4);
        i0.ɵɵtemplate(6, TDSModalConfirmContainerComponent_ng_container_6_Template, 2, 1, "ng-container", 4);
        i0.ɵɵelementEnd()()();
        i0.ɵɵtemplate(7, TDSModalConfirmContainerComponent_ng_template_7_Template, 12, 6, "ng-template", null, 5, i0.ɵɵtemplateRefExtractor);
        i0.ɵɵtemplate(9, TDSModalConfirmContainerComponent_ng_template_9_Template, 14, 6, "ng-template", null, 6, i0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        i0.ɵɵstyleProp("width", i0.ɵɵpipeBind1(2, 8, ctx.config.width));
        i0.ɵɵproperty("ngClass", ctx.config.className)("ngStyle", ctx.config.style);
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction2(10, _c3, ctx.config.confirmViewType == "compact", ctx.config.confirmViewType != "compact"));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngStyle", ctx.config.bodyStyle);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx.config.confirmViewType != "compact");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx.config.confirmViewType == "compact");
    } }, directives: [i5.NgClass, i5.NgStyle, i5.NgIf, i5.NgTemplateOutlet, i6.TDSStringTemplateOutletDirective, i7.CdkPortalOutlet, i8.TDSButtonComponent], pipes: [i9.TDSToCssUnitPipe], encapsulation: 2, data: { animation: [TDSModalAnimations.modalContainer] } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSModalConfirmContainerComponent, [{
        type: Component,
        args: [{ selector: 'tds-modal-confirm-container', exportAs: 'tdsModalConfirmContainer', animations: [TDSModalAnimations.modalContainer], changeDetection: ChangeDetectionStrategy.Default, host: {
                    tabindex: '-1',
                    role: 'dialog',
                    '[class]': 'config.wrapClassName ? "tds-modal-wrap fixed top-0 left-0 right-0 bottom-0 overflow-auto outline-none" + config.wrapClassName : "tds-modal-wrap fixed top-0 left-0 right-0 bottom-0 overflow-auto outline-none"',
                    '[class.tds-modal-wrap-rtl]': `dir === 'rtl'`,
                    '[class.tds-modal-centered]': 'config.centered',
                    '[style.zIndex]': 'config.zindex',
                    '[@.disabled]': 'config.noAnimation',
                    '[@modalContainer]': 'state',
                    '(@modalContainer.start)': 'onAnimationStart($event)',
                    '(@modalContainer.done)': 'onAnimationDone($event)',
                    '(click)': 'onContainerClick($event)',
                    '(mouseup)': 'onMouseup()'
                }, template: "<div #modalElement role=\"document\"\r\n    class=\"tds-modal bg-white dark:bg-d-neutral-3-200 text-neutral-1-900 dark:text-d-neutral-1-900 top-24  rounded-md border-box pointer-events-none relative my-auto mx-auto\"\r\n    (mousedown)=\"onMousedown()\" [ngClass]=\"config.className!\" [ngStyle]=\"config.style!\"\r\n    [style.width]=\"config.width! | tdsToCssUnit\">\r\n    <div class=\"tds-modal-content  pt-7 pointer-events-auto\"\r\n        [ngClass]=\"{'px-6 pb-4':config.confirmViewType == 'compact','px-4 pb-6': config.confirmViewType != 'compact'}\">\r\n        <div class=\"tds-modal-body\" [ngStyle]=\"config.bodyStyle!\">\r\n            <ng-container *ngIf=\"config.confirmViewType != 'compact'\">\r\n                <ng-container *ngTemplateOutlet=\"defaultTemplate\"></ng-container>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"config.confirmViewType == 'compact'\">\r\n                <ng-container *ngTemplateOutlet=\"compactTemplate\"></ng-container>\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n</div>\r\n<ng-template #defaultTemplate>\r\n    <div class=\"tds-modal-confirm-body-wrapper\">\r\n        <div class=\"tds-modal-confirm-icon w-full flex items-center justify-center pb-6\" *ngIf=\"!config?.confirmIcon\"\r\n            [ngClass]=\"{'text-warning-400 dark:text-d-warning-400':config.confirmType == 'warning',\r\n                    'text-info-400 dark:text-d-info-400':config.confirmType == 'info',\r\n                    'text-success-400 dark:text-d-success-400':config.confirmType == 'success',\r\n                    'text-error-400 dark:text-d-error-400':config.confirmType == 'error'}\">\r\n            <i style=\"font-size:60px\" [ngClass]=\"config.iconType!\"></i>\r\n        </div>\r\n        <div *ngIf=\"!!config?.confirmIcon\" class=\"tds-modal-confirm-icon w-full flex items-center justify-center pb-6\">\r\n            <div class=\"w-[60px] h-[60px] rounded-full text-white p-3\" [ngClass]=\"{'bg-warning-400 dark:bg-d-warning-400':config.confirmType == 'warning',\r\n            'bg-info-400 dark:bg-d-info-400':config.confirmType == 'info',\r\n            'bg-success-400 dark:bg-d-success-400':config.confirmType == 'success',\r\n            'bg-error-400 dark:bg-d-error-400':config.confirmType == 'error'}\">\r\n                <i class=\"text-4xl leading-9\" [ngClass]=\"config.confirmIcon!\"></i>\r\n            </div>\r\n        </div>\r\n        <div class=\"tds-modal-confirm-body pb-4\">\r\n            <div\r\n                class=\"tds-modal-confirm-title text-center break-words text-header-1 text-neutral-1-900 dark:text-d-neutral-1-900 font-semibold\">\r\n                <ng-container *tdsStringTemplateOutlet=\"config.title\">\r\n                    <span [innerHTML]=\"config.title\"></span>\r\n                </ng-container>\r\n            </div>\r\n            <div\r\n                class=\"tds-modal-confirm-content pt-2 text-center break-words text=neutral-1-900 dark:text-d-neutral-1-900 text-body-2 font-regular\">\r\n                <ng-template cdkPortalOutlet></ng-template>\r\n                <div *ngIf=\"isStringContent\" [innerHTML]=\"config.content\"></div>\r\n            </div>\r\n        </div>\r\n        <div class=\"tds-modal-confirm-btns p-4 pb-0 flex justify-center\">\r\n            <button class=\"min-w-[100px]\" *ngIf=\"config.cancelText !== null\"\r\n                [attr.cdkFocusInitial]=\"config.autofocus === 'cancel' || null\" tds-button color=\"secondary\"\r\n                (click)=\"onCancel()\" [disabled]=\"config.cancelDisabled!\">\r\n                {{ config.cancelText || locale.cancelText }}\r\n            </button>\r\n            <button class=\"ml-4 min-w-[100px]\" *ngIf=\"config.okText !== null\"\r\n                [attr.cdkFocusInitial]=\"config.autofocus === 'ok' || null\" tds-button\r\n                [color]=\"config.confirmType === 'confirm' ?'primary' : config.confirmType!\" (click)=\"onOk()\"\r\n                [disabled]=\"config.okDisabled!\">\r\n                {{ config.okText || locale.okText }}\r\n            </button>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n<ng-template #compactTemplate>\r\n    <div class=\"tds-modal-confirm-body-wrapper\">\r\n        <div class=\"w-full flex\">\r\n            <div class=\"tds-modal-confirm-icon\" *ngIf=\"!config?.confirmIcon\" [ngClass]=\"{'text-warning-400 dark:text-d-warning-400':config.confirmType == 'warning',\r\n'text-info-400 dark:text-d-info-400':config.confirmType == 'info',\r\n'text-success-400 dark:text-d-success-400':config.confirmType == 'success',\r\n'text-error-400 dark:text-d-error-400':config.confirmType == 'error'}\">\r\n                <i class=\"text-[32px] leading-8\" [ngClass]=\"config.iconType!\"></i>\r\n            </div>\r\n            <div class=\"tds-modal-confirm-icon text-white\" *ngIf=\"!!config?.confirmIcon\">\r\n                <div class=\"w-[32px] h-[32px] rounded-full p-1.5\" [ngClass]=\"{'bg-warning-400 dark:bg-d-warning-400':config.confirmType == 'warning',\r\n                'bg-info-400 dark:bg-d-info-400':config.confirmType == 'info',\r\n                'bg-success-400 dark:bg-d-success-400':config.confirmType == 'success',\r\n                'bg-error-400 dark:bg-d-error-400':config.confirmType == 'error'}\">\r\n                    <i class=\"text-xl leading-5\" [ngClass]=\"config.confirmIcon!\"></i>\r\n                </div>\r\n\r\n            </div>\r\n            <div class=\"pl-6 flex-auto\">\r\n                <div class=\"tds-modal-confirm-body w-full pb-8\">\r\n                    <div\r\n                        class=\"tds-modal-confirm-title break-words text-header-1 text-neutral-1-900 dark:text-d-neutral-1-900 font-semibold\">\r\n                        <ng-container *tdsStringTemplateOutlet=\"config.title\">\r\n                            <span [innerHTML]=\"config.title\"></span>\r\n                        </ng-container>\r\n                    </div>\r\n                    <div\r\n                        class=\"tds-modal-confirm-content pt-4 break-words text=neutral-1-900 dark:text-d-neutral-1-900 text-body-2 font-regular\">\r\n                        <ng-template cdkPortalOutlet></ng-template>\r\n                        <div *ngIf=\"isStringContent\" [innerHTML]=\"config.content\"></div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"tds-modal-confirm-btns w-full  flex justify-end\">\r\n                    <button *ngIf=\"config.cancelText !== null\" class=\"min-w-[100px\"\r\n                        [attr.cdkFocusInitial]=\"config.autofocus === 'cancel' || null\" tds-button color=\"secondary\"\r\n                        (click)=\"onCancel()\" [disabled]=\"config.cancelDisabled!\">\r\n                        {{ config.cancelText || locale.cancelText }}\r\n                    </button>\r\n                    <button class=\"ml-4 min-w-[100px\" *ngIf=\"config.okText !== null\"\r\n                        [attr.cdkFocusInitial]=\"config.autofocus === 'ok' || null\" tds-button\r\n                        [color]=\"config.confirmType === 'confirm' ?'primary' : config.confirmType!\" (click)=\"onOk()\"\r\n                        [disabled]=\"config.okDisabled!\">\r\n                        {{ config.okText || locale.okText }}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n</ng-template>" }]
    }], function () { return [{ type: i0.ElementRef }, { type: i1.FocusTrapFactory }, { type: i0.ChangeDetectorRef }, { type: i0.Renderer2 }, { type: i2.OverlayRef }, { type: i3.TDSConfigService }, { type: i4.ModalOptions }, { type: undefined, decorators: [{
                type: Optional
            }, {
                type: Inject,
                args: [DOCUMENT]
            }] }, { type: undefined, decorators: [{
                type: Optional
            }, {
                type: Inject,
                args: [ANIMATION_MODULE_TYPE]
            }] }]; }, { portalOutlet: [{
            type: ViewChild,
            args: [CdkPortalOutlet, { static: true }]
        }], modalElementRef: [{
            type: ViewChild,
            args: ['modalElement', { static: true }]
        }], cancelTriggered: [{
            type: Output
        }], okTriggered: [{
            type: Output
        }] }); })();
//# sourceMappingURL=data:application/json;base64,