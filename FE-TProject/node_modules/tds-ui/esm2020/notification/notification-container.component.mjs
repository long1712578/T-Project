import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';
import { Subject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import { TDSMNContainerComponent } from 'tds-ui/message';
import { toCssPixel } from 'tds-ui/shared/utility';
import * as i0 from "@angular/core";
import * as i1 from "tds-ui/core/config";
import * as i2 from "@angular/common";
import * as i3 from "./notification.component";
function TDSNotificationContainerComponent_tds_notification_1_Template(rf, ctx) { if (rf & 1) {
    const _r6 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "tds-notification", 5);
    i0.ɵɵlistener("destroyed", function TDSNotificationContainerComponent_tds_notification_1_Template_tds_notification_destroyed_0_listener($event) { i0.ɵɵrestoreView(_r6); const ctx_r5 = i0.ɵɵnextContext(); return ctx_r5.remove($event.id, $event.userAction); });
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const instance_r4 = ctx.$implicit;
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵproperty("instance", instance_r4)("placement", ctx_r0.config.placement);
} }
function TDSNotificationContainerComponent_tds_notification_3_Template(rf, ctx) { if (rf & 1) {
    const _r9 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "tds-notification", 5);
    i0.ɵɵlistener("destroyed", function TDSNotificationContainerComponent_tds_notification_3_Template_tds_notification_destroyed_0_listener($event) { i0.ɵɵrestoreView(_r9); const ctx_r8 = i0.ɵɵnextContext(); return ctx_r8.remove($event.id, $event.userAction); });
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const instance_r7 = ctx.$implicit;
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵproperty("instance", instance_r7)("placement", ctx_r1.config.placement);
} }
function TDSNotificationContainerComponent_tds_notification_5_Template(rf, ctx) { if (rf & 1) {
    const _r12 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "tds-notification", 5);
    i0.ɵɵlistener("destroyed", function TDSNotificationContainerComponent_tds_notification_5_Template_tds_notification_destroyed_0_listener($event) { i0.ɵɵrestoreView(_r12); const ctx_r11 = i0.ɵɵnextContext(); return ctx_r11.remove($event.id, $event.userAction); });
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const instance_r10 = ctx.$implicit;
    const ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵproperty("instance", instance_r10)("placement", ctx_r2.config.placement);
} }
function TDSNotificationContainerComponent_tds_notification_7_Template(rf, ctx) { if (rf & 1) {
    const _r15 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "tds-notification", 5);
    i0.ɵɵlistener("destroyed", function TDSNotificationContainerComponent_tds_notification_7_Template_tds_notification_destroyed_0_listener($event) { i0.ɵɵrestoreView(_r15); const ctx_r14 = i0.ɵɵnextContext(); return ctx_r14.remove($event.id, $event.userAction); });
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const instance_r13 = ctx.$implicit;
    const ctx_r3 = i0.ɵɵnextContext();
    i0.ɵɵproperty("instance", instance_r13)("placement", ctx_r3.config.placement);
} }
const TDS_CONFIG_MODULE_NAME = 'notification';
const TDS_NOTIFICATION_DEFAULT_CONFIG = {
    top: '24px',
    bottom: '24px',
    placement: 'topRight',
    duration: 4500,
    maxStack: 7,
    pauseOnHover: true,
    animate: true,
    direction: 'ltr'
};
export class TDSNotificationContainerComponent extends TDSMNContainerComponent {
    constructor(cdr, tdsConfigService) {
        super(cdr, tdsConfigService);
        this.dir = 'ltr';
        this.instances = [];
        this.topLeftInstances = [];
        this.topRightInstances = [];
        this.bottomLeftInstances = [];
        this.bottomRightInstances = [];
        const config = TDS_NOTIFICATION_DEFAULT_CONFIG;
        this.dir = config?.direction || 'ltr';
    }
    create(notification) {
        const noti = this.onCreate(notification);
        const key = noti.options.key;
        const notificationWithSameKey = this.instances.find(msg => msg.options.key === notification.options.key);
        if (key && notificationWithSameKey) {
            this.replaceNotification(notificationWithSameKey, noti);
        }
        else {
            if (this.instances.length >= this.config.maxStack) {
                this.instances = this.instances.slice(1);
            }
            this.instances = [...this.instances, noti];
        }
        this.readyInstances();
        return noti;
    }
    onCreate(instance) {
        instance.options = this.mergeOptions(instance.options);
        instance.onClose = new Subject();
        instance.onClick = new Subject();
        return instance;
    }
    subscribeConfigChange() {
        this.tdsConfigService
            .getConfigChangeEventForComponent(TDS_CONFIG_MODULE_NAME)
            .pipe(takeUntil(this.destroy$))
            .subscribe(() => {
            this.updateConfig();
            const config = this.tdsConfigService.getConfigForComponent(TDS_CONFIG_MODULE_NAME);
            if (config) {
                const { direction } = config;
                this.dir = direction || this.dir;
            }
        });
    }
    updateConfig() {
        this.config = {
            ...TDS_NOTIFICATION_DEFAULT_CONFIG,
            ...this.config,
            ...this.tdsConfigService.getConfigForComponent(TDS_CONFIG_MODULE_NAME)
        };
        this.top = toCssPixel(this.config.top);
        this.bottom = toCssPixel(this.config.bottom);
        this.cdr.markForCheck();
    }
    replaceNotification(old, _new) {
        old.title = _new.title;
        old.content = _new.content;
        old.template = _new.template;
        old.type = _new.type;
        old.options = _new.options;
    }
    readyInstances() {
        this.topLeftInstances = this.instances.filter(m => m.options.placement === 'topLeft');
        this.topRightInstances = this.instances.filter(m => m.options.placement === 'topRight' || !m.options.placement);
        this.bottomLeftInstances = this.instances.filter(m => m.options.placement === 'bottomLeft');
        this.bottomRightInstances = this.instances.filter(m => m.options.placement === 'bottomRight');
        this.cdr.detectChanges();
    }
    mergeOptions(options) {
        const { duration, animate, pauseOnHover, placement } = this.config;
        return { duration, animate, pauseOnHover, placement: placement, ...options };
    }
}
TDSNotificationContainerComponent.ɵfac = function TDSNotificationContainerComponent_Factory(t) { return new (t || TDSNotificationContainerComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.TDSConfigService)); };
TDSNotificationContainerComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TDSNotificationContainerComponent, selectors: [["tds-notification-container"]], exportAs: ["tdsNotificationContainer"], features: [i0.ɵɵInheritDefinitionFeature], decls: 8, vars: 28, consts: [[1, "tds-notification", "absolute", "tds-notification-topLeft"], [3, "instance", "placement", "destroyed", 4, "ngFor", "ngForOf"], [1, "tds-notification", "absolute", "tds-notification-topRight"], [1, "tds-notification", "absolute", "tds-notification-bottomLeft"], [1, "tds-notification", "absolute", "tds-notification-bottomRight"], [3, "instance", "placement", "destroyed"]], template: function TDSNotificationContainerComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 0);
        i0.ɵɵtemplate(1, TDSNotificationContainerComponent_tds_notification_1_Template, 1, 2, "tds-notification", 1);
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(2, "div", 2);
        i0.ɵɵtemplate(3, TDSNotificationContainerComponent_tds_notification_3_Template, 1, 2, "tds-notification", 1);
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(4, "div", 3);
        i0.ɵɵtemplate(5, TDSNotificationContainerComponent_tds_notification_5_Template, 1, 2, "tds-notification", 1);
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(6, "div", 4);
        i0.ɵɵtemplate(7, TDSNotificationContainerComponent_tds_notification_7_Template, 1, 2, "tds-notification", 1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        i0.ɵɵstyleProp("top", ctx.top)("left", "0px");
        i0.ɵɵclassProp("tds-notification-rtl", ctx.dir === "rtl");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngForOf", ctx.topLeftInstances);
        i0.ɵɵadvance(1);
        i0.ɵɵstyleProp("top", ctx.top)("right", "0px");
        i0.ɵɵclassProp("tds-notification-rtl", ctx.dir === "rtl");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngForOf", ctx.topRightInstances);
        i0.ɵɵadvance(1);
        i0.ɵɵstyleProp("bottom", ctx.bottom)("left", "0px");
        i0.ɵɵclassProp("tds-notification-rtl", ctx.dir === "rtl");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngForOf", ctx.bottomLeftInstances);
        i0.ɵɵadvance(1);
        i0.ɵɵstyleProp("bottom", ctx.bottom)("right", "0px");
        i0.ɵɵclassProp("tds-notification-rtl", ctx.dir === "rtl");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngForOf", ctx.bottomRightInstances);
    } }, directives: [i2.NgForOf, i3.TDSNotificationComponent], encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSNotificationContainerComponent, [{
        type: Component,
        args: [{
                changeDetection: ChangeDetectionStrategy.OnPush,
                encapsulation: ViewEncapsulation.None,
                selector: 'tds-notification-container',
                exportAs: 'tdsNotificationContainer',
                preserveWhitespaces: false,
                template: `
    <div
      class="tds-notification absolute  tds-notification-topLeft"
      [class.tds-notification-rtl]="dir === 'rtl'"
      [style.top]="top"
      [style.left]="'0px'"
    >
      <tds-notification
        *ngFor="let instance of topLeftInstances"
        [instance]="instance"
        [placement]="config.placement"
        (destroyed)="remove($event.id, $event.userAction)"
      ></tds-notification>
    </div>
    <div
      class="tds-notification absolute  tds-notification-topRight"
      [class.tds-notification-rtl]="dir === 'rtl'"
      [style.top]="top"
      [style.right]="'0px'"
    >
      <tds-notification
        *ngFor="let instance of topRightInstances"
        [instance]="instance"
        [placement]="config.placement"
        (destroyed)="remove($event.id, $event.userAction)"
      ></tds-notification>
    </div>
    <div
      class="tds-notification absolute  tds-notification-bottomLeft"
      [class.tds-notification-rtl]="dir === 'rtl'"
      [style.bottom]="bottom"
      [style.left]="'0px'"
    >
      <tds-notification
        *ngFor="let instance of bottomLeftInstances"
        [instance]="instance"
        [placement]="config.placement"
        (destroyed)="remove($event.id, $event.userAction)"
      ></tds-notification>
    </div>
    <div
      class="tds-notification absolute  tds-notification-bottomRight"
      [class.tds-notification-rtl]="dir === 'rtl'"
      [style.bottom]="bottom"
      [style.right]="'0px'"
    >
      <tds-notification
        *ngFor="let instance of bottomRightInstances"
        [instance]="instance"
        [placement]="config.placement"
        (destroyed)="remove($event.id, $event.userAction)"
      ></tds-notification>
    </div>
  `
            }]
    }], function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.TDSConfigService }]; }, null); })();
//# sourceMappingURL=data:application/json;base64,