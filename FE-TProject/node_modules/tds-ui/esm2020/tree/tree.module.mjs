import { BidiModule } from '@angular/cdk/bidi';
import { ScrollingModule } from '@angular/cdk/scrolling';
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { TDSHighlightModule } from 'tds-ui/core/highlight';
import { TDSNoAnimationModule } from 'tds-ui/core/no-animation';
import { TDSOutletModule } from 'tds-ui/core/outlet';
import { TDSSpinnerModule } from 'tds-ui/progress-spinner';
import { TDSTreeDropIndicatorComponent } from './tree-drop-indicator.component';
import { TDSTreeIndentComponent } from './tree-indent.component';
import { TDSTreeNodeBuiltinCheckboxComponent } from './tree-node-checkbox.component';
import { TDSTreeNodeSwitcherComponent } from './tree-node-switcher.component';
import { TDSTreeNodeTitleComponent } from './tree-node-title.component';
import { TDSTreeNodeBuiltinComponent } from './tree-node.component';
import { TDSTreeComponent } from './tree.component';
import * as i0 from "@angular/core";
export class TDSTreeModule {
}
TDSTreeModule.ɵfac = function TDSTreeModule_Factory(t) { return new (t || TDSTreeModule)(); };
TDSTreeModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: TDSTreeModule });
TDSTreeModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [[
            BidiModule,
            CommonModule,
            TDSOutletModule,
            TDSNoAnimationModule,
            TDSHighlightModule,
            ScrollingModule,
            TDSSpinnerModule
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSTreeModule, [{
        type: NgModule,
        args: [{
                imports: [
                    BidiModule,
                    CommonModule,
                    TDSOutletModule,
                    TDSNoAnimationModule,
                    TDSHighlightModule,
                    ScrollingModule,
                    TDSSpinnerModule
                ],
                declarations: [
                    TDSTreeComponent,
                    TDSTreeNodeBuiltinComponent,
                    TDSTreeIndentComponent,
                    TDSTreeNodeSwitcherComponent,
                    TDSTreeNodeBuiltinCheckboxComponent,
                    TDSTreeNodeTitleComponent,
                    TDSTreeDropIndicatorComponent
                ],
                exports: [TDSTreeComponent, TDSTreeNodeBuiltinComponent, TDSTreeIndentComponent]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0.ɵɵsetNgModuleScope(TDSTreeModule, { declarations: [TDSTreeComponent,
        TDSTreeNodeBuiltinComponent,
        TDSTreeIndentComponent,
        TDSTreeNodeSwitcherComponent,
        TDSTreeNodeBuiltinCheckboxComponent,
        TDSTreeNodeTitleComponent,
        TDSTreeDropIndicatorComponent], imports: [BidiModule,
        CommonModule,
        TDSOutletModule,
        TDSNoAnimationModule,
        TDSHighlightModule,
        ScrollingModule,
        TDSSpinnerModule], exports: [TDSTreeComponent, TDSTreeNodeBuiltinComponent, TDSTreeIndentComponent] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZS5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy90ZHMtdWkvdHJlZS90cmVlLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDL0MsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3pELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzNELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ2hFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUkzRCxPQUFPLEVBQUUsNkJBQTZCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUNoRixPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUNqRSxPQUFPLEVBQUUsbUNBQW1DLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUNyRixPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUM5RSxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUN4RSxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUNwRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQzs7QUF1QnBELE1BQU0sT0FBTyxhQUFhOzswRUFBYixhQUFhOytEQUFiLGFBQWE7bUVBcEJmO1lBQ1AsVUFBVTtZQUNWLFlBQVk7WUFDWixlQUFlO1lBQ2Ysb0JBQW9CO1lBQ3BCLGtCQUFrQjtZQUNsQixlQUFlO1lBQ2YsZ0JBQWdCO1NBQ2pCO3VGQVlVLGFBQWE7Y0FyQnpCLFFBQVE7ZUFBQztnQkFDUixPQUFPLEVBQUU7b0JBQ1AsVUFBVTtvQkFDVixZQUFZO29CQUNaLGVBQWU7b0JBQ2Ysb0JBQW9CO29CQUNwQixrQkFBa0I7b0JBQ2xCLGVBQWU7b0JBQ2YsZ0JBQWdCO2lCQUNqQjtnQkFDRCxZQUFZLEVBQUU7b0JBQ1osZ0JBQWdCO29CQUNoQiwyQkFBMkI7b0JBQzNCLHNCQUFzQjtvQkFDdEIsNEJBQTRCO29CQUM1QixtQ0FBbUM7b0JBQ25DLHlCQUF5QjtvQkFDekIsNkJBQTZCO2lCQUM5QjtnQkFDRCxPQUFPLEVBQUUsQ0FBQyxnQkFBZ0IsRUFBRSwyQkFBMkIsRUFBRSxzQkFBc0IsQ0FBQzthQUNqRjs7d0ZBQ1ksYUFBYSxtQkFWdEIsZ0JBQWdCO1FBQ2hCLDJCQUEyQjtRQUMzQixzQkFBc0I7UUFDdEIsNEJBQTRCO1FBQzVCLG1DQUFtQztRQUNuQyx5QkFBeUI7UUFDekIsNkJBQTZCLGFBZjdCLFVBQVU7UUFDVixZQUFZO1FBQ1osZUFBZTtRQUNmLG9CQUFvQjtRQUNwQixrQkFBa0I7UUFDbEIsZUFBZTtRQUNmLGdCQUFnQixhQVdSLGdCQUFnQixFQUFFLDJCQUEyQixFQUFFLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5cclxuaW1wb3J0IHsgQmlkaU1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9iaWRpJztcclxuaW1wb3J0IHsgU2Nyb2xsaW5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL3Njcm9sbGluZyc7XHJcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFREU0hpZ2hsaWdodE1vZHVsZSB9IGZyb20gJ3Rkcy11aS9jb3JlL2hpZ2hsaWdodCc7XHJcbmltcG9ydCB7IFREU05vQW5pbWF0aW9uTW9kdWxlIH0gZnJvbSAndGRzLXVpL2NvcmUvbm8tYW5pbWF0aW9uJztcclxuaW1wb3J0IHsgVERTT3V0bGV0TW9kdWxlIH0gZnJvbSAndGRzLXVpL2NvcmUvb3V0bGV0JztcclxuaW1wb3J0IHsgVERTU3Bpbm5lck1vZHVsZSB9IGZyb20gJ3Rkcy11aS9wcm9ncmVzcy1zcGlubmVyJztcclxuXHJcblxyXG5cclxuaW1wb3J0IHsgVERTVHJlZURyb3BJbmRpY2F0b3JDb21wb25lbnQgfSBmcm9tICcuL3RyZWUtZHJvcC1pbmRpY2F0b3IuY29tcG9uZW50JztcclxuaW1wb3J0IHsgVERTVHJlZUluZGVudENvbXBvbmVudCB9IGZyb20gJy4vdHJlZS1pbmRlbnQuY29tcG9uZW50JztcclxuaW1wb3J0IHsgVERTVHJlZU5vZGVCdWlsdGluQ2hlY2tib3hDb21wb25lbnQgfSBmcm9tICcuL3RyZWUtbm9kZS1jaGVja2JveC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBURFNUcmVlTm9kZVN3aXRjaGVyQ29tcG9uZW50IH0gZnJvbSAnLi90cmVlLW5vZGUtc3dpdGNoZXIuY29tcG9uZW50JztcclxuaW1wb3J0IHsgVERTVHJlZU5vZGVUaXRsZUNvbXBvbmVudCB9IGZyb20gJy4vdHJlZS1ub2RlLXRpdGxlLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFREU1RyZWVOb2RlQnVpbHRpbkNvbXBvbmVudCB9IGZyb20gJy4vdHJlZS1ub2RlLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFREU1RyZWVDb21wb25lbnQgfSBmcm9tICcuL3RyZWUuY29tcG9uZW50JztcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgaW1wb3J0czogW1xyXG4gICAgQmlkaU1vZHVsZSxcclxuICAgIENvbW1vbk1vZHVsZSxcclxuICAgIFREU091dGxldE1vZHVsZSwgIFxyXG4gICAgVERTTm9BbmltYXRpb25Nb2R1bGUsXHJcbiAgICBURFNIaWdobGlnaHRNb2R1bGUsXHJcbiAgICBTY3JvbGxpbmdNb2R1bGUsXHJcbiAgICBURFNTcGlubmVyTW9kdWxlXHJcbiAgXSxcclxuICBkZWNsYXJhdGlvbnM6IFtcclxuICAgIFREU1RyZWVDb21wb25lbnQsXHJcbiAgICBURFNUcmVlTm9kZUJ1aWx0aW5Db21wb25lbnQsXHJcbiAgICBURFNUcmVlSW5kZW50Q29tcG9uZW50LFxyXG4gICAgVERTVHJlZU5vZGVTd2l0Y2hlckNvbXBvbmVudCxcclxuICAgIFREU1RyZWVOb2RlQnVpbHRpbkNoZWNrYm94Q29tcG9uZW50LFxyXG4gICAgVERTVHJlZU5vZGVUaXRsZUNvbXBvbmVudCxcclxuICAgIFREU1RyZWVEcm9wSW5kaWNhdG9yQ29tcG9uZW50XHJcbiAgXSxcclxuICBleHBvcnRzOiBbVERTVHJlZUNvbXBvbmVudCwgVERTVHJlZU5vZGVCdWlsdGluQ29tcG9uZW50LCBURFNUcmVlSW5kZW50Q29tcG9uZW50XVxyXG59KVxyXG5leHBvcnQgY2xhc3MgVERTVHJlZU1vZHVsZSB7fVxyXG4iXX0=