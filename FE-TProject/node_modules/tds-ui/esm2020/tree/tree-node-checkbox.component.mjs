import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
const _c0 = ["builtin", ""];
const _c1 = function (a0, a1) { return { "opacity-65 cursor-not-allowed": a0, "group cursor-pointer ": a1 }; };
function TDSTreeNodeBuiltinCheckboxComponent_label_0_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "label", 1)(1, "span", 2);
    i0.ɵɵelement(2, "span", 3);
    i0.ɵɵelementEnd()();
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction2(1, _c1, ctx_r0.disabled, !ctx_r0.disabled));
} }
function TDSTreeNodeBuiltinCheckboxComponent_label_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "label", 1)(1, "span", 4)(2, "span", 3);
    i0.ɵɵnamespaceSVG();
    i0.ɵɵelementStart(3, "svg", 5);
    i0.ɵɵelement(4, "path", 6);
    i0.ɵɵelementEnd()()()();
} if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction2(1, _c1, ctx_r1.disabled, !ctx_r1.disabled));
} }
const _c2 = function (a0, a1) { return { "opacity-65 cursor-not-allowed": a0, "group cursor-pointer": a1 }; };
function TDSTreeNodeBuiltinCheckboxComponent_label_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "label", 1)(1, "span", 4)(2, "span", 3);
    i0.ɵɵnamespaceSVG();
    i0.ɵɵelementStart(3, "svg", 7);
    i0.ɵɵelement(4, "path", 8);
    i0.ɵɵelementEnd()()()();
} if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction2(1, _c2, ctx_r2.disabled, !ctx_r2.disabled));
} }
export class TDSTreeNodeBuiltinCheckboxComponent {
    constructor() {
        this.selectMode = false;
    }
    get checked() {
        return !this.selectMode && this.isChecked;
    }
    get indeterminate() {
        return !this.selectMode && this.isHalfChecked;
    }
    get disabled() {
        return !this.selectMode && (this.isDisabled || this.isDisableCheckbox);
    }
}
TDSTreeNodeBuiltinCheckboxComponent.ɵfac = function TDSTreeNodeBuiltinCheckboxComponent_Factory(t) { return new (t || TDSTreeNodeBuiltinCheckboxComponent)(); };
TDSTreeNodeBuiltinCheckboxComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TDSTreeNodeBuiltinCheckboxComponent, selectors: [["tds-tree-node-checkbox", "builtin", ""]], hostAttrs: [1, "flex", "items-center"], hostVars: 16, hostBindings: function TDSTreeNodeBuiltinCheckboxComponent_HostBindings(rf, ctx) { if (rf & 2) {
        i0.ɵɵclassProp("tds-select-tree-checkbox", ctx.selectMode)("tds-select-tree-checkbox-checked", ctx.selectMode && ctx.isChecked)("tds-select-tree-checkbox-indeterminate", ctx.selectMode && ctx.isHalfChecked)("tds-select-tree-checkbox-disabled", ctx.selectMode && (ctx.isDisabled || ctx.isDisableCheckbox))("tds-tree-checkbox", !ctx.selectMode)("tds-tree-checkbox-checked", !ctx.selectMode && ctx.isChecked)("tds-tree-checkbox-indeterminate", !ctx.selectMode && ctx.isHalfChecked)("tds-tree-checkbox-disabled", !ctx.selectMode && (ctx.isDisabled || ctx.isDisableCheckbox));
    } }, inputs: { selectMode: "selectMode", isChecked: "isChecked", isHalfChecked: "isHalfChecked", isDisabled: "isDisabled", isDisableCheckbox: "isDisableCheckbox" }, attrs: _c0, decls: 3, vars: 3, consts: [["class", "flex items-center mr-3", 3, "ngClass", 4, "ngIf"], [1, "flex", "items-center", "mr-3", 3, "ngClass"], [1, "p-0.5", "border", "rounded", "relative", "flex", "items-center", "justify-center", "box-content", "group-hover:ring", "group-hover:border-primary-1", "group-hover:ring-opacity-20", "group-hover:ring-primary-1", "bg-white"], [1, "h-3", "w-3"], [1, "p-0.5", "border", "rounded", "relative", "flex", "items-center", "justify-center", "box-content", "group-hover:ring", "group-hover:border-primary-1", "group-hover:ring-opacity-20", "group-hover:ring-primary-1", "bg-primary-1", "border-primary-1"], ["viewBox", "0 0 12 8", "fill", "none", "xmlns", "http://www.w3.org/2000/svg", "width", "12", "height", "12"], ["d", "M10.7307 0.90316C10.5348 0.707751 10.2694 0.598045 9.99275 0.598045C9.71605 0.598045 9.45061 0.707751 9.25471 0.90316L4.75471 5.40316L2.78572 3.4352C2.68953 3.33465 2.57426 3.25427 2.44661 3.19888C2.31895 3.14348 2.18152 3.11414 2.04237 3.11257C1.90323 3.111 1.76517 3.13728 1.6363 3.18978C1.50744 3.24229 1.39031 3.31999 1.29188 3.41836C1.19345 3.51672 1.11565 3.63376 1.06306 3.7626C1.01047 3.89143 0.984135 4.02946 0.985609 4.1686C0.987082 4.30775 1.01636 4.44521 1.07167 4.5729C1.12698 4.70059 1.20726 4.81594 1.30775 4.91219L4.01674 7.6202C4.21298 7.81573 4.47872 7.9255 4.75575 7.9255C5.03278 7.9255 5.29846 7.81573 5.4947 7.6202L10.7367 2.38021C10.8346 2.28323 10.9123 2.1678 10.9653 2.04061C11.0184 1.91343 11.0457 1.77698 11.0457 1.63918C11.0457 1.50138 11.0184 1.36494 10.9653 1.23775C10.9123 1.11057 10.8346 0.995193 10.7367 0.898216L10.7307 0.90316Z", "fill", "#FFFFFF"], ["xmlns", "http://www.w3.org/2000/svg", "viewBox", "0 0 12 4", "fill", "none", "width", "12", "height", "12"], ["fill-rule", "evenodd", "clip-rule", "evenodd", "d", "M0.600006 2C0.600006 1.33726 1.13726 0.800003 1.80001 0.800003L10.2 0.800003C10.8627 0.800003 11.4 1.33726 11.4 2C11.4 2.66274 10.8627 3.2 10.2 3.2L1.80001 3.2C1.13726 3.2 0.600006 2.66274 0.600006 2Z", "fill", "#FFFFFF"]], template: function TDSTreeNodeBuiltinCheckboxComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵtemplate(0, TDSTreeNodeBuiltinCheckboxComponent_label_0_Template, 3, 4, "label", 0);
        i0.ɵɵtemplate(1, TDSTreeNodeBuiltinCheckboxComponent_label_1_Template, 5, 4, "label", 0);
        i0.ɵɵtemplate(2, TDSTreeNodeBuiltinCheckboxComponent_label_2_Template, 5, 4, "label", 0);
    } if (rf & 2) {
        i0.ɵɵproperty("ngIf", !ctx.checked && !ctx.indeterminate);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx.checked);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx.indeterminate);
    } }, directives: [i1.NgIf, i1.NgClass], encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSTreeNodeBuiltinCheckboxComponent, [{
        type: Component,
        args: [{ selector: 'tds-tree-node-checkbox[builtin]', changeDetection: ChangeDetectionStrategy.OnPush, preserveWhitespaces: false, host: {
                    '[class.tds-select-tree-checkbox]': `selectMode`,
                    '[class.tds-select-tree-checkbox-checked]': `selectMode && isChecked`,
                    '[class.tds-select-tree-checkbox-indeterminate]': `selectMode && isHalfChecked`,
                    '[class.tds-select-tree-checkbox-disabled]': `selectMode && (isDisabled || isDisableCheckbox)`,
                    '[class.tds-tree-checkbox]': `!selectMode`,
                    '[class.tds-tree-checkbox-checked]': `!selectMode && isChecked`,
                    '[class.tds-tree-checkbox-indeterminate]': `!selectMode && isHalfChecked`,
                    '[class.tds-tree-checkbox-disabled]': `!selectMode && (isDisabled || isDisableCheckbox)`,
                    class: "flex items-center"
                }, template: "<!-- uncheck -->\r\n<label *ngIf=\"!checked && !indeterminate\" class=\"flex items-center mr-3\" [ngClass]=\"{'opacity-65 cursor-not-allowed':disabled,'group cursor-pointer ':!disabled}\">\r\n    <span\r\n        class=\"p-0.5 border rounded relative flex items-center justify-center box-content group-hover:ring group-hover:border-primary-1 group-hover:ring-opacity-20 group-hover:ring-primary-1 bg-white\">\r\n        <span class=\"h-3 w-3\">\r\n        </span>\r\n    </span>\r\n\r\n</label>\r\n<!-- check -->\r\n<label *ngIf=\"checked\" class=\"flex items-center mr-3\" [ngClass]=\"{'opacity-65 cursor-not-allowed':disabled,'group cursor-pointer ':!disabled}\">\r\n    <span\r\n        class=\"p-0.5 border rounded relative flex items-center justify-center box-content group-hover:ring group-hover:border-primary-1 group-hover:ring-opacity-20 group-hover:ring-primary-1 bg-primary-1 border-primary-1\">\r\n        <span class=\"h-3 w-3\">\r\n            <svg viewBox=\"0 0 12 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\">\r\n                <path\r\n                    d=\"M10.7307 0.90316C10.5348 0.707751 10.2694 0.598045 9.99275 0.598045C9.71605 0.598045 9.45061 0.707751 9.25471 0.90316L4.75471 5.40316L2.78572 3.4352C2.68953 3.33465 2.57426 3.25427 2.44661 3.19888C2.31895 3.14348 2.18152 3.11414 2.04237 3.11257C1.90323 3.111 1.76517 3.13728 1.6363 3.18978C1.50744 3.24229 1.39031 3.31999 1.29188 3.41836C1.19345 3.51672 1.11565 3.63376 1.06306 3.7626C1.01047 3.89143 0.984135 4.02946 0.985609 4.1686C0.987082 4.30775 1.01636 4.44521 1.07167 4.5729C1.12698 4.70059 1.20726 4.81594 1.30775 4.91219L4.01674 7.6202C4.21298 7.81573 4.47872 7.9255 4.75575 7.9255C5.03278 7.9255 5.29846 7.81573 5.4947 7.6202L10.7367 2.38021C10.8346 2.28323 10.9123 2.1678 10.9653 2.04061C11.0184 1.91343 11.0457 1.77698 11.0457 1.63918C11.0457 1.50138 11.0184 1.36494 10.9653 1.23775C10.9123 1.11057 10.8346 0.995193 10.7367 0.898216L10.7307 0.90316Z\"\r\n                    fill=\"#FFFFFF\"></path>\r\n            </svg>\r\n        </span>\r\n    </span>\r\n</label>\r\n\r\n\r\n<!-- indeterminate -->\r\n\r\n<label *ngIf=\"indeterminate\" class=\"flex items-center mr-3\" [ngClass]=\"{'opacity-65 cursor-not-allowed':disabled,'group cursor-pointer':!disabled}\">\r\n    <span\r\n        class=\"p-0.5 border rounded relative flex items-center justify-center box-content group-hover:ring group-hover:border-primary-1 group-hover:ring-opacity-20 group-hover:ring-primary-1 bg-primary-1 border-primary-1\">\r\n        <span class=\"h-3 w-3\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 12 4\" fill=\"none\" width=\"12\" height=\"12\">\r\n                <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\r\n                    d=\"M0.600006 2C0.600006 1.33726 1.13726 0.800003 1.80001 0.800003L10.2 0.800003C10.8627 0.800003 11.4 1.33726 11.4 2C11.4 2.66274 10.8627 3.2 10.2 3.2L1.80001 3.2C1.13726 3.2 0.600006 2.66274 0.600006 2Z\"\r\n                    fill=\"#FFFFFF\">\r\n                </path>\r\n            </svg>\r\n        </span>\r\n    </span>\r\n</label>" }]
    }], null, { selectMode: [{
            type: Input
        }], isChecked: [{
            type: Input
        }], isHalfChecked: [{
            type: Input
        }], isDisabled: [{
            type: Input
        }], isDisableCheckbox: [{
            type: Input
        }] }); })();
//# sourceMappingURL=data:application/json;base64,