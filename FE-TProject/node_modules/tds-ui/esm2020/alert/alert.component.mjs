import { __decorate } from "tslib";
import { ChangeDetectionStrategy, Component, EventEmitter, Input, Optional, Output, ViewEncapsulation } from '@angular/core';
import { Subject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import { InputBoolean } from 'tds-ui/shared/utility';
import { slideAlertMotion } from 'tds-ui/core/animation';
import * as i0 from "@angular/core";
import * as i1 from "@angular/cdk/bidi";
import * as i2 from "@angular/common";
import * as i3 from "tds-ui/core/outlet";
import * as i4 from "tds-ui/button";
function TDSAlertComponent_div_0_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵelementStart(1, "div", 6);
    i0.ɵɵelement(2, "span", 7);
    i0.ɵɵelementEnd();
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngClass", ctx_r1._iconClass);
} }
function TDSAlertComponent_div_0_div_3_div_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1);
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r7 = i0.ɵɵnextContext(4);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(ctx_r7.message);
} }
const _c0 = function (a0, a1, a2, a3) { return { "text-neutral-1-900 dark:text-d-neutral-1-900": a0, "text-white text-body-2 font-regular mr-8": a1, "text-title-1 font-semibold": a2, "text-body-2 font-regular ": a3 }; };
function TDSAlertComponent_div_0_div_3_div_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 13);
    i0.ɵɵtemplate(1, TDSAlertComponent_div_0_div_3_div_2_ng_container_1_Template, 2, 1, "ng-container", 14);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = i0.ɵɵnextContext(3);
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction4(2, _c0, !ctx_r4.banner, ctx_r4.banner && !ctx_r4.description, ctx_r4.description, !ctx_r4.banner && !ctx_r4.description));
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("tdsStringTemplateOutlet", ctx_r4.message);
} }
function TDSAlertComponent_div_0_div_3_div_3_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1);
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r8 = i0.ɵɵnextContext(4);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(ctx_r8.description);
} }
const _c1 = function (a0, a1) { return { "text-neutral-1-900 dark:text-d-neutral-1-900": a0, "text-white": a1 }; };
function TDSAlertComponent_div_0_div_3_div_3_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 15);
    i0.ɵɵtemplate(1, TDSAlertComponent_div_0_div_3_div_3_ng_container_1_Template, 2, 1, "ng-container", 14);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = i0.ɵɵnextContext(3);
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction2(2, _c1, !ctx_r5.banner, ctx_r5.banner));
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("tdsStringTemplateOutlet", ctx_r5.description);
} }
function TDSAlertComponent_div_0_div_3_div_4_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1);
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r9 = i0.ɵɵnextContext(4);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(ctx_r9.footer);
} }
function TDSAlertComponent_div_0_div_3_div_4_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 16);
    i0.ɵɵtemplate(1, TDSAlertComponent_div_0_div_3_div_4_ng_container_1_Template, 2, 1, "ng-container", 14);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r6 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("tdsStringTemplateOutlet", ctx_r6.footer);
} }
const _c2 = function (a0) { return { "items-center": a0 }; };
function TDSAlertComponent_div_0_div_3_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 8)(1, "div", 9);
    i0.ɵɵtemplate(2, TDSAlertComponent_div_0_div_3_div_2_Template, 2, 7, "div", 10);
    i0.ɵɵtemplate(3, TDSAlertComponent_div_0_div_3_div_3_Template, 2, 5, "div", 11);
    i0.ɵɵtemplate(4, TDSAlertComponent_div_0_div_3_div_4_Template, 2, 1, "div", 12);
    i0.ɵɵelementEnd()();
} if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction1(4, _c2, ctx_r2.banner));
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r2.message);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r2.description);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r2.footer);
} }
const _c3 = function (a0) { return { "!text-white !dark:text-white": a0 }; };
function TDSAlertComponent_div_0_div_4_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "button", 20);
} if (rf & 2) {
    const ctx_r11 = i0.ɵɵnextContext(3);
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction1(1, _c3, ctx_r11.banner));
} }
function TDSAlertComponent_div_0_div_4_ng_container_3_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵelementStart(1, "span", 21);
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd();
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r13 = i0.ɵɵnextContext(4);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(ctx_r13.closeText);
} }
function TDSAlertComponent_div_0_div_4_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtemplate(1, TDSAlertComponent_div_0_div_4_ng_container_3_ng_container_1_Template, 3, 1, "ng-container", 14);
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r12 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("tdsStringTemplateOutlet", ctx_r12.closeText);
} }
const _c4 = function (a0) { return { "absolute  right-4": a0 }; };
function TDSAlertComponent_div_0_div_4_Template(rf, ctx) { if (rf & 1) {
    const _r15 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 17);
    i0.ɵɵlistener("click", function TDSAlertComponent_div_0_div_4_Template_div_click_0_listener() { i0.ɵɵrestoreView(_r15); const ctx_r14 = i0.ɵɵnextContext(2); return ctx_r14.closeAlert(); });
    i0.ɵɵtemplate(1, TDSAlertComponent_div_0_div_4_ng_template_1_Template, 1, 3, "ng-template", null, 18, i0.ɵɵtemplateRefExtractor);
    i0.ɵɵtemplate(3, TDSAlertComponent_div_0_div_4_ng_container_3_Template, 2, 1, "ng-container", 19);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const _r10 = i0.ɵɵreference(2);
    const ctx_r3 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction1(3, _c4, ctx_r3.banner));
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("ngIf", ctx_r3.closeText)("ngIfElse", _r10);
} }
const _c5 = function (a0) { return { "w-full": a0 }; };
function TDSAlertComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    const _r17 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 1);
    i0.ɵɵlistener("@slideAlertMotion.done", function TDSAlertComponent_div_0_Template_div_animation_slideAlertMotion_done_0_listener() { i0.ɵɵrestoreView(_r17); const ctx_r16 = i0.ɵɵnextContext(); return ctx_r16.onFadeAnimationDone(); });
    i0.ɵɵelementStart(1, "div", 2);
    i0.ɵɵtemplate(2, TDSAlertComponent_div_0_ng_container_2_Template, 3, 1, "ng-container", 3);
    i0.ɵɵtemplate(3, TDSAlertComponent_div_0_div_3_Template, 5, 6, "div", 4);
    i0.ɵɵtemplate(4, TDSAlertComponent_div_0_div_4_Template, 4, 5, "div", 5);
    i0.ɵɵelementEnd()();
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵproperty("ngClass", ctx_r0._contentClass)("@.disabled", ctx_r0.noAnimation)("@slideAlertMotion", undefined);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction1(7, _c5, !ctx_r0.banner));
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r0.showIcon);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r0.message || ctx_r0.description);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r0.closeable || ctx_r0.closeText);
} }
export class TDSAlertComponent {
    constructor(cdr, directionality) {
        this.cdr = cdr;
        this.directionality = directionality;
        this.closeText = null;
        this.message = null;
        this.description = null;
        this.footer = null;
        this.type = 'info';
        this.closeable = false;
        this.showIcon = false;
        this.banner = false;
        this.noAnimation = false;
        this.close = new EventEmitter();
        this.closed = false;
        this.iconTheme = 'fill';
        this.inferredIconType = 'tdsi-information-fill';
        this.dir = 'ltr';
        this._contentClass = {};
        this._iconClass = {};
        this.isTypeSet = false;
        this.isShowIconSet = false;
        this.destroy$ = new Subject();
    }
    ngOnInit() {
        this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction) => {
            this.dir = direction;
            this.cdr.detectChanges();
        });
        this.dir = this.directionality.value;
    }
    closeAlert() {
        this.closed = true;
        this.cdr.markForCheck();
    }
    onFadeAnimationDone() {
        if (this.closed) {
            this.close.emit(true);
        }
    }
    ngOnChanges(changes) {
        const { showIcon, description, type, banner } = changes;
        if (showIcon) {
            this.isShowIconSet = true;
        }
        if (type) {
            this.isTypeSet = true;
        }
        if (description) {
            this.iconTheme = this.description ? 'outline' : 'fill';
        }
        if (banner) {
            if (!this.isTypeSet) {
                this.type = 'warning';
            }
            if (!this.isShowIconSet) {
                this.showIcon = true;
            }
        }
        this.p_BuildClass();
    }
    ngOnDestroy() {
        this.destroy$.next();
        this.destroy$.complete();
    }
    p_BuildClass() {
        let clsBanner = '';
        let clsNotBanner = '';
        let clsTextIcon = '';
        switch (this.type) {
            case 'error':
                this.inferredIconType = 'tdsi-error-fill';
                clsBanner = "bg-error-400 dark:bg-d-error-400";
                clsNotBanner = "bg-error-100 dark:bg-d-error-100 dark:text-white";
                clsTextIcon = "text-error-400 dark:text-d-error-400";
                break;
            case 'success':
                this.inferredIconType = 'tdsi-success-fill';
                clsBanner = "bg-success-400 dark:bg-d-success-400 ";
                clsNotBanner = "bg-success-100 dark:bg-d-success-100 dark:text-white";
                clsTextIcon = "text-success-400 dark:text-d-success-400";
                break;
            case 'info':
                this.inferredIconType = 'tdsi-information-fill';
                clsBanner = "bg-info-400 dark:bg-d-info-400 ";
                clsTextIcon = "text-info-400 dark:text-d-info-400 dark:text-white";
                clsNotBanner = "bg-info-100 dark:bg-d-info-100 ";
                break;
            case 'warning':
                this.inferredIconType = 'tdsi-warning-fill';
                clsBanner = "bg-warning-400 dark:bg-d-warning-400 ";
                clsTextIcon = "text-warning-400 dark:text-d-warning-400";
                clsNotBanner = "bg-warning-100 dark:bg-d-warning-100 dark:text-white";
                break;
        }
        if (this.banner) {
            this._contentClass = {
                [clsBanner]: true,
                ['justify-center relative items-center']: true,
            };
        }
        else {
            this._contentClass = {
                [clsNotBanner]: true,
                ['rounded-lg']: true,
            };
        }
        this._iconClass = {
            [this.inferredIconType]: true,
            [`text-white`]: this.banner,
            [clsTextIcon]: !this.banner,
        };
    }
}
TDSAlertComponent.ɵfac = function TDSAlertComponent_Factory(t) { return new (t || TDSAlertComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.Directionality, 8)); };
TDSAlertComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TDSAlertComponent, selectors: [["tds-alert"]], hostAttrs: [1, "border-box"], inputs: { closeText: "closeText", message: "message", description: "description", footer: "footer", type: "type", closeable: "closeable", showIcon: "showIcon", banner: "banner", noAnimation: "noAnimation" }, outputs: { close: "close" }, exportAs: ["tdsAlert"], features: [i0.ɵɵNgOnChangesFeature], decls: 1, vars: 1, consts: [["class", "tds-alert p-4 flex ", 3, "ngClass", 4, "ngIf"], [1, "tds-alert", "p-4", "flex", 3, "ngClass"], [1, "flex", "items-center", 3, "ngClass"], [4, "ngIf"], ["class", "tds-alert-content flex-auto flex items-center", 4, "ngIf"], ["class", "tds-alert-close-icon pl-4 flex cursor-pointer break-all", "type", "button", "tabindex", "0", 3, "ngClass", "click", 4, "ngIf"], [1, "pr-4", "flex", "items-center"], [1, "text-xl", "leading-5", 3, "ngClass"], [1, "tds-alert-content", "flex-auto", "flex", "items-center"], [1, "w-full", "flex", "flex-col", 3, "ngClass"], ["class", "tds-alert-message  break-all", 3, "ngClass", 4, "ngIf"], ["class", "tds-alert-description pt-2 text-body-2 font-regular break-all", 3, "ngClass", 4, "ngIf"], ["class", "tds-alert-footer pt-4 text-body-2 font-regular text-neutral-1-900 dark:text-d-neutral-1-900 break-all", 4, "ngIf"], [1, "tds-alert-message", "break-all", 3, "ngClass"], [4, "tdsStringTemplateOutlet"], [1, "tds-alert-description", "pt-2", "text-body-2", "font-regular", "break-all", 3, "ngClass"], [1, "tds-alert-footer", "pt-4", "text-body-2", "font-regular", "text-neutral-1-900", "dark:text-d-neutral-1-900", "break-all"], ["type", "button", "tabindex", "0", 1, "tds-alert-close-icon", "pl-4", "flex", "cursor-pointer", "break-all", 3, "ngClass", "click"], ["closeDefaultTemplate", ""], [4, "ngIf", "ngIfElse"], ["tds-button-close", "", 3, "ngClass"], [1, "tds-alert-close-text"]], template: function TDSAlertComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵtemplate(0, TDSAlertComponent_div_0_Template, 5, 9, "div", 0);
    } if (rf & 2) {
        i0.ɵɵproperty("ngIf", !ctx.closed);
    } }, directives: [i2.NgIf, i2.NgClass, i3.TDSStringTemplateOutletDirective, i4.TDSButtonCloseComponent], encapsulation: 2, data: { animation: [slideAlertMotion] }, changeDetection: 0 });
__decorate([
    InputBoolean()
], TDSAlertComponent.prototype, "closeable", void 0);
__decorate([
    InputBoolean()
], TDSAlertComponent.prototype, "showIcon", void 0);
__decorate([
    InputBoolean()
], TDSAlertComponent.prototype, "banner", void 0);
__decorate([
    InputBoolean()
], TDSAlertComponent.prototype, "noAnimation", void 0);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSAlertComponent, [{
        type: Component,
        args: [{
                selector: 'tds-alert',
                exportAs: 'tdsAlert',
                animations: [slideAlertMotion],
                template: `
    <div
      *ngIf="!closed"
      class="tds-alert p-4 flex " 
      [ngClass]="_contentClass"     
      [@.disabled]="noAnimation"
      [@slideAlertMotion]
      (@slideAlertMotion.done)="onFadeAnimationDone()"
    >
      <div class="flex items-center" [ngClass]="{'w-full':!banner}">
      <ng-container *ngIf="showIcon">
       <div class="pr-4 flex items-center">
         <span class="text-xl leading-5" [ngClass]="_iconClass"></span>
       </div>       
      </ng-container>
      <div class="tds-alert-content flex-auto flex items-center" *ngIf="message || description">
        <div class="w-full flex flex-col" [ngClass]="{'items-center':banner}">
          <div class="tds-alert-message  break-all" *ngIf="message" [ngClass]="{'text-neutral-1-900 dark:text-d-neutral-1-900':!banner,'text-white text-body-2 font-regular mr-8': banner &&  !description,'text-title-1 font-semibold': description,'text-body-2 font-regular ': !banner && !description}">
            <ng-container *tdsStringTemplateOutlet="message">{{ message }}</ng-container>
          </div>
          <div class="tds-alert-description pt-2 text-body-2 font-regular break-all" [ngClass]="{'text-neutral-1-900 dark:text-d-neutral-1-900':!banner,'text-white': banner }" *ngIf="description">
             <ng-container *tdsStringTemplateOutlet="description">{{ description }}</ng-container>
          </div>
          <div class="tds-alert-footer pt-4 text-body-2 font-regular text-neutral-1-900 dark:text-d-neutral-1-900 break-all" *ngIf="footer">
          <ng-container *tdsStringTemplateOutlet="footer">{{ footer }}</ng-container>
       </div>
        </div>
      </div>
      <div [ngClass]="{'absolute  right-4':banner}" class="tds-alert-close-icon pl-4 flex cursor-pointer break-all" type="button" tabindex="0" *ngIf="closeable || closeText"  (click)="closeAlert()">
        <ng-template #closeDefaultTemplate>
                    <button tds-button-close  [ngClass]="{'!text-white !dark:text-white':banner}"></button>         
        </ng-template>
        <ng-container *ngIf="closeText; else closeDefaultTemplate">
          <ng-container *tdsStringTemplateOutlet="closeText">
            <span class="tds-alert-close-text">{{ closeText }}</span>
          </ng-container>
        </ng-container>
      </div>
      </div>

    </div>
  `,
                host: {
                    class: "border-box"
                },
                changeDetection: ChangeDetectionStrategy.OnPush,
                encapsulation: ViewEncapsulation.None,
                preserveWhitespaces: false,
            }]
    }], function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.Directionality, decorators: [{
                type: Optional
            }] }]; }, { closeText: [{
            type: Input
        }], message: [{
            type: Input
        }], description: [{
            type: Input
        }], footer: [{
            type: Input
        }], type: [{
            type: Input
        }], closeable: [{
            type: Input
        }], showIcon: [{
            type: Input
        }], banner: [{
            type: Input
        }], noAnimation: [{
            type: Input
        }], close: [{
            type: Output
        }] }); })();
//# sourceMappingURL=data:application/json;base64,