import { __decorate } from "tslib";
import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewChild, ViewEncapsulation } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { of, Subject } from 'rxjs';
import { map, takeUntil } from 'rxjs/operators';
import { reqAnimFrame } from 'tds-ui/core/animation';
import { isNotNil } from 'tds-ui/core/util';
import { InputBoolean, TDSHelperObject } from 'tds-ui/shared/utility';
import { TimeHolder } from './time-holder';
import * as i0 from "@angular/core";
import * as i1 from "tds-ui/i18n";
import * as i2 from "@angular/common";
import * as i3 from "tds-ui/button";
import * as i4 from "tds-ui/select";
import * as i5 from "@angular/forms";
const _c0 = ["hourListElement"];
const _c1 = ["minuteListElement"];
const _c2 = ["secondListElement"];
const _c3 = ["use12HoursListElement"];
const _c4 = function (a0, a1, a2) { return { "dark:text-d-primary-1 text-primary-1 tds-picker-time-panel-cell-selected font-semibold": a0, "tds-picker-time-panel-cell-disabled cursor-not-allowed": a1, "cursor-pointer hover:text-primary-1 dark:hover:text-d-primary-1": a2 }; };
function TDSTimePickerPanelComponent_ng_container_0_ul_4_ng_container_2_li_1_Template(rf, ctx) { if (rf & 1) {
    const _r14 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "li", 17);
    i0.ɵɵlistener("click", function TDSTimePickerPanelComponent_ng_container_0_ul_4_ng_container_2_li_1_Template_li_click_0_listener() { i0.ɵɵrestoreView(_r14); const hour_r10 = i0.ɵɵnextContext().$implicit; const ctx_r12 = i0.ɵɵnextContext(3); return ctx_r12.selectHour(hour_r10); });
    i0.ɵɵelementStart(1, "div", 18);
    i0.ɵɵtext(2);
    i0.ɵɵpipe(3, "number");
    i0.ɵɵelementEnd()();
} if (rf & 2) {
    const hour_r10 = i0.ɵɵnextContext().$implicit;
    const ctx_r11 = i0.ɵɵnextContext(3);
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction3(5, _c4, ctx_r11.isSelectedHour(hour_r10), hour_r10.disabled, !hour_r10.disabled));
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(3, 2, hour_r10.index, "2.0-0"));
} }
function TDSTimePickerPanelComponent_ng_container_0_ul_4_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtemplate(1, TDSTimePickerPanelComponent_ng_container_0_ul_4_ng_container_2_li_1_Template, 4, 9, "li", 16);
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const hour_r10 = ctx.$implicit;
    const ctx_r9 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", !(ctx_r9.hideDisabledOptions && hour_r10.disabled));
} }
function TDSTimePickerPanelComponent_ng_container_0_ul_4_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "ul", 13, 14);
    i0.ɵɵtemplate(2, TDSTimePickerPanelComponent_ng_container_0_ul_4_ng_container_2_Template, 2, 1, "ng-container", 15);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngForOf", ctx_r3.hourRange)("ngForTrackBy", ctx_r3.trackByFn);
} }
function TDSTimePickerPanelComponent_ng_container_0_ul_5_ng_container_2_li_1_Template(rf, ctx) { if (rf & 1) {
    const _r22 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "li", 21);
    i0.ɵɵlistener("click", function TDSTimePickerPanelComponent_ng_container_0_ul_5_ng_container_2_li_1_Template_li_click_0_listener() { i0.ɵɵrestoreView(_r22); const minute_r18 = i0.ɵɵnextContext().$implicit; const ctx_r20 = i0.ɵɵnextContext(3); return ctx_r20.selectMinute(minute_r18); });
    i0.ɵɵelementStart(1, "div", 18);
    i0.ɵɵtext(2);
    i0.ɵɵpipe(3, "number");
    i0.ɵɵelementEnd()();
} if (rf & 2) {
    const minute_r18 = i0.ɵɵnextContext().$implicit;
    const ctx_r19 = i0.ɵɵnextContext(3);
    i0.ɵɵclassProp("text-primary-1", ctx_r19.isSelectedMinute(minute_r18))("tds-picker-time-panel-cell-selected", ctx_r19.isSelectedMinute(minute_r18))("tds-picker-time-panel-cell-disabled", minute_r18.disabled);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(3, 7, minute_r18.index, "2.0-0"));
} }
function TDSTimePickerPanelComponent_ng_container_0_ul_5_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtemplate(1, TDSTimePickerPanelComponent_ng_container_0_ul_5_ng_container_2_li_1_Template, 4, 10, "li", 20);
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const minute_r18 = ctx.$implicit;
    const ctx_r17 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", !(ctx_r17.hideDisabledOptions && minute_r18.disabled));
} }
function TDSTimePickerPanelComponent_ng_container_0_ul_5_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "ul", 13, 19);
    i0.ɵɵtemplate(2, TDSTimePickerPanelComponent_ng_container_0_ul_5_ng_container_2_Template, 2, 1, "ng-container", 15);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngForOf", ctx_r4.minuteRange)("ngForTrackBy", ctx_r4.trackByFn);
} }
function TDSTimePickerPanelComponent_ng_container_0_ul_6_ng_container_2_li_1_Template(rf, ctx) { if (rf & 1) {
    const _r30 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "li", 21);
    i0.ɵɵlistener("click", function TDSTimePickerPanelComponent_ng_container_0_ul_6_ng_container_2_li_1_Template_li_click_0_listener() { i0.ɵɵrestoreView(_r30); const second_r26 = i0.ɵɵnextContext().$implicit; const ctx_r28 = i0.ɵɵnextContext(3); return ctx_r28.selectSecond(second_r26); });
    i0.ɵɵelementStart(1, "div", 18);
    i0.ɵɵtext(2);
    i0.ɵɵpipe(3, "number");
    i0.ɵɵelementEnd()();
} if (rf & 2) {
    const second_r26 = i0.ɵɵnextContext().$implicit;
    const ctx_r27 = i0.ɵɵnextContext(3);
    i0.ɵɵclassProp("text-primary-1", ctx_r27.isSelectedSecond(second_r26))("tds-picker-time-panel-cell-selected", ctx_r27.isSelectedSecond(second_r26))("tds-picker-time-panel-cell-disabled", second_r26.disabled);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(3, 7, second_r26.index, "2.0-0"));
} }
function TDSTimePickerPanelComponent_ng_container_0_ul_6_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtemplate(1, TDSTimePickerPanelComponent_ng_container_0_ul_6_ng_container_2_li_1_Template, 4, 10, "li", 20);
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const second_r26 = ctx.$implicit;
    const ctx_r25 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", !(ctx_r25.hideDisabledOptions && second_r26.disabled));
} }
function TDSTimePickerPanelComponent_ng_container_0_ul_6_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "ul", 13, 22);
    i0.ɵɵtemplate(2, TDSTimePickerPanelComponent_ng_container_0_ul_6_ng_container_2_Template, 2, 1, "ng-container", 15);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngForOf", ctx_r5.secondRange)("ngForTrackBy", ctx_r5.trackByFn);
} }
function TDSTimePickerPanelComponent_ng_container_0_ul_7_ng_container_2_li_1_button_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "button", 31);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const range_r34 = i0.ɵɵnextContext(2).$implicit;
    i0.ɵɵproperty("color", "primary");
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(range_r34.value);
} }
function TDSTimePickerPanelComponent_ng_container_0_ul_7_ng_container_2_li_1_button_3_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "button", 32);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const range_r34 = i0.ɵɵnextContext(2).$implicit;
    i0.ɵɵproperty("color", "secondary");
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(range_r34.value);
} }
function TDSTimePickerPanelComponent_ng_container_0_ul_7_ng_container_2_li_1_Template(rf, ctx) { if (rf & 1) {
    const _r42 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "li", 27);
    i0.ɵɵlistener("click", function TDSTimePickerPanelComponent_ng_container_0_ul_7_ng_container_2_li_1_Template_li_click_0_listener() { i0.ɵɵrestoreView(_r42); const range_r34 = i0.ɵɵnextContext().$implicit; const ctx_r40 = i0.ɵɵnextContext(3); return ctx_r40.select12Hours(range_r34); });
    i0.ɵɵelementStart(1, "div", 28);
    i0.ɵɵtemplate(2, TDSTimePickerPanelComponent_ng_container_0_ul_7_ng_container_2_li_1_button_2_Template, 2, 2, "button", 29);
    i0.ɵɵtemplate(3, TDSTimePickerPanelComponent_ng_container_0_ul_7_ng_container_2_li_1_button_3_Template, 2, 2, "button", 30);
    i0.ɵɵelementEnd()();
} if (rf & 2) {
    const range_r34 = i0.ɵɵnextContext().$implicit;
    const ctx_r35 = i0.ɵɵnextContext(3);
    i0.ɵɵclassProp("tds-picker-time-panel-cell-selected", ctx_r35.isSelected12Hours(range_r34));
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r35.isSelected12Hours(range_r34));
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", !ctx_r35.isSelected12Hours(range_r34));
} }
function TDSTimePickerPanelComponent_ng_container_0_ul_7_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtemplate(1, TDSTimePickerPanelComponent_ng_container_0_ul_7_ng_container_2_li_1_Template, 4, 4, "li", 26);
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r33 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", !ctx_r33.hideDisabledOptions);
} }
function TDSTimePickerPanelComponent_ng_container_0_ul_7_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "ul", 23, 24);
    i0.ɵɵtemplate(2, TDSTimePickerPanelComponent_ng_container_0_ul_7_ng_container_2_Template, 2, 1, "ng-container", 25);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r6 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngForOf", ctx_r6.use12HoursRange);
} }
function TDSTimePickerPanelComponent_ng_container_0_div_9_ng_template_1_Template(rf, ctx) { }
function TDSTimePickerPanelComponent_ng_container_0_div_9_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 33);
    i0.ɵɵtemplate(1, TDSTimePickerPanelComponent_ng_container_0_div_9_ng_template_1_Template, 0, 0, "ng-template", 34);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r7 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngTemplateOutlet", ctx_r7.addOn);
} }
function TDSTimePickerPanelComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    const _r46 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵelementStart(1, "div", 2)(2, "div", 3)(3, "div", 4);
    i0.ɵɵtemplate(4, TDSTimePickerPanelComponent_ng_container_0_ul_4_Template, 3, 2, "ul", 5);
    i0.ɵɵtemplate(5, TDSTimePickerPanelComponent_ng_container_0_ul_5_Template, 3, 2, "ul", 6);
    i0.ɵɵtemplate(6, TDSTimePickerPanelComponent_ng_container_0_ul_6_Template, 3, 2, "ul", 6);
    i0.ɵɵtemplate(7, TDSTimePickerPanelComponent_ng_container_0_ul_7_Template, 3, 1, "ul", 7);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(8, "div", 8);
    i0.ɵɵtemplate(9, TDSTimePickerPanelComponent_ng_container_0_div_9_Template, 2, 1, "div", 9);
    i0.ɵɵelementStart(10, "ul", 10)(11, "li", 11)(12, "button", 12);
    i0.ɵɵlistener("click", function TDSTimePickerPanelComponent_ng_container_0_Template_button_click_12_listener() { i0.ɵɵrestoreView(_r46); const ctx_r45 = i0.ɵɵnextContext(); return ctx_r45.onClickNow(); });
    i0.ɵɵtext(13);
    i0.ɵɵpipe(14, "tdsI18n");
    i0.ɵɵelementEnd()()()()()();
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance(4);
    i0.ɵɵproperty("ngIf", ctx_r0.hourEnabled);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r0.minuteEnabled);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r0.secondEnabled);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r0.use12Hours);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r0.addOn);
    i0.ɵɵadvance(4);
    i0.ɵɵtextInterpolate1(" ", ctx_r0.nowText || i0.ɵɵpipeBind1(14, 6, "Calendar.lang.now"), " ");
} }
function TDSTimePickerPanelComponent_ng_template_1_ng_template_6_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtext(0);
    i0.ɵɵpipe(1, "number");
} if (rf & 2) {
    const item_r52 = ctx.item;
    i0.ɵɵtextInterpolate1(" ", i0.ɵɵpipeBind2(1, 1, item_r52.data.index, "2.0-0"), " ");
} }
const _c5 = function (a0) { return { "text-primary-1 dark:text-d-primary-1": a0 }; };
function TDSTimePickerPanelComponent_ng_template_1_ng_template_7_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "span", 43);
    i0.ɵɵtext(1);
    i0.ɵɵpipe(2, "number");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r54 = ctx.item;
    const selected_r56 = ctx.selected;
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction1(5, _c5, selected_r56));
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1(" ", i0.ɵɵpipeBind2(2, 2, item_r54.index, "2.0-0"), " ");
} }
function TDSTimePickerPanelComponent_ng_template_1_ng_template_12_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtext(0);
    i0.ɵɵpipe(1, "number");
} if (rf & 2) {
    const item_r57 = ctx.item;
    i0.ɵɵtextInterpolate1(" ", i0.ɵɵpipeBind2(1, 1, item_r57.data.index, "2.0-0"), " ");
} }
function TDSTimePickerPanelComponent_ng_template_1_ng_template_13_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "span", 43);
    i0.ɵɵtext(1);
    i0.ɵɵpipe(2, "number");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r59 = ctx.item;
    const selected_r61 = ctx.selected;
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction1(5, _c5, selected_r61));
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1(" ", i0.ɵɵpipeBind2(2, 2, item_r59.index, "2.0-0"), " ");
} }
function TDSTimePickerPanelComponent_ng_template_1_ng_template_16_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "span", 43);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r63 = ctx.item;
    const ctx_r51 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction1(2, _c5, ctx_r51.time.selected12Hours == item_r63.value));
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1(" ", item_r63.value, " ");
} }
function TDSTimePickerPanelComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    const _r67 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 35)(1, "div", 36);
    i0.ɵɵtext(2);
    i0.ɵɵpipe(3, "async");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(4, "div", 37)(5, "tds-select", 38);
    i0.ɵɵlistener("selectChange", function TDSTimePickerPanelComponent_ng_template_1_Template_tds_select_selectChange_5_listener($event) { i0.ɵɵrestoreView(_r67); const ctx_r66 = i0.ɵɵnextContext(); return ctx_r66.selectHour($event); });
    i0.ɵɵtemplate(6, TDSTimePickerPanelComponent_ng_template_1_ng_template_6_Template, 2, 4, "ng-template", 39);
    i0.ɵɵtemplate(7, TDSTimePickerPanelComponent_ng_template_1_ng_template_7_Template, 3, 7, "ng-template", 40);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(8, "div");
    i0.ɵɵtext(9, " : ");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(10, "div", 37)(11, "tds-select", 38);
    i0.ɵɵlistener("selectChange", function TDSTimePickerPanelComponent_ng_template_1_Template_tds_select_selectChange_11_listener($event) { i0.ɵɵrestoreView(_r67); const ctx_r68 = i0.ɵɵnextContext(); return ctx_r68.selectMinute($event); });
    i0.ɵɵtemplate(12, TDSTimePickerPanelComponent_ng_template_1_ng_template_12_Template, 2, 4, "ng-template", 39);
    i0.ɵɵtemplate(13, TDSTimePickerPanelComponent_ng_template_1_ng_template_13_Template, 3, 7, "ng-template", 40);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(14, "div", 41)(15, "tds-select", 42);
    i0.ɵɵlistener("selectChange", function TDSTimePickerPanelComponent_ng_template_1_Template_tds_select_selectChange_15_listener($event) { i0.ɵɵrestoreView(_r67); const ctx_r69 = i0.ɵɵnextContext(); return ctx_r69.select12Hours($event); });
    i0.ɵɵtemplate(16, TDSTimePickerPanelComponent_ng_template_1_ng_template_16_Template, 2, 4, "ng-template", 40);
    i0.ɵɵelementEnd()()();
} if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1(" ", i0.ɵɵpipeBind1(3, 13, ctx_r2.i18nTime$), " ");
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("data", ctx_r2.hourRange)("ngModel", ctx_r2.time.viewHours)("valuePrimitive", false)("classIcon", null);
    i0.ɵɵadvance(6);
    i0.ɵɵproperty("data", ctx_r2.minuteRange)("ngModel", ctx_r2.time.minutes)("valuePrimitive", false)("classIcon", null);
    i0.ɵɵadvance(4);
    i0.ɵɵproperty("data", ctx_r2.use12HoursRange)("ngModel", ctx_r2.time.selected12Hours)("valuePrimitive", false)("classIcon", null);
} }
function makeRange(length, step = 1, start = 0) {
    return new Array(Math.ceil(length / step)).fill(0).map((_, i) => (i + start) * step);
}
export class TDSTimePickerPanelComponent {
    constructor(cdr, dateHelper, elementRef, i18n) {
        this.cdr = cdr;
        this.dateHelper = dateHelper;
        this.elementRef = elementRef;
        this.i18n = i18n;
        this._hourStep = 1;
        this._minuteStep = 1;
        this._secondStep = 1;
        this.unsubscribe$ = new Subject();
        this._format = 'hh:mm:ss a';
        this._disabledHours = () => [];
        this._disabledMinutes = () => [];
        this._disabledSeconds = () => [];
        this._allowEmpty = true;
        this._strAM = 'AM';
        this._strPM = 'PM';
        this.time = new TimeHolder();
        this.hourEnabled = true;
        this.minuteEnabled = true;
        this.secondEnabled = true;
        this.firstScrolled = false;
        this.enabledColumns = 3;
        this.select12HoursRange = [];
        this.select12HoursRangeDefault = [
            {
                index: 0,
                value: this._strAM
            },
            {
                index: 1,
                value: this._strPM
            }
        ];
        this.i18nTime$ = of(undefined);
        this.inDatePicker = false; // If inside a date-picker, more diff works need to be done
        this.hideDisabledOptions = false;
        this.use12Hours = true;
        this.closePanel = new EventEmitter();
        // TODO: move to host after View Engine deprecation
        this.elementRef.nativeElement.classList.add('tds-picker-time-panel');
    }
    set allowEmpty(value) {
        if (isNotNil(value)) {
            this._allowEmpty = value;
        }
    }
    get allowEmpty() {
        return this._allowEmpty;
    }
    set disabledHours(value) {
        this._disabledHours = value;
        if (!!this._disabledHours) {
            this.buildHours();
        }
    }
    get disabledHours() {
        return this._disabledHours;
    }
    set disabledMinutes(value) {
        if (isNotNil(value)) {
            this._disabledMinutes = value;
            this.buildMinutes();
        }
    }
    get disabledMinutes() {
        return this._disabledMinutes;
    }
    set disabledSeconds(value) {
        if (isNotNil(value)) {
            this._disabledSeconds = value;
            this.buildSeconds();
        }
    }
    get disabledSeconds() {
        return this._disabledSeconds;
    }
    set format(value) {
        if (isNotNil(value)) {
            this._format = value;
            this.enabledColumns = 0;
            const charSet = new Set(value);
            this.hourEnabled = charSet.has('H') || charSet.has('h');
            this.minuteEnabled = charSet.has('m');
            this.secondEnabled = charSet.has('s');
            if (this.hourEnabled) {
                this.enabledColumns++;
            }
            if (this.minuteEnabled) {
                this.enabledColumns++;
            }
            if (this.secondEnabled) {
                this.enabledColumns++;
            }
            if (this.use12Hours) {
                this.build12Hours();
            }
        }
    }
    get format() {
        return this._format;
    }
    set hourStep(value) {
        if (isNotNil(value)) {
            this._hourStep = value;
            this.buildHours();
        }
    }
    get hourStep() {
        return this._hourStep;
    }
    set minuteStep(value) {
        if (isNotNil(value)) {
            this._minuteStep = value;
            this.buildMinutes();
        }
    }
    get minuteStep() {
        return this._minuteStep;
    }
    set secondStep(value) {
        if (isNotNil(value)) {
            this._secondStep = value;
            this.buildSeconds();
        }
    }
    get secondStep() {
        return this._secondStep;
    }
    trackByFn(index) {
        return index;
    }
    buildHours() {
        let hourRanges = 24;
        let disabledHours = this.disabledHours?.();
        let startIndex = 0;
        if (this.use12Hours) {
            hourRanges = 12;
            if (disabledHours) {
                if (this.time.selected12Hours === this._strPM) {
                    /**
                     * Filter and transform hours which greater or equal to 12
                     * [0, 1, 2, ..., 12, 13, 14, 15, ..., 23] => [12, 1, 2, 3, ..., 11]
                     */
                    disabledHours = disabledHours.filter(i => i >= 12).map(i => (i > 12 ? i - 12 : i));
                }
                else {
                    /**
                     * Filter and transform hours which less than 12
                     * [0, 1, 2,..., 12, 13, 14, 15, ...23] => [12, 1, 2, 3, ..., 11]
                     */
                    disabledHours = disabledHours.filter(i => i < 12 || i === 24).map(i => (i === 24 || i === 0 ? 12 : i));
                }
            }
            startIndex = 1;
        }
        this.hourRange = makeRange(hourRanges, this.hourStep, startIndex).map(r => {
            return {
                index: r,
                disabled: !!disabledHours && disabledHours.indexOf(r) !== -1
            };
        });
        if (this.use12Hours && this.hourRange[this.hourRange.length - 1].index === 12) {
            const temp = [...this.hourRange];
            temp.unshift(temp[temp.length - 1]);
            temp.splice(temp.length - 1, 1);
            this.hourRange = temp;
        }
    }
    buildMinutes() {
        this.minuteRange = makeRange(60, this.minuteStep).map(r => {
            return {
                index: r,
                disabled: !!this.disabledMinutes && this.disabledMinutes(this.time.hours).indexOf(r) !== -1
            };
        });
    }
    buildSeconds() {
        this.secondRange = makeRange(60, this.secondStep).map(r => {
            return {
                index: r,
                disabled: !!this.disabledSeconds && this.disabledSeconds(this.time.hours, this.time.minutes).indexOf(r) !== -1
            };
        });
    }
    build12Hours() {
        const local = this.i18n.getLocale();
        const isUpperFormat = this._format.includes('A');
        if (local.locale === 'vi') {
            this._strAM = 'SA';
            this._strPM = 'CH';
            this.time.setStrAM('SA');
            this.time.setStrPM('CH');
        }
        this.use12HoursRange = [
            {
                index: 0,
                value: this._strAM
            },
            {
                index: 1,
                value: this._strPM
            }
        ];
        this.select12HoursRangeDefault = [
            {
                index: 0,
                value: this._strAM
            },
            {
                index: 1,
                value: this._strPM
            }
        ];
    }
    buildSelect12Hours() {
        this.select12HoursRange = [];
        let array = [];
        if (this.use12Hours && TDSHelperObject.hasValue(this.hourRange)) {
            this.hourRange.forEach(h => {
                array.push({
                    hour: h.index,
                    minute: 0,
                    second: 0,
                    disabled: h.disabled,
                    label: `${h.index}:00`
                });
                array.push({
                    hour: h.index,
                    minute: 30,
                    second: 0,
                    disabled: h.disabled,
                    label: `${h.index}:30`
                });
            });
            this.select12HoursRange = array.sort((a, b) => a.hour - b.hour);
        }
    }
    buildTimes() {
        this.buildHours();
        this.buildMinutes();
        this.buildSeconds();
        this.build12Hours();
        this.buildSelect12Hours();
    }
    scrollToTime(delay = 0) {
        if (this.hourEnabled && this.hourListElement) {
            this.scrollToSelected(this.hourListElement.nativeElement, this.time.viewHours, delay, 'hour');
        }
        if (this.minuteEnabled && this.minuteListElement) {
            this.scrollToSelected(this.minuteListElement.nativeElement, this.time.minutes, delay, 'minute');
        }
        if (this.secondEnabled && this.secondListElement) {
            this.scrollToSelected(this.secondListElement.nativeElement, this.time.seconds, delay, 'second');
        }
        if (this.use12Hours && this.use12HoursListElement) {
            const selectedHours = this.time.selected12Hours;
            const index = selectedHours === this._strAM ? 0 : 1;
            this.scrollToSelected(this.use12HoursListElement.nativeElement, index, delay, '12-hour');
        }
    }
    selectHour(hour) {
        this.time.setHours(hour.index, hour.disabled);
        if (!!this._disabledMinutes) {
            this.buildMinutes();
        }
        if (this._disabledSeconds || this._disabledMinutes) {
            this.buildSeconds();
        }
    }
    selectMinute(minute) {
        this.time.setMinutes(minute.index, minute.disabled);
        if (!!this._disabledSeconds) {
            this.buildSeconds();
        }
    }
    selectSecond(second) {
        this.time.setSeconds(second.index, second.disabled);
    }
    select12Hours(value) {
        const select12h = this.select12HoursRangeDefault.find(f => f.index == value.index)?.value;
        this.time.setSelected12Hours(select12h);
        if (!!this._disabledHours) {
            this.buildHours();
        }
        if (!!this._disabledMinutes) {
            this.buildMinutes();
        }
        if (!!this._disabledSeconds) {
            this.buildSeconds();
        }
    }
    selectCutom12Hours(data, str) {
        const select12h = this.select12HoursRangeDefault.find(f => f.index == str.index)?.value;
        this.time.setHours(data.hour, data.disabled);
        this.time.setMinutes(data.minute, data.disabled);
        this.time.setSeconds(data.second, data.disabled);
        this.time.setSelected12Hours(select12h);
        if (!!this._disabledHours) {
            this.buildHours();
        }
        if (!!this._disabledMinutes) {
            this.buildMinutes();
        }
        if (!!this._disabledSeconds) {
            this.buildSeconds();
        }
    }
    scrollToSelected(instance, index, duration = 0, unit) {
        if (!instance) {
            return;
        }
        const transIndex = this.translateIndex(index, unit);
        const currentOption = (instance.children[transIndex] || instance.children[0]);
        this.scrollTo(instance, currentOption.offsetTop, duration);
    }
    translateIndex(index, unit) {
        if (unit === 'hour') {
            return this.calcIndex(this.disabledHours?.(), this.hourRange.map(item => item.index).indexOf(index));
        }
        else if (unit === 'minute') {
            return this.calcIndex(this.disabledMinutes?.(this.time.hours), this.minuteRange.map(item => item.index).indexOf(index));
        }
        else if (unit === 'second') {
            // second
            return this.calcIndex(this.disabledSeconds?.(this.time.hours, this.time.minutes), this.secondRange.map(item => item.index).indexOf(index));
        }
        else {
            // 12-hour
            return this.calcIndex([], this.use12HoursRange.map(item => item.index).indexOf(index));
        }
    }
    scrollTo(element, to, duration) {
        if (duration <= 0) {
            element.scrollTop = to;
            return;
        }
        const difference = to - element.scrollTop;
        const perTick = (difference / duration) * 10;
        reqAnimFrame(() => {
            element.scrollTop = element.scrollTop + perTick;
            if (element.scrollTop === to) {
                return;
            }
            this.scrollTo(element, to, duration - 10);
        });
    }
    calcIndex(array, index) {
        if (array?.length && this.hideDisabledOptions) {
            return (index -
                array.reduce((pre, value) => {
                    return pre + (value < index ? 1 : 0);
                }, 0));
        }
        else {
            return index;
        }
    }
    changed() {
        if (this.onChange) {
            this.onChange(this.time.value);
        }
    }
    touched() {
        if (this.onTouch) {
            this.onTouch();
        }
    }
    timeDisabled(value) {
        const hour = value.getHours();
        const minute = value.getMinutes();
        const second = value.getSeconds();
        return ((this.disabledHours?.().indexOf(hour) ?? -1) > -1 ||
            (this.disabledMinutes?.(hour).indexOf(minute) ?? -1) > -1 ||
            (this.disabledSeconds?.(hour, minute).indexOf(second) ?? -1) > -1);
    }
    onClickNow() {
        const now = new Date();
        if (this.timeDisabled(now)) {
            return;
        }
        this.time.setValue(now);
        this.changed();
        this.closePanel.emit();
    }
    onClickOk() {
        this.closePanel.emit();
    }
    isSelectedHour(hour) {
        return hour.index === this.time.viewHours;
    }
    isSelectedMinute(minute) {
        return minute.index === this.time.minutes;
    }
    isSelectedSecond(second) {
        return second.index === this.time.seconds;
    }
    // isSelected12Hours(value: { hour: number; minute: number; second: number; label: string; disabled: boolean }, range: { index: number; value: string }): boolean {
    //   const select12h = this.select12HoursRangeDefault.find(f => f.index == range.index)?.value?.toUpperCase();
    //   return value.hour === this.time.viewHours
    //     && value.minute === this.time.minutes
    //     && value.second === this.time.seconds
    //     && select12h === this.time.selected12Hours?.toUpperCase();
    // }
    isSelected12Hours(value) {
        const select12h = this.select12HoursRangeDefault.find(f => f.index == value.index)?.value?.toUpperCase();
        return select12h === this.time.selected12Hours?.toUpperCase();
    }
    ngOnInit() {
        this.time.changes.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {
            this.changed();
            this.touched();
            this.scrollToTime(120);
        });
        this.buildTimes();
        setTimeout(() => {
            this.scrollToTime();
            this.firstScrolled = true;
        });
        this.i18nTime$ = this.i18n.localeChange.pipe(map((locale) => locale.TimePicker.time));
    }
    ngOnDestroy() {
        this.unsubscribe$.next();
        this.unsubscribe$.complete();
    }
    ngOnChanges(changes) {
        const { use12Hours, defaultOpenValue } = changes;
        if (!use12Hours?.previousValue && use12Hours?.currentValue) {
            this.build12Hours();
            this.enabledColumns++;
        }
        if (defaultOpenValue?.currentValue) {
            this.time.setDefaultOpenValue(this.defaultOpenValue || new Date());
        }
    }
    writeValue(value) {
        this.time.setValue(value, this.use12Hours);
        this.buildTimes();
        if (value && this.firstScrolled) {
            this.scrollToTime(120);
        }
        // Mark this component to be checked manually with internal properties changing (see: https://github.com/angular/angular/issues/10816)
        this.cdr.markForCheck();
    }
    registerOnChange(fn) {
        this.onChange = fn;
    }
    registerOnTouched(fn) {
        this.onTouch = fn;
    }
    /**
     * Prevent input losing focus when click panel
     * @param event
     */
    onMousedown(event) {
        event.preventDefault();
    }
}
TDSTimePickerPanelComponent.ɵfac = function TDSTimePickerPanelComponent_Factory(t) { return new (t || TDSTimePickerPanelComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.DateHelperService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.TDSI18nService)); };
TDSTimePickerPanelComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TDSTimePickerPanelComponent, selectors: [["tds-time-picker-panel"]], viewQuery: function TDSTimePickerPanelComponent_Query(rf, ctx) { if (rf & 1) {
        i0.ɵɵviewQuery(_c0, 5);
        i0.ɵɵviewQuery(_c1, 5);
        i0.ɵɵviewQuery(_c2, 5);
        i0.ɵɵviewQuery(_c3, 5);
    } if (rf & 2) {
        let _t;
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.hourListElement = _t.first);
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.minuteListElement = _t.first);
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.secondListElement = _t.first);
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.use12HoursListElement = _t.first);
    } }, hostAttrs: [1, "flex", "flex-col", "pr-0", "border-box"], hostVars: 12, hostBindings: function TDSTimePickerPanelComponent_HostBindings(rf, ctx) { if (rf & 1) {
        i0.ɵɵlistener("mousedown", function TDSTimePickerPanelComponent_mousedown_HostBindingHandler($event) { return ctx.onMousedown($event); });
    } if (rf & 2) {
        i0.ɵɵclassProp("tds-picker-time-panel-column-0", ctx.enabledColumns === 0 && !ctx.inDatePicker)("tds-picker-time-panel-column-1", ctx.enabledColumns === 1 && !ctx.inDatePicker)("tds-picker-time-panel-column-2", ctx.enabledColumns === 2 && !ctx.inDatePicker)("tds-picker-time-panel-column-3", ctx.enabledColumns === 3 && !ctx.inDatePicker)("tds-picker-time-panel-narrow", ctx.enabledColumns < 3)("tds-picker-time-panel-placement-bottomLeft", !ctx.inDatePicker);
    } }, inputs: { inDatePicker: "inDatePicker", addOn: "addOn", hideDisabledOptions: "hideDisabledOptions", clearText: "clearText", nowText: "nowText", okText: "okText", placeHolder: "placeHolder", use12Hours: "use12Hours", defaultOpenValue: "defaultOpenValue", allowEmpty: "allowEmpty", disabledHours: "disabledHours", disabledMinutes: "disabledMinutes", disabledSeconds: "disabledSeconds", format: "format", hourStep: "hourStep", minuteStep: "minuteStep", secondStep: "secondStep" }, outputs: { closePanel: "closePanel" }, exportAs: ["tdsTimePickerPanel"], features: [i0.ɵɵProvidersFeature([{ provide: NG_VALUE_ACCESSOR, useExisting: TDSTimePickerPanelComponent, multi: true }]), i0.ɵɵNgOnChangesFeature], decls: 3, vars: 2, consts: [[4, "ngIf", "ngIfElse"], ["datePickerTpl", ""], [1, "w-full", "py-1"], [1, "text-body-2", "bg-white", "dark:bg-d-neutral-3-200", "shadow-1-xl", "text-neutral-1-900", "dark:text-d-neutral-1-900", "rounded"], [1, "tds-picker-content", "flex", "justify-between", "h-56", "overflow-y-hidde"], ["class", "tds-picker-time-panel-column h-full relative overflow-y-hidden hover:overflow-y-auto tds-panel-scroll border-r border-neutral-2-100 dark:border-d-neutral-2-100 flex flex-col w-14 py-2.5", 4, "ngIf"], ["class", "tds-picker-time-panel-column  h-full relative overflow-y-hidden hover:overflow-y-auto tds-panel-scroll border-r border-neutral-2-100 dark:border-d-neutral-2-100 flex flex-col w-14 py-2.5", 4, "ngIf"], ["class", "tds-picker-time-panel-column h-full relative overflow-y-hidden flex flex-col px-3 py-2.5 min-w-[70px] ", 4, "ngIf"], [1, "tds-picker-footer", "p-2", "border-t", "border-neutral-2-100", "dark:border-d-neutral-2-100"], ["class", "tds-picker-footer-extra", 4, "ngIf"], [1, "tds-picker-ranges", "flex", "justify-center", "items-center"], [1, "tds-picker-now"], ["tds-button-flat", "", "type", "button", "color", "primary", 1, "uppercase", 2, "min-width", "0", 3, "click"], [1, "tds-picker-time-panel-column", "h-full", "relative", "overflow-y-hidden", "hover:overflow-y-auto", "tds-panel-scroll", "border-r", "border-neutral-2-100", "dark:border-d-neutral-2-100", "flex", "flex-col", "w-14", "py-2.5"], ["hourListElement", ""], [4, "ngFor", "ngForOf", "ngForTrackBy"], ["class", "tds-picker-time-panel-cell  flex-auto  px-3 py-2 items-center justify-center", 3, "ngClass", "click", 4, "ngIf"], [1, "tds-picker-time-panel-cell", "flex-auto", "px-3", "py-2", "items-center", "justify-center", 3, "ngClass", "click"], [1, "tds-picker-time-panel-cell-inner"], ["minuteListElement", ""], ["class", "tds-picker-time-panel-cell cursor-pointer hover:text-primary-1 px-3 py-2 items-center justify-center", 3, "text-primary-1", "tds-picker-time-panel-cell-selected", "tds-picker-time-panel-cell-disabled", "click", 4, "ngIf"], [1, "tds-picker-time-panel-cell", "cursor-pointer", "hover:text-primary-1", "px-3", "py-2", "items-center", "justify-center", 3, "click"], ["secondListElement", ""], [1, "tds-picker-time-panel-column", "h-full", "relative", "overflow-y-hidden", "flex", "flex-col", "px-3", "py-2.5", "min-w-[70px]"], ["use12HoursListElement", ""], [4, "ngFor", "ngForOf"], ["class", "tds-picker-time-panel-cell flex pb-2", 3, "tds-picker-time-panel-cell-selected", "click", 4, "ngIf"], [1, "tds-picker-time-panel-cell", "flex", "pb-2", 3, "click"], [1, "tds-picker-time-panel-cell-inner", "flex", "items-center", "justify-center"], ["tds-button", "", "type", "button", "size", "sm", 3, "color", 4, "ngIf"], ["tds-button-flat", "", "type", "button", "size", "sm", 3, "color", 4, "ngIf"], ["tds-button", "", "type", "button", "size", "sm", 3, "color"], ["tds-button-flat", "", "type", "button", "size", "sm", 3, "color"], [1, "tds-picker-footer-extra"], [3, "ngTemplateOutlet"], [1, "w-full", "flex", "items-center", "text-neutral-1-900", "dark:text-d-neutral-1-900"], [1, "text-body-2", "font-semibold"], [1, "w-14", "mx-2"], ["valueField", "index", "textField", "index", 3, "data", "ngModel", "valuePrimitive", "classIcon", "selectChange"], ["tds-label-tmp", ""], ["tds-option-tmp", ""], [1, "w-14"], ["valueField", "index", "textField", "value", 3, "data", "ngModel", "valuePrimitive", "classIcon", "selectChange"], [3, "ngClass"]], template: function TDSTimePickerPanelComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵtemplate(0, TDSTimePickerPanelComponent_ng_container_0_Template, 15, 8, "ng-container", 0);
        i0.ɵɵtemplate(1, TDSTimePickerPanelComponent_ng_template_1_Template, 17, 15, "ng-template", null, 1, i0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        const _r1 = i0.ɵɵreference(2);
        i0.ɵɵproperty("ngIf", !ctx.inDatePicker)("ngIfElse", _r1);
    } }, directives: [i2.NgIf, i2.NgForOf, i2.NgClass, i3.TDSButtonComponent, i3.TDSButtonFlatComponent, i2.NgTemplateOutlet, i4.TDSSelect, i5.NgControlStatus, i5.NgModel, i4.TDSLabelTemplateDirective, i4.TDSOptionTemplateDirective], pipes: [i2.DecimalPipe, i1.TDSI18nPipe, i2.AsyncPipe], encapsulation: 2, changeDetection: 0 });
__decorate([
    InputBoolean()
], TDSTimePickerPanelComponent.prototype, "use12Hours", void 0);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSTimePickerPanelComponent, [{
        type: Component,
        args: [{ encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, selector: 'tds-time-picker-panel', exportAs: 'tdsTimePickerPanel', host: {
                    class: "flex flex-col pr-0 border-box ",
                    '[class.tds-picker-time-panel-column-0]': `enabledColumns === 0 && !inDatePicker`,
                    '[class.tds-picker-time-panel-column-1]': `enabledColumns === 1 && !inDatePicker`,
                    '[class.tds-picker-time-panel-column-2]': `enabledColumns === 2 && !inDatePicker`,
                    '[class.tds-picker-time-panel-column-3]': `enabledColumns === 3 && !inDatePicker`,
                    '[class.tds-picker-time-panel-narrow]': `enabledColumns < 3`,
                    '[class.tds-picker-time-panel-placement-bottomLeft]': `!inDatePicker`,
                    '(mousedown)': 'onMousedown($event)'
                }, providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: TDSTimePickerPanelComponent, multi: true }], template: "<ng-container *ngIf=\"!inDatePicker;else datePickerTpl\">\r\n    <div class=\"w-full py-1\">\r\n        <div\r\n            class=\"text-body-2 bg-white dark:bg-d-neutral-3-200 shadow-1-xl text-neutral-1-900 dark:text-d-neutral-1-900 rounded\">\r\n            <!-- <div *ngIf=\"inDatePicker\" class=\"tds-picker-header\">\r\n             <div class=\"tds-picker-header-view\">{{ dateHelper.format($any(time?.value), format) || '&nbsp;' }}</div>\r\n         </div> -->\r\n            <div class=\"tds-picker-content flex justify-between  h-56 overflow-y-hidde \">\r\n                <ul *ngIf=\"hourEnabled\" #hourListElement\r\n                    class=\"tds-picker-time-panel-column h-full relative overflow-y-hidden hover:overflow-y-auto tds-panel-scroll border-r border-neutral-2-100 dark:border-d-neutral-2-100 flex flex-col w-14 py-2.5\">\r\n                    <ng-container *ngFor=\"let hour of hourRange; trackBy: trackByFn\">\r\n                        <li *ngIf=\"!(hideDisabledOptions && hour.disabled)\"\r\n                            class=\"tds-picker-time-panel-cell  flex-auto  px-3 py-2 items-center justify-center\"\r\n                            (click)=\"selectHour(hour)\" [ngClass]=\"{'dark:text-d-primary-1 text-primary-1 tds-picker-time-panel-cell-selected font-semibold':isSelectedHour(hour),\r\n                         'tds-picker-time-panel-cell-disabled cursor-not-allowed':hour.disabled,\r\n                         'cursor-pointer hover:text-primary-1 dark:hover:text-d-primary-1':!hour.disabled\r\n                     }\">\r\n                            <div class=\"tds-picker-time-panel-cell-inner\">{{ hour.index | number: '2.0-0' }}</div>\r\n                        </li>\r\n                    </ng-container>\r\n                </ul>\r\n                <ul *ngIf=\"minuteEnabled\" #minuteListElement\r\n                    class=\"tds-picker-time-panel-column  h-full relative overflow-y-hidden hover:overflow-y-auto tds-panel-scroll border-r border-neutral-2-100 dark:border-d-neutral-2-100 flex flex-col w-14 py-2.5\">\r\n                    <ng-container *ngFor=\"let minute of minuteRange; trackBy: trackByFn\">\r\n                        <li *ngIf=\"!(hideDisabledOptions && minute.disabled)\"\r\n                            class=\"tds-picker-time-panel-cell cursor-pointer hover:text-primary-1 px-3 py-2 items-center justify-center\"\r\n                            (click)=\"selectMinute(minute)\" [class.text-primary-1]=\"isSelectedMinute(minute)\"\r\n                            [class.tds-picker-time-panel-cell-selected]=\"isSelectedMinute(minute)\"\r\n                            [class.tds-picker-time-panel-cell-disabled]=\"minute.disabled\">\r\n                            <div class=\"tds-picker-time-panel-cell-inner\">{{ minute.index | number: '2.0-0' }}</div>\r\n                        </li>\r\n                    </ng-container>\r\n                </ul>\r\n                <ul *ngIf=\"secondEnabled\" #secondListElement\r\n                    class=\"tds-picker-time-panel-column  h-full relative overflow-y-hidden hover:overflow-y-auto tds-panel-scroll border-r border-neutral-2-100 dark:border-d-neutral-2-100 flex flex-col w-14 py-2.5\">\r\n                    <ng-container *ngFor=\"let second of secondRange; trackBy: trackByFn\">\r\n                        <li *ngIf=\"!(hideDisabledOptions && second.disabled)\"\r\n                            class=\"tds-picker-time-panel-cell cursor-pointer hover:text-primary-1 px-3 py-2 items-center justify-center\"\r\n                            (click)=\"selectSecond(second)\" [class.text-primary-1]=\"isSelectedSecond(second)\"\r\n                            [class.tds-picker-time-panel-cell-selected]=\"isSelectedSecond(second)\"\r\n                            [class.tds-picker-time-panel-cell-disabled]=\"second.disabled\">\r\n                            <div class=\"tds-picker-time-panel-cell-inner\">{{ second.index | number: '2.0-0' }}</div>\r\n                        </li>\r\n                    </ng-container>\r\n                </ul>\r\n                <ul *ngIf=\"use12Hours\" #use12HoursListElement\r\n                    class=\"tds-picker-time-panel-column h-full relative overflow-y-hidden flex flex-col px-3 py-2.5 min-w-[70px] \">\r\n                    <ng-container *ngFor=\"let range of use12HoursRange\">\r\n                        <li *ngIf=\"!hideDisabledOptions\" (click)=\"select12Hours(range)\"\r\n                            class=\"tds-picker-time-panel-cell flex pb-2\"\r\n                            [class.tds-picker-time-panel-cell-selected]=\"isSelected12Hours(range)\">\r\n                            <div class=\"tds-picker-time-panel-cell-inner flex items-center justify-center \">\r\n                                <button tds-button type=\"button\" size=\"sm\" *ngIf=\"isSelected12Hours(range)\"\r\n                                    [color]=\"'primary'\">{{ range.value }}</button>\r\n                                <button tds-button-flat type=\"button\" size=\"sm\" *ngIf=\"!isSelected12Hours(range)\"\r\n                                    [color]=\"'secondary'\">{{ range.value }}</button>\r\n                            </div>\r\n                        </li>\r\n                    </ng-container>\r\n                </ul>\r\n            </div>\r\n            <div class=\"tds-picker-footer p-2 border-t  border-neutral-2-100 dark:border-d-neutral-2-100\">\r\n                <div *ngIf=\"addOn\" class=\"tds-picker-footer-extra\">\r\n                    <ng-template [ngTemplateOutlet]=\"addOn\"></ng-template>\r\n                </div>\r\n                <ul class=\"tds-picker-ranges flex justify-center items-center\">\r\n                    <li class=\"tds-picker-now\">\r\n                        <button tds-button-flat type=\"button\" class=\"uppercase\" color=\"primary\" (click)=\"onClickNow()\"\r\n                            style=\"min-width:0\">\r\n                            {{ nowText || ('Calendar.lang.now' | tdsI18n) }}\r\n                        </button>\r\n\r\n                    </li>\r\n                    <!-- <li class=\"tds-picker-ok\">\r\n                     <button tds-button type=\"button\" size=\"sm\" color=\"primary\"  (click)=\"onClickOk()\" style=\"min-width:0\">\r\n                         {{ okText || ('Calendar.lang.ok' | tdsI18n) }}\r\n                     </button>\r\n                 </li> -->\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-container>\r\n\r\n<ng-template #datePickerTpl>\r\n    <div class=\"w-full flex items-center text-neutral-1-900 dark:text-d-neutral-1-900\">\r\n        <div class=\"text-body-2 font-semibold \">\r\n            {{(i18nTime$ | async)}}\r\n        </div>\r\n        <div class=\"w-14 mx-2\">\r\n            <tds-select [data]=\"hourRange\" [ngModel]=\"time.viewHours\" (selectChange)=\"selectHour($event)\"\r\n                [valuePrimitive]=\"false\" valueField=\"index\" textField=\"index\" [classIcon]=\"null\">\r\n                <ng-template tds-label-tmp let-item=\"item\">\r\n                    {{item.data.index | number: '2.0-0'}}\r\n                </ng-template>\r\n                <ng-template tds-option-tmp let-label='label' let-item=\"item\" let-value='value' let-selected=\"selected\">\r\n                    <span [ngClass]=\"{'text-primary-1 dark:text-d-primary-1':selected}\">\r\n                        {{ item.index | number: '2.0-0' }}\r\n                    </span>\r\n                </ng-template>\r\n            </tds-select>\r\n        </div>\r\n        <div>\r\n            :\r\n        </div>\r\n        <div class=\"w-14 mx-2\">\r\n            <tds-select [data]=\"minuteRange\" [ngModel]=\"time.minutes\" (selectChange)=\"selectMinute($event)\"\r\n                [valuePrimitive]=\"false\" valueField=\"index\" textField=\"index\" [classIcon]=\"null\">\r\n                <ng-template tds-label-tmp let-item=\"item\">\r\n                    {{item.data.index | number: '2.0-0'}}\r\n                </ng-template>\r\n                <ng-template tds-option-tmp let-label='label' let-item=\"item\" let-value='value' let-selected=\"selected\">\r\n                    <span [ngClass]=\"{'text-primary-1 dark:text-d-primary-1':selected}\">\r\n                        {{ item.index | number: '2.0-0' }}\r\n                    </span>\r\n                </ng-template>\r\n            </tds-select>\r\n        </div>\r\n        <div class=\"w-14\">\r\n            <tds-select [data]=\"use12HoursRange\" [ngModel]=\"time.selected12Hours\" (selectChange)=\"select12Hours($event)\"\r\n                [valuePrimitive]=\"false\" valueField=\"index\" textField=\"value\" [classIcon]=\"null\">\r\n                <ng-template tds-option-tmp let-label='label' let-item=\"item\" let-value='value' let-selected=\"selected\">\r\n                    <span [ngClass]=\"{'text-primary-1 dark:text-d-primary-1':time.selected12Hours == item.value}\">\r\n                        {{ item.value }}\r\n                    </span>\r\n                </ng-template>\r\n            </tds-select>\r\n        </div>\r\n\r\n    </div>\r\n</ng-template>" }]
    }], function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.DateHelperService }, { type: i0.ElementRef }, { type: i1.TDSI18nService }]; }, { hourListElement: [{
            type: ViewChild,
            args: ['hourListElement', { static: false }]
        }], minuteListElement: [{
            type: ViewChild,
            args: ['minuteListElement', { static: false }]
        }], secondListElement: [{
            type: ViewChild,
            args: ['secondListElement', { static: false }]
        }], use12HoursListElement: [{
            type: ViewChild,
            args: ['use12HoursListElement', { static: false }]
        }], inDatePicker: [{
            type: Input
        }], addOn: [{
            type: Input
        }], hideDisabledOptions: [{
            type: Input
        }], clearText: [{
            type: Input
        }], nowText: [{
            type: Input
        }], okText: [{
            type: Input
        }], placeHolder: [{
            type: Input
        }], use12Hours: [{
            type: Input
        }], defaultOpenValue: [{
            type: Input
        }], closePanel: [{
            type: Output
        }], allowEmpty: [{
            type: Input
        }], disabledHours: [{
            type: Input
        }], disabledMinutes: [{
            type: Input
        }], disabledSeconds: [{
            type: Input
        }], format: [{
            type: Input
        }], hourStep: [{
            type: Input
        }], minuteStep: [{
            type: Input
        }], secondStep: [{
            type: Input
        }] }); })();
//# sourceMappingURL=data:application/json;base64,