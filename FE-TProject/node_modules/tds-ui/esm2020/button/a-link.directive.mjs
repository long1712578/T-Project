import { __decorate } from "tslib";
import { Directive, Input } from '@angular/core';
import { InputBoolean } from 'tds-ui/shared/utility';
import * as i0 from "@angular/core";
export class TDSLinkDirective {
    constructor() {
        this.disabled = false;
        this.danger = false;
    }
    _haltDisabledEvents(event) {
        // A disabled button shouldn't apply any actions
        if (this.disabled) {
            event.preventDefault();
            event.stopImmediatePropagation();
        }
    }
}
TDSLinkDirective.ɵfac = function TDSLinkDirective_Factory(t) { return new (t || TDSLinkDirective)(); };
TDSLinkDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: TDSLinkDirective, selectors: [["a", "tds-link", ""]], hostAttrs: [1, "text-body-2", "font-semibold"], hostVars: 28, hostBindings: function TDSLinkDirective_HostBindings(rf, ctx) { if (rf & 1) {
        i0.ɵɵlistener("click", function TDSLinkDirective_click_HostBindingHandler($event) { return ctx._haltDisabledEvents($event); });
    } if (rf & 2) {
        i0.ɵɵclassProp("cursor-pointer", !ctx.disabled)("hover:underline", !ctx.disabled)("active:pointer-events-none", ctx.disabled)("cursor-not-allowed", ctx.disabled)("text-neutral-1-300", ctx.disabled)("dark:text-d-neutral-1-300", ctx.disabled)("text-info-400", !ctx.danger && !ctx.disabled)("dark:text-d-info-400", !ctx.danger && !ctx.disabled)("hover:text-info-500", !ctx.danger && !ctx.disabled)("dark:hover:text-d-info-500", !ctx.danger && !ctx.disabled)("text-error-400", ctx.danger && !ctx.disabled)("dark:text-d-error-400", ctx.danger && !ctx.disabled)("hover:text-error-500", ctx.danger && !ctx.disabled)("dark:hover:text-d-error-500", ctx.danger && !ctx.disabled);
    } }, inputs: { disabled: "disabled", danger: "danger" } });
__decorate([
    InputBoolean()
], TDSLinkDirective.prototype, "disabled", void 0);
__decorate([
    InputBoolean()
], TDSLinkDirective.prototype, "danger", void 0);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSLinkDirective, [{
        type: Directive,
        args: [{
                selector: 'a[tds-link]',
                host: {
                    'class': 'text-body-2 font-semibold ',
                    '[class.cursor-pointer]': '!disabled',
                    '[class.hover:underline]': '!disabled',
                    '[class.active:pointer-events-none]': 'disabled',
                    '[class.cursor-not-allowed]': 'disabled',
                    '[class.text-neutral-1-300]': 'disabled',
                    '[class.dark:text-d-neutral-1-300]': 'disabled',
                    '[class.text-info-400]': '!danger && !disabled',
                    '[class.dark:text-d-info-400]': '!danger && !disabled',
                    '[class.hover:text-info-500]': '!danger && !disabled',
                    '[class.dark:hover:text-d-info-500]': '!danger && !disabled',
                    '[class.text-error-400]': 'danger && !disabled',
                    '[class.dark:text-d-error-400]': 'danger && !disabled',
                    '[class.hover:text-error-500]': 'danger && !disabled',
                    '[class.dark:hover:text-d-error-500]': 'danger && !disabled',
                    '(click)': '_haltDisabledEvents($event)',
                }
            }]
    }], function () { return []; }, { disabled: [{
            type: Input
        }], danger: [{
            type: Input
        }] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYS1saW5rLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL3Rkcy11aS9idXR0b24vYS1saW5rLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHVCQUF1QixDQUFDOztBQXVCckQsTUFBTSxPQUFPLGdCQUFnQjtJQUkzQjtRQUh5QixhQUFRLEdBQVksS0FBSyxDQUFDO1FBQzFCLFdBQU0sR0FBWSxLQUFLLENBQUM7SUFLakQsQ0FBQztJQUNELG1CQUFtQixDQUFDLEtBQVk7UUFDOUIsZ0RBQWdEO1FBQ2hELElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUNqQixLQUFLLENBQUMsY0FBYyxFQUFFLENBQUM7WUFDdkIsS0FBSyxDQUFDLHdCQUF3QixFQUFFLENBQUM7U0FDbEM7SUFDSCxDQUFDOztnRkFkVSxnQkFBZ0I7bUVBQWhCLGdCQUFnQjttR0FBaEIsK0JBQ047Ozs7QUFBb0I7SUFBZixZQUFZLEVBQUU7a0RBQTJCO0FBQzFCO0lBQWYsWUFBWSxFQUFFO2dEQUF5Qjt1RkFGdEMsZ0JBQWdCO2NBckI1QixTQUFTO2VBQUM7Z0JBQ1QsUUFBUSxFQUFFLGFBQWE7Z0JBQ3ZCLElBQUksRUFBRTtvQkFDSixPQUFPLEVBQUUsNEJBQTRCO29CQUNyQyx3QkFBd0IsRUFBRSxXQUFXO29CQUNyQyx5QkFBeUIsRUFBRSxXQUFXO29CQUN0QyxvQ0FBb0MsRUFBQyxVQUFVO29CQUMvQyw0QkFBNEIsRUFBRSxVQUFVO29CQUN4Qyw0QkFBNEIsRUFBRSxVQUFVO29CQUN4QyxtQ0FBbUMsRUFBRSxVQUFVO29CQUMvQyx1QkFBdUIsRUFBRSxzQkFBc0I7b0JBQy9DLDhCQUE4QixFQUFFLHNCQUFzQjtvQkFDdEQsNkJBQTZCLEVBQUUsc0JBQXNCO29CQUNyRCxvQ0FBb0MsRUFBRSxzQkFBc0I7b0JBQzVELHdCQUF3QixFQUFFLHFCQUFxQjtvQkFDL0MsK0JBQStCLEVBQUUscUJBQXFCO29CQUN0RCw4QkFBOEIsRUFBRSxxQkFBcUI7b0JBQ3JELHFDQUFxQyxFQUFFLHFCQUFxQjtvQkFDNUQsU0FBUyxFQUFFLDZCQUE2QjtpQkFDekM7YUFDRjtzQ0FFMEIsUUFBUTtrQkFBaEMsS0FBSztZQUNtQixNQUFNO2tCQUE5QixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBJbnB1dEJvb2xlYW4gfSBmcm9tICd0ZHMtdWkvc2hhcmVkL3V0aWxpdHknO1xyXG5cclxuQERpcmVjdGl2ZSh7XHJcbiAgc2VsZWN0b3I6ICdhW3Rkcy1saW5rXScsXHJcbiAgaG9zdDoge1xyXG4gICAgJ2NsYXNzJzogJ3RleHQtYm9keS0yIGZvbnQtc2VtaWJvbGQgJyxcclxuICAgICdbY2xhc3MuY3Vyc29yLXBvaW50ZXJdJzogJyFkaXNhYmxlZCcsXHJcbiAgICAnW2NsYXNzLmhvdmVyOnVuZGVybGluZV0nOiAnIWRpc2FibGVkJyxcclxuICAgICdbY2xhc3MuYWN0aXZlOnBvaW50ZXItZXZlbnRzLW5vbmVdJzonZGlzYWJsZWQnLFxyXG4gICAgJ1tjbGFzcy5jdXJzb3Itbm90LWFsbG93ZWRdJzogJ2Rpc2FibGVkJyxcclxuICAgICdbY2xhc3MudGV4dC1uZXV0cmFsLTEtMzAwXSc6ICdkaXNhYmxlZCcsICAgIFxyXG4gICAgJ1tjbGFzcy5kYXJrOnRleHQtZC1uZXV0cmFsLTEtMzAwXSc6ICdkaXNhYmxlZCcsXHJcbiAgICAnW2NsYXNzLnRleHQtaW5mby00MDBdJzogJyFkYW5nZXIgJiYgIWRpc2FibGVkJyxcclxuICAgICdbY2xhc3MuZGFyazp0ZXh0LWQtaW5mby00MDBdJzogJyFkYW5nZXIgJiYgIWRpc2FibGVkJyxcclxuICAgICdbY2xhc3MuaG92ZXI6dGV4dC1pbmZvLTUwMF0nOiAnIWRhbmdlciAmJiAhZGlzYWJsZWQnLFxyXG4gICAgJ1tjbGFzcy5kYXJrOmhvdmVyOnRleHQtZC1pbmZvLTUwMF0nOiAnIWRhbmdlciAmJiAhZGlzYWJsZWQnLFxyXG4gICAgJ1tjbGFzcy50ZXh0LWVycm9yLTQwMF0nOiAnZGFuZ2VyICYmICFkaXNhYmxlZCcsXHJcbiAgICAnW2NsYXNzLmRhcms6dGV4dC1kLWVycm9yLTQwMF0nOiAnZGFuZ2VyICYmICFkaXNhYmxlZCcsXHJcbiAgICAnW2NsYXNzLmhvdmVyOnRleHQtZXJyb3ItNTAwXSc6ICdkYW5nZXIgJiYgIWRpc2FibGVkJyxcclxuICAgICdbY2xhc3MuZGFyazpob3Zlcjp0ZXh0LWQtZXJyb3ItNTAwXSc6ICdkYW5nZXIgJiYgIWRpc2FibGVkJywgICAgXHJcbiAgICAnKGNsaWNrKSc6ICdfaGFsdERpc2FibGVkRXZlbnRzKCRldmVudCknLFxyXG4gIH1cclxufSlcclxuZXhwb3J0IGNsYXNzIFREU0xpbmtEaXJlY3RpdmUge1xyXG4gIEBJbnB1dCgpIEBJbnB1dEJvb2xlYW4oKSBkaXNhYmxlZDogYm9vbGVhbiA9IGZhbHNlO1xyXG4gIEBJbnB1dCgpIEBJbnB1dEJvb2xlYW4oKSBkYW5nZXI6IGJvb2xlYW4gPSBmYWxzZTtcclxuICBcclxuICBjb25zdHJ1Y3RvcihcclxuICAgIFxyXG4gICkge1xyXG4gIH1cclxuICBfaGFsdERpc2FibGVkRXZlbnRzKGV2ZW50OiBFdmVudCkge1xyXG4gICAgLy8gQSBkaXNhYmxlZCBidXR0b24gc2hvdWxkbid0IGFwcGx5IGFueSBhY3Rpb25zXHJcbiAgICBpZiAodGhpcy5kaXNhYmxlZCkge1xyXG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICBldmVudC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIl19