import { ChangeDetectionStrategy, Component, Optional, ViewEncapsulation } from "@angular/core";
import { TDSButtonBase } from "./button.base";
import * as i0 from "@angular/core";
import * as i1 from "./button-group.component";
import * as i2 from "@angular/common";
import * as i3 from "tds-ui/progress-spinner";
import * as i4 from "tds-ui/core/outlet";
const _c0 = ["tds-button-outline", ""];
function TDSButtonOutlineComponent_div_0_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainer(0);
} }
function TDSButtonOutlineComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 5);
    i0.ɵɵtemplate(1, TDSButtonOutlineComponent_div_0_ng_container_1_Template, 1, 0, "ng-container", 6);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    i0.ɵɵnextContext();
    const _r4 = i0.ɵɵreference(5);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngTemplateOutlet", _r4);
} }
function TDSButtonOutlineComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "div");
} if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵclassMap(ctx_r1.loadingCss);
} }
function TDSButtonOutlineComponent_ng_template_2_div_0_tds_spinner_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "tds-spinner", 11);
} if (rf & 2) {
    const ctx_r10 = i0.ɵɵnextContext(3);
    i0.ɵɵproperty("color", ctx_r10.spinerColor);
} }
function TDSButtonOutlineComponent_ng_template_2_div_0_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 8);
    i0.ɵɵtemplate(1, TDSButtonOutlineComponent_ng_template_2_div_0_tds_spinner_1_Template, 1, 1, "tds-spinner", 9);
    i0.ɵɵelementStart(2, "div", 10);
    i0.ɵɵtext(3, " Loading... ");
    i0.ɵɵelementEnd()();
} if (rf & 2) {
    const ctx_r9 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r9.loading);
} }
function TDSButtonOutlineComponent_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtemplate(0, TDSButtonOutlineComponent_ng_template_2_div_0_Template, 4, 1, "div", 7);
} if (rf & 2) {
    const ctx_r3 = i0.ɵɵnextContext();
    const _r6 = i0.ɵɵreference(7);
    i0.ɵɵproperty("ngIf", !ctx_r3.loadingTemplate)("ngIfElse", _r6);
} }
function TDSButtonOutlineComponent_ng_template_4_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵprojection(0);
} }
function TDSButtonOutlineComponent_ng_template_6_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1);
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r11 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1(" ", ctx_r11.loadingTemplate, " ");
} }
function TDSButtonOutlineComponent_ng_template_6_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtemplate(0, TDSButtonOutlineComponent_ng_template_6_ng_container_0_Template, 2, 1, "ng-container", 12);
} if (rf & 2) {
    const ctx_r7 = i0.ɵɵnextContext();
    i0.ɵɵproperty("tdsStringTemplateOutlet", ctx_r7.loadingTemplate);
} }
const _c1 = ["*"];
export class TDSButtonOutlineComponent extends TDSButtonBase {
    constructor(ngZone, elementRef, cdr, _buttonGroup) {
        super(ngZone, elementRef, cdr, _buttonGroup);
        this.ngZone = ngZone;
        this.elementRef = elementRef;
        this.cdr = cdr;
        this._buttonGroup = _buttonGroup;
    }
    getClassCssActive() {
        let result = '';
        switch (this.color) {
            case "primary":
                result += ` text-primary-1 dark:text-d-primary-1  ring-primary-1 dark:ring-d-primary-1 border-primary-1 dark:border-d-primary-1 `;
                break;
            case "secondary":
                result += ` text-neutral-1-500 dark:text-d-neutral-1-500  ring-primary-1 dark:ring-d-primary-1  border-neutral-2-200 dark:border-d-neutral-2-200 focus:border-primary-1 dark:focus:border-d-primary-1 `;
                break;
            case 'info':
                result += ` text-info-400 dark:text-d-info-400 ring-info-400 dark:ring-d-info-400 border-info-400 dark:border-d-info-400 `;
                break;
            case 'success':
                result += ` text-success-400 dark:text-d-success-400 ring-success-400 dark:ring-d-success-400 border-success-400 dark:border-d-success-400 `;
                break;
            case 'warning':
                result += ` text-warning-400 dark:text-d-warning-400 ring-warning-400 dark:ring-d-warning-400 border-warning-400 dark:border-d-warning-400 `;
                break;
            case 'error':
                result += ` text-error-400 dark:text-d-error-400 ring-error-400 dark:ring-d-error-400 border-error-400 dark:border-d-error-400 `;
                break;
            case 'red':
                result += ' text-base-red-500 dark:text-d-base-red-500 ring-base-red-500 dark:ring-d-base-red-500 border-base-red-500 dark:border-d-base-red-500';
                break;
            case 'yellow':
                result += ' text-base-yellow-500 dark:text-d-base-yellow-500 ring-base-yellow-500 dark:ring-d-base-yellow-500 border-base-yellow-500 dark:border-d-base-yellow-500';
                break;
            case 'green':
                result += ' text-base-green-500 dark:text-d-base-green-500 ring-base-green-500 dark:ring-d-base-green-500 border-base-green-500 dark:border-d-base-green-500';
                break;
            case 'blue':
                result += ' text-base-blue-500 dark:text-d-base-blue-500 ring-base-blue-500 dark:ring-d-base-blue-500 border-base-blue-500 dark:border-d-base-blue-500';
                break;
            case 'indigo':
                result += ' text-base-indigo-500 dark:text-d-base-indigo-500 ring-base-indigo-500 dark:ring-d-base-indigo-500 border-base-indigo-500 dark:border-d-base-indigo-500';
                break;
            case 'purple':
                result += ' text-base-purple-500 dark:text-d-base-purple-500 ring-base-purple-500 dark:ring-d-base-purple-500 border-base-purple-500 dark:border-d-base-purple-500';
                break;
            case 'pink':
                result += ' text-base-pink-500 dark:text-d-base-pink-500 ring-base-pink-500 dark:ring-d-base-pink-500 border-base-pink-500 dark:border-d-base-pink-500';
                break;
            case 'amber':
                result += ' text-base-amber-500 dark:text-d-base-amber-500 ring-base-amber-500 dark:ring-d-base-amber-500 border-base-amber-500 dark:border-d-base-amber-500';
                break;
            case 'sky':
                result += ' text-base-sky-500 dark:text-d-base-sky-500 ring-base-sky-500 dark:ring-d-base-sky-500 border-base-sky-500 dark:border-d-base-sky-500';
                break;
            case 'lime':
                result += ' text-base-lime-500 dark:text-d-base-lime-500 ring-base-lime-500 dark:ring-d-base-lime-500 border-base-lime-500 dark:border-d-base-lime-500';
                break;
            case 'teal':
                result += ' text-base-teal-500 dark:text-d-base-teal-500 ring-base-teal-500 dark:ring-d-base-teal-500 border-base-teal-500 dark:border-d-base-teal-500';
                break;
            case 'orange':
                result += ' text-base-orange-500 dark:text-d-base-orange-500 ring-base-orange-500 dark:ring-d-base-orange-500 border-base-orange-500 dark:border-d-base-orange-500';
                break;
        }
        return result;
    }
    defaultClassCss() {
        let result = 'focus:outline-none font-semibold  box-border ring-opacity-20 dark:ring-opacity-20 focus:ring whitespace-nowrap border  relative text-body-2';
        return result;
    }
    // getClassCssBySize(size: ButtonSize): string {   
    //     let result: string = '';
    //     switch (size) {
    //         case "sm":
    //             result = 'p-1 h-sm';
    //             break;
    //         case "md":
    //             result = 'p-1.5 h-md';
    //             break;
    //         case "lg":
    //             result = 'p-2 h-lg';
    //             break;
    //         case "xl":
    //             result = 'p-2.5  h-xl';
    //             break;
    //     }
    //     return result;
    // }
    buildSpinerColor() {
        // let result = 'white'
        if (this.color == 'secondary') {
            return 'primary';
        }
        else {
            return this.color;
        }
        // return result;
    }
}
TDSButtonOutlineComponent.ɵfac = function TDSButtonOutlineComponent_Factory(t) { return new (t || TDSButtonOutlineComponent)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.TDSButtonGroupComponent, 8)); };
TDSButtonOutlineComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TDSButtonOutlineComponent, selectors: [["button", "tds-button-outline", ""], ["a", "tds-button-outline", ""]], hostVars: 4, hostBindings: function TDSButtonOutlineComponent_HostBindings(rf, ctx) { if (rf & 2) {
        i0.ɵɵattribute("tabindex", ctx.disabled ? -1 : ctx.tabIndex === null ? null : ctx.tabIndex)("disabled", ctx.disabled || ctx.loading || null);
        i0.ɵɵclassMap(ctx.cssClass);
    } }, exportAs: ["tdsButtonOutline"], features: [i0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 8, vars: 3, consts: [["class", "flex w-full items-center justify-center", 4, "ngIf", "ngIfElse"], [3, "class", 4, "ngIf"], ["loadingtmpl", ""], ["content", ""], ["CustomLoadingtmpl", ""], [1, "flex", "w-full", "items-center", "justify-center"], [4, "ngTemplateOutlet"], ["class", "flex w-full items-center", 4, "ngIf", "ngIfElse"], [1, "flex", "w-full", "items-center"], ["class", "w-4 h-4 mr-2", 3, "color", 4, "ngIf"], [1, "flex-auto"], [1, "w-4", "h-4", "mr-2", 3, "color"], [4, "tdsStringTemplateOutlet"]], template: function TDSButtonOutlineComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵprojectionDef();
        i0.ɵɵtemplate(0, TDSButtonOutlineComponent_div_0_Template, 2, 1, "div", 0);
        i0.ɵɵtemplate(1, TDSButtonOutlineComponent_div_1_Template, 1, 2, "div", 1);
        i0.ɵɵtemplate(2, TDSButtonOutlineComponent_ng_template_2_Template, 1, 2, "ng-template", null, 2, i0.ɵɵtemplateRefExtractor);
        i0.ɵɵtemplate(4, TDSButtonOutlineComponent_ng_template_4_Template, 1, 0, "ng-template", null, 3, i0.ɵɵtemplateRefExtractor);
        i0.ɵɵtemplate(6, TDSButtonOutlineComponent_ng_template_6_Template, 1, 1, "ng-template", null, 4, i0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        const _r2 = i0.ɵɵreference(3);
        i0.ɵɵproperty("ngIf", !ctx.loading || ctx.disabled)("ngIfElse", _r2);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx.loading && !ctx.disabled);
    } }, directives: [i2.NgIf, i2.NgTemplateOutlet, i3.TDSProgressSpinnerComponent, i4.TDSStringTemplateOutletDirective], encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSButtonOutlineComponent, [{
        type: Component,
        args: [{ selector: 'button[tds-button-outline], a[tds-button-outline]', exportAs: 'tdsButtonOutline', preserveWhitespaces: false, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: {
                    '[class]': 'cssClass',
                    '[attr.tabindex]': 'disabled ? -1 : (tabIndex === null ? null : tabIndex)',
                    '[attr.disabled]': 'disabled || loading || null',
                }, template: "<div class='flex w-full items-center justify-center' *ngIf=\"!loading || disabled; else loadingtmpl\">\r\n    <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n</div>\r\n<div [class]=\"loadingCss\" *ngIf=\"loading && !disabled\">\r\n</div>\r\n<ng-template #loadingtmpl>    \r\n    <div class='flex w-full items-center' *ngIf=\"!loadingTemplate; else CustomLoadingtmpl\">    \r\n        <tds-spinner *ngIf=\"loading\" [color]=\"spinerColor\" class=\"w-4 h-4 mr-2\"></tds-spinner>\r\n        <div class='flex-auto'>\r\n            Loading...\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n<ng-template #content>\r\n    <ng-content></ng-content>\r\n</ng-template>\r\n<ng-template #CustomLoadingtmpl>\r\n    <ng-container *tdsStringTemplateOutlet=\"loadingTemplate\">\r\n        {{loadingTemplate}}\r\n    </ng-container>\r\n</ng-template>\r\n" }]
    }], function () { return [{ type: i0.NgZone }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.TDSButtonGroupComponent, decorators: [{
                type: Optional
            }] }]; }, null); })();
//# sourceMappingURL=data:application/json;base64,