/**
 * List of classes to add to MatButton instances based on host attributes to
 * style as different variants.
 */
export const BUTTON_HOST_ATTRIBUTES = [
    'tds-button',
    'tds-flat-button',
    'ta-icon-button',
    'ta-raised-button',
    'ta-stroked-button',
];
/** List of classes to add to buttons instances based on host attribute selector. */
export const HOST_SELECTOR_TMT_CLASS_PAIR = [
    {
        selector: 'tds-button',
        tmtClasses: ['focus:outline-none', 'font-semibold', 'box-border', 'ring-opacity-20', 'focus:ring', 'whitespace-nowrap'],
    },
    {
        selector: 'tds-flat-button',
        tmtClasses: ['focus:outline-none', 'rounded-md', 'font-semibold', 'box-border', 'ring-opacity-20', 'focus:ring', 'whitespace-nowrap'],
    },
    {
        selector: 'tds-button-icon',
        tmtClasses: ['focus:outline-none', 'font-semibold', 'border', 'box-border', 'ring-opacity-20', 'focus:ring', 'whitespace-nowrap'],
    },
];
/** Mixin to augment a directive with a `color` property. */
export function mixinButtonColor(base, defaultColor, defaultButtonType) {
    return class extends base {
        constructor(...args) {
            super(...args);
            this.defaultColor = defaultColor;
            this.defaultButtonType = defaultButtonType;
            // Set the default color that can be specified from the mixin.
            this.buttonType = defaultButtonType;
            this.color = defaultColor;
        }
        get buttonType() {
            return this._buttonType;
        }
        set buttonType(val) {
            this._buttonType = val;
        }
        get color() { return this._color; }
        set color(value) {
            if (this.buttonType) {
                const colorPalette = value || this.defaultColor;
                if (colorPalette !== this._color) {
                    if (this._color) {
                        const lstClass = this.getActiveBackgroundColor(this.color);
                        lstClass.forEach(cl => {
                            this._elementRef.nativeElement.classList.remove(cl);
                        });
                    }
                    if (colorPalette) {
                        const lstClass = this.getActiveBackgroundColor(colorPalette);
                        lstClass.forEach(cl => {
                            this._elementRef.nativeElement.classList.add(cl);
                        });
                    }
                    this._color = colorPalette;
                }
            }
        }
        getActiveBackgroundColor(color) {
            let result = [];
            switch (this.buttonType) {
                case "tds-button":
                    result = this.p_DefaultClass(color);
                    break;
                case "tds-flat-button":
                    result = this.p_FlatClass(color);
                    break;
                case "tds-button-icon":
                    result = this.p_ButtonIconClass(color);
                    break;
                default:
                    result = this.p_DefaultClass(color);
                    break;
            }
            return result;
        }
        p_DefaultClass(color) {
            let result = [];
            switch (color) {
                case "primary":
                    result = ['text-white', `ring-primary-1`, `border-primary-1`, `bg-primary-1`, `hover:bg-primary-2`, `focus:bg-primary-1`, `hover:border-primary-2`, `focus:border-primary-1`, `disabled:border-primary-1`, `disabled:bg-primary-1`, 'disabled:opacity-65'];
                    break;
                case "secondary":
                    result = ['text-neutral-1-900', 'dark:text-d-neutral-1-900', 'text-body-2', 'ring-primary-1', 'border-neutral-2-200', 'dark:border-d-neutral-2-200', 'bg-white', 'hover:bg-neutral-3-50', 'focus:bg-white', 'dark:focus:bg-d-neutral-3-300', 'focus:border-primary-1', 'dark:focus:border-primary-1', 'disabled:text-neutral-1-300', 'disabled:border-neutral-2-200', 'disabled:bg-neutral-3-50',
                        'dark:disabled:text-d-neutral-1-300', 'dark:disabled:border-d-neutral-2-200', 'dark:disabled:bg-d-neutral-3-200',
                        'dark:bg-d-neutral-3-300', 'dark:hover:bg-d-neutral-3-400'];
                    break;
                case 'info':
                    result = ['text-white', `ring-info-400`, `border-info-400`, `bg-info-400`, `hover:bg-info-500`, `focus:bg-info-400`, `hover:border-info-500`, `focus:border-info-400`, `disabled:border-info-400`, `disabled:bg-info-400`, 'disabled:opacity-65'];
                    break;
                case 'success':
                    result = ['text-white', `ring-success-400`, `border-success-400`, `bg-success-400`, `hover:bg-success-500`, `focus:bg-success-400`, `hover:border-success-500`, `focus:border-success-400`, `disabled:border-success-400`, `disabled:bg-success-400`, 'disabled:opacity-65'];
                    break;
                case 'warning':
                    result = ['text-white', `ring-warning-400`, `border-warning-400`, `bg-warning-400`, `hover:bg-warning-500`, `focus:bg-warning-400`, `hover:border-warning-500`, `focus:border-warning-400`, `disabled:border-warning-400`, `disabled:bg-warning-400`, 'disabled:opacity-65'];
                    break;
                case 'error':
                    result = ['text-white', `ring-error-400`, `border-error-400`, `bg-error-400`, `hover:bg-error-500`, `focus:bg-error-400`, `hover:border-error-500`, `focus:border-error-400`, `disabled:border-error-400`, `disabled:bg-error-400`, 'disabled:opacity-65'];
                    break;
                default:
                    result = ['text-white', `ring-${color}-400`, `border-${color}-400`, `bg-${color}-400`, `hover:bg-${color}-500`, `focus:bg-${color}-400`, `hover:border-${color}-500`, `focus:border-${color}-400`, `disabled:border-${color}-400`, `disabled:bg-${color}-400`, 'disabled:opacity-65'];
                    break;
            }
            return result;
        }
        p_ButtonIconClass(color) {
            let result = [];
            switch (color) {
                case "primary":
                    result = ['text-white', `ring-primary-1`, `border-primary-1`, `bg-primary-1`, `hover:bg-primary-2`, `hover:border-primary-2`, `focus:bg-primary-1`, `focus:border-primary-1`, `disabled:border-primary-1`, `disabled:bg-primary-1`, 'disabled:opacity-65'];
                    break;
                case "secondary":
                    result = ['text-neutral-1-500', 'ring-primary-1', 'border-neutral-2-200', 'bg-white', 'hover:bg-neutral-3-50', 'focus:bg-white', 'focus:border-primary-1', 'disabled:text-neutral-1-300', 'disabled:border-neutral-2-200', 'disabled:bg-neutral-3-50',
                        'dark:text-d-neutral-1-500', 'dark:border-d-neutral-2-200', 'dark:bg-d-neutral-3-200', 'dark:hover:bg-d-neutral-3-400', 'dark:focus:bg-d-neutral-3-300', 'dark:focus:border-primary-1', 'dark:disabled:text-d-neutral-1-300', 'dark:disabled:border-d-neutral-2-200', 'disabled:bg-d-neutral-3-200',
                    ];
                    break;
                default:
                    result = ['text-white', `ring-${color}-400`, `border-${color}-400`, `bg-${color}-400`, `hover:border-${color}-500`, `hover:bg-${color}-500`, `focus:bg-${color}-400`, `focus:border-${color}-400`, `disabled:border-${color}-400`, `disabled:bg-${color}-400`, 'disabled:opacity-65'];
                    break;
            }
            return result;
        }
        p_FlatClass(color) {
            let result = [];
            // switch (color) {
            //     default:
            result = [`text-body-2`, `focus:bg-neutral-3-50`, `ring-primary-1`, 'disabled:opacity-65', 'text-neutral-1-900', 'dark:text-d-neutral-1-900', 'dark:hover:bg-d-neutral-3-200', `dark:focus:bg-d-neutral-3-50`];
            //         break;
            // }
            return result;
        }
    };
}
export function mixinButtonSize(base, defaultSize) {
    return class extends base {
        constructor(...args) {
            super(...args);
            this.defaultSize = defaultSize;
            // Set the default color that can be specified from the mixin.
            this.size = defaultSize;
        }
        get size() { return this._size; }
        set size(value) {
            const _size = value || this.defaultSize;
            if (_size !== this._size) {
                if (this._size) {
                    const lstClass = this.getClassbySize(this._size);
                    lstClass.forEach(cl => {
                        this._elementRef.nativeElement.classList.remove(cl);
                    });
                }
                if (_size) {
                    const lstClass = this.getClassbySize(_size);
                    lstClass.forEach(cl => {
                        this._elementRef.nativeElement.classList.add(cl);
                    });
                }
                this._size = defaultSize;
            }
        }
        getClassbySize(size) {
            let result = [];
            switch (size) {
                case "sm":
                    result = ['py-1', 'px-2.5', 'text-body-2', 'h-sm'];
                    break;
                case "md":
                    result = ['py-1.5', 'px-3', 'text-body-2', 'h-md'];
                    break;
                case "lg":
                    result = ['py-2', 'px-4', 'text-body-2', 'h-lg'];
                    break;
            }
            return result;
        }
    };
}
//# sourceMappingURL=data:application/json;base64,