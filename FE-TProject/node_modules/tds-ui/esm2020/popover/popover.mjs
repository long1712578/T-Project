import { __decorate } from "tslib";
import { ChangeDetectionStrategy, Component, Directive, EventEmitter, Input, Optional, Output, TemplateRef, ViewEncapsulation } from '@angular/core';
import { zoomBigMotion } from 'tds-ui/core/animation';
import { InputBoolean } from 'tds-ui/shared/utility';
import { isTooltipEmpty, TDSTooltipBaseDirective, TDSToolTipComponent } from 'tds-ui/tooltip';
import * as i0 from "@angular/core";
import * as i1 from "@angular/cdk/bidi";
import * as i2 from "@angular/cdk/overlay";
import * as i3 from "@angular/common";
import * as i4 from "tds-ui/core/outlet";
function TDSPopoverComponent_ng_template_0_div_6_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1);
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r5 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(ctx_r5.title);
} }
function TDSPopoverComponent_ng_template_0_div_6_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 12);
    i0.ɵɵtemplate(1, TDSPopoverComponent_ng_template_0_div_6_ng_container_1_Template, 2, 1, "ng-container", 10);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("tdsStringTemplateOutlet", ctx_r2.title);
} }
function TDSPopoverComponent_ng_template_0_ng_container_9_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1);
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r3 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(ctx_r3.content);
} }
function TDSPopoverComponent_ng_template_0_div_10_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1);
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r6 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(ctx_r6.footer);
} }
const _c0 = function (a0) { return { "pt-8": a0 }; };
function TDSPopoverComponent_ng_template_0_div_10_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 13);
    i0.ɵɵtemplate(1, TDSPopoverComponent_ng_template_0_div_10_ng_container_1_Template, 2, 1, "ng-container", 10);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction1(2, _c0, ctx_r4.isFooterString));
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("tdsStringTemplateOutlet", ctx_r4.footer);
} }
const _c1 = function (a0, a1, a2, a3) { return { "pt-2.5": a0, "pr-2.5": a1, "pl-2.5": a2, "pb-2.5": a3 }; };
function TDSPopoverComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 2)(1, "div", 3)(2, "div", 4);
    i0.ɵɵelement(3, "span", 5);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(4, "div", 6)(5, "div");
    i0.ɵɵtemplate(6, TDSPopoverComponent_ng_template_0_div_6_Template, 2, 1, "div", 7);
    i0.ɵɵelementStart(7, "div", 8)(8, "div", 9);
    i0.ɵɵtemplate(9, TDSPopoverComponent_ng_template_0_ng_container_9_Template, 2, 1, "ng-container", 10);
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(10, TDSPopoverComponent_ng_template_0_div_10_Template, 2, 4, "div", 11);
    i0.ɵɵelementEnd()()()()();
} if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵproperty("ngClass", ctx_r1._classMap)("ngStyle", ctx_r1.overlayStyle)("@zoomBigMotion", "active");
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction4(9, _c1, ctx_r1._isBottom(), ctx_r1._isLeft(), ctx_r1._isRight(), ctx_r1._isTop()));
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngStyle", ctx_r1._contentStyleArrow);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngStyle", ctx_r1._contentStyleArrowContent);
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("ngIf", ctx_r1.title);
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("tdsStringTemplateOutlet", ctx_r1.content);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r1.footer);
} }
export class TDSPopoverDirective extends TDSTooltipBaseDirective {
    constructor(elementRef, hostView, resolver, renderer) {
        super(elementRef, hostView, resolver, renderer);
        this.trigger = 'hover';
        this.placement = 'top';
        this.popoverBackdrop = false;
        this.autoClose = true;
        // tslint:disable-next-line:no-output-rename
        this.visibleChange = new EventEmitter();
        this.componentRef = this.hostView.createComponent(TDSPopoverComponent);
    }
    getProxyPropertyMap() {
        return {
            popoverBackdrop: ['backdrop', () => this.popoverBackdrop],
            autoClose: ['autoClose', () => this.autoClose],
            ...super.getProxyPropertyMap()
        };
    }
}
TDSPopoverDirective.ɵfac = function TDSPopoverDirective_Factory(t) { return new (t || TDSPopoverDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver), i0.ɵɵdirectiveInject(i0.Renderer2)); };
TDSPopoverDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: TDSPopoverDirective, selectors: [["", "tds-popover", ""]], hostVars: 2, hostBindings: function TDSPopoverDirective_HostBindings(rf, ctx) { if (rf & 2) {
        i0.ɵɵclassProp("tds-popover-open", ctx.visible);
    } }, inputs: { title: ["popoverTitle", "title"], content: ["popoverContent", "content"], footer: ["popoverFooter", "footer"], directiveTitle: ["tds-popover", "directiveTitle"], trigger: ["popoverTrigger", "trigger"], placement: ["popoverPlacement", "placement"], origin: ["popoverOrigin", "origin"], visible: ["popoverVisible", "visible"], mouseEnterDelay: ["popoverMouseEnterDelay", "mouseEnterDelay"], mouseLeaveDelay: ["popoverMouseLeaveDelay", "mouseLeaveDelay"], overlayClassName: ["popoverOverlayClassName", "overlayClassName"], overlayStyle: ["popoverOverlayStyle", "overlayStyle"], popoverBackdrop: "popoverBackdrop", autoClose: ["popoverAutoClose", "autoClose"] }, outputs: { visibleChange: "popoverVisibleChange" }, exportAs: ["tdsPopover"], features: [i0.ɵɵInheritDefinitionFeature] });
__decorate([
    InputBoolean()
], TDSPopoverDirective.prototype, "popoverBackdrop", void 0);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSPopoverDirective, [{
        type: Directive,
        args: [{
                selector: '[tds-popover]',
                exportAs: 'tdsPopover',
                host: {
                    '[class.tds-popover-open]': 'visible'
                }
            }]
    }], function () { return [{ type: i0.ElementRef }, { type: i0.ViewContainerRef }, { type: i0.ComponentFactoryResolver }, { type: i0.Renderer2 }]; }, { title: [{
            type: Input,
            args: ['popoverTitle']
        }], content: [{
            type: Input,
            args: ['popoverContent']
        }], footer: [{
            type: Input,
            args: ['popoverFooter']
        }], directiveTitle: [{
            type: Input,
            args: ['tds-popover']
        }], trigger: [{
            type: Input,
            args: ['popoverTrigger']
        }], placement: [{
            type: Input,
            args: ['popoverPlacement']
        }], origin: [{
            type: Input,
            args: ['popoverOrigin']
        }], visible: [{
            type: Input,
            args: ['popoverVisible']
        }], mouseEnterDelay: [{
            type: Input,
            args: ['popoverMouseEnterDelay']
        }], mouseLeaveDelay: [{
            type: Input,
            args: ['popoverMouseLeaveDelay']
        }], overlayClassName: [{
            type: Input,
            args: ['popoverOverlayClassName']
        }], overlayStyle: [{
            type: Input,
            args: ['popoverOverlayStyle']
        }], popoverBackdrop: [{
            type: Input
        }], autoClose: [{
            type: Input,
            args: ['popoverAutoClose']
        }], visibleChange: [{
            type: Output,
            args: ['popoverVisibleChange']
        }] }); })();
export class TDSPopoverComponent extends TDSToolTipComponent {
    constructor(cdr, directionality) {
        super(cdr, directionality);
        this._prefix = 'tds-popover';
        this._classPopopverContent = {};
    }
    get hasBackdrop() {
        return this.trigger === 'click' ? this.backdrop : false;
    }
    get isFooterString() {
        return !isTooltipEmpty(this.footer) && !(this.footer instanceof TemplateRef);
    }
    isEmpty() {
        return isTooltipEmpty(this.title) && isTooltipEmpty(this.content);
    }
    updateStyles() {
        const isColorPreset = this.color;
        this._classMap = {
            [this.overlayClassName]: true,
            [`${this._prefix}-placement-${this.preferredPlacement}`]: true,
            [`${this._prefix}-${this.color}`]: isColorPreset,
        };
        this.styleArrow();
    }
    styleArrow() {
        let borderTransparent = '8px solid transparent';
        // let borderColor = '8px solid #fff';
        if (this.preferredPlacement.indexOf("top") > -1) {
            this._contentStyleArrowContent = {
                width: '0',
                height: '0',
                borderLeft: borderTransparent,
                borderRight: borderTransparent,
                borderBottom: 0,
            };
        }
        if (this.preferredPlacement.indexOf("bottom") > -1) {
            this._contentStyleArrowContent = {
                width: '0',
                height: '0',
                borderLeft: borderTransparent,
                borderRight: borderTransparent,
                borderTop: 0,
            };
        }
        if (this.preferredPlacement.indexOf("left") > -1) {
            this._contentStyleArrowContent = {
                width: '0',
                height: '0',
                borderTop: borderTransparent,
                borderRight: 0,
                borderBottom: borderTransparent,
            };
        }
        if (this.preferredPlacement.indexOf("right") > -1) {
            this._contentStyleArrowContent = {
                width: '0',
                height: '0',
                borderTop: borderTransparent,
                borderLeft: 0,
                borderBottom: borderTransparent,
            };
        }
        switch (this.preferredPlacement) {
            //#region top
            case "top":
                this._contentStyleArrow = {
                    bottom: '2px',
                    left: '50%',
                    transform: 'translateX(-50%)',
                };
                break;
            case "topLeft":
                this._contentStyleArrow = {
                    bottom: '2px',
                    left: '10px',
                };
                break;
            case "topRight":
                this._contentStyleArrow = {
                    bottom: '2px',
                    right: '10px',
                };
                break;
            //#endregion
            //#region bottom
            case "bottom":
                this._contentStyleArrow = {
                    top: '2px',
                    left: '50%',
                    transform: 'translateX(-50%)',
                };
                break;
            case "bottomLeft":
                this._contentStyleArrow = {
                    top: '2px',
                    left: '10px',
                };
                break;
            case "bottomRight":
                this._contentStyleArrow = {
                    top: '2px',
                    right: '10px',
                };
                break;
            //#endregion
            //#region left
            case "left":
                this._contentStyleArrow = {
                    right: '2px',
                    top: '50%',
                    transform: 'translateY(-50%)',
                };
                break;
            case "leftTop":
                this._contentStyleArrow = {
                    right: '2px',
                    top: '10px'
                };
                break;
            case "leftBottom":
                this._contentStyleArrow = {
                    right: '2px',
                    bottom: '10px'
                };
                break;
            //#endregion
            //#region right
            case "right":
                this._contentStyleArrow = {
                    left: '2px',
                    top: '50%',
                    transform: 'translateY(-50%)',
                };
                break;
            case "rightTop":
                this._contentStyleArrow = {
                    left: '2px',
                    top: '10px'
                };
                break;
            case "rightBottom":
                this._contentStyleArrow = {
                    left: '2px',
                    bottom: '10px'
                };
                break;
            ////#endregion
            default:
                this._contentStyleArrow = {
                    bottom: '2px',
                    left: '50%',
                    transform: 'translateX(-50%)',
                };
                break;
        }
    }
    _isTop() {
        return this.preferredPlacement.indexOf("top") > -1;
    }
    _isLeft() {
        return this.preferredPlacement.indexOf("left") > -1;
    }
    _isRight() {
        return this.preferredPlacement.indexOf("right") > -1;
    }
    _isBottom() {
        return this.preferredPlacement.indexOf("bottom") > -1;
    }
}
TDSPopoverComponent.ɵfac = function TDSPopoverComponent_Factory(t) { return new (t || TDSPopoverComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.Directionality, 8)); };
TDSPopoverComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TDSPopoverComponent, selectors: [["tds-popover"]], exportAs: ["tdsPopoverComponent"], features: [i0.ɵɵInheritDefinitionFeature], decls: 2, vars: 5, consts: [["cdkConnectedOverlay", "", 3, "cdkConnectedOverlayHasBackdrop", "cdkConnectedOverlayOrigin", "cdkConnectedOverlayPositions", "cdkConnectedOverlayOpen", "cdkConnectedOverlayPush", "overlayOutsideClick", "detach", "positionChange"], ["overlay", "cdkConnectedOverlay"], [1, "tds-popover", "relative", 3, "ngClass", "ngStyle"], [1, "tds-popover-content", "relative", 3, "ngClass"], [1, "tds-popover-arrow", "absolute", "block", "bg-transparent", "pointer-events-none", 3, "ngStyle"], [1, "tds-popover-arrow-content", "block", "border-8", "border-white", "dark:border-d-neutral-3-300", 3, "ngStyle"], ["role", "tooltip", 1, "tds-popover-inner", "shadow-1-xl", "bg-white", "dark:bg-d-neutral-3-300", "rounded-md"], ["class", "tds-popover-title font-semibold text-neutral-1-900 dark:text-d-neutral-1-900 text-title-1 p-4 border-b border-neutral-2-200 dark:border-d-neutral-2-200", 4, "ngIf"], [1, "p-4"], [1, "tds-popover-inner-content", "text-neutral-1-900", "dark:text-d-neutral-1-900"], [4, "tdsStringTemplateOutlet"], ["class", "tds-popover-inner-footer", 3, "ngClass", 4, "ngIf"], [1, "tds-popover-title", "font-semibold", "text-neutral-1-900", "dark:text-d-neutral-1-900", "text-title-1", "p-4", "border-b", "border-neutral-2-200", "dark:border-d-neutral-2-200"], [1, "tds-popover-inner-footer", 3, "ngClass"]], template: function TDSPopoverComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵtemplate(0, TDSPopoverComponent_ng_template_0_Template, 11, 14, "ng-template", 0, 1, i0.ɵɵtemplateRefExtractor);
        i0.ɵɵlistener("overlayOutsideClick", function TDSPopoverComponent_Template_ng_template_overlayOutsideClick_0_listener($event) { return ctx.onClickOutside($event); })("detach", function TDSPopoverComponent_Template_ng_template_detach_0_listener() { return ctx.hide(); })("positionChange", function TDSPopoverComponent_Template_ng_template_positionChange_0_listener($event) { return ctx.onPositionChange($event); });
    } if (rf & 2) {
        i0.ɵɵproperty("cdkConnectedOverlayHasBackdrop", ctx.hasBackdrop)("cdkConnectedOverlayOrigin", ctx.origin)("cdkConnectedOverlayPositions", ctx._positions)("cdkConnectedOverlayOpen", ctx._visible)("cdkConnectedOverlayPush", true);
    } }, directives: [i2.CdkConnectedOverlay, i3.NgClass, i3.NgStyle, i3.NgIf, i4.TDSStringTemplateOutletDirective], encapsulation: 2, data: { animation: [zoomBigMotion] }, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSPopoverComponent, [{
        type: Component,
        args: [{
                selector: 'tds-popover',
                exportAs: 'tdsPopoverComponent',
                animations: [zoomBigMotion],
                changeDetection: ChangeDetectionStrategy.OnPush,
                encapsulation: ViewEncapsulation.None,
                preserveWhitespaces: false,
                template: `
    <ng-template
      #overlay="cdkConnectedOverlay"
      cdkConnectedOverlay
      [cdkConnectedOverlayHasBackdrop]="hasBackdrop"
      [cdkConnectedOverlayOrigin]="origin"
      [cdkConnectedOverlayPositions]="_positions"
      [cdkConnectedOverlayOpen]="_visible"
      [cdkConnectedOverlayPush]="true"
      (overlayOutsideClick)="onClickOutside($event)"
      (detach)="hide()"
      (positionChange)="onPositionChange($event)"
    >
      <div
        class="tds-popover relative "    
        [ngClass]="_classMap"
        [ngStyle]="overlayStyle"
        [@zoomBigMotion]="'active'"
      >
        <div class="tds-popover-content relative"  [ngClass]="
        {
          'pt-2.5': _isBottom(),
          'pr-2.5': _isLeft(),
          'pl-2.5': _isRight(),
          'pb-2.5': _isTop()
        }">
          <div class="tds-popover-arrow absolute block bg-transparent pointer-events-none"
          [ngStyle]="_contentStyleArrow" >
            <span class="tds-popover-arrow-content block border-8 border-white  dark:border-d-neutral-3-300" [ngStyle]="_contentStyleArrowContent"></span>
          </div>
          <div class="tds-popover-inner  shadow-1-xl bg-white dark:bg-d-neutral-3-300 rounded-md" role="tooltip">
            <div>
              <div class="tds-popover-title font-semibold text-neutral-1-900 dark:text-d-neutral-1-900 text-title-1 p-4 border-b border-neutral-2-200 dark:border-d-neutral-2-200" *ngIf="title">
                <ng-container *tdsStringTemplateOutlet="title">{{ title }}</ng-container>
              </div>
              <div class="p-4">
                <div class="tds-popover-inner-content text-neutral-1-900 dark:text-d-neutral-1-900 ">
                  <ng-container *tdsStringTemplateOutlet="content">{{ content }}</ng-container>
                </div>
                <div *ngIf="footer" class="tds-popover-inner-footer" [ngClass]="{'pt-8':isFooterString}">
                  <ng-container *tdsStringTemplateOutlet="footer">{{ footer }}</ng-container>
                </div>
              </div>            
            </div>
          </div>
        </div>
      </div>
    </ng-template>
  `
            }]
    }], function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.Directionality, decorators: [{
                type: Optional
            }] }]; }, null); })();
//# sourceMappingURL=data:application/json;base64,