import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';
import * as i0 from "@angular/core";
export class TDSSelectPlaceholderComponent {
    constructor(elementRef) {
        this.elementRef = elementRef;
        this.placeholder = null;
    }
}
TDSSelectPlaceholderComponent.ɵfac = function TDSSelectPlaceholderComponent_Factory(t) { return new (t || TDSSelectPlaceholderComponent)(i0.ɵɵdirectiveInject(i0.ElementRef)); };
TDSSelectPlaceholderComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TDSSelectPlaceholderComponent, selectors: [["tds-select-placeholder"]], inputs: { placeholder: "placeholder" }, decls: 2, vars: 1, consts: [[1, "w-full", "flex", "items-center", "text-body-2", "font-regular", "text-neutral-1-400", "dark:text-neutral-1-400", "truncate"]], template: function TDSSelectPlaceholderComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 0);
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", ctx.placeholder, " ");
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSSelectPlaceholderComponent, [{
        type: Component,
        args: [{
                selector: 'tds-select-placeholder',
                encapsulation: ViewEncapsulation.None,
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: `
            <div class="w-full flex items-center text-body-2 font-regular  text-neutral-1-400 dark:text-neutral-1-400 truncate">
                 {{ placeholder }}
            </div>`,
            }]
    }], function () { return [{ type: i0.ElementRef }]; }, { placeholder: [{
            type: Input
        }] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0LXBsYWNlaG9sZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvdGRzLXVpL3NlbGVjdC9zZWxlY3QtcGxhY2Vob2xkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBYyxLQUFLLEVBQWUsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7O0FBV3RILE1BQU0sT0FBTyw2QkFBNkI7SUFHdEMsWUFBb0IsVUFBc0I7UUFBdEIsZUFBVSxHQUFWLFVBQVUsQ0FBWTtRQUZqQyxnQkFBVyxHQUFrQixJQUFJLENBQUM7SUFJM0MsQ0FBQzs7MEdBTFEsNkJBQTZCO2dGQUE3Qiw2QkFBNkI7UUFMOUIsOEJBQW9IO1FBQy9HLFlBQ0w7UUFBQSxpQkFBTTs7UUFERCxlQUNMO1FBREssZ0RBQ0w7O3VGQUdDLDZCQUE2QjtjQVZ6QyxTQUFTO2VBQUM7Z0JBQ1AsUUFBUSxFQUFFLHdCQUF3QjtnQkFDbEMsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7Z0JBQ3JDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2dCQUMvQyxRQUFRLEVBQUU7OzttQkFHSzthQUVsQjs2REFFWSxXQUFXO2tCQUFuQixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIEVsZW1lbnRSZWYsIElucHV0LCBUZW1wbGF0ZVJlZiwgVmlld0VuY2Fwc3VsYXRpb24gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogJ3Rkcy1zZWxlY3QtcGxhY2Vob2xkZXInLFxyXG4gICAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcclxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxyXG4gICAgdGVtcGxhdGU6IGBcclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInctZnVsbCBmbGV4IGl0ZW1zLWNlbnRlciB0ZXh0LWJvZHktMiBmb250LXJlZ3VsYXIgIHRleHQtbmV1dHJhbC0xLTQwMCBkYXJrOnRleHQtbmV1dHJhbC0xLTQwMCB0cnVuY2F0ZVwiPlxyXG4gICAgICAgICAgICAgICAgIHt7IHBsYWNlaG9sZGVyIH19XHJcbiAgICAgICAgICAgIDwvZGl2PmAsXHJcblxyXG59KVxyXG5leHBvcnQgY2xhc3MgVERTU2VsZWN0UGxhY2Vob2xkZXJDb21wb25lbnQge1xyXG4gICAgQElucHV0KCkgcGxhY2Vob2xkZXI6IHN0cmluZyB8IG51bGwgPSBudWxsO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgZWxlbWVudFJlZjogRWxlbWVudFJlZikge1xyXG5cclxuICAgIH1cclxufSJdfQ==