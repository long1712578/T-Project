import { ChangeDetectionStrategy, Component, EventEmitter, Input, Optional, Output, ViewChild, ViewEncapsulation } from '@angular/core';
import { Subject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import { toNumber } from 'tds-ui/shared/utility';
import * as i0 from "@angular/core";
import * as i1 from "@angular/cdk/bidi";
import * as i2 from "./pagination-item.component";
import * as i3 from "@angular/common";
import * as i4 from "tds-ui/form-field";
import * as i5 from "tds-ui/tds-input";
const _c0 = ["containerTemplate"];
const _c1 = function (a0, a1) { return { "cursor-pointer": a0, "cursor-not-allowed text-neutral-1-500 dark:text-d-neutral-1-500": a1 }; };
function TDSPaginationSimpleComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    const _r3 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 1)(1, "ul", 2)(2, "li", 3);
    i0.ɵɵlistener("click", function TDSPaginationSimpleComponent_ng_template_0_Template_li_click_2_listener() { i0.ɵɵrestoreView(_r3); const ctx_r2 = i0.ɵɵnextContext(); return ctx_r2.prePage(); });
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(3, "li", 4)(4, "div", 5)(5, "tds-form-field", 6)(6, "input", 7);
    i0.ɵɵlistener("keydown.enter", function TDSPaginationSimpleComponent_ng_template_0_Template_input_keydown_enter_6_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r4 = i0.ɵɵnextContext(); return ctx_r4.jumpToPageViaInput($event); });
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(7, "div", 8)(8, "span", 9);
    i0.ɵɵtext(9, "/");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(10);
    i0.ɵɵelementEnd()()();
    i0.ɵɵelementStart(11, "li", 10);
    i0.ɵɵlistener("click", function TDSPaginationSimpleComponent_ng_template_0_Template_li_click_11_listener() { i0.ɵɵrestoreView(_r3); const ctx_r5 = i0.ɵɵnextContext(); return ctx_r5.nextPage(); });
    i0.ɵɵelementEnd()()();
} if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("disabled", ctx_r1.isFirstIndex)("direction", ctx_r1.dir)("itemRender", ctx_r1.itemRender)("ngClass", i0.ɵɵpureFunction2(15, _c1, !ctx_r1.isFirstIndex, ctx_r1.isFirstIndex));
    i0.ɵɵattribute("title", ctx_r1.locale.prev_page);
    i0.ɵɵadvance(1);
    i0.ɵɵattribute("title", ctx_r1.pageIndex + "/" + ctx_r1.lastIndex);
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("disabled", ctx_r1.disabled)("value", ctx_r1.pageIndex)("size", ctx_r1.size);
    i0.ɵɵadvance(4);
    i0.ɵɵtextInterpolate1(" ", ctx_r1.lastIndex, " ");
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("disabled", ctx_r1.isLastIndex)("direction", ctx_r1.dir)("ngClass", i0.ɵɵpureFunction2(18, _c1, !ctx_r1.isLastIndex, ctx_r1.isLastIndex))("itemRender", ctx_r1.itemRender);
    i0.ɵɵattribute("title", ctx_r1.locale == null ? null : ctx_r1.locale.next_page);
} }
export class TDSPaginationSimpleComponent {
    constructor(cdr, renderer, elementRef, directionality) {
        this.cdr = cdr;
        this.renderer = renderer;
        this.elementRef = elementRef;
        this.directionality = directionality;
        this.itemRender = null;
        this.disabled = false;
        this.total = 0;
        this.pageIndex = 1;
        this.pageSize = 10;
        this.size = 'md';
        this.pageIndexChange = new EventEmitter();
        this.lastIndex = 0;
        this.isFirstIndex = false;
        this.isLastIndex = false;
        this.dir = 'ltr';
        this.destroy$ = new Subject();
        renderer.removeChild(renderer.parentNode(elementRef.nativeElement), elementRef.nativeElement);
    }
    ngOnInit() {
        this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction) => {
            this.dir = direction;
            this.updateRtlStyle();
            this.cdr.detectChanges();
        });
        this.dir = this.directionality.value;
        this.updateRtlStyle();
    }
    updateRtlStyle() {
        if (this.dir === 'rtl') {
            this.renderer.addClass(this.elementRef.nativeElement, 'tds-pagination-rtl');
        }
        else {
            this.renderer.removeClass(this.elementRef.nativeElement, 'tds-pagination-rtl');
        }
    }
    ngOnDestroy() {
        this.destroy$.next();
        this.destroy$.complete();
    }
    jumpToPageViaInput($event) {
        const target = $event.target;
        const index = toNumber(target.value, this.pageIndex);
        this.onPageIndexChange(index);
        target.value = `${this.pageIndex}`;
    }
    prePage() {
        this.onPageIndexChange(this.pageIndex - 1);
    }
    nextPage() {
        this.onPageIndexChange(this.pageIndex + 1);
    }
    onPageIndexChange(index) {
        this.pageIndexChange.next(index);
    }
    updateBindingValue() {
        this.lastIndex = Math.ceil(this.total / this.pageSize);
        this.isFirstIndex = this.pageIndex === 1;
        this.isLastIndex = this.pageIndex === this.lastIndex;
    }
    ngOnChanges(changes) {
        const { pageIndex, total, pageSize } = changes;
        if (pageIndex || total || pageSize) {
            this.updateBindingValue();
        }
    }
}
TDSPaginationSimpleComponent.ɵfac = function TDSPaginationSimpleComponent_Factory(t) { return new (t || TDSPaginationSimpleComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Directionality, 8)); };
TDSPaginationSimpleComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TDSPaginationSimpleComponent, selectors: [["tds-pagination-simple"]], viewQuery: function TDSPaginationSimpleComponent_Query(rf, ctx) { if (rf & 1) {
        i0.ɵɵviewQuery(_c0, 7);
    } if (rf & 2) {
        let _t;
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);
    } }, inputs: { itemRender: "itemRender", disabled: "disabled", locale: "locale", total: "total", pageIndex: "pageIndex", pageSize: "pageSize", size: "size" }, outputs: { pageIndexChange: "pageIndexChange" }, features: [i0.ɵɵNgOnChangesFeature], decls: 2, vars: 0, consts: [["containerTemplate", ""], [1, "flex", "items-center", "w-full", "select-none"], [1, "flex", "items-center"], ["tds-pagination-item", "", "type", "prev", 1, "min-w-7", "min-h-7", "text-sm", "text-center", "align-middle", "mx-0.5", "leading-7", "box-content", "select-auto", "group", "border", "border-transparent", "hover:bg-neutral-3-50", "dark:hover:bg-d-neutral-3-300", "rounded-md", "flex", "items-center", "justify-center", 3, "disabled", "direction", "itemRender", "ngClass", "click"], [1, "tds-pagination-simple-pager", "mx-3"], [1, "flex", "items-center", "justify-center"], [1, "w-12"], ["autocomplete", "off", "tdsInput", "", "autocomplete", "off", 1, "text-center", "text-body-2", "font-regular", 3, "disabled", "value", "size", "keydown.enter"], [1, "ml-2", "text-caption-1", "font-regular", "text-neutral-1-900", "dark:text-d-neutral-1-900"], [1, "tds-pagination-slash"], ["tds-pagination-item", "", "type", "next", 1, "min-w-7", "min-h-7", "text-sm", "text-center", "align-middle", "mx-0.5", "leading-7", "box-content", "select-auto", "group", "border", "border-transparent", "hover:bg-neutral-3-50", "dark:hover:bg-d-neutral-3-300", "rounded-md", "flex", "items-center", "justify-center", 3, "disabled", "direction", "ngClass", "itemRender", "click"]], template: function TDSPaginationSimpleComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵtemplate(0, TDSPaginationSimpleComponent_ng_template_0_Template, 12, 21, "ng-template", null, 0, i0.ɵɵtemplateRefExtractor);
    } }, directives: [i2.TDSPaginationItemComponent, i3.NgClass, i4.TDSFormField, i5.TDSInput], encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSPaginationSimpleComponent, [{
        type: Component,
        args: [{ selector: 'tds-pagination-simple', preserveWhitespaces: false, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: "<ng-template #containerTemplate>\r\n    <div class=\"flex items-center w-full select-none\">\r\n        <ul class=\"flex items-center\">\r\n            <li tds-pagination-item [attr.title]=\"locale.prev_page\" [disabled]=\"isFirstIndex\" [direction]=\"dir\"\r\n                (click)=\"prePage()\" type=\"prev\" [itemRender]=\"itemRender\"\r\n                class=\"min-w-7 min-h-7 text-sm text-center align-middle mx-0.5 leading-7 box-content select-auto group border border-transparent hover:bg-neutral-3-50 dark:hover:bg-d-neutral-3-300  rounded-md flex items-center justify-center\"\r\n                [ngClass]=\"{'cursor-pointer':!isFirstIndex,'cursor-not-allowed text-neutral-1-500 dark:text-d-neutral-1-500':isFirstIndex}\"></li>\r\n            <li [attr.title]=\"pageIndex + '/' + lastIndex\" class=\"tds-pagination-simple-pager mx-3\">\r\n                <div class=\"flex items-center justify-center\">\r\n                    <tds-form-field class=\"w-12\">\r\n                        <input autocomplete=\"off\" class=\"text-center text-body-2 font-regular\" tdsInput autocomplete=\"off\" [disabled]=\"disabled\"\r\n                            [value]=\"pageIndex\" (keydown.enter)=\"jumpToPageViaInput($event)\" [size]=\"size\" />\r\n                    </tds-form-field>\r\n                    <div class=\"ml-2 text-caption-1 font-regular text-neutral-1-900 dark:text-d-neutral-1-900\">\r\n                        <span class=\"tds-pagination-slash\">/</span>\r\n                        {{ lastIndex }}\r\n                    </div>\r\n\r\n                </div>\r\n            </li>\r\n            <li tds-pagination-item [attr.title]=\"locale?.next_page\" [disabled]=\"isLastIndex\" [direction]=\"dir\"\r\n                class=\"min-w-7 min-h-7 text-sm text-center align-middle mx-0.5 leading-7 box-content select-auto group border border-transparent hover:bg-neutral-3-50 dark:hover:bg-d-neutral-3-300 rounded-md flex items-center justify-center\"\r\n                [ngClass]=\"{'cursor-pointer':!isLastIndex,'cursor-not-allowed text-neutral-1-500 dark:text-d-neutral-1-500':isLastIndex}\"\r\n                (click)=\"nextPage()\" type=\"next\" [itemRender]=\"itemRender\"></li>\r\n        </ul>\r\n    </div>\r\n\r\n</ng-template>" }]
    }], function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.Renderer2 }, { type: i0.ElementRef }, { type: i1.Directionality, decorators: [{
                type: Optional
            }] }]; }, { template: [{
            type: ViewChild,
            args: ['containerTemplate', { static: true }]
        }], itemRender: [{
            type: Input
        }], disabled: [{
            type: Input
        }], locale: [{
            type: Input
        }], total: [{
            type: Input
        }], pageIndex: [{
            type: Input
        }], pageSize: [{
            type: Input
        }], size: [{
            type: Input
        }], pageIndexChange: [{
            type: Output
        }] }); })();
//# sourceMappingURL=data:application/json;base64,