import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';
import { toNumber } from 'tds-ui/shared/utility';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "tds-ui/select";
import * as i3 from "@angular/forms";
import * as i4 from "tds-ui/form-field";
import * as i5 from "tds-ui/tds-input";
const _c0 = ["tds-pagination-options", ""];
function TDSPaginationOptionsComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    const _r3 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 2)(1, "tds-select", 3);
    i0.ɵɵlistener("ngModelChange", function TDSPaginationOptionsComponent_div_0_Template_tds_select_ngModelChange_1_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r2 = i0.ɵɵnextContext(); return ctx_r2.onPageSizeChange($event); });
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(2, "div", 4);
    i0.ɵɵtext(3);
    i0.ɵɵelementEnd()();
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("disabled", ctx_r0.disabled)("size", ctx_r0.size)("ngModel", ctx_r0.pageSize)("data", ctx_r0.listOfPageSizeOption);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1(" ", ctx_r0.locale.items_per_page, " ");
} }
function TDSPaginationOptionsComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r5 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 5);
    i0.ɵɵtext(1);
    i0.ɵɵelementStart(2, "tds-form-field", 6)(3, "input", 7);
    i0.ɵɵlistener("keydown.enter", function TDSPaginationOptionsComponent_div_1_Template_input_keydown_enter_3_listener($event) { i0.ɵɵrestoreView(_r5); const ctx_r4 = i0.ɵɵnextContext(); return ctx_r4.jumpToPageViaInput($event); });
    i0.ɵɵelementEnd()();
    i0.ɵɵtext(4);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1(" ", ctx_r1.locale.jump_to, " ");
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("disabled", ctx_r1.disabled)("size", ctx_r1.size);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1(" ", ctx_r1.locale.page, " ");
} }
export class TDSPaginationOptionsComponent {
    constructor(elementRef) {
        this.elementRef = elementRef;
        this.size = 'md';
        this.disabled = false;
        this.showSizeChanger = false;
        this.showQuickJumper = false;
        this.total = 0;
        this.pageIndex = 1;
        this.pageSize = 10;
        this.pageSizeOptions = [];
        this.pageIndexChange = new EventEmitter();
        this.pageSizeChange = new EventEmitter();
        this.listOfPageSizeOption = [];
        // TODO: move to host after View Engine deprecation
        this.elementRef.nativeElement.classList.add('tds-pagination-options');
    }
    onPageSizeChange(size) {
        if (this.pageSize !== size) {
            this.pageSizeChange.next(size);
        }
    }
    jumpToPageViaInput($event) {
        const target = $event.target;
        const index = Math.floor(toNumber(target.value, this.pageIndex));
        this.pageIndexChange.next(index);
        target.value = '';
    }
    trackByOption(_, option) {
        return option.value;
    }
    ngOnChanges(changes) {
        const { pageSize, pageSizeOptions, locale } = changes;
        if (pageSize || pageSizeOptions || locale) {
            this.listOfPageSizeOption = [...new Set([...this.pageSizeOptions, this.pageSize])].map(item => ({
                value: item,
                label: `${item}`
            }));
        }
    }
}
TDSPaginationOptionsComponent.ɵfac = function TDSPaginationOptionsComponent_Factory(t) { return new (t || TDSPaginationOptionsComponent)(i0.ɵɵdirectiveInject(i0.ElementRef)); };
TDSPaginationOptionsComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TDSPaginationOptionsComponent, selectors: [["div", "tds-pagination-options", ""]], inputs: { size: "size", disabled: "disabled", showSizeChanger: "showSizeChanger", showQuickJumper: "showQuickJumper", locale: "locale", total: "total", pageIndex: "pageIndex", pageSize: "pageSize", pageSizeOptions: "pageSizeOptions" }, outputs: { pageIndexChange: "pageIndexChange", pageSizeChange: "pageSizeChange" }, features: [i0.ɵɵNgOnChangesFeature], attrs: _c0, decls: 2, vars: 2, consts: [["class", "inline-flex items-center", 4, "ngIf"], ["class", "tds-pagination-options-quick-jumper flex items-center ", 4, "ngIf"], [1, "inline-flex", "items-center"], ["textField", "label", "valueField", "value", 1, "tds-pagination-options-size-changer", 3, "disabled", "size", "ngModel", "data", "ngModelChange"], [1, "ml-2", "min-w-max"], [1, "tds-pagination-options-quick-jumper", "flex", "items-center"], [1, "w-20", "mx-3"], ["autocomplete", "off", "tdsInput", "", "autocomplete", "off", 3, "disabled", "size", "keydown.enter"]], template: function TDSPaginationOptionsComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵtemplate(0, TDSPaginationOptionsComponent_div_0_Template, 4, 5, "div", 0);
        i0.ɵɵtemplate(1, TDSPaginationOptionsComponent_div_1_Template, 5, 4, "div", 1);
    } if (rf & 2) {
        i0.ɵɵproperty("ngIf", ctx.showSizeChanger);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx.showQuickJumper);
    } }, directives: [i1.NgIf, i2.TDSSelect, i3.NgControlStatus, i3.NgModel, i4.TDSFormField, i5.TDSInput], encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSPaginationOptionsComponent, [{
        type: Component,
        args: [{
                selector: 'div[tds-pagination-options]',
                preserveWhitespaces: false,
                encapsulation: ViewEncapsulation.None,
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: `
    <div class='inline-flex items-center' *ngIf="showSizeChanger">
    <tds-select
    class="tds-pagination-options-size-changer"
    
    [disabled]="disabled"
    [size]="size"
    [ngModel]="pageSize"
    (ngModelChange)="onPageSizeChange($event)"
    [data]="listOfPageSizeOption"
    textField="label"
    valueField="value"
  >     
  </tds-select>
      <div class='ml-2 min-w-max'>
        {{locale.items_per_page}}
      </div>
    </div>
   
    <div class="tds-pagination-options-quick-jumper flex items-center " *ngIf="showQuickJumper">
      {{ locale.jump_to }}
      <tds-form-field class="w-20 mx-3">     
        <input autocomplete="off" tdsInput autocomplete="off" 
         [disabled]="disabled" [size]="size" (keydown.enter)="jumpToPageViaInput($event)" />    
      </tds-form-field>
      {{ locale.page }}
    </div>
  `
            }]
    }], function () { return [{ type: i0.ElementRef }]; }, { size: [{
            type: Input
        }], disabled: [{
            type: Input
        }], showSizeChanger: [{
            type: Input
        }], showQuickJumper: [{
            type: Input
        }], locale: [{
            type: Input
        }], total: [{
            type: Input
        }], pageIndex: [{
            type: Input
        }], pageSize: [{
            type: Input
        }], pageSizeOptions: [{
            type: Input
        }], pageIndexChange: [{
            type: Output
        }], pageSizeChange: [{
            type: Output
        }] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnaW5hdGlvbi1vcHRpb25zLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL3Rkcy11aS9wYWdpbmF0aW9uL3BhZ2luYXRpb24tb3B0aW9ucy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsT0FBTyxFQUNMLHVCQUF1QixFQUN2QixTQUFTLEVBRVQsWUFBWSxFQUNaLEtBQUssRUFFTCxNQUFNLEVBRU4saUJBQWlCLEVBQ2xCLE1BQU0sZUFBZSxDQUFDO0FBR3ZCLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQzs7Ozs7Ozs7OztJQVM3Qyw4QkFBOEQsb0JBQUE7SUFPOUQsb01BQWlCLCtCQUF3QixJQUFDO0lBSzVDLGlCQUFhO0lBQ1QsOEJBQTRCO0lBQzFCLFlBQ0Y7SUFBQSxpQkFBTSxFQUFBOzs7SUFYUixlQUFxQjtJQUFyQiwwQ0FBcUIscUJBQUEsNEJBQUEscUNBQUE7SUFVakIsZUFDRjtJQURFLDZEQUNGOzs7O0lBR0YsOEJBQTRGO0lBQzFGLFlBQ0E7SUFBQSx5Q0FBa0MsZUFBQTtJQUVLLCtMQUFpQixpQ0FBMEIsSUFBQztJQURqRixpQkFDb0YsRUFBQTtJQUV0RixZQUNGO0lBQUEsaUJBQU07OztJQU5KLGVBQ0E7SUFEQSxzREFDQTtJQUVHLGVBQXFCO0lBQXJCLDBDQUFxQixxQkFBQTtJQUV4QixlQUNGO0lBREUsbURBQ0Y7O0FBR0osTUFBTSxPQUFPLDZCQUE2QjtJQWN4QyxZQUFvQixVQUFzQjtRQUF0QixlQUFVLEdBQVYsVUFBVSxDQUFZO1FBYmpDLFNBQUksR0FBZSxJQUFJLENBQUM7UUFDeEIsYUFBUSxHQUFXLEtBQUssQ0FBQztRQUN6QixvQkFBZSxHQUFHLEtBQUssQ0FBQztRQUN4QixvQkFBZSxHQUFHLEtBQUssQ0FBQztRQUV4QixVQUFLLEdBQUcsQ0FBQyxDQUFDO1FBQ1YsY0FBUyxHQUFHLENBQUMsQ0FBQztRQUNkLGFBQVEsR0FBRyxFQUFFLENBQUM7UUFDZCxvQkFBZSxHQUFhLEVBQUUsQ0FBQztRQUNyQixvQkFBZSxHQUFHLElBQUksWUFBWSxFQUFVLENBQUM7UUFDN0MsbUJBQWMsR0FBRyxJQUFJLFlBQVksRUFBVSxDQUFDO1FBQy9ELHlCQUFvQixHQUE0QyxFQUFFLENBQUM7UUFHakUsbURBQW1EO1FBQ25ELElBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsd0JBQXdCLENBQUMsQ0FBQztJQUN4RSxDQUFDO0lBRUQsZ0JBQWdCLENBQUMsSUFBWTtRQUMzQixJQUFJLElBQUksQ0FBQyxRQUFRLEtBQUssSUFBSSxFQUFFO1lBQzFCLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQ2hDO0lBQ0gsQ0FBQztJQUVELGtCQUFrQixDQUFDLE1BQWE7UUFDOUIsTUFBTSxNQUFNLEdBQUcsTUFBTSxDQUFDLE1BQTBCLENBQUM7UUFDakQsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQztRQUNqRSxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNqQyxNQUFNLENBQUMsS0FBSyxHQUFHLEVBQUUsQ0FBQztJQUNwQixDQUFDO0lBRUQsYUFBYSxDQUFDLENBQVMsRUFBRSxNQUF3QztRQUMvRCxPQUFPLE1BQU0sQ0FBQyxLQUFLLENBQUM7SUFDdEIsQ0FBQztJQUVELFdBQVcsQ0FBQyxPQUFzQjtRQUNoQyxNQUFNLEVBQUUsUUFBUSxFQUFFLGVBQWUsRUFBRSxNQUFNLEVBQUUsR0FBRyxPQUFPLENBQUM7UUFDdEQsSUFBSSxRQUFRLElBQUksZUFBZSxJQUFJLE1BQU0sRUFBRTtZQUN6QyxJQUFJLENBQUMsb0JBQW9CLEdBQUcsQ0FBQyxHQUFHLElBQUksR0FBRyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsZUFBZSxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztnQkFDOUYsS0FBSyxFQUFFLElBQUk7Z0JBQ1gsS0FBSyxFQUFFLEdBQUcsSUFBSSxFQUFFO2FBQ2pCLENBQUMsQ0FBQyxDQUFDO1NBQ0w7SUFDSCxDQUFDOzswR0E1Q1UsNkJBQTZCO2dGQUE3Qiw2QkFBNkI7UUE1QnRDLDhFQWdCTTtRQUVOLDhFQU9NOztRQXpCaUMsMENBQXFCO1FBa0JTLGVBQXFCO1FBQXJCLDBDQUFxQjs7dUZBVWpGLDZCQUE2QjtjQWxDekMsU0FBUztlQUFDO2dCQUNULFFBQVEsRUFBRSw2QkFBNkI7Z0JBQ3ZDLG1CQUFtQixFQUFFLEtBQUs7Z0JBQzFCLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJO2dCQUNyQyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtnQkFDL0MsUUFBUSxFQUFFOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0EyQlQ7YUFDRjs2REFFVSxJQUFJO2tCQUFaLEtBQUs7WUFDRyxRQUFRO2tCQUFoQixLQUFLO1lBQ0csZUFBZTtrQkFBdkIsS0FBSztZQUNHLGVBQWU7a0JBQXZCLEtBQUs7WUFDRyxNQUFNO2tCQUFkLEtBQUs7WUFDRyxLQUFLO2tCQUFiLEtBQUs7WUFDRyxTQUFTO2tCQUFqQixLQUFLO1lBQ0csUUFBUTtrQkFBaEIsS0FBSztZQUNHLGVBQWU7a0JBQXZCLEtBQUs7WUFDYSxlQUFlO2tCQUFqQyxNQUFNO1lBQ1ksY0FBYztrQkFBaEMsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5cclxuaW1wb3J0IHtcclxuICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcclxuICBDb21wb25lbnQsXHJcbiAgRWxlbWVudFJlZixcclxuICBFdmVudEVtaXR0ZXIsXHJcbiAgSW5wdXQsXHJcbiAgT25DaGFuZ2VzLFxyXG4gIE91dHB1dCxcclxuICBTaW1wbGVDaGFuZ2VzLFxyXG4gIFZpZXdFbmNhcHN1bGF0aW9uXHJcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEJ1dHRvblNpemUgfSBmcm9tIFwidGRzLXVpL2NvcmUvY29uZmlnXCI7XHJcbmltcG9ydCB7IFREU1BhZ2luYXRpb25JMThuSW50ZXJmYWNlIH0gZnJvbSAndGRzLXVpL2kxOG4nO1xyXG5pbXBvcnQgeyB0b051bWJlciB9IGZyb20gJ3Rkcy11aS9zaGFyZWQvdXRpbGl0eSc7XHJcblxyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdkaXZbdGRzLXBhZ2luYXRpb24tb3B0aW9uc10nLFxyXG4gIHByZXNlcnZlV2hpdGVzcGFjZXM6IGZhbHNlLFxyXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXHJcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXHJcbiAgdGVtcGxhdGU6IGBcclxuICAgIDxkaXYgY2xhc3M9J2lubGluZS1mbGV4IGl0ZW1zLWNlbnRlcicgKm5nSWY9XCJzaG93U2l6ZUNoYW5nZXJcIj5cclxuICAgIDx0ZHMtc2VsZWN0XHJcbiAgICBjbGFzcz1cInRkcy1wYWdpbmF0aW9uLW9wdGlvbnMtc2l6ZS1jaGFuZ2VyXCJcclxuICAgIFxyXG4gICAgW2Rpc2FibGVkXT1cImRpc2FibGVkXCJcclxuICAgIFtzaXplXT1cInNpemVcIlxyXG4gICAgW25nTW9kZWxdPVwicGFnZVNpemVcIlxyXG4gICAgKG5nTW9kZWxDaGFuZ2UpPVwib25QYWdlU2l6ZUNoYW5nZSgkZXZlbnQpXCJcclxuICAgIFtkYXRhXT1cImxpc3RPZlBhZ2VTaXplT3B0aW9uXCJcclxuICAgIHRleHRGaWVsZD1cImxhYmVsXCJcclxuICAgIHZhbHVlRmllbGQ9XCJ2YWx1ZVwiXHJcbiAgPiAgICAgXHJcbiAgPC90ZHMtc2VsZWN0PlxyXG4gICAgICA8ZGl2IGNsYXNzPSdtbC0yIG1pbi13LW1heCc+XHJcbiAgICAgICAge3tsb2NhbGUuaXRlbXNfcGVyX3BhZ2V9fVxyXG4gICAgICA8L2Rpdj5cclxuICAgIDwvZGl2PlxyXG4gICBcclxuICAgIDxkaXYgY2xhc3M9XCJ0ZHMtcGFnaW5hdGlvbi1vcHRpb25zLXF1aWNrLWp1bXBlciBmbGV4IGl0ZW1zLWNlbnRlciBcIiAqbmdJZj1cInNob3dRdWlja0p1bXBlclwiPlxyXG4gICAgICB7eyBsb2NhbGUuanVtcF90byB9fVxyXG4gICAgICA8dGRzLWZvcm0tZmllbGQgY2xhc3M9XCJ3LTIwIG14LTNcIj4gICAgIFxyXG4gICAgICAgIDxpbnB1dCBhdXRvY29tcGxldGU9XCJvZmZcIiB0ZHNJbnB1dCBhdXRvY29tcGxldGU9XCJvZmZcIiBcclxuICAgICAgICAgW2Rpc2FibGVkXT1cImRpc2FibGVkXCIgW3NpemVdPVwic2l6ZVwiIChrZXlkb3duLmVudGVyKT1cImp1bXBUb1BhZ2VWaWFJbnB1dCgkZXZlbnQpXCIgLz4gICAgXHJcbiAgICAgIDwvdGRzLWZvcm0tZmllbGQ+XHJcbiAgICAgIHt7IGxvY2FsZS5wYWdlIH19XHJcbiAgICA8L2Rpdj5cclxuICBgXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBURFNQYWdpbmF0aW9uT3B0aW9uc0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uQ2hhbmdlcyB7XHJcbiAgQElucHV0KCkgc2l6ZTogQnV0dG9uU2l6ZSA9ICdtZCc7XHJcbiAgQElucHV0KCkgZGlzYWJsZWQ6Ym9vbGVhbiA9IGZhbHNlO1xyXG4gIEBJbnB1dCgpIHNob3dTaXplQ2hhbmdlciA9IGZhbHNlO1xyXG4gIEBJbnB1dCgpIHNob3dRdWlja0p1bXBlciA9IGZhbHNlO1xyXG4gIEBJbnB1dCgpIGxvY2FsZSE6IFREU1BhZ2luYXRpb25JMThuSW50ZXJmYWNlO1xyXG4gIEBJbnB1dCgpIHRvdGFsID0gMDtcclxuICBASW5wdXQoKSBwYWdlSW5kZXggPSAxO1xyXG4gIEBJbnB1dCgpIHBhZ2VTaXplID0gMTA7XHJcbiAgQElucHV0KCkgcGFnZVNpemVPcHRpb25zOiBudW1iZXJbXSA9IFtdO1xyXG4gIEBPdXRwdXQoKSByZWFkb25seSBwYWdlSW5kZXhDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyPG51bWJlcj4oKTtcclxuICBAT3V0cHV0KCkgcmVhZG9ubHkgcGFnZVNpemVDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyPG51bWJlcj4oKTtcclxuICBsaXN0T2ZQYWdlU2l6ZU9wdGlvbjogQXJyYXk8eyB2YWx1ZTogbnVtYmVyOyBsYWJlbDogc3RyaW5nIH0+ID0gW107XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZWxlbWVudFJlZjogRWxlbWVudFJlZikge1xyXG4gICAgLy8gVE9ETzogbW92ZSB0byBob3N0IGFmdGVyIFZpZXcgRW5naW5lIGRlcHJlY2F0aW9uXHJcbiAgICB0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudC5jbGFzc0xpc3QuYWRkKCd0ZHMtcGFnaW5hdGlvbi1vcHRpb25zJyk7XHJcbiAgfVxyXG5cclxuICBvblBhZ2VTaXplQ2hhbmdlKHNpemU6IG51bWJlcik6IHZvaWQge1xyXG4gICAgaWYgKHRoaXMucGFnZVNpemUgIT09IHNpemUpIHtcclxuICAgICAgdGhpcy5wYWdlU2l6ZUNoYW5nZS5uZXh0KHNpemUpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAganVtcFRvUGFnZVZpYUlucHV0KCRldmVudDogRXZlbnQpOiB2b2lkIHtcclxuICAgIGNvbnN0IHRhcmdldCA9ICRldmVudC50YXJnZXQgYXMgSFRNTElucHV0RWxlbWVudDtcclxuICAgIGNvbnN0IGluZGV4ID0gTWF0aC5mbG9vcih0b051bWJlcih0YXJnZXQudmFsdWUsIHRoaXMucGFnZUluZGV4KSk7XHJcbiAgICB0aGlzLnBhZ2VJbmRleENoYW5nZS5uZXh0KGluZGV4KTtcclxuICAgIHRhcmdldC52YWx1ZSA9ICcnO1xyXG4gIH1cclxuXHJcbiAgdHJhY2tCeU9wdGlvbihfOiBudW1iZXIsIG9wdGlvbjogeyB2YWx1ZTogbnVtYmVyOyBsYWJlbDogc3RyaW5nIH0pOiBudW1iZXIge1xyXG4gICAgcmV0dXJuIG9wdGlvbi52YWx1ZTtcclxuICB9XHJcblxyXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkIHtcclxuICAgIGNvbnN0IHsgcGFnZVNpemUsIHBhZ2VTaXplT3B0aW9ucywgbG9jYWxlIH0gPSBjaGFuZ2VzO1xyXG4gICAgaWYgKHBhZ2VTaXplIHx8IHBhZ2VTaXplT3B0aW9ucyB8fCBsb2NhbGUpIHtcclxuICAgICAgdGhpcy5saXN0T2ZQYWdlU2l6ZU9wdGlvbiA9IFsuLi5uZXcgU2V0KFsuLi50aGlzLnBhZ2VTaXplT3B0aW9ucywgdGhpcy5wYWdlU2l6ZV0pXS5tYXAoaXRlbSA9PiAoe1xyXG4gICAgICAgIHZhbHVlOiBpdGVtLFxyXG4gICAgICAgIGxhYmVsOiBgJHtpdGVtfWBcclxuICAgICAgfSkpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXX0=