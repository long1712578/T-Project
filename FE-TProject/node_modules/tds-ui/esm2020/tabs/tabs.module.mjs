import { A11yModule } from '@angular/cdk/a11y';
import { BidiModule } from '@angular/cdk/bidi';
import { ObserversModule } from '@angular/cdk/observers';
import { PlatformModule } from '@angular/cdk/platform';
import { CdkScrollableModule } from '@angular/cdk/scrolling';
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { TDSOutletModule } from 'tds-ui/core/outlet';
import { TDSDropDownModule } from 'tds-ui/dropdown';
import { TDSTabAddButtonComponent } from './tab-add-button.component';
import { TDSTabBodyComponent } from './tab-body.component';
import { TDSTabCloseButtonComponent } from './tab-close-button.component';
import { TDSTabLinkDirective, TDSTabLinkTemplateDirective } from './tab-link.directive';
import { TDSTabNavBarComponent } from './tab-nav-bar.component';
import { TDSTabNavItemDirective } from './tab-nav-item.directive';
import { TDSTabNavOperationComponent } from './tab-nav-operation.component';
import { TDSTabScrollListDirective } from './tab-scroll-list.directive';
import { TDSTabComponent } from './tab.component';
import { TDSTabDirective } from './tab.directive';
import { TDSTabsInkBarDirective } from './tabs-ink-bar.directive';
import { TDSTabSetComponent } from './tabset.component';
import * as i0 from "@angular/core";
const DIRECTIVES = [
    TDSTabSetComponent,
    TDSTabComponent,
    TDSTabNavBarComponent,
    TDSTabNavItemDirective,
    TDSTabsInkBarDirective,
    TDSTabScrollListDirective,
    TDSTabNavOperationComponent,
    TDSTabAddButtonComponent,
    TDSTabCloseButtonComponent,
    TDSTabDirective,
    TDSTabBodyComponent,
    TDSTabLinkDirective,
    TDSTabLinkTemplateDirective
];
export class TDSTabsModule {
}
TDSTabsModule.ɵfac = function TDSTabsModule_Factory(t) { return new (t || TDSTabsModule)(); };
TDSTabsModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: TDSTabsModule });
TDSTabsModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [[
            BidiModule,
            CommonModule,
            ObserversModule,
            TDSOutletModule,
            PlatformModule,
            A11yModule,
            CdkScrollableModule,
            TDSDropDownModule
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSTabsModule, [{
        type: NgModule,
        args: [{
                declarations: [DIRECTIVES],
                exports: [DIRECTIVES],
                imports: [
                    BidiModule,
                    CommonModule,
                    ObserversModule,
                    TDSOutletModule,
                    PlatformModule,
                    A11yModule,
                    CdkScrollableModule,
                    TDSDropDownModule
                ]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0.ɵɵsetNgModuleScope(TDSTabsModule, { declarations: [TDSTabSetComponent,
        TDSTabComponent,
        TDSTabNavBarComponent,
        TDSTabNavItemDirective,
        TDSTabsInkBarDirective,
        TDSTabScrollListDirective,
        TDSTabNavOperationComponent,
        TDSTabAddButtonComponent,
        TDSTabCloseButtonComponent,
        TDSTabDirective,
        TDSTabBodyComponent,
        TDSTabLinkDirective,
        TDSTabLinkTemplateDirective], imports: [BidiModule,
        CommonModule,
        ObserversModule,
        TDSOutletModule,
        PlatformModule,
        A11yModule,
        CdkScrollableModule,
        TDSDropDownModule], exports: [TDSTabSetComponent,
        TDSTabComponent,
        TDSTabNavBarComponent,
        TDSTabNavItemDirective,
        TDSTabsInkBarDirective,
        TDSTabScrollListDirective,
        TDSTabNavOperationComponent,
        TDSTabAddButtonComponent,
        TDSTabCloseButtonComponent,
        TDSTabDirective,
        TDSTabBodyComponent,
        TDSTabLinkDirective,
        TDSTabLinkTemplateDirective] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFicy5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy90ZHMtdWkvdGFicy90YWJzLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDL0MsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN6RCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDdkQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDN0QsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBSXBELE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ3RFLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQzNELE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQzFFLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSwyQkFBMkIsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3hGLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ2hFLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ2xFLE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQzVFLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQ3hFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNsRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDbEQsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDbEUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7O0FBRXhELE1BQU0sVUFBVSxHQUFHO0lBQ2pCLGtCQUFrQjtJQUNsQixlQUFlO0lBQ2YscUJBQXFCO0lBQ3JCLHNCQUFzQjtJQUN0QixzQkFBc0I7SUFDdEIseUJBQXlCO0lBQ3pCLDJCQUEyQjtJQUMzQix3QkFBd0I7SUFDeEIsMEJBQTBCO0lBQzFCLGVBQWU7SUFDZixtQkFBbUI7SUFDbkIsbUJBQW1CO0lBQ25CLDJCQUEyQjtDQUM1QixDQUFDO0FBZ0JGLE1BQU0sT0FBTyxhQUFhOzswRUFBYixhQUFhOytEQUFiLGFBQWE7bUVBWGY7WUFDUCxVQUFVO1lBQ1YsWUFBWTtZQUNaLGVBQWU7WUFDZixlQUFlO1lBQ2YsY0FBYztZQUNkLFVBQVU7WUFDVixtQkFBbUI7WUFDbkIsaUJBQWlCO1NBQ2xCO3VGQUVVLGFBQWE7Y0FkekIsUUFBUTtlQUFDO2dCQUNSLFlBQVksRUFBRSxDQUFDLFVBQVUsQ0FBQztnQkFDMUIsT0FBTyxFQUFFLENBQUMsVUFBVSxDQUFDO2dCQUNyQixPQUFPLEVBQUU7b0JBQ1AsVUFBVTtvQkFDVixZQUFZO29CQUNaLGVBQWU7b0JBQ2YsZUFBZTtvQkFDZixjQUFjO29CQUNkLFVBQVU7b0JBQ1YsbUJBQW1CO29CQUNuQixpQkFBaUI7aUJBQ2xCO2FBQ0Y7O3dGQUNZLGFBQWEsbUJBN0J4QixrQkFBa0I7UUFDbEIsZUFBZTtRQUNmLHFCQUFxQjtRQUNyQixzQkFBc0I7UUFDdEIsc0JBQXNCO1FBQ3RCLHlCQUF5QjtRQUN6QiwyQkFBMkI7UUFDM0Isd0JBQXdCO1FBQ3hCLDBCQUEwQjtRQUMxQixlQUFlO1FBQ2YsbUJBQW1CO1FBQ25CLG1CQUFtQjtRQUNuQiwyQkFBMkIsYUFPekIsVUFBVTtRQUNWLFlBQVk7UUFDWixlQUFlO1FBQ2YsZUFBZTtRQUNmLGNBQWM7UUFDZCxVQUFVO1FBQ1YsbUJBQW1CO1FBQ25CLGlCQUFpQixhQTFCbkIsa0JBQWtCO1FBQ2xCLGVBQWU7UUFDZixxQkFBcUI7UUFDckIsc0JBQXNCO1FBQ3RCLHNCQUFzQjtRQUN0Qix5QkFBeUI7UUFDekIsMkJBQTJCO1FBQzNCLHdCQUF3QjtRQUN4QiwwQkFBMEI7UUFDMUIsZUFBZTtRQUNmLG1CQUFtQjtRQUNuQixtQkFBbUI7UUFDbkIsMkJBQTJCIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmltcG9ydCB7IEExMXlNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jZGsvYTExeSc7XHJcbmltcG9ydCB7IEJpZGlNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jZGsvYmlkaSc7XHJcbmltcG9ydCB7IE9ic2VydmVyc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9vYnNlcnZlcnMnO1xyXG5pbXBvcnQgeyBQbGF0Zm9ybU1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9wbGF0Zm9ybSc7XHJcbmltcG9ydCB7IENka1Njcm9sbGFibGVNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jZGsvc2Nyb2xsaW5nJztcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgVERTT3V0bGV0TW9kdWxlIH0gZnJvbSAndGRzLXVpL2NvcmUvb3V0bGV0JztcclxuaW1wb3J0IHsgVERTRHJvcERvd25Nb2R1bGUgfSBmcm9tICd0ZHMtdWkvZHJvcGRvd24nO1xyXG5cclxuXHJcblxyXG5pbXBvcnQgeyBURFNUYWJBZGRCdXR0b25Db21wb25lbnQgfSBmcm9tICcuL3RhYi1hZGQtYnV0dG9uLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFREU1RhYkJvZHlDb21wb25lbnQgfSBmcm9tICcuL3RhYi1ib2R5LmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFREU1RhYkNsb3NlQnV0dG9uQ29tcG9uZW50IH0gZnJvbSAnLi90YWItY2xvc2UtYnV0dG9uLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFREU1RhYkxpbmtEaXJlY3RpdmUsIFREU1RhYkxpbmtUZW1wbGF0ZURpcmVjdGl2ZSB9IGZyb20gJy4vdGFiLWxpbmsuZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgVERTVGFiTmF2QmFyQ29tcG9uZW50IH0gZnJvbSAnLi90YWItbmF2LWJhci5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBURFNUYWJOYXZJdGVtRGlyZWN0aXZlIH0gZnJvbSAnLi90YWItbmF2LWl0ZW0uZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgVERTVGFiTmF2T3BlcmF0aW9uQ29tcG9uZW50IH0gZnJvbSAnLi90YWItbmF2LW9wZXJhdGlvbi5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBURFNUYWJTY3JvbGxMaXN0RGlyZWN0aXZlIH0gZnJvbSAnLi90YWItc2Nyb2xsLWxpc3QuZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgVERTVGFiQ29tcG9uZW50IH0gZnJvbSAnLi90YWIuY29tcG9uZW50JztcclxuaW1wb3J0IHsgVERTVGFiRGlyZWN0aXZlIH0gZnJvbSAnLi90YWIuZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgVERTVGFic0lua0JhckRpcmVjdGl2ZSB9IGZyb20gJy4vdGFicy1pbmstYmFyLmRpcmVjdGl2ZSc7XHJcbmltcG9ydCB7IFREU1RhYlNldENvbXBvbmVudCB9IGZyb20gJy4vdGFic2V0LmNvbXBvbmVudCc7XHJcblxyXG5jb25zdCBESVJFQ1RJVkVTID0gW1xyXG4gIFREU1RhYlNldENvbXBvbmVudCxcclxuICBURFNUYWJDb21wb25lbnQsXHJcbiAgVERTVGFiTmF2QmFyQ29tcG9uZW50LFxyXG4gIFREU1RhYk5hdkl0ZW1EaXJlY3RpdmUsXHJcbiAgVERTVGFic0lua0JhckRpcmVjdGl2ZSxcclxuICBURFNUYWJTY3JvbGxMaXN0RGlyZWN0aXZlLFxyXG4gIFREU1RhYk5hdk9wZXJhdGlvbkNvbXBvbmVudCxcclxuICBURFNUYWJBZGRCdXR0b25Db21wb25lbnQsXHJcbiAgVERTVGFiQ2xvc2VCdXR0b25Db21wb25lbnQsXHJcbiAgVERTVGFiRGlyZWN0aXZlLFxyXG4gIFREU1RhYkJvZHlDb21wb25lbnQsXHJcbiAgVERTVGFiTGlua0RpcmVjdGl2ZSxcclxuICBURFNUYWJMaW5rVGVtcGxhdGVEaXJlY3RpdmVcclxuXTtcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgZGVjbGFyYXRpb25zOiBbRElSRUNUSVZFU10sXHJcbiAgZXhwb3J0czogW0RJUkVDVElWRVNdLFxyXG4gIGltcG9ydHM6IFtcclxuICAgIEJpZGlNb2R1bGUsXHJcbiAgICBDb21tb25Nb2R1bGUsXHJcbiAgICBPYnNlcnZlcnNNb2R1bGUsXHJcbiAgICBURFNPdXRsZXRNb2R1bGUsXHJcbiAgICBQbGF0Zm9ybU1vZHVsZSxcclxuICAgIEExMXlNb2R1bGUsXHJcbiAgICBDZGtTY3JvbGxhYmxlTW9kdWxlLFxyXG4gICAgVERTRHJvcERvd25Nb2R1bGVcclxuICBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBURFNUYWJzTW9kdWxlIHsgfVxyXG4iXX0=