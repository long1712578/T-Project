import { BidiModule } from '@angular/cdk/bidi';
import { DragDropModule } from '@angular/cdk/drag-drop';
import { OverlayModule } from '@angular/cdk/overlay';
import { PortalModule } from '@angular/cdk/portal';
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { TDSButtonModule } from 'tds-ui/button';
import { TDSPipesModule } from 'tds-ui/core/pipes';
import { TDSImageGroupComponent } from './image-group.component';
import { TDSImagePreviewComponent } from './image-preview.component';
import { TDSImageDirective } from './image.directive';
import { TDSImageService } from './image.service';
import * as i0 from "@angular/core";
export class TDSImageModule {
}
TDSImageModule.ɵfac = function TDSImageModule_Factory(t) { return new (t || TDSImageModule)(); };
TDSImageModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: TDSImageModule });
TDSImageModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ providers: [TDSImageService], imports: [[BidiModule, OverlayModule, PortalModule, DragDropModule, CommonModule, TDSPipesModule, TDSButtonModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSImageModule, [{
        type: NgModule,
        args: [{
                imports: [BidiModule, OverlayModule, PortalModule, DragDropModule, CommonModule, TDSPipesModule, TDSButtonModule],
                exports: [TDSImageDirective, TDSImagePreviewComponent, TDSImageGroupComponent],
                providers: [TDSImageService],
                declarations: [TDSImageDirective, TDSImagePreviewComponent, TDSImageGroupComponent]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0.ɵɵsetNgModuleScope(TDSImageModule, { declarations: [TDSImageDirective, TDSImagePreviewComponent, TDSImageGroupComponent], imports: [BidiModule, OverlayModule, PortalModule, DragDropModule, CommonModule, TDSPipesModule, TDSButtonModule], exports: [TDSImageDirective, TDSImagePreviewComponent, TDSImageGroupComponent] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1hZ2UubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvdGRzLXVpL2ltYWdlL2ltYWdlLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDL0MsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3hELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDbkQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNoRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFbkQsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDakUsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDckUsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDdEQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGlCQUFpQixDQUFDOztBQVFsRCxNQUFNLE9BQU8sY0FBYzs7NEVBQWQsY0FBYztnRUFBZCxjQUFjO3FFQUhaLENBQUMsZUFBZSxDQUFDLFlBRm5CLENBQUMsVUFBVSxFQUFFLGFBQWEsRUFBRSxZQUFZLEVBQUUsY0FBYyxFQUFFLFlBQVksRUFBRSxjQUFjLEVBQUUsZUFBZSxDQUFDO3VGQUt4RyxjQUFjO2NBTjFCLFFBQVE7ZUFBQztnQkFDTixPQUFPLEVBQUUsQ0FBQyxVQUFVLEVBQUUsYUFBYSxFQUFFLFlBQVksRUFBRSxjQUFjLEVBQUUsWUFBWSxFQUFFLGNBQWMsRUFBRSxlQUFlLENBQUM7Z0JBQ2pILE9BQU8sRUFBRSxDQUFDLGlCQUFpQixFQUFFLHdCQUF3QixFQUFFLHNCQUFzQixDQUFDO2dCQUM5RSxTQUFTLEVBQUUsQ0FBQyxlQUFlLENBQUM7Z0JBQzVCLFlBQVksRUFBRSxDQUFDLGlCQUFpQixFQUFFLHdCQUF3QixFQUFFLHNCQUFzQixDQUFDO2FBQ3RGOzt3RkFDWSxjQUFjLG1CQUZSLGlCQUFpQixFQUFFLHdCQUF3QixFQUFFLHNCQUFzQixhQUh4RSxVQUFVLEVBQUUsYUFBYSxFQUFFLFlBQVksRUFBRSxjQUFjLEVBQUUsWUFBWSxFQUFFLGNBQWMsRUFBRSxlQUFlLGFBQ3RHLGlCQUFpQixFQUFFLHdCQUF3QixFQUFFLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5cclxuaW1wb3J0IHsgQmlkaU1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9iaWRpJztcclxuaW1wb3J0IHsgRHJhZ0Ryb3BNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jZGsvZHJhZy1kcm9wJztcclxuaW1wb3J0IHsgT3ZlcmxheU1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9vdmVybGF5JztcclxuaW1wb3J0IHsgUG9ydGFsTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL3BvcnRhbCc7XHJcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFREU0J1dHRvbk1vZHVsZSB9IGZyb20gJ3Rkcy11aS9idXR0b24nO1xyXG5pbXBvcnQgeyBURFNQaXBlc01vZHVsZSB9IGZyb20gJ3Rkcy11aS9jb3JlL3BpcGVzJztcclxuXHJcbmltcG9ydCB7IFREU0ltYWdlR3JvdXBDb21wb25lbnQgfSBmcm9tICcuL2ltYWdlLWdyb3VwLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFREU0ltYWdlUHJldmlld0NvbXBvbmVudCB9IGZyb20gJy4vaW1hZ2UtcHJldmlldy5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBURFNJbWFnZURpcmVjdGl2ZSB9IGZyb20gJy4vaW1hZ2UuZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgVERTSW1hZ2VTZXJ2aWNlIH0gZnJvbSAnLi9pbWFnZS5zZXJ2aWNlJztcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgICBpbXBvcnRzOiBbQmlkaU1vZHVsZSwgT3ZlcmxheU1vZHVsZSwgUG9ydGFsTW9kdWxlLCBEcmFnRHJvcE1vZHVsZSwgQ29tbW9uTW9kdWxlLCBURFNQaXBlc01vZHVsZSwgVERTQnV0dG9uTW9kdWxlXSxcclxuICAgIGV4cG9ydHM6IFtURFNJbWFnZURpcmVjdGl2ZSwgVERTSW1hZ2VQcmV2aWV3Q29tcG9uZW50LCBURFNJbWFnZUdyb3VwQ29tcG9uZW50XSxcclxuICAgIHByb3ZpZGVyczogW1REU0ltYWdlU2VydmljZV0sXHJcbiAgICBkZWNsYXJhdGlvbnM6IFtURFNJbWFnZURpcmVjdGl2ZSwgVERTSW1hZ2VQcmV2aWV3Q29tcG9uZW50LCBURFNJbWFnZUdyb3VwQ29tcG9uZW50XVxyXG59KVxyXG5leHBvcnQgY2xhc3MgVERTSW1hZ2VNb2R1bGUge31cclxuIl19