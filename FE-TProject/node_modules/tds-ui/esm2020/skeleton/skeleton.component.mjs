import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';
import { toCssPixel } from 'tds-ui/shared/utility';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "./skeleton-element.component";
function TDSSkeletonComponent_ng_container_0_div_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 5);
    i0.ɵɵelement(1, "tds-skeleton-element", 6);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("tdsSize", ctx_r2.avatar.size || "md")("tdsShape", ctx_r2.avatar.shape || "circle");
} }
function TDSSkeletonComponent_ng_container_0_h3_3_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "h3", 7);
} if (rf & 2) {
    const ctx_r3 = i0.ɵɵnextContext(2);
    i0.ɵɵstyleProp("width", ctx_r3.toCSSUnit(ctx_r3.title.width));
} }
function TDSSkeletonComponent_ng_container_0_ul_4_li_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "li", 10);
} if (rf & 2) {
    const i_r7 = ctx.index;
    const ctx_r5 = i0.ɵɵnextContext(3);
    i0.ɵɵstyleProp("width", ctx_r5.toCSSUnit(ctx_r5.widthList[i_r7]));
} }
function TDSSkeletonComponent_ng_container_0_ul_4_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "ul", 8);
    i0.ɵɵtemplate(1, TDSSkeletonComponent_ng_container_0_ul_4_li_1_Template, 1, 2, "li", 9);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngForOf", ctx_r4.rowsList);
} }
function TDSSkeletonComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtemplate(1, TDSSkeletonComponent_ng_container_0_div_1_Template, 2, 2, "div", 1);
    i0.ɵɵelementStart(2, "div", 2);
    i0.ɵɵtemplate(3, TDSSkeletonComponent_ng_container_0_h3_3_Template, 1, 2, "h3", 3);
    i0.ɵɵtemplate(4, TDSSkeletonComponent_ng_container_0_ul_4_Template, 2, 1, "ul", 4);
    i0.ɵɵelementEnd();
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", !!ctx_r0.tdsAvatar);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", !!ctx_r0.tdsTitle);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", !!ctx_r0.tdsParagraph);
} }
function TDSSkeletonComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵprojection(1);
    i0.ɵɵelementContainerEnd();
} }
const _c0 = ["*"];
export class TDSSkeletonComponent {
    constructor(cdr, renderer, elementRef) {
        this.cdr = cdr;
        this.tdsActive = false;
        this.tdsLoading = true;
        this.tdsRound = false;
        this.tdsTitle = true;
        this.tdsAvatar = false;
        this.tdsParagraph = true;
        this.rowsList = [];
        this.widthList = [];
        renderer.addClass(elementRef.nativeElement, 'tds-skeleton');
    }
    toCSSUnit(value = '') {
        return toCssPixel(value);
    }
    getTitleProps() {
        const hasAvatar = !!this.tdsAvatar;
        const hasParagraph = !!this.tdsParagraph;
        let width = '';
        if (!hasAvatar && hasParagraph) {
            width = '38%';
        }
        else if (hasAvatar && hasParagraph) {
            width = '50%';
        }
        return { width, ...this.getProps(this.tdsTitle) };
    }
    getAvatarProps() {
        const shape = !!this.tdsTitle && !this.tdsParagraph ? 'square' : 'circle';
        const size = 'md';
        return { shape, size, ...this.getProps(this.tdsAvatar) };
    }
    getParagraphProps() {
        const hasAvatar = !!this.tdsAvatar;
        const hasTitle = !!this.tdsTitle;
        const basicProps = {};
        // Width
        if (!hasAvatar || !hasTitle) {
            basicProps.width = '61%';
        }
        // Rows
        if (!hasAvatar && hasTitle) {
            basicProps.rows = 3;
        }
        else {
            basicProps.rows = 2;
        }
        return { ...basicProps, ...this.getProps(this.tdsParagraph) };
    }
    getProps(prop) {
        return prop && typeof prop === 'object' ? prop : {};
    }
    getWidthList() {
        const { width, rows } = this.paragraph;
        let widthList = [];
        if (width && Array.isArray(width)) {
            widthList = width;
        }
        else if (width && !Array.isArray(width)) {
            widthList = [];
            widthList[rows - 1] = width;
        }
        return widthList;
    }
    updateProps() {
        this.title = this.getTitleProps();
        this.avatar = this.getAvatarProps();
        this.paragraph = this.getParagraphProps();
        this.rowsList = [...Array(this.paragraph.rows)];
        this.widthList = this.getWidthList();
        this.cdr.markForCheck();
    }
    ngOnInit() {
        this.updateProps();
    }
    ngOnChanges(changes) {
        if (changes.tdsTitle || changes.tdsAvatar || changes.tdsParagraph) {
            this.updateProps();
        }
    }
}
TDSSkeletonComponent.ɵfac = function TDSSkeletonComponent_Factory(t) { return new (t || TDSSkeletonComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef)); };
TDSSkeletonComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TDSSkeletonComponent, selectors: [["tds-skeleton"]], hostAttrs: [1, "table", "w-full", "box-border"], hostVars: 8, hostBindings: function TDSSkeletonComponent_HostBindings(rf, ctx) { if (rf & 2) {
        i0.ɵɵclassProp("tds-skeleton-with-avatar", !!ctx.tdsAvatar)("tds-skeleton-active", ctx.tdsActive)("animate-pulse", ctx.tdsActive)("tds-skeleton-round", !!ctx.tdsRound);
    } }, inputs: { tdsActive: "tdsActive", tdsLoading: "tdsLoading", tdsRound: "tdsRound", tdsTitle: "tdsTitle", tdsAvatar: "tdsAvatar", tdsParagraph: "tdsParagraph" }, exportAs: ["tdsSkeleton"], features: [i0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 2, vars: 2, consts: [[4, "ngIf"], ["class", "tds-skeleton-header table-cell pr-4 align-top", 4, "ngIf"], [1, "tds-skeleton-content", "w-full", "table-cell", "align-top", "m-0", "p-0"], ["class", "tds-skeleton-title w-full h-[18px] mt-4 bg-neutral-2-100 dark:bg-d-neutral-2-200 rounded-10", 3, "width", 4, "ngIf"], ["class", "tds-skeleton-paragraph mt-4 w-full", 4, "ngIf"], [1, "tds-skeleton-header", "table-cell", "pr-4", "align-top"], ["tdsType", "avatar", 3, "tdsSize", "tdsShape"], [1, "tds-skeleton-title", "w-full", "h-[18px]", "mt-4", "bg-neutral-2-100", "dark:bg-d-neutral-2-200", "rounded-10"], [1, "tds-skeleton-paragraph", "mt-4", "w-full"], ["class", "w-full h-[14px] bg-neutral-2-100 dark:bg-d-neutral-2-200 rounded-10 mb-2.5", 3, "width", 4, "ngFor", "ngForOf"], [1, "w-full", "h-[14px]", "bg-neutral-2-100", "dark:bg-d-neutral-2-200", "rounded-10", "mb-2.5"]], template: function TDSSkeletonComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵprojectionDef();
        i0.ɵɵtemplate(0, TDSSkeletonComponent_ng_container_0_Template, 5, 3, "ng-container", 0);
        i0.ɵɵtemplate(1, TDSSkeletonComponent_ng_container_1_Template, 2, 0, "ng-container", 0);
    } if (rf & 2) {
        i0.ɵɵproperty("ngIf", ctx.tdsLoading);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", !ctx.tdsLoading);
    } }, directives: [i1.NgIf, i2.TDSSkeletonElementDirective, i2.TDSSkeletonElementAvatarComponent, i1.NgForOf], encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSSkeletonComponent, [{
        type: Component,
        args: [{
                changeDetection: ChangeDetectionStrategy.OnPush,
                encapsulation: ViewEncapsulation.None,
                selector: 'tds-skeleton',
                exportAs: 'tdsSkeleton',
                host: {
                    'class': "table w-full box-border",
                    '[class.tds-skeleton-with-avatar]': '!!tdsAvatar',
                    '[class.tds-skeleton-active]': 'tdsActive',
                    '[class.animate-pulse]': 'tdsActive',
                    '[class.tds-skeleton-round]': '!!tdsRound'
                },
                template: `
    <ng-container *ngIf="tdsLoading">
      <div class="tds-skeleton-header table-cell pr-4 align-top" *ngIf="!!tdsAvatar">
        <tds-skeleton-element tdsType="avatar" [tdsSize]="avatar.size || 'md'" [tdsShape]="avatar.shape || 'circle'"></tds-skeleton-element>
      </div>
      <div class="tds-skeleton-content w-full table-cell align-top m-0 p-0">
        <h3 *ngIf="!!tdsTitle" class="tds-skeleton-title w-full h-[18px] mt-4 bg-neutral-2-100 dark:bg-d-neutral-2-200 rounded-10" [style.width]="toCSSUnit(title.width)"></h3>
        <ul *ngIf="!!tdsParagraph" class="tds-skeleton-paragraph mt-4 w-full">
          <li class="w-full h-[14px] bg-neutral-2-100 dark:bg-d-neutral-2-200 rounded-10 mb-2.5" *ngFor="let row of rowsList; let i = index" [style.width]="toCSSUnit(widthList[i])"></li>
        </ul>
      </div>
    </ng-container>
    <ng-container *ngIf="!tdsLoading">
      <ng-content></ng-content>
    </ng-container>
  `
            }]
    }], function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.Renderer2 }, { type: i0.ElementRef }]; }, { tdsActive: [{
            type: Input
        }], tdsLoading: [{
            type: Input
        }], tdsRound: [{
            type: Input
        }], tdsTitle: [{
            type: Input
        }], tdsAvatar: [{
            type: Input
        }], tdsParagraph: [{
            type: Input
        }] }); })();
//# sourceMappingURL=data:application/json;base64,