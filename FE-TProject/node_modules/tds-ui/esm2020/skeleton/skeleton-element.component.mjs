import { ChangeDetectionStrategy, Component, Directive, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
const _c0 = ["tdsType", "button"];
const _c1 = ["tdsType", "avatar"];
const _c2 = ["tdsType", "input"];
const _c3 = ["tdsType", "image"];
export class TDSSkeletonElementDirective {
    constructor(elementRef) {
        this.elementRef = elementRef;
        this.tdsActive = false;
        // TODO: move to host after View Engine deprecation
        this.elementRef.nativeElement.classList.add('tds-skeleton', 'tds-skeleton-element');
    }
}
TDSSkeletonElementDirective.ɵfac = function TDSSkeletonElementDirective_Factory(t) { return new (t || TDSSkeletonElementDirective)(i0.ɵɵdirectiveInject(i0.ElementRef)); };
TDSSkeletonElementDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: TDSSkeletonElementDirective, selectors: [["tds-skeleton-element"]], hostVars: 4, hostBindings: function TDSSkeletonElementDirective_HostBindings(rf, ctx) { if (rf & 2) {
        i0.ɵɵclassProp("tds-skeleton-active", ctx.tdsActive)("animate-pulse", ctx.tdsActive);
    } }, inputs: { tdsActive: "tdsActive", tdsType: "tdsType" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSSkeletonElementDirective, [{
        type: Directive,
        args: [{
                selector: 'tds-skeleton-element',
                host: {
                    '[class.tds-skeleton-active]': 'tdsActive',
                    '[class.animate-pulse]': 'tdsActive',
                }
            }]
    }], function () { return [{ type: i0.ElementRef }]; }, { tdsActive: [{
            type: Input
        }], tdsType: [{
            type: Input
        }] }); })();
export class TDSSkeletonElementButtonComponent {
    constructor() {
        this.tdsShape = 'round';
        this.tdsSize = 'md';
        this.styleMap = {};
    }
    ngOnChanges(changes) {
        this.styleMap = this.updateSize();
    }
    updateSize() {
        let result = {
            width: '68px',
            height: '34px'
        };
        switch (this.tdsSize) {
            case 'sm':
                result = {
                    width: '60px',
                    height: '30px'
                };
                break;
            case 'lg':
                result = {
                    width: '76px',
                    height: '38px'
                };
                break;
            default:
                break;
        }
        return result;
    }
}
TDSSkeletonElementButtonComponent.ɵfac = function TDSSkeletonElementButtonComponent_Factory(t) { return new (t || TDSSkeletonElementButtonComponent)(); };
TDSSkeletonElementButtonComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TDSSkeletonElementButtonComponent, selectors: [["tds-skeleton-element", "tdsType", "button"]], inputs: { tdsShape: "tdsShape", tdsSize: "tdsSize" }, features: [i0.ɵɵNgOnChangesFeature], attrs: _c0, decls: 1, vars: 15, consts: [[1, "tds-skeleton-button", "inline-block", "bg-neutral-2-100", "dark:bg-d-neutral-2-200", 3, "ngStyle"]], template: function TDSSkeletonElementButtonComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelement(0, "span", 0);
    } if (rf & 2) {
        i0.ɵɵclassProp("tds-skeleton-button-round", ctx.tdsShape === "round")("rounded-md", ctx.tdsShape === "round")("tds-skeleton-button-circle", ctx.tdsShape === "circle")("rounded-full", ctx.tdsShape === "circle")("tds-skeleton-button-lg", ctx.tdsSize === "lg")("tds-skeleton-button-sm", ctx.tdsSize === "sm")("tds-skeleton-button-md", ctx.tdsSize === "md");
        i0.ɵɵproperty("ngStyle", ctx.styleMap);
    } }, directives: [i1.NgStyle], encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSSkeletonElementButtonComponent, [{
        type: Component,
        args: [{
                changeDetection: ChangeDetectionStrategy.OnPush,
                selector: 'tds-skeleton-element[tdsType="button"]',
                template: `
    <span
      class="tds-skeleton-button inline-block  bg-neutral-2-100 dark:bg-d-neutral-2-200"
      [class.tds-skeleton-button-round]="tdsShape === 'round'"
      [class.rounded-md]="tdsShape === 'round'"
      [class.tds-skeleton-button-circle]="tdsShape === 'circle'"
      [class.rounded-full]="tdsShape === 'circle'"
      [class.tds-skeleton-button-lg]="tdsSize === 'lg'"
      [class.tds-skeleton-button-sm]="tdsSize === 'sm'"
      [class.tds-skeleton-button-md]="tdsSize === 'md'"
      [ngStyle]="styleMap"
    ></span>
  `
            }]
    }], null, { tdsShape: [{
            type: Input
        }], tdsSize: [{
            type: Input
        }] }); })();
export class TDSSkeletonElementAvatarComponent {
    constructor() {
        this.tdsShape = 'circle';
        this.tdsSize = 'md';
        this.styleMap = {};
    }
    ngOnChanges(changes) {
        if (changes.tdsSize && typeof this.tdsSize === 'number') {
            const sideLength = `${this.tdsSize}px`;
            this.styleMap = { width: sideLength, height: sideLength, 'line-height': sideLength };
        }
        else {
            let sideLength = '58px';
            if (this.tdsShape === 'square') {
                sideLength = '98px';
            }
            this.styleMap = { width: sideLength, height: sideLength, 'line-height': sideLength };
        }
    }
}
TDSSkeletonElementAvatarComponent.ɵfac = function TDSSkeletonElementAvatarComponent_Factory(t) { return new (t || TDSSkeletonElementAvatarComponent)(); };
TDSSkeletonElementAvatarComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TDSSkeletonElementAvatarComponent, selectors: [["tds-skeleton-element", "tdsType", "avatar"]], hostAttrs: [1, "inline-block"], inputs: { tdsShape: "tdsShape", tdsSize: "tdsSize" }, features: [i0.ɵɵNgOnChangesFeature], attrs: _c1, decls: 1, vars: 9, consts: [[1, "tds-skeleton-avatar", "rounded-[50%]", "h-[58px]", "w-[58px]", "inline-block", "align-top", "bg-neutral-2-100", "dark:bg-d-neutral-2-200", 3, "ngStyle"]], template: function TDSSkeletonElementAvatarComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelement(0, "span", 0);
    } if (rf & 2) {
        i0.ɵɵclassProp("tds-skeleton-avatar-square", ctx.tdsShape === "square")("tds-skeleton-avatar-circle", ctx.tdsShape === "circle")("tds-skeleton-avatar-lg", ctx.tdsSize === "lg")("tds-skeleton-avatar-sm", ctx.tdsSize === "sm");
        i0.ɵɵproperty("ngStyle", ctx.styleMap);
    } }, directives: [i1.NgStyle], encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSSkeletonElementAvatarComponent, [{
        type: Component,
        args: [{
                changeDetection: ChangeDetectionStrategy.OnPush,
                selector: 'tds-skeleton-element[tdsType="avatar"]',
                host: {
                    class: "inline-block"
                },
                template: `
    <span
      class="tds-skeleton-avatar rounded-[50%] h-[58px] w-[58px] inline-block align-top bg-neutral-2-100 dark:bg-d-neutral-2-200 "
      [class.tds-skeleton-avatar-square]="tdsShape === 'square'"
      [class.tds-skeleton-avatar-circle]="tdsShape === 'circle'"
      [class.tds-skeleton-avatar-lg]="tdsSize === 'lg'"
      [class.tds-skeleton-avatar-sm]="tdsSize === 'sm'"
      [ngStyle]="styleMap"
    ></span>
  `
            }]
    }], null, { tdsShape: [{
            type: Input
        }], tdsSize: [{
            type: Input
        }] }); })();
export class TDSSkeletonElementInputComponent {
    constructor() {
        this.tdsSize = 'md';
        this.styleMap = {};
    }
    ngOnChanges(changes) {
        this.styleMap = this.updateSize();
    }
    updateSize() {
        let result = {
            // width: '68px',
            height: '34px'
        };
        switch (this.tdsSize) {
            case 'sm':
                result = {
                    // width: '60px',
                    height: '28px'
                };
                break;
            case 'lg':
                result = {
                    // width: '76px',
                    height: '38px'
                };
                break;
            default:
                break;
        }
        return result;
    }
}
TDSSkeletonElementInputComponent.ɵfac = function TDSSkeletonElementInputComponent_Factory(t) { return new (t || TDSSkeletonElementInputComponent)(); };
TDSSkeletonElementInputComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TDSSkeletonElementInputComponent, selectors: [["tds-skeleton-element", "tdsType", "input"]], hostAttrs: [1, "inline-block"], inputs: { tdsSize: "tdsSize" }, features: [i0.ɵɵNgOnChangesFeature], attrs: _c2, decls: 1, vars: 7, consts: [[1, "tds-skeleton-input", "block", "align-top", "bg-neutral-2-100", "dark:bg-d-neutral-2-200", "w-full", "rounded-md", 3, "ngStyle"]], template: function TDSSkeletonElementInputComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelement(0, "span", 0);
    } if (rf & 2) {
        i0.ɵɵclassProp("tds-skeleton-input-lg", ctx.tdsSize === "lg")("tds-skeleton-input-sm", ctx.tdsSize === "sm")("tds-skeleton-input-md", ctx.tdsSize === "md");
        i0.ɵɵproperty("ngStyle", ctx.styleMap);
    } }, directives: [i1.NgStyle], encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSSkeletonElementInputComponent, [{
        type: Component,
        args: [{
                changeDetection: ChangeDetectionStrategy.OnPush,
                selector: 'tds-skeleton-element[tdsType="input"]',
                host: {
                    class: "inline-block"
                },
                template: `
    <span
      class="tds-skeleton-input block align-top bg-neutral-2-100 dark:bg-d-neutral-2-200 w-full rounded-md"
      [class.tds-skeleton-input-lg]="tdsSize === 'lg'"
      [class.tds-skeleton-input-sm]="tdsSize === 'sm'"
      [class.tds-skeleton-input-md]="tdsSize === 'md'"
      [ngStyle]="styleMap"
    ></span>
  `
            }]
    }], null, { tdsSize: [{
            type: Input
        }] }); })();
export class TDSSkeletonElementImageComponent {
}
TDSSkeletonElementImageComponent.ɵfac = function TDSSkeletonElementImageComponent_Factory(t) { return new (t || TDSSkeletonElementImageComponent)(); };
TDSSkeletonElementImageComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TDSSkeletonElementImageComponent, selectors: [["tds-skeleton-element", "tdsType", "image"]], hostAttrs: [1, "inline-block"], attrs: _c3, decls: 3, vars: 0, consts: [[1, "tds-skeleton-image", "flex", "items-center", "justify-center", "align-top", "w-[96px]", "h-[96px]"], ["viewBox", "0 0 1098 1024", "xmlns", "http://www.w3.org/2000/svg", 1, "tds-skeleton-image-svg"], ["d", "M365.714286 329.142857q0 45.714286-32.036571 77.677714t-77.677714 32.036571-77.677714-32.036571-32.036571-77.677714 32.036571-77.677714 77.677714-32.036571 77.677714 32.036571 32.036571 77.677714zM950.857143 548.571429l0 256-804.571429 0 0-109.714286 182.857143-182.857143 91.428571 91.428571 292.571429-292.571429zM1005.714286 146.285714l-914.285714 0q-7.460571 0-12.873143 5.412571t-5.412571 12.873143l0 694.857143q0 7.460571 5.412571 12.873143t12.873143 5.412571l914.285714 0q7.460571 0 12.873143-5.412571t5.412571-12.873143l0-694.857143q0-7.460571-5.412571-12.873143t-12.873143-5.412571zM1097.142857 164.571429l0 694.857143q0 37.741714-26.843429 64.585143t-64.585143 26.843429l-914.285714 0q-37.741714 0-64.585143-26.843429t-26.843429-64.585143l0-694.857143q0-37.741714 26.843429-64.585143t64.585143-26.843429l914.285714 0q37.741714 0 64.585143 26.843429t26.843429 64.585143z", 1, "fill-current", "text-neutral-2-100", "dark:text-d-neutral-2-200"]], template: function TDSSkeletonElementImageComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span", 0);
        i0.ɵɵnamespaceSVG();
        i0.ɵɵelementStart(1, "svg", 1);
        i0.ɵɵelement(2, "path", 2);
        i0.ɵɵelementEnd()();
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSSkeletonElementImageComponent, [{
        type: Component,
        args: [{
                changeDetection: ChangeDetectionStrategy.OnPush,
                selector: 'tds-skeleton-element[tdsType="image"]',
                host: {
                    class: "inline-block"
                },
                template: `
    <span class="tds-skeleton-image flex items-center justify-center align-top w-[96px] h-[96px] ">
      <svg class="tds-skeleton-image-svg" viewBox="0 0 1098 1024" xmlns="http://www.w3.org/2000/svg">
        <path
          d="M365.714286 329.142857q0 45.714286-32.036571 77.677714t-77.677714 32.036571-77.677714-32.036571-32.036571-77.677714 32.036571-77.677714 77.677714-32.036571 77.677714 32.036571 32.036571 77.677714zM950.857143 548.571429l0 256-804.571429 0 0-109.714286 182.857143-182.857143 91.428571 91.428571 292.571429-292.571429zM1005.714286 146.285714l-914.285714 0q-7.460571 0-12.873143 5.412571t-5.412571 12.873143l0 694.857143q0 7.460571 5.412571 12.873143t12.873143 5.412571l914.285714 0q7.460571 0 12.873143-5.412571t5.412571-12.873143l0-694.857143q0-7.460571-5.412571-12.873143t-12.873143-5.412571zM1097.142857 164.571429l0 694.857143q0 37.741714-26.843429 64.585143t-64.585143 26.843429l-914.285714 0q-37.741714 0-64.585143-26.843429t-26.843429-64.585143l0-694.857143q0-37.741714 26.843429-64.585143t64.585143-26.843429l914.285714 0q37.741714 0 64.585143 26.843429t26.843429 64.585143z"
          class="fill-current text-neutral-2-100 dark:text-d-neutral-2-200"
        />
      </svg>
    </span>
  `
            }]
    }], null, null); })();
//# sourceMappingURL=data:application/json;base64,