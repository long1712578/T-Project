import { __decorate } from "tslib";
import { ChangeDetectionStrategy, Component, ContentChildren, Directive, Input, Optional, ViewEncapsulation } from '@angular/core';
import { merge, Subject } from 'rxjs';
import { map, mergeMap, startWith, switchMap, takeUntil } from 'rxjs/operators';
import { InputBoolean } from 'tds-ui/shared/utility';
import { TDSInputDirective } from './input.directive';
import * as i0 from "@angular/core";
import * as i1 from "@angular/cdk/a11y";
import * as i2 from "@angular/cdk/bidi";
import * as i3 from "@angular/common";
import * as i4 from "./input-group-slot.component";
function TDSInputGroupComponent_span_0_span_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "span", 7);
} if (rf & 2) {
    const ctx_r7 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("icon", ctx_r7.tdsAddOnBeforeIcon)("template", ctx_r7.tdsAddOnBefore);
} }
function TDSInputGroupComponent_span_0_span_2_ng_template_1_Template(rf, ctx) { }
function TDSInputGroupComponent_span_0_span_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "span", 8);
    i0.ɵɵtemplate(1, TDSInputGroupComponent_span_0_span_2_ng_template_1_Template, 0, 0, "ng-template", 9);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r8 = i0.ɵɵnextContext(2);
    const _r3 = i0.ɵɵreference(4);
    i0.ɵɵclassProp("tds-input-affix-wrapper-disabled", ctx_r8.disabled)("tds-input-affix-wrapper-sm", ctx_r8.isSmall)("tds-input-affix-wrapper-lg", ctx_r8.isLarge);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngTemplateOutlet", _r3);
} }
function TDSInputGroupComponent_span_0_span_3_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "span", 7);
} if (rf & 2) {
    const ctx_r9 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("icon", ctx_r9.tdsAddOnAfterIcon)("template", ctx_r9.tdsAddOnAfter);
} }
function TDSInputGroupComponent_span_0_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "span", 4);
    i0.ɵɵtemplate(1, TDSInputGroupComponent_span_0_span_1_Template, 1, 2, "span", 5);
    i0.ɵɵtemplate(2, TDSInputGroupComponent_span_0_span_2_Template, 2, 7, "span", 6);
    i0.ɵɵtemplate(3, TDSInputGroupComponent_span_0_span_3_Template, 1, 2, "span", 5);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    const _r5 = i0.ɵɵreference(6);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r0.tdsAddOnBefore || ctx_r0.tdsAddOnBeforeIcon);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r0.isAffix)("ngIfElse", _r5);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r0.tdsAddOnAfter || ctx_r0.tdsAddOnAfterIcon);
} }
function TDSInputGroupComponent_ng_template_1_ng_template_0_ng_template_0_Template(rf, ctx) { }
function TDSInputGroupComponent_ng_template_1_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtemplate(0, TDSInputGroupComponent_ng_template_1_ng_template_0_ng_template_0_Template, 0, 0, "ng-template", 9);
} if (rf & 2) {
    i0.ɵɵnextContext(2);
    const _r3 = i0.ɵɵreference(4);
    i0.ɵɵproperty("ngTemplateOutlet", _r3);
} }
function TDSInputGroupComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtemplate(0, TDSInputGroupComponent_ng_template_1_ng_template_0_Template, 1, 1, "ng-template", 10);
} if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext();
    const _r5 = i0.ɵɵreference(6);
    i0.ɵɵproperty("ngIf", ctx_r2.isAffix)("ngIfElse", _r5);
} }
function TDSInputGroupComponent_ng_template_3_span_0_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "span", 13);
} if (rf & 2) {
    const ctx_r13 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("icon", ctx_r13.tdsPrefixIcon)("template", ctx_r13.tdsPrefix);
} }
function TDSInputGroupComponent_ng_template_3_ng_template_1_Template(rf, ctx) { }
function TDSInputGroupComponent_ng_template_3_span_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "span", 14);
} if (rf & 2) {
    const ctx_r15 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("icon", ctx_r15.tdsSuffixIcon)("template", ctx_r15.tdsSuffix);
} }
function TDSInputGroupComponent_ng_template_3_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtemplate(0, TDSInputGroupComponent_ng_template_3_span_0_Template, 1, 2, "span", 11);
    i0.ɵɵtemplate(1, TDSInputGroupComponent_ng_template_3_ng_template_1_Template, 0, 0, "ng-template", 9);
    i0.ɵɵtemplate(2, TDSInputGroupComponent_ng_template_3_span_2_Template, 1, 2, "span", 12);
} if (rf & 2) {
    const ctx_r4 = i0.ɵɵnextContext();
    const _r5 = i0.ɵɵreference(6);
    i0.ɵɵproperty("ngIf", ctx_r4.tdsPrefix || ctx_r4.tdsPrefixIcon);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngTemplateOutlet", _r5);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r4.tdsSuffix || ctx_r4.tdsSuffixIcon);
} }
function TDSInputGroupComponent_ng_template_5_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵprojection(0);
} }
const _c0 = ["*"];
export class TDSInputGroupWhitSuffixOrPrefixDirective {
    constructor(elementRef) {
        this.elementRef = elementRef;
    }
}
TDSInputGroupWhitSuffixOrPrefixDirective.ɵfac = function TDSInputGroupWhitSuffixOrPrefixDirective_Factory(t) { return new (t || TDSInputGroupWhitSuffixOrPrefixDirective)(i0.ɵɵdirectiveInject(i0.ElementRef)); };
TDSInputGroupWhitSuffixOrPrefixDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: TDSInputGroupWhitSuffixOrPrefixDirective, selectors: [["tds-input-group", "tdsSuffix", ""], ["tds-input-group", "tdsPrefix", ""]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSInputGroupWhitSuffixOrPrefixDirective, [{
        type: Directive,
        args: [{
                selector: `tds-input-group[tdsSuffix], tds-input-group[tdsPrefix]`
            }]
    }], function () { return [{ type: i0.ElementRef }]; }, null); })();
export class TDSInputGroupComponent {
    constructor(focusMonitor, elementRef, cdr, directionality) {
        this.focusMonitor = focusMonitor;
        this.elementRef = elementRef;
        this.cdr = cdr;
        this.directionality = directionality;
        this.tdsAddOnBeforeIcon = null;
        this.tdsAddOnAfterIcon = null;
        this.tdsPrefixIcon = null;
        this.tdsSuffixIcon = null;
        this.tdsSize = 'md';
        this.tdsSearch = false;
        this.tdsCompact = false;
        this.isLarge = false;
        this.isSmall = false;
        this.isAffix = false;
        this.isAddOn = false;
        this.focused = false;
        this.disabled = false;
        this.dir = 'ltr';
        this.destroy$ = new Subject();
    }
    updateChildrenInputSize() {
        if (this.listOfTDSInputDirective) {
            this.listOfTDSInputDirective.forEach(item => (item.tdsSize = this.tdsSize));
        }
    }
    ngOnInit() {
        this.focusMonitor
            .monitor(this.elementRef, true)
            .pipe(takeUntil(this.destroy$))
            .subscribe(focusOrigin => {
            this.focused = !!focusOrigin;
            this.cdr.markForCheck();
        });
        this.dir = this.directionality.value;
        this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction) => {
            this.dir = direction;
        });
    }
    ngAfterContentInit() {
        this.updateChildrenInputSize();
        const listOfInputChange$ = this.listOfTDSInputDirective.changes.pipe(startWith(this.listOfTDSInputDirective));
        listOfInputChange$
            .pipe(switchMap(list => merge(...[listOfInputChange$, ...list.map((input) => input.disabled$)])), mergeMap(() => listOfInputChange$), map(list => list.some((input) => input.disabled)), takeUntil(this.destroy$))
            .subscribe(disabled => {
            this.disabled = disabled;
            this.cdr.markForCheck();
        });
    }
    ngOnChanges(changes) {
        const { tdsSize, tdsSuffix, tdsPrefix, tdsPrefixIcon, tdsSuffixIcon, tdsAddOnAfter, tdsAddOnBefore, tdsAddOnAfterIcon, tdsAddOnBeforeIcon } = changes;
        if (tdsSize) {
            this.updateChildrenInputSize();
            this.isLarge = this.tdsSize === 'xl';
            this.isSmall = this.tdsSize === 'sm';
        }
        if (tdsSuffix || tdsPrefix || tdsPrefixIcon || tdsSuffixIcon) {
            this.isAffix = !!(this.tdsSuffix || this.tdsPrefix || this.tdsPrefixIcon || this.tdsSuffixIcon);
        }
        if (tdsAddOnAfter || tdsAddOnBefore || tdsAddOnAfterIcon || tdsAddOnBeforeIcon) {
            this.isAddOn = !!(this.tdsAddOnAfter || this.tdsAddOnBefore || this.tdsAddOnAfterIcon || this.tdsAddOnBeforeIcon);
        }
    }
    ngOnDestroy() {
        this.focusMonitor.stopMonitoring(this.elementRef);
        this.destroy$.next();
        this.destroy$.complete();
    }
}
TDSInputGroupComponent.ɵfac = function TDSInputGroupComponent_Factory(t) { return new (t || TDSInputGroupComponent)(i0.ɵɵdirectiveInject(i1.FocusMonitor), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.Directionality, 8)); };
TDSInputGroupComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TDSInputGroupComponent, selectors: [["tds-input-group"]], contentQueries: function TDSInputGroupComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        i0.ɵɵcontentQuery(dirIndex, TDSInputDirective, 4);
    } if (rf & 2) {
        let _t;
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listOfTDSInputDirective = _t);
    } }, hostVars: 40, hostBindings: function TDSInputGroupComponent_HostBindings(rf, ctx) { if (rf & 2) {
        i0.ɵɵclassProp("tds-input-group-compact", ctx.tdsCompact)("tds-input-search-enter-button", ctx.tdsSearch)("tds-input-search", ctx.tdsSearch)("tds-input-search-rtl", ctx.dir === "rtl")("tds-input-search-sm", ctx.tdsSearch && ctx.isSmall)("tds-input-search-large", ctx.tdsSearch && ctx.isLarge)("tds-input-group-wrapper", ctx.isAddOn)("tds-input-group-wrapper-rtl", ctx.dir === "rtl")("tds-input-group-wrapper-lg", ctx.isAddOn && ctx.isLarge)("tds-input-group-wrapper-sm", ctx.isAddOn && ctx.isSmall)("tds-input-affix-wrapper", ctx.isAffix && !ctx.isAddOn)("tds-input-affix-wrapper-rtl", ctx.dir === "rtl")("tds-input-affix-wrapper-focused", ctx.isAffix && ctx.focused)("tds-input-affix-wrapper-disabled", ctx.isAffix && ctx.disabled)("tds-input-affix-wrapper-lg", ctx.isAffix && !ctx.isAddOn && ctx.isLarge)("tds-input-affix-wrapper-sm", ctx.isAffix && !ctx.isAddOn && ctx.isSmall)("tds-input-group", !ctx.isAffix && !ctx.isAddOn)("tds-input-group-rtl", ctx.dir === "rtl")("tds-input-group-lg", !ctx.isAffix && !ctx.isAddOn && ctx.isLarge)("tds-input-group-sm", !ctx.isAffix && !ctx.isAddOn && ctx.isSmall);
    } }, inputs: { tdsAddOnBeforeIcon: "tdsAddOnBeforeIcon", tdsAddOnAfterIcon: "tdsAddOnAfterIcon", tdsPrefixIcon: "tdsPrefixIcon", tdsSuffixIcon: "tdsSuffixIcon", tdsAddOnBefore: "tdsAddOnBefore", tdsAddOnAfter: "tdsAddOnAfter", tdsPrefix: "tdsPrefix", tdsSuffix: "tdsSuffix", tdsSize: "tdsSize", tdsSearch: "tdsSearch", tdsCompact: "tdsCompact" }, exportAs: ["tdsInputGroup"], features: [i0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 7, vars: 2, consts: [["class", "tds-input-wrapper tds-input-group", 4, "ngIf", "ngIfElse"], ["noAddOnTemplate", ""], ["affixTemplate", ""], ["contentTemplate", ""], [1, "tds-input-wrapper", "tds-input-group"], ["tds-input-group-slot", "", "type", "addon", 3, "icon", "template", 4, "ngIf"], ["class", "tds-input-affix-wrapper", 3, "tds-input-affix-wrapper-disabled", "tds-input-affix-wrapper-sm", "tds-input-affix-wrapper-lg", 4, "ngIf", "ngIfElse"], ["tds-input-group-slot", "", "type", "addon", 3, "icon", "template"], [1, "tds-input-affix-wrapper"], [3, "ngTemplateOutlet"], [3, "ngIf", "ngIfElse"], ["tds-input-group-slot", "", "type", "prefix", 3, "icon", "template", 4, "ngIf"], ["tds-input-group-slot", "", "type", "suffix", 3, "icon", "template", 4, "ngIf"], ["tds-input-group-slot", "", "type", "prefix", 3, "icon", "template"], ["tds-input-group-slot", "", "type", "suffix", 3, "icon", "template"]], template: function TDSInputGroupComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵprojectionDef();
        i0.ɵɵtemplate(0, TDSInputGroupComponent_span_0_Template, 4, 4, "span", 0);
        i0.ɵɵtemplate(1, TDSInputGroupComponent_ng_template_1_Template, 1, 2, "ng-template", null, 1, i0.ɵɵtemplateRefExtractor);
        i0.ɵɵtemplate(3, TDSInputGroupComponent_ng_template_3_Template, 3, 3, "ng-template", null, 2, i0.ɵɵtemplateRefExtractor);
        i0.ɵɵtemplate(5, TDSInputGroupComponent_ng_template_5_Template, 1, 0, "ng-template", null, 3, i0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        const _r1 = i0.ɵɵreference(2);
        i0.ɵɵproperty("ngIf", ctx.isAddOn)("ngIfElse", _r1);
    } }, directives: [i3.NgIf, i4.TDSInputGroupSlotComponent, i3.NgTemplateOutlet], encapsulation: 2, changeDetection: 0 });
__decorate([
    InputBoolean()
], TDSInputGroupComponent.prototype, "tdsSearch", void 0);
__decorate([
    InputBoolean()
], TDSInputGroupComponent.prototype, "tdsCompact", void 0);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSInputGroupComponent, [{
        type: Component,
        args: [{
                selector: 'tds-input-group',
                exportAs: 'tdsInputGroup',
                preserveWhitespaces: false,
                encapsulation: ViewEncapsulation.None,
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: `
    <span class="tds-input-wrapper tds-input-group" *ngIf="isAddOn; else noAddOnTemplate">
      <span
        *ngIf="tdsAddOnBefore || tdsAddOnBeforeIcon"
        tds-input-group-slot
        type="addon"
        [icon]="tdsAddOnBeforeIcon"
        [template]="tdsAddOnBefore"
      ></span>
      <span
        *ngIf="isAffix; else contentTemplate"
        class="tds-input-affix-wrapper"
        [class.tds-input-affix-wrapper-disabled]="disabled"
        [class.tds-input-affix-wrapper-sm]="isSmall"
        [class.tds-input-affix-wrapper-lg]="isLarge"
      >
        <ng-template [ngTemplateOutlet]="affixTemplate"></ng-template>
      </span>
      <span
        *ngIf="tdsAddOnAfter || tdsAddOnAfterIcon"
        tds-input-group-slot
        type="addon"
        [icon]="tdsAddOnAfterIcon"
        [template]="tdsAddOnAfter"
      ></span>
    </span>
    <ng-template #noAddOnTemplate>
      <ng-template [ngIf]="isAffix" [ngIfElse]="contentTemplate">
        <ng-template [ngTemplateOutlet]="affixTemplate"></ng-template>
      </ng-template>
    </ng-template>
    <ng-template #affixTemplate>
      <span
        *ngIf="tdsPrefix || tdsPrefixIcon"
        tds-input-group-slot
        type="prefix"
        [icon]="tdsPrefixIcon"
        [template]="tdsPrefix"
      ></span>
      <ng-template [ngTemplateOutlet]="contentTemplate"></ng-template>
      <span
        *ngIf="tdsSuffix || tdsSuffixIcon"
        tds-input-group-slot
        type="suffix"
        [icon]="tdsSuffixIcon"
        [template]="tdsSuffix"
      ></span>
    </ng-template>
    <ng-template #contentTemplate>
      <ng-content></ng-content>
    </ng-template>
  `,
                host: {
                    '[class.tds-input-group-compact]': `tdsCompact`,
                    '[class.tds-input-search-enter-button]': `tdsSearch`,
                    '[class.tds-input-search]': `tdsSearch`,
                    '[class.tds-input-search-rtl]': `dir === 'rtl'`,
                    '[class.tds-input-search-sm]': `tdsSearch && isSmall`,
                    '[class.tds-input-search-large]': `tdsSearch && isLarge`,
                    '[class.tds-input-group-wrapper]': `isAddOn`,
                    '[class.tds-input-group-wrapper-rtl]': `dir === 'rtl'`,
                    '[class.tds-input-group-wrapper-lg]': `isAddOn && isLarge`,
                    '[class.tds-input-group-wrapper-sm]': `isAddOn && isSmall`,
                    '[class.tds-input-affix-wrapper]': `isAffix && !isAddOn`,
                    '[class.tds-input-affix-wrapper-rtl]': `dir === 'rtl'`,
                    '[class.tds-input-affix-wrapper-focused]': `isAffix && focused`,
                    '[class.tds-input-affix-wrapper-disabled]': `isAffix && disabled`,
                    '[class.tds-input-affix-wrapper-lg]': `isAffix && !isAddOn && isLarge`,
                    '[class.tds-input-affix-wrapper-sm]': `isAffix && !isAddOn && isSmall`,
                    '[class.tds-input-group]': `!isAffix && !isAddOn`,
                    '[class.tds-input-group-rtl]': `dir === 'rtl'`,
                    '[class.tds-input-group-lg]': `!isAffix && !isAddOn && isLarge`,
                    '[class.tds-input-group-sm]': `!isAffix && !isAddOn && isSmall`
                }
            }]
    }], function () { return [{ type: i1.FocusMonitor }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i2.Directionality, decorators: [{
                type: Optional
            }] }]; }, { listOfTDSInputDirective: [{
            type: ContentChildren,
            args: [TDSInputDirective]
        }], tdsAddOnBeforeIcon: [{
            type: Input
        }], tdsAddOnAfterIcon: [{
            type: Input
        }], tdsPrefixIcon: [{
            type: Input
        }], tdsSuffixIcon: [{
            type: Input
        }], tdsAddOnBefore: [{
            type: Input
        }], tdsAddOnAfter: [{
            type: Input
        }], tdsPrefix: [{
            type: Input
        }], tdsSuffix: [{
            type: Input
        }], tdsSize: [{
            type: Input
        }], tdsSearch: [{
            type: Input
        }], tdsCompact: [{
            type: Input
        }] }); })();
//# sourceMappingURL=data:application/json;base64,