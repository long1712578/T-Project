import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "tds-ui/core/outlet";
const _c0 = ["tds-input-group-slot", ""];
function TDSInputGroupSlotComponent_i_0_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "i");
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵclassMap(ctx_r0.icon);
} }
function TDSInputGroupSlotComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1);
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(ctx_r1.template);
} }
export class TDSInputGroupSlotComponent {
    constructor() {
        this.icon = null;
        this.type = null;
        this.template = null;
    }
}
TDSInputGroupSlotComponent.ɵfac = function TDSInputGroupSlotComponent_Factory(t) { return new (t || TDSInputGroupSlotComponent)(); };
TDSInputGroupSlotComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TDSInputGroupSlotComponent, selectors: [["", "tds-input-group-slot", ""]], hostVars: 6, hostBindings: function TDSInputGroupSlotComponent_HostBindings(rf, ctx) { if (rf & 2) {
        i0.ɵɵclassProp("tds-input-group-addon", ctx.type === "addon")("tds-input-prefix", ctx.type === "prefix")("tds-input-suffix", ctx.type === "suffix");
    } }, inputs: { icon: "icon", type: "type", template: "template" }, attrs: _c0, decls: 2, vars: 2, consts: [[3, "class", 4, "ngIf"], [4, "tdsStringTemplateOutlet"]], template: function TDSInputGroupSlotComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵtemplate(0, TDSInputGroupSlotComponent_i_0_Template, 1, 2, "i", 0);
        i0.ɵɵtemplate(1, TDSInputGroupSlotComponent_ng_container_1_Template, 2, 1, "ng-container", 1);
    } if (rf & 2) {
        i0.ɵɵproperty("ngIf", ctx.icon);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("tdsStringTemplateOutlet", ctx.template);
    } }, directives: [i1.NgIf, i2.TDSStringTemplateOutletDirective], encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSInputGroupSlotComponent, [{
        type: Component,
        args: [{
                selector: '[tds-input-group-slot]',
                preserveWhitespaces: false,
                encapsulation: ViewEncapsulation.None,
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: `
    <i  [class]="icon" *ngIf="icon"></i>
    <ng-container *tdsStringTemplateOutlet="template">{{ template }}</ng-container>
  `,
                host: {
                    '[class.tds-input-group-addon]': `type === 'addon'`,
                    '[class.tds-input-prefix]': `type === 'prefix'`,
                    '[class.tds-input-suffix]': `type === 'suffix'`
                }
            }]
    }], null, { icon: [{
            type: Input
        }], type: [{
            type: Input
        }], template: [{
            type: Input
        }] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtZ3JvdXAtc2xvdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy90ZHMtdWkvaW5wdXQvaW5wdXQtZ3JvdXAtc2xvdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQWUsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7OztJQVF0RyxvQkFBb0M7OztJQUFoQywwQkFBYzs7O0lBQ2xCLDZCQUFrRDtJQUFBLFlBQWM7SUFBQSwwQkFBZTs7O0lBQTdCLGVBQWM7SUFBZCxxQ0FBYzs7QUFRcEUsTUFBTSxPQUFPLDBCQUEwQjtJQWZ2QztRQWdCVyxTQUFJLEdBQW1CLElBQUksQ0FBQztRQUM1QixTQUFJLEdBQXlDLElBQUksQ0FBQztRQUNsRCxhQUFRLEdBQXVDLElBQUksQ0FBQztLQUM5RDs7b0dBSlksMEJBQTBCOzZFQUExQiwwQkFBMEI7OztRQVRuQyx1RUFBb0M7UUFDcEMsNkZBQStFOztRQUQzRCwrQkFBVTtRQUNmLGVBQWlDO1FBQWpDLHNEQUFpQzs7dUZBUXZDLDBCQUEwQjtjQWZ0QyxTQUFTO2VBQUM7Z0JBQ1QsUUFBUSxFQUFFLHdCQUF3QjtnQkFDbEMsbUJBQW1CLEVBQUUsS0FBSztnQkFDMUIsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7Z0JBQ3JDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2dCQUMvQyxRQUFRLEVBQUU7OztHQUdUO2dCQUNELElBQUksRUFBRTtvQkFDSiwrQkFBK0IsRUFBRSxrQkFBa0I7b0JBQ25ELDBCQUEwQixFQUFFLG1CQUFtQjtvQkFDL0MsMEJBQTBCLEVBQUUsbUJBQW1CO2lCQUNoRDthQUNGO2dCQUVVLElBQUk7a0JBQVosS0FBSztZQUNHLElBQUk7a0JBQVosS0FBSztZQUNHLFFBQVE7a0JBQWhCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJcblxuaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgSW5wdXQsIFRlbXBsYXRlUmVmLCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdbdGRzLWlucHV0LWdyb3VwLXNsb3RdJyxcbiAgcHJlc2VydmVXaGl0ZXNwYWNlczogZmFsc2UsXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxpICBbY2xhc3NdPVwiaWNvblwiICpuZ0lmPVwiaWNvblwiPjwvaT5cbiAgICA8bmctY29udGFpbmVyICp0ZHNTdHJpbmdUZW1wbGF0ZU91dGxldD1cInRlbXBsYXRlXCI+e3sgdGVtcGxhdGUgfX08L25nLWNvbnRhaW5lcj5cbiAgYCxcbiAgaG9zdDoge1xuICAgICdbY2xhc3MudGRzLWlucHV0LWdyb3VwLWFkZG9uXSc6IGB0eXBlID09PSAnYWRkb24nYCxcbiAgICAnW2NsYXNzLnRkcy1pbnB1dC1wcmVmaXhdJzogYHR5cGUgPT09ICdwcmVmaXgnYCxcbiAgICAnW2NsYXNzLnRkcy1pbnB1dC1zdWZmaXhdJzogYHR5cGUgPT09ICdzdWZmaXgnYFxuICB9XG59KVxuZXhwb3J0IGNsYXNzIFREU0lucHV0R3JvdXBTbG90Q29tcG9uZW50IHtcbiAgQElucHV0KCkgaWNvbj86IHN0cmluZyB8IG51bGwgPSBudWxsO1xuICBASW5wdXQoKSB0eXBlOiAnYWRkb24nIHwgJ3ByZWZpeCcgfCAnc3VmZml4JyB8IG51bGwgPSBudWxsO1xuICBASW5wdXQoKSB0ZW1wbGF0ZT86IHN0cmluZyB8IFRlbXBsYXRlUmVmPHZvaWQ+IHwgbnVsbCA9IG51bGw7XG59XG4iXX0=