import { __decorate } from "tslib";
import { CdkOverlayOrigin } from '@angular/cdk/overlay';
import { ChangeDetectionStrategy, Component, ContentChildren, ElementRef, Input, Optional, ViewChild, ViewChildren, ViewEncapsulation } from '@angular/core';
import { RouterLink, RouterLinkWithHref, NavigationEnd } from '@angular/router';
import { merge, Subject } from 'rxjs';
import { takeUntil, filter, startWith, switchMap, map, debounceTime, distinctUntilChanged } from 'rxjs/operators';
import { slideMotion } from 'tds-ui/core/animation';
import { getPlacementName, POSITION_MAP } from 'tds-ui/core/overlay';
import { InputBoolean, TDSHelperArray, TDSHelperObject, TDSHelperString } from 'tds-ui/shared/utility';
import { TDSMenuItemComponent } from '../tds-menu-item/tds-menu-item.component';
import * as i0 from "@angular/core";
import * as i1 from "../services/menu.service";
import * as i2 from "@angular/router";
import * as i3 from "@angular/cdk/overlay";
import * as i4 from "@angular/common";
import * as i5 from "tds-ui/tooltip";
import * as i6 from "tds-ui/badges";
function TDSMenuGroupPopupComponent_div_2_div_1_tds_badge_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "tds-badge", 11);
    i0.ɵɵelement(1, "span", 12);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = i0.ɵɵnextContext(3);
    i0.ɵɵproperty("status", ctx_r5.item.dot.status)("dot", true);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngClass", ctx_r5.item.icon);
} }
function TDSMenuGroupPopupComponent_div_2_div_1_span_3_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "span", 12);
} if (rf & 2) {
    const ctx_r6 = i0.ɵɵnextContext(3);
    i0.ɵɵproperty("ngClass", ctx_r6.item.icon);
} }
const _c0 = function (a0) { return [a0]; };
function TDSMenuGroupPopupComponent_div_2_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r8 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 7)(1, "a", 8);
    i0.ɵɵlistener("click", function TDSMenuGroupPopupComponent_div_2_div_1_Template_a_click_1_listener($event) { i0.ɵɵrestoreView(_r8); const ctx_r7 = i0.ɵɵnextContext(2); return ctx_r7.onClickItem($event); });
    i0.ɵɵtemplate(2, TDSMenuGroupPopupComponent_div_2_div_1_tds_badge_2_Template, 2, 3, "tds-badge", 9);
    i0.ɵɵtemplate(3, TDSMenuGroupPopupComponent_div_2_div_1_span_3_Template, 1, 1, "span", 10);
    i0.ɵɵelementEnd()();
} if (rf & 2) {
    const ctx_r4 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("routerLink", i0.ɵɵpureFunction1(10, _c0, ctx_r4.item.link))("queryParams", ctx_r4.item.linkProps == null ? null : ctx_r4.item.linkProps.queryParams)("fragment", ctx_r4.item.linkProps == null ? null : ctx_r4.item.linkProps.fragment)("queryParamsHandling", ctx_r4.item.linkProps == null ? null : ctx_r4.item.linkProps.queryParamsHandling)("preserveFragment", ctx_r4.item.linkProps == null ? null : ctx_r4.item.linkProps.preserveFragment)("skipLocationChange", ctx_r4.item.linkProps == null ? null : ctx_r4.item.linkProps.skipLocationChange)("replaceUrl", ctx_r4.item.linkProps == null ? null : ctx_r4.item.linkProps.replaceUrl)("state", ctx_r4.item.linkProps == null ? null : ctx_r4.item.linkProps.state);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r4.item.dot);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", !ctx_r4.item.dot);
} }
const _c1 = function (a0, a1, a2) { return { "bg-neutral-3-50 text-primary-1 dark:bg-d-neutral-3-300": a0, " text-neutral-1-300": a1, "cursor-pointer": a2 }; };
function TDSMenuGroupPopupComponent_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r10 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 5);
    i0.ɵɵlistener("click", function TDSMenuGroupPopupComponent_div_2_Template_div_click_0_listener($event) { i0.ɵɵrestoreView(_r10); const ctx_r9 = i0.ɵɵnextContext(); return ctx_r9.onClickItem($event); });
    i0.ɵɵtemplate(1, TDSMenuGroupPopupComponent_div_2_div_1_Template, 4, 12, "div", 6);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction3(3, _c1, ctx_r1.isSelected, !ctx_r1.isSelected, !ctx_r1.item.disabled))("tooltipTitle", ctx_r1.item.name);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r1.hasIcon);
} }
function TDSMenuGroupPopupComponent_div_3_div_1_tds_badge_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "tds-badge", 11);
    i0.ɵɵelement(1, "span", 12);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r12 = i0.ɵɵnextContext(3);
    i0.ɵɵproperty("status", ctx_r12.item.dot.status)("dot", true);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngClass", ctx_r12.item.icon);
} }
function TDSMenuGroupPopupComponent_div_3_div_1_span_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "span", 12);
} if (rf & 2) {
    const ctx_r13 = i0.ɵɵnextContext(3);
    i0.ɵɵproperty("ngClass", ctx_r13.item.icon);
} }
function TDSMenuGroupPopupComponent_div_3_div_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 7);
    i0.ɵɵtemplate(1, TDSMenuGroupPopupComponent_div_3_div_1_tds_badge_1_Template, 2, 3, "tds-badge", 9);
    i0.ɵɵtemplate(2, TDSMenuGroupPopupComponent_div_3_div_1_span_2_Template, 1, 1, "span", 10);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r11 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r11.item.dot);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", !ctx_r11.item.dot);
} }
const _c2 = function (a0, a1, a2) { return { "bg-neutral-3-50   text-primary-1 dark:bg-d-neutral-3-300": a0, " text-neutral-1-300": a1, "cursor-pointer": a2 }; };
function TDSMenuGroupPopupComponent_div_3_Template(rf, ctx) { if (rf & 1) {
    const _r15 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 13);
    i0.ɵɵlistener("click", function TDSMenuGroupPopupComponent_div_3_Template_div_click_0_listener($event) { i0.ɵɵrestoreView(_r15); const ctx_r14 = i0.ɵɵnextContext(); return ctx_r14.onClickItem($event); });
    i0.ɵɵtemplate(1, TDSMenuGroupPopupComponent_div_3_div_1_Template, 3, 2, "div", 6);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction3(3, _c2, ctx_r2.isSelected, !ctx_r2.isSelected && !ctx_r2.item.isOpen, !ctx_r2.item.disabled))("tooltipTitle", ctx_r2.item.name);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r2.hasIcon);
} }
function TDSMenuGroupPopupComponent_ng_template_4_div_0_Template(rf, ctx) { if (rf & 1) {
    const _r18 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 15);
    i0.ɵɵlistener("mouseenter", function TDSMenuGroupPopupComponent_ng_template_4_div_0_Template_div_mouseenter_0_listener() { i0.ɵɵrestoreView(_r18); const ctx_r17 = i0.ɵɵnextContext(2); return ctx_r17.setMouseState(true); })("mouseleave", function TDSMenuGroupPopupComponent_ng_template_4_div_0_Template_div_mouseleave_0_listener() { i0.ɵɵrestoreView(_r18); const ctx_r19 = i0.ɵɵnextContext(2); return ctx_r19.setMouseState(false); });
    i0.ɵɵelementStart(1, "div", 16)(2, "div", 17)(3, "div", 18);
    i0.ɵɵprojection(4);
    i0.ɵɵelementEnd()()()();
} if (rf & 2) {
    const ctx_r16 = i0.ɵɵnextContext(2);
    i0.ɵɵstyleProp("margin-top", ctx_r16.position == "rightTop" ? -5 : 0, "px");
    i0.ɵɵproperty("ngClass", ctx_r16.mode)("@slideMotion", undefined);
} }
function TDSMenuGroupPopupComponent_ng_template_4_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtemplate(0, TDSMenuGroupPopupComponent_ng_template_4_div_0_Template, 5, 4, "div", 14);
} if (rf & 2) {
    const ctx_r3 = i0.ɵɵnextContext();
    i0.ɵɵproperty("ngIf", ctx_r3.hasListChild);
} }
const _c3 = function (a0) { return { "hidden": a0 }; };
const _c4 = ["*"];
const listOfVerticalPositions = [
    POSITION_MAP.rightTop,
    POSITION_MAP.right,
    POSITION_MAP.rightBottom,
    // POSITION_MAP.leftTop,
    POSITION_MAP.left,
    // POSITION_MAP.leftBottom
];
export class TDSMenuGroupPopupComponent {
    constructor(_cdr, tdsMenuService, routerLink, routerLinkWithHref, router) {
        this._cdr = _cdr;
        this.tdsMenuService = tdsMenuService;
        this.routerLink = routerLink;
        this.routerLinkWithHref = routerLinkWithHref;
        this.router = router;
        this.destroy$ = new Subject();
        this.isSelected = false;
        this.inlineCollapsed = false;
        this.options = {
            background: 'bg-white dark:bg-d-neutral-3-200',
            backgroundItem: 'bg-white dark:bg-d-neutral-3-200',
            backgroundItemSelected: 'bg-neutral-3-50 dark:bg-d-neutral-3-300',
            backgroundItemHover: 'dark:hover:bg-d-neutral-3-300  hover:bg-neutral-3-50'
        };
        this.open$ = new Subject();
        this.cdkOverlayOrigin = null;
        this.IsActiveMatchOptions = {
            paths: "subset",
            matrixParams: "ignored",
            queryParams: "ignored",
            fragment: "ignored",
        };
        this.position = 'rightTop';
        this.triggerWidth = null;
        this.overlayPositions = listOfVerticalPositions;
        this.mode = 'dark';
        if (router) {
            this.router.events.pipe(takeUntil(this.destroy$), filter(e => e instanceof NavigationEnd)).subscribe(() => {
                if (!this.hasListChild) {
                    this.updateRouterActive();
                }
            });
        }
    }
    get uid() {
        return this.item ? this.item.uid : "";
    }
    ngOnInit() {
        this.open$.pipe(debounceTime(100), distinctUntilChanged(), takeUntil(this.destroy$)).subscribe(res => {
            this.item.isOpen = res;
            this._cdr.markForCheck();
        });
        this.tdsMenuService.mode$.subscribe(mode => {
            if (TDSHelperObject.hasValue(mode) && this.mode !== mode) {
                this.mode = mode;
                this._cdr.markForCheck();
            }
        });
    }
    ngAfterContentInit() {
        this.listenItemChangeSelected();
    }
    ngAfterViewInit() {
        if (!this.hasListChild) {
            this.updateRouterActive();
        }
    }
    ngOnChanges(changes) {
        if (changes['item']) {
            this._cdr.markForCheck();
        }
    }
    onClickItem(e) {
        if (this.item.disabled) {
            e.stopPropagation();
            e.preventDefault();
        }
        if (!this.hasListChild || !this.hasAllHidden) {
            this.tdsMenuService.onDescendantMenuItemClick(this);
            if (this.hasLink)
                this.p_NavigateByUrl();
        }
    }
    get hasListChild() {
        return TDSHelperArray.hasListValue(this.item.listChild);
    }
    get hasAllHidden() {
        let childs = this.item.listChild?.find(f => { return !f.hidden; });
        return childs == undefined;
    }
    ngOnDestroy() {
        this.destroy$.next();
        this.destroy$.complete();
    }
    setSelectedState(value) {
        this.isSelected = value;
        this.item.isSelected = value;
        this._cdr.markForCheck();
    }
    updateRouterActive() {
        if (this.hasListChild || !this.listOfRouterLink || !this.listOfRouterLinkWithHref || !this.router || !this.router.navigated) {
            return;
        }
        Promise.resolve().then(() => {
            const hasActiveLinks = this.hasActiveLinks();
            if (this.isSelected !== hasActiveLinks) {
                this.setSelectedState(hasActiveLinks);
            }
        });
    }
    hasActiveLinks() {
        const isActiveCheckFn = this.isLinkActive(this.router);
        return ((this.routerLink && isActiveCheckFn(this.routerLink)) ||
            (this.routerLinkWithHref && isActiveCheckFn(this.routerLinkWithHref)) ||
            this.listOfRouterLink.some(isActiveCheckFn) ||
            this.listOfRouterLinkWithHref.some(isActiveCheckFn));
    }
    isLinkActive(router) {
        return (link) => router.isActive(link.urlTree, this.IsActiveMatchOptions);
    }
    setSelectedStateListChildren(uid) {
        if (TDSHelperArray.hasListValue(this.listItem)) {
            this.listItem.forEach(f => {
                f.setSelectedStateListChildren(uid);
            });
        }
        else {
            this.setSelectedState(uid === this.uid);
        }
    }
    get hasLink() {
        return !this.item.disabled && (!this.hasListChild || this.hasAllHidden) && TDSHelperObject.hasValue(this.item.link);
    }
    get hasIcon() {
        return this.item && TDSHelperString.hasValueString(this.item.icon);
    }
    listenItemChangeSelected() {
        if (TDSHelperArray.hasListValue(this.listItem) && this.listItem.length > 0) {
            const listOfTDSMenuItemComponent = this.listItem;
            const changes = listOfTDSMenuItemComponent.changes;
            const mergedObservable = merge(...[changes, ...listOfTDSMenuItemComponent.map(menu => menu.selected$)]);
            changes
                .pipe(startWith(listOfTDSMenuItemComponent), switchMap(() => mergedObservable), startWith(true), map(() => listOfTDSMenuItemComponent.some(e => e.isSelected)), takeUntil(this.destroy$))
                .subscribe(selected => {
                if (selected != this.isSelected)
                    if (!this.hasAllHidden)
                        this.setSelectedState(selected);
                    else {
                        //lấy link hiện tại khi tất ẩn tất cả menu con
                        const hasActiveLinks = this.hasActiveLinks();
                        this.setSelectedState(hasActiveLinks || selected);
                    }
            });
        }
    }
    setTriggerWidth() {
        if (this.cdkOverlayOrigin) {
            /** TODO: fast dom **/
            this.triggerWidth = this.cdkOverlayOrigin.nativeElement.getBoundingClientRect().width;
        }
    }
    onPositionChange(position) {
        const placement = getPlacementName(position);
        this.position = placement;
        // console.log(placement)
        // if (placement === 'rightTop' || placement === 'rightBottom' ) {
        //   this.position = 'rightTop';
        // } 
        // else if (placement === 'leftTop' || placement === 'leftBottom' || placement === 'left') {
        //   this.position = 'left';
        // }
        this._cdr.markForCheck();
    }
    setOpenStateListChildren(value) {
        if (TDSHelperArray.hasListValue(this.listItem)) {
            this.listItem.forEach(f => {
                f.setOpenChildren(value);
            });
            this.item.isOpen = value;
            this._cdr.markForCheck();
        }
    }
    setMouseState(value) {
        this.open$.next(value);
    }
    p_NavigateByUrl() {
        if (!TDSHelperObject.hasValue(this.item.linkProps)) {
            this.router?.navigateByUrl(this.item.link);
        }
        else {
            this.router?.navigate([this.item.link], {
                queryParams: this.item.linkProps?.queryParams,
                fragment: this.item.linkProps?.fragment,
                queryParamsHandling: this.item.linkProps?.queryParamsHandling,
                preserveFragment: this.item.linkProps?.preserveFragment,
                skipLocationChange: this.item.linkProps?.skipLocationChange,
                replaceUrl: this.item.linkProps?.replaceUrl,
                state: this.item.linkProps?.state
            });
        }
    }
}
TDSMenuGroupPopupComponent.ɵfac = function TDSMenuGroupPopupComponent_Factory(t) { return new (t || TDSMenuGroupPopupComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.TDSMenuService), i0.ɵɵdirectiveInject(i2.RouterLink, 8), i0.ɵɵdirectiveInject(i2.RouterLinkWithHref, 8), i0.ɵɵdirectiveInject(i2.Router, 8)); };
TDSMenuGroupPopupComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TDSMenuGroupPopupComponent, selectors: [["tds-menu-group-popup"]], contentQueries: function TDSMenuGroupPopupComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        i0.ɵɵcontentQuery(dirIndex, TDSMenuItemComponent, 5);
    } if (rf & 2) {
        let _t;
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listItem = _t);
    } }, viewQuery: function TDSMenuGroupPopupComponent_Query(rf, ctx) { if (rf & 1) {
        i0.ɵɵviewQuery(CdkOverlayOrigin, 7, ElementRef);
        i0.ɵɵviewQuery(RouterLink, 5);
        i0.ɵɵviewQuery(RouterLinkWithHref, 5);
    } if (rf & 2) {
        let _t;
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cdkOverlayOrigin = _t.first);
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listOfRouterLink = _t);
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listOfRouterLinkWithHref = _t);
    } }, hostAttrs: ["clas", "w-full flex flex-col box-border relative"], hostBindings: function TDSMenuGroupPopupComponent_HostBindings(rf, ctx) { if (rf & 1) {
        i0.ɵɵlistener("mouseenter", function TDSMenuGroupPopupComponent_mouseenter_HostBindingHandler() { return ctx.setMouseState(true); })("mouseleave", function TDSMenuGroupPopupComponent_mouseleave_HostBindingHandler() { return ctx.setMouseState(false); });
    } }, inputs: { item: "item", isSelected: "isSelected", inlineCollapsed: "inlineCollapsed", options: "options" }, features: [i0.ɵɵNgOnChangesFeature], ngContentSelectors: _c4, decls: 5, vars: 10, consts: [["cdkOverlayOrigin", "", 1, "w-full", "flex", 3, "ngClass"], ["origin", "cdkOverlayOrigin"], ["class", "w-full flex items-center py-2.5 pl-3 pr-2.5  rounded group hover:bg-neutral-3-50 dark:hover:bg-d-neutral-3-300", "tooltipPlacement", "right", "tds-button", "", "tds-tooltip", "", 3, "ngClass", "tooltipTitle", "click", 4, "ngIf"], ["class", "w-full flex items-center py-2.5 pl-3 pr-2.5 rounded group  hover:bg-neutral-3-50 dark:hover:bg-d-neutral-3-300", "tds-tooltip", "", 3, "ngClass", "tooltipTitle", "click", 4, "ngIf"], ["cdkConnectedOverlay", "", "cdkConnectedOverlayPanelClass", "bottom-2.5", 3, "cdkConnectedOverlayPositions", "cdkConnectedOverlayOrigin", "cdkConnectedOverlayWidth", "cdkConnectedOverlayOpen", "cdkConnectedOverlayTransformOriginOn", "positionChange"], ["tooltipPlacement", "right", "tds-button", "", "tds-tooltip", "", 1, "w-full", "flex", "items-center", "py-2.5", "pl-3", "pr-2.5", "rounded", "group", "hover:bg-neutral-3-50", "dark:hover:bg-d-neutral-3-300", 3, "ngClass", "tooltipTitle", "click"], ["class", "h-6 w-6 flex ", 4, "ngIf"], [1, "h-6", "w-6", "flex"], [1, "", 3, "routerLink", "queryParams", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", "click"], [3, "status", "dot", 4, "ngIf"], ["class", "text-2xl leading-6   dark:text-d-neutral-1-900 group-hover:text-primary-1 dark:group-hover:text-d-neutral-1-900 ", 3, "ngClass", 4, "ngIf"], [3, "status", "dot"], [1, "text-2xl", "leading-6", "dark:text-d-neutral-1-900", "group-hover:text-primary-1", "dark:group-hover:text-d-neutral-1-900", 3, "ngClass"], ["tds-tooltip", "", 1, "w-full", "flex", "items-center", "py-2.5", "pl-3", "pr-2.5", "rounded", "group", "hover:bg-neutral-3-50", "dark:hover:bg-d-neutral-3-300", 3, "ngClass", "tooltipTitle", "click"], ["class", "h-full", "style", "min-width: 244px;", 3, "ngClass", "margin-top", "mouseenter", "mouseleave", 4, "ngIf"], [1, "h-full", 2, "min-width", "244px", 3, "ngClass", "mouseenter", "mouseleave"], [1, "w-full", "h-full", "flex", "flex-col", "pl-1", "py-1.5", "relative"], [1, "absolute", "inset-0", "overflow-y-auto", "overflow-x-hidden", "no-scrollbar"], [1, "bg-white", "dark:bg-d-neutral-3-200", "w-full", "py-2", "rounded"]], template: function TDSMenuGroupPopupComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵprojectionDef();
        i0.ɵɵelementStart(0, "div", 0, 1);
        i0.ɵɵtemplate(2, TDSMenuGroupPopupComponent_div_2_Template, 2, 7, "div", 2);
        i0.ɵɵtemplate(3, TDSMenuGroupPopupComponent_div_3_Template, 2, 7, "div", 3);
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(4, TDSMenuGroupPopupComponent_ng_template_4_Template, 1, 1, "ng-template", 4);
        i0.ɵɵlistener("positionChange", function TDSMenuGroupPopupComponent_Template_ng_template_positionChange_4_listener($event) { return ctx.onPositionChange($event); });
    } if (rf & 2) {
        const _r0 = i0.ɵɵreference(1);
        i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction1(8, _c3, ctx.item.hidden));
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", ctx.hasLink);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", !ctx.hasLink);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("cdkConnectedOverlayPositions", ctx.overlayPositions)("cdkConnectedOverlayOrigin", _r0)("cdkConnectedOverlayWidth", ctx.triggerWidth)("cdkConnectedOverlayOpen", ctx.item.isOpen && !ctx.hasAllHidden)("cdkConnectedOverlayTransformOriginOn", ".tds-menu-submenu");
    } }, directives: [i3.CdkOverlayOrigin, i4.NgClass, i4.NgIf, i5.TDSTooltipDirective, i2.RouterLinkWithHref, i6.TDSBadgeComponent, i3.CdkConnectedOverlay], styles: [""], encapsulation: 2, data: { animation: [slideMotion] }, changeDetection: 0 });
__decorate([
    InputBoolean()
], TDSMenuGroupPopupComponent.prototype, "inlineCollapsed", void 0);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSMenuGroupPopupComponent, [{
        type: Component,
        args: [{ selector: 'tds-menu-group-popup', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: {
                    clas: "w-full flex flex-col box-border relative",
                    '(mouseenter)': 'setMouseState(true)',
                    '(mouseleave)': 'setMouseState(false)'
                }, animations: [slideMotion], template: "<div class=\"w-full flex\" [ngClass]=\"{'hidden':item.hidden}\" cdkOverlayOrigin #origin=\"cdkOverlayOrigin\">\r\n    <div *ngIf=\"hasLink\"\r\n        class=\"w-full flex items-center py-2.5 pl-3 pr-2.5  rounded group hover:bg-neutral-3-50 dark:hover:bg-d-neutral-3-300\"\r\n        [ngClass]=\"{'bg-neutral-3-50 text-primary-1 dark:bg-d-neutral-3-300':isSelected,\r\n' text-neutral-1-300':!isSelected,\r\n'cursor-pointer':!item.disabled}\" (click)=\"onClickItem($event)\" [tooltipTitle]=\"item.name\" tooltipPlacement=\"right\"\r\n        tds-button tds-tooltip>\r\n        <div class=\"h-6 w-6 flex \" *ngIf=\"hasIcon\">\r\n            <a class=\"\" (click)=\"onClickItem($event)\" [routerLink]=\"[item.link]\"\r\n                [queryParams]=\"item.linkProps?.queryParams\" [fragment]=\"item.linkProps?.fragment\"\r\n                [queryParamsHandling]=\"item.linkProps?.queryParamsHandling\"\r\n                [preserveFragment]=\"item.linkProps?.preserveFragment!\"\r\n                [skipLocationChange]=\"item.linkProps?.skipLocationChange!\" [replaceUrl]=\"item.linkProps?.replaceUrl!\"\r\n                [state]=\"item.linkProps?.state\">\r\n                <tds-badge *ngIf=\"item.dot\" [status]=\"item.dot.status\" [dot]=\"true\">\r\n                    <span  [ngClass]=\"item.icon!\"\r\n                        class=\"text-2xl leading-6   dark:text-d-neutral-1-900 group-hover:text-primary-1 dark:group-hover:text-d-neutral-1-900 \">\r\n                    </span>\r\n                </tds-badge>\r\n                <span *ngIf=\"!item.dot\" [ngClass]=\"item.icon!\"\r\n                    class=\"text-2xl leading-6   dark:text-d-neutral-1-900 group-hover:text-primary-1 dark:group-hover:text-d-neutral-1-900 \">\r\n                </span>\r\n            </a>\r\n        </div>\r\n    </div>\r\n    <div *ngIf=\"!hasLink\"\r\n        class=\"w-full flex items-center py-2.5 pl-3 pr-2.5 rounded group  hover:bg-neutral-3-50 dark:hover:bg-d-neutral-3-300\"\r\n        [ngClass]=\"{'bg-neutral-3-50   text-primary-1 dark:bg-d-neutral-3-300':isSelected,\r\n' text-neutral-1-300':!isSelected  && !item.isOpen,\r\n'cursor-pointer':!item.disabled}\" (click)=\"onClickItem($event)\" tds-tooltip  [tooltipTitle]=\"item.name!\">\r\n\r\n        <div class=\"h-6 w-6 flex \" *ngIf=\"hasIcon\">\r\n            <tds-badge *ngIf=\"item.dot\" [status]=\"item.dot.status\" [dot]=\"true\">\r\n                <span  [ngClass]=\"item.icon!\"\r\n                    class=\"text-2xl leading-6   dark:text-d-neutral-1-900 group-hover:text-primary-1 dark:group-hover:text-d-neutral-1-900 \">\r\n                </span>\r\n            </tds-badge>\r\n            <span *ngIf=\"!item.dot\" [ngClass]=\"item.icon!\"\r\n                class=\"text-2xl leading-6   dark:text-d-neutral-1-900 group-hover:text-primary-1 dark:group-hover:text-d-neutral-1-900 \">\r\n            </span>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<ng-template cdkConnectedOverlay (positionChange)=\"onPositionChange($event)\" cdkConnectedOverlayPanelClass=\"bottom-2.5\"\r\n    [cdkConnectedOverlayPositions]=\"overlayPositions\" [cdkConnectedOverlayOrigin]=\"origin\"\r\n    [cdkConnectedOverlayWidth]=\"triggerWidth!\" [cdkConnectedOverlayOpen]=\"item.isOpen! && !hasAllHidden\"\r\n    [cdkConnectedOverlayTransformOriginOn]=\"'.tds-menu-submenu'\">\r\n    <div *ngIf=\"hasListChild\" [ngClass]=\"mode\" class=\"h-full\" @slideMotion style=\"min-width: 244px;\"\r\n        [style.margin-top.px]=\"position == 'rightTop'? -5 : 0\" (mouseenter)='setMouseState(true)'\r\n        (mouseleave)='setMouseState(false)'>\r\n        <div class=\"w-full h-full flex flex-col  pl-1 py-1.5 relative\">\r\n            <div class=\"absolute inset-0 overflow-y-auto overflow-x-hidden no-scrollbar\">\r\n                <div class=\"bg-white dark:bg-d-neutral-3-200 w-full py-2 rounded\">\r\n                    <ng-content></ng-content>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-template>", styles: [""] }]
    }], function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.TDSMenuService }, { type: i2.RouterLink, decorators: [{
                type: Optional
            }] }, { type: i2.RouterLinkWithHref, decorators: [{
                type: Optional
            }] }, { type: i2.Router, decorators: [{
                type: Optional
            }] }]; }, { item: [{
            type: Input
        }], isSelected: [{
            type: Input
        }], inlineCollapsed: [{
            type: Input
        }], options: [{
            type: Input
        }], listItem: [{
            type: ContentChildren,
            args: [TDSMenuItemComponent, { descendants: true }]
        }], cdkOverlayOrigin: [{
            type: ViewChild,
            args: [CdkOverlayOrigin, { static: true, read: ElementRef }]
        }], listOfRouterLink: [{
            type: ViewChildren,
            args: [RouterLink]
        }], listOfRouterLinkWithHref: [{
            type: ViewChildren,
            args: [RouterLinkWithHref]
        }] }); })();
//# sourceMappingURL=data:application/json;base64,