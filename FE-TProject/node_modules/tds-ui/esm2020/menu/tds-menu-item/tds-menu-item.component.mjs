import { __decorate } from "tslib";
import { CdkOverlayOrigin } from '@angular/cdk/overlay';
import { ChangeDetectionStrategy, Component, ElementRef, Input, Optional, ViewChild, ViewChildren, ViewEncapsulation } from '@angular/core';
import { NavigationEnd, RouterLink, RouterLinkWithHref } from '@angular/router';
import { merge, Subject } from 'rxjs';
import { debounceTime, distinctUntilChanged, filter, map, startWith, switchMap, takeUntil } from 'rxjs/operators';
import { menuCollapseMotion } from 'tds-ui/core/animation';
import { InputBoolean, TDSHelperArray, TDSHelperObject, TDSHelperString } from 'tds-ui/shared/utility';
import * as i0 from "@angular/core";
import * as i1 from "../services/menu.service";
import * as i2 from "@angular/router";
import * as i3 from "@angular/common";
import * as i4 from "tds-ui/badges";
import * as i5 from "tds-ui/tag";
function TDSMenuItemComponent_a_6_tds_badge_3_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "tds-badge", 13);
} if (rf & 2) {
    const ctx_r4 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("standalone", true)("count", ctx_r4.item.badge.count)("tdsStyle", ctx_r4.item.badge.tdsStyle);
} }
function TDSMenuItemComponent_a_6_tds_tag_4_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "tds-tag", 14);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("status", ctx_r5.item.tag.status)("rounded", ctx_r5.item.tag.rounded)("type", ctx_r5.item.tag.type);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(ctx_r5.item.tag.text);
} }
const _c0 = function (a0) { return { "cursor-pointer": a0 }; };
const _c1 = function (a0) { return [a0]; };
function TDSMenuItemComponent_a_6_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "a", 10)(1, "span");
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(3, TDSMenuItemComponent_a_6_tds_badge_3_Template, 1, 3, "tds-badge", 11);
    i0.ɵɵtemplate(4, TDSMenuItemComponent_a_6_tds_tag_4_Template, 2, 4, "tds-tag", 12);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction1(12, _c0, !ctx_r0.item.disabled))("routerLink", i0.ɵɵpureFunction1(14, _c1, ctx_r0.item.link))("queryParams", ctx_r0.item.linkProps == null ? null : ctx_r0.item.linkProps.queryParams)("fragment", ctx_r0.item.linkProps == null ? null : ctx_r0.item.linkProps.fragment)("queryParamsHandling", ctx_r0.item.linkProps == null ? null : ctx_r0.item.linkProps.queryParamsHandling)("preserveFragment", ctx_r0.item.linkProps == null ? null : ctx_r0.item.linkProps.preserveFragment)("skipLocationChange", ctx_r0.item.linkProps == null ? null : ctx_r0.item.linkProps.skipLocationChange)("replaceUrl", ctx_r0.item.linkProps == null ? null : ctx_r0.item.linkProps.replaceUrl)("state", ctx_r0.item.linkProps == null ? null : ctx_r0.item.linkProps.state);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(ctx_r0.item.name);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r0.item.badge);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r0.item.tag);
} }
function TDSMenuItemComponent_span_7_tds_badge_3_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "tds-badge", 13);
} if (rf & 2) {
    const ctx_r6 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("standalone", true)("count", ctx_r6.item.badge.count)("tdsStyle", ctx_r6.item.badge.tdsStyle);
} }
function TDSMenuItemComponent_span_7_tds_tag_4_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "tds-tag", 14);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r7 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("status", ctx_r7.item.tag.status)("rounded", ctx_r7.item.tag.rounded)("type", ctx_r7.item.tag.type);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(ctx_r7.item.tag.text);
} }
function TDSMenuItemComponent_span_7_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "span", 15)(1, "span");
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(3, TDSMenuItemComponent_span_7_tds_badge_3_Template, 1, 3, "tds-badge", 11);
    i0.ɵɵtemplate(4, TDSMenuItemComponent_span_7_tds_tag_4_Template, 2, 4, "tds-tag", 12);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(ctx_r1.item.name);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r1.item.badge);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r1.item.tag);
} }
const _c2 = function (a0, a1, a2, a3) { return { "rotate-90 ": a0, "rotate-0": a1, "dark:text-d-neutral-1-900 text-neutral-1-900": a2, "dark:text-d-neutral-1-400 text-neutral-1-500": a3 }; };
function TDSMenuItemComponent_div_8_span_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "span", 18);
} if (rf & 2) {
    const ctx_r8 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction4(1, _c2, ctx_r8.item.isOpen, !ctx_r8.item.isOpen, ctx_r8.isSelected, !ctx_r8.isSelected));
} }
function TDSMenuItemComponent_div_8_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 16);
    i0.ɵɵtemplate(1, TDSMenuItemComponent_div_8_span_1_Template, 1, 6, "span", 17);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r2.hasListChild && !ctx_r2.hasAllHidden);
} }
function TDSMenuItemComponent_div_9_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "tds-menu-item", 22);
} if (rf & 2) {
    const menu_r10 = ctx.$implicit;
    const ctx_r9 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("options", ctx_r9.options)("item", menu_r10)("isSelected", menu_r10.isSelected);
} }
const _c3 = function (a0, a1) { return { "pl-10 pr-2.5 ": a0, "pl-3": a1 }; };
function TDSMenuItemComponent_div_9_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 19)(1, "div", 20);
    i0.ɵɵtemplate(2, TDSMenuItemComponent_div_9_ng_template_2_Template, 1, 3, "ng-template", 21);
    i0.ɵɵelementEnd()();
} if (rf & 2) {
    const ctx_r3 = i0.ɵɵnextContext();
    i0.ɵɵproperty("@menuCollapseMotion", ctx_r3.item.isOpen && !ctx_r3.hasAllHidden ? "expanded" : "collapsed")("ngClass", i0.ɵɵpureFunction2(3, _c3, ctx_r3.parentIsGroup, !ctx_r3.parentIsGroup));
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngForOf", ctx_r3.item.listChild);
} }
const _c4 = function (a0, a1, a2) { return { "h-6 w-6": a0, "w-2": a1, "pl-1": a2 }; };
const _c5 = function (a0) { return { "invisible": a0 }; };
const _c6 = function (a0) { return { "text-neutral-1-500 dark:text-d-neutral-1-400": a0 }; };
const _c7 = function (a0, a1) { return { "dark:text-d-neutral-1-900 dark:font-regular text-neutral-1-900 font-semibold": a0, "dark:text-d-neutral-1-400 text-neutral-1-500": a1 }; };
export class TDSMenuItemComponent {
    constructor(_cdr, tdsMenuService, routerLink, routerLinkWithHref, router) {
        this._cdr = _cdr;
        this.tdsMenuService = tdsMenuService;
        this.routerLink = routerLink;
        this.routerLinkWithHref = routerLinkWithHref;
        this.router = router;
        this.destroy$ = new Subject();
        this.showIcon = true;
        this.isSelected = false;
        this.parentIsGroup = false;
        this.inlineCollapsed = false;
        this.options = {
            background: 'bg-white dark:bg-d-neutral-3-200',
            backgroundItem: 'bg-white dark:bg-d-neutral-3-200',
            backgroundItemSelected: 'bg-white dark:bg-d-neutral-3-200',
            backgroundItemHover: 'dark:hover:bg-d-neutral-3-300  hover:bg-neutral-3-50'
        };
        this.selected$ = new Subject();
        this.isOpenPopup = false;
        this.cdkOverlayOrigin = null;
        this.IsActiveMatchOptions = {
            paths: "subset",
            matrixParams: "ignored",
            queryParams: "ignored",
            fragment: "ignored",
        };
        this.ngStyleItem = {};
        if (router) {
            this.router.events.pipe(takeUntil(this.destroy$), filter(e => e instanceof NavigationEnd)).subscribe(() => {
                this.updateRouterActive();
            });
        }
    }
    get uid() {
        return this.item ? this.item.uid : "";
    }
    ngOnInit() {
    }
    ngAfterViewInit() {
        this.listenItemChangeSelected();
    }
    ngOnChanges(changes) {
        if (changes['item']) {
            this._cdr.markForCheck();
        }
        if (changes.isSelected) {
            this.setSelectedState(this.isSelected);
        }
    }
    onClickItem(e) {
        if (this.item.disabled) {
            e.stopPropagation();
            e.preventDefault();
        }
        if (this.hasListChild) {
            this.item.isOpen = !this.item.isOpen;
        }
        else {
            if (this.hasLink) {
                this.p_NavigateByUrl();
            }
            this.tdsMenuService.onDescendantMenuItemClick(this);
        }
    }
    get hasListChild() {
        return TDSHelperArray.hasListValue(this.item.listChild);
    }
    get hasAllHidden() {
        let childs = this.item.listChild?.find(f => { return !f.hidden; });
        return childs == undefined;
    }
    ngOnDestroy() {
        this.destroy$.next();
        this.destroy$.complete();
    }
    setSelectedState(value) {
        this.isSelected = value;
        this.item.isSelected = value;
        this.selected$.next(value);
        if (this.isSelected) {
            if (!this.item.isOpen) {
                this.item.isOpen = true;
            }
        }
        this.ngStyleItem = this.getStyleItem();
        this._cdr.markForCheck();
    }
    updateRouterActive() {
        if (this.hasListChild || !this.listOfRouterLink || !this.listOfRouterLinkWithHref || !this.router || !this.router.navigated) {
            return;
        }
        Promise.resolve().then(() => {
            const hasActiveLinks = this.hasActiveLinks();
            if (!this.hasListChild)
                if (this.isSelected !== hasActiveLinks) {
                    this.isSelected = hasActiveLinks;
                    this.setSelectedState(this.isSelected);
                }
        });
    }
    hasActiveLinks() {
        const isActiveCheckFn = this.isLinkActive(this.router);
        return ((this.routerLink && isActiveCheckFn(this.routerLink)) ||
            (this.routerLinkWithHref && isActiveCheckFn(this.routerLinkWithHref)) ||
            this.listOfRouterLink.some(isActiveCheckFn) ||
            this.listOfRouterLinkWithHref.some(isActiveCheckFn));
    }
    isLinkActive(router) {
        return (link) => router.isActive(link.urlTree, this.IsActiveMatchOptions);
    }
    setSelectedStateListChildren(uid) {
        if (TDSHelperArray.hasListValue(this.listItem)) {
            this.listItem.forEach(f => {
                f.setSelectedStateListChildren(uid);
            });
        }
        else {
            this.setSelectedState(uid === this.uid);
        }
    }
    get hasLink() {
        return !this.item.disabled && !this.hasListChild && TDSHelperObject.hasValue(this.item.link);
    }
    get hasIcon() {
        return this.item && TDSHelperString.hasValueString(this.item.icon);
    }
    listenItemChangeSelected() {
        if (this.listOfRouterLink)
            this.listOfRouterLink.changes.pipe(takeUntil(this.destroy$)).subscribe(() => this.updateRouterActive());
        if (this.listOfRouterLinkWithHref)
            this.listOfRouterLinkWithHref.changes.pipe(takeUntil(this.destroy$)).subscribe(() => this.updateRouterActive());
        if (TDSHelperArray.hasListValue(this.listItem)) {
            const listOfTDSMenuItemComponent = this.listItem;
            const changes = listOfTDSMenuItemComponent.changes;
            const mergedObservable = merge(...[changes, ...listOfTDSMenuItemComponent.map(menu => menu.selected$)]);
            changes
                .pipe(startWith(listOfTDSMenuItemComponent), switchMap(() => mergedObservable), startWith(true), map(() => listOfTDSMenuItemComponent.some(e => e.isSelected)), debounceTime(100), distinctUntilChanged(), takeUntil(this.destroy$))
                .subscribe(selected => {
                this.setSelectedState(selected);
            });
        }
        this.updateRouterActive();
    }
    setOpen(value) {
        if (this.item.isOpen != value) {
            this.item.isOpen = value;
            this._cdr.markForCheck();
        }
    }
    setOpenChildren(value) {
        if (this.listItem.length) {
            this.listItem.forEach(f => {
                f.setOpenChildren(value);
            });
            this.setOpen(value);
        }
        this._cdr.markForCheck();
    }
    getStyleItem() {
        return {
            // [`${this.options.backgroundItemSelected}`]: this.isSelected,
            ['h-0 invisible select-none']: this.item.hidden,
            [`pl-3 pr-2.5  ${this.options.backgroundItemHover}`]: this.parentIsGroup,
            [`cursor-pointer`]: !this.item.disabled,
            ['py-2.5']: !this.item.hidden && this.showIcon,
            ['py-2']: !this.item.hidden && !this.showIcon
        };
    }
    p_NavigateByUrl() {
        if (!TDSHelperObject.hasValue(this.item.linkProps)) {
            this.router?.navigateByUrl(this.item.link);
        }
        else {
            this.router?.navigate([this.item.link], {
                queryParams: this.item.linkProps?.queryParams,
                fragment: this.item.linkProps?.fragment,
                queryParamsHandling: this.item.linkProps?.queryParamsHandling,
                preserveFragment: this.item.linkProps?.preserveFragment,
                skipLocationChange: this.item.linkProps?.skipLocationChange,
                replaceUrl: this.item.linkProps?.replaceUrl,
                state: this.item.linkProps?.state
            });
        }
    }
}
TDSMenuItemComponent.ɵfac = function TDSMenuItemComponent_Factory(t) { return new (t || TDSMenuItemComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.TDSMenuService), i0.ɵɵdirectiveInject(i2.RouterLink, 8), i0.ɵɵdirectiveInject(i2.RouterLinkWithHref, 8), i0.ɵɵdirectiveInject(i2.Router, 8)); };
TDSMenuItemComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TDSMenuItemComponent, selectors: [["tds-menu-item"]], viewQuery: function TDSMenuItemComponent_Query(rf, ctx) { if (rf & 1) {
        i0.ɵɵviewQuery(CdkOverlayOrigin, 7, ElementRef);
        i0.ɵɵviewQuery(TDSMenuItemComponent, 5);
        i0.ɵɵviewQuery(RouterLink, 5);
        i0.ɵɵviewQuery(RouterLinkWithHref, 5);
    } if (rf & 2) {
        let _t;
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cdkOverlayOrigin = _t.first);
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listItem = _t);
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listOfRouterLink = _t);
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listOfRouterLinkWithHref = _t);
    } }, hostAttrs: ["clas", "w-full flex flex-col box-border"], inputs: { showIcon: "showIcon", item: "item", isSelected: "isSelected", parentIsGroup: "parentIsGroup", inlineCollapsed: "inlineCollapsed", options: "options", isOpenPopup: "isOpenPopup" }, features: [i0.ɵɵNgOnChangesFeature], decls: 10, vars: 20, consts: [[1, "w-full", "flex", "items-center", "group", "rounded", 3, "ngClass", "click"], [1, "flex", "mr-2", "flex-row-reverse", "items-center", "justify-between", 3, "ngClass"], ["status", "primary", 1, "!flex", "flex-row-reverse", "items-center", "justify-center", 3, "ngClass"], [1, "flex-auto", "text-body-2", "dark:font-regular", "group-hover:text-d-neutral-1-900", 3, "ngClass"], [1, "w-full", "flex", "justify-between", "group-hover:text-neutral-1-900", "dark:group-hover:text-d-neutral-1-900", 3, "ngClass"], [1, "pr-2", "w-full"], ["class", "w-full flex items-center justify-between", "routerLinkActive", "", 3, "ngClass", "routerLink", "queryParams", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", 4, "ngIf"], ["class", "w-full flex items-center justify-between", 4, "ngIf"], ["class", "flex items-center", 4, "ngIf"], ["class", "w-full flex flex-col py-1", 3, "ngClass", 4, "ngIf"], ["routerLinkActive", "", 1, "w-full", "flex", "items-center", "justify-between", 3, "ngClass", "routerLink", "queryParams", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state"], [3, "standalone", "count", "tdsStyle", 4, "ngIf"], [3, "status", "rounded", "type", 4, "ngIf"], [3, "standalone", "count", "tdsStyle"], [3, "status", "rounded", "type"], [1, "w-full", "flex", "items-center", "justify-between"], [1, "flex", "items-center"], ["class", "text-base leading-4 flex items-center justify-center tdsi-arrow-right-line transform delay-100 duration-300", 3, "ngClass", 4, "ngIf"], [1, "text-base", "leading-4", "flex", "items-center", "justify-center", "tdsi-arrow-right-line", "transform", "delay-100", "duration-300", 3, "ngClass"], [1, "w-full", "flex", "flex-col", "py-1", 3, "ngClass"], [1, "w-full", "flex", "flex-col"], ["ngFor", "", 3, "ngForOf"], [3, "options", "item", "isSelected"]], template: function TDSMenuItemComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 0);
        i0.ɵɵlistener("click", function TDSMenuItemComponent_Template_div_click_0_listener($event) { return ctx.onClickItem($event); });
        i0.ɵɵelementStart(1, "div", 1);
        i0.ɵɵelement(2, "tds-badge", 2);
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(3, "div", 3)(4, "div", 4)(5, "div", 5);
        i0.ɵɵtemplate(6, TDSMenuItemComponent_a_6_Template, 5, 16, "a", 6);
        i0.ɵɵtemplate(7, TDSMenuItemComponent_span_7_Template, 5, 3, "span", 7);
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(8, TDSMenuItemComponent_div_8_Template, 2, 1, "div", 8);
        i0.ɵɵelementEnd()()();
        i0.ɵɵtemplate(9, TDSMenuItemComponent_div_9_Template, 3, 6, "div", 9);
    } if (rf & 2) {
        i0.ɵɵproperty("ngClass", ctx.ngStyleItem);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction3(9, _c4, ctx.parentIsGroup && ctx.showIcon, !ctx.parentIsGroup || !ctx.showIcon, ctx.parentIsGroup && !ctx.showIcon));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction1(13, _c5, !(ctx.isSelected && !ctx.hasListChild)));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction1(15, _c6, !ctx.isSelected));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction2(17, _c7, ctx.isSelected, !ctx.isSelected));
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", ctx.hasLink);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", !ctx.hasLink);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx.hasListChild && !ctx.hasAllHidden);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx.hasListChild);
    } }, directives: [i3.NgClass, i4.TDSBadgeComponent, i3.NgIf, i2.RouterLinkWithHref, i2.RouterLinkActive, i5.TDSTagComponent, i3.NgForOf, TDSMenuItemComponent], styles: [""], encapsulation: 2, data: { animation: [menuCollapseMotion] }, changeDetection: 0 });
__decorate([
    InputBoolean()
], TDSMenuItemComponent.prototype, "parentIsGroup", void 0);
__decorate([
    InputBoolean()
], TDSMenuItemComponent.prototype, "inlineCollapsed", void 0);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSMenuItemComponent, [{
        type: Component,
        args: [{ selector: 'tds-menu-item', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, animations: [menuCollapseMotion], host: {
                    clas: "w-full flex flex-col box-border",
                }, template: "<div class=\"w-full flex items-center group rounded\" [ngClass]=\"ngStyleItem\" (click)=\"onClickItem($event)\">\r\n    <div class=\" flex mr-2  flex-row-reverse items-center justify-between\"\r\n        [ngClass]=\"{'h-6 w-6':parentIsGroup && showIcon,'w-2':!parentIsGroup || !showIcon,'pl-1':parentIsGroup && !showIcon }\">\r\n        <tds-badge class=\"!flex flex-row-reverse items-center justify-center\"\r\n            [ngClass]=\"{'invisible':!(isSelected && !hasListChild)}\" status=\"primary\">\r\n        </tds-badge>\r\n\r\n    </div>\r\n    <div class=\"flex-auto  text-body-2  dark:font-regular group-hover:text-d-neutral-1-900\"\r\n        [ngClass]=\"{'text-neutral-1-500 dark:text-d-neutral-1-400':!isSelected}\">\r\n        <div class=\"w-full flex justify-between group-hover:text-neutral-1-900 dark:group-hover:text-d-neutral-1-900 \"\r\n            [ngClass]=\"{'dark:text-d-neutral-1-900 dark:font-regular text-neutral-1-900 font-semibold':isSelected,'dark:text-d-neutral-1-400 text-neutral-1-500':!isSelected}\">\r\n            <div class=\"pr-2 w-full\">\r\n                <a [ngClass]=\"{'cursor-pointer':!item.disabled}\" class=\"w-full flex items-center justify-between\"\r\n                    [routerLink]=\"[item.link]\" *ngIf=\"hasLink\" [queryParams]=\"item.linkProps?.queryParams\"\r\n                    [fragment]=\"item.linkProps?.fragment\" [queryParamsHandling]=\"item.linkProps?.queryParamsHandling\"\r\n                    [preserveFragment]=\"item.linkProps?.preserveFragment!\"\r\n                    [skipLocationChange]=\"item.linkProps?.skipLocationChange!\" [replaceUrl]=\"item.linkProps?.replaceUrl!\"\r\n                    [state]=\"item.linkProps?.state\" routerLinkActive>\r\n                    <span>{{item.name}}</span>\r\n                    <tds-badge *ngIf=\"item.badge\" [standalone]=\"true\" [count]=\"item.badge.count\"\r\n                        [tdsStyle]=\"item.badge.tdsStyle!\"></tds-badge>\r\n                    <tds-tag *ngIf=\"item.tag\" [status]='item.tag.status!' [rounded]=\"item.tag.rounded!\"\r\n                        [type]=\"item.tag.type!\">{{item.tag.text}}</tds-tag>\r\n                </a>\r\n                <span class=\"w-full flex items-center justify-between\" *ngIf=\"!hasLink\">\r\n                    <span>{{item.name}}</span>\r\n                    <tds-badge *ngIf=\"item.badge\" [standalone]=\"true\" [count]=\"item.badge.count!\"\r\n                        [tdsStyle]=\"item.badge.tdsStyle!\"></tds-badge>\r\n                    <tds-tag *ngIf=\"item.tag\" [status]='item.tag.status!' [rounded]=\"item.tag.rounded!\"\r\n                        [type]=\"item.tag.type!\">{{item.tag.text!}}</tds-tag>\r\n                </span>\r\n            </div>\r\n            <div *ngIf=\"hasListChild && !hasAllHidden\" class=\"flex items-center\">\r\n                <span *ngIf=\"hasListChild && !hasAllHidden\" [ngClass]=\"{'rotate-90 ':item.isOpen,'rotate-0':!item.isOpen,\r\n                    'dark:text-d-neutral-1-900 text-neutral-1-900':isSelected,\r\n                    'dark:text-d-neutral-1-400 text-neutral-1-500':!isSelected}\"\r\n                    class=\"text-base leading-4 flex items-center justify-center tdsi-arrow-right-line transform delay-100 duration-300\"></span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- <div *ngIf=\"hasListChild\" class=\"w-full flex flex-col py-2\"\r\n    [@menuCollapseMotion]=\"item.isOpen && !hasAllHidden ? 'expanded' : 'collapsed'\"\r\n    [ngClass]=\"{'h-0 overflow-hidden w-0': !item.isOpen || inlineCollapsed,'pl-10 pr-2.5 ':parentIsGroup,'pl-3':!parentIsGroup && !parentIsRoot}\">\r\n  \r\n</div> -->\r\n<div *ngIf=\"hasListChild\" class=\"w-full flex flex-col py-1\"\r\n    [@menuCollapseMotion]=\"item.isOpen && !hasAllHidden ? 'expanded' : 'collapsed'\"\r\n    [ngClass]=\"{'pl-10 pr-2.5 ':parentIsGroup,'pl-3':!parentIsGroup}\"\r\n    >\r\n    <div class=\"w-full flex flex-col\">\r\n        <ng-template ngFor let-menu [ngForOf]=\"item.listChild\">\r\n            <tds-menu-item [options]=\"options\" [item]=\"menu\" [isSelected]=\"menu.isSelected!\">\r\n            </tds-menu-item>\r\n        </ng-template>\r\n    </div>\r\n</div>", styles: [""] }]
    }], function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.TDSMenuService }, { type: i2.RouterLink, decorators: [{
                type: Optional
            }] }, { type: i2.RouterLinkWithHref, decorators: [{
                type: Optional
            }] }, { type: i2.Router, decorators: [{
                type: Optional
            }] }]; }, { showIcon: [{
            type: Input
        }], item: [{
            type: Input
        }], isSelected: [{
            type: Input
        }], parentIsGroup: [{
            type: Input
        }], inlineCollapsed: [{
            type: Input
        }], options: [{
            type: Input
        }], isOpenPopup: [{
            type: Input
        }], listItem: [{
            type: ViewChildren,
            args: [TDSMenuItemComponent]
        }], cdkOverlayOrigin: [{
            type: ViewChild,
            args: [CdkOverlayOrigin, { static: true, read: ElementRef }]
        }], listOfRouterLink: [{
            type: ViewChildren,
            args: [RouterLink]
        }], listOfRouterLinkWithHref: [{
            type: ViewChildren,
            args: [RouterLinkWithHref]
        }] }); })();
//# sourceMappingURL=data:application/json;base64,