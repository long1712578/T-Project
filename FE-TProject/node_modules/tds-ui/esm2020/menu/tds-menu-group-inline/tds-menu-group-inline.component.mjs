import { CdkOverlayOrigin } from '@angular/cdk/overlay';
import { ChangeDetectionStrategy, Component, ContentChildren, ElementRef, Input, Optional, ViewChild, ViewChildren, ViewEncapsulation } from '@angular/core';
import { NavigationEnd, RouterLink, RouterLinkWithHref } from '@angular/router';
import { Subject, merge } from 'rxjs';
import { filter, map, startWith, switchMap, takeUntil } from 'rxjs/operators';
import { menuCollapseMotion } from 'tds-ui/core/animation';
import { TDSHelperArray, TDSHelperObject, TDSHelperString } from 'tds-ui/shared/utility';
import { TDSMenuItemComponent } from '../tds-menu-item/tds-menu-item.component';
import * as i0 from "@angular/core";
import * as i1 from "../services/menu.service";
import * as i2 from "@angular/router";
import * as i3 from "@angular/common";
import * as i4 from "@angular/cdk/overlay";
import * as i5 from "tds-ui/badges";
import * as i6 from "tds-ui/tag";
const _c0 = function (a0, a1) { return { "py-3": a0, "py-2": a1 }; };
function TDSMenuGroupInlineComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 12);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵclassMap(ctx_r0.options.background);
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction2(4, _c0, ctx_r0.showIcon, !ctx_r0.showIcon));
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1(" ", ctx_r0.item.groupTitle, "\n");
} }
function TDSMenuGroupInlineComponent_div_3_span_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "span", 16);
} if (rf & 2) {
    const ctx_r7 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("innerHTML", ctx_r7.item.htmlIcon, i0.ɵɵsanitizeHtml);
} }
function TDSMenuGroupInlineComponent_div_3_span_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "span", 17);
} if (rf & 2) {
    const ctx_r8 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("ngClass", ctx_r8.item.icon);
} }
const _c1 = function (a0, a1) { return { "dark:text-d-neutral-1-900 text-primary-1": a0, "text-neutral-1-300 dark:text-d-neutral-1-900": a1 }; };
function TDSMenuGroupInlineComponent_div_3_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 13);
    i0.ɵɵtemplate(1, TDSMenuGroupInlineComponent_div_3_span_1_Template, 1, 1, "span", 14);
    i0.ɵɵtemplate(2, TDSMenuGroupInlineComponent_div_3_span_2_Template, 1, 1, "span", 15);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction2(3, _c1, ctx_r2.isSelected, !ctx_r2.isSelected));
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r2.item.htmlIcon);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r2.hasIcon && !ctx_r2.item.htmlIcon);
} }
function TDSMenuGroupInlineComponent_a_7_tds_badge_3_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "tds-badge", 21);
} if (rf & 2) {
    const ctx_r9 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("standalone", true)("overflowCount", ctx_r9.item.badge.overflowCount)("count", ctx_r9.item.badge.count)("tdsStyle", ctx_r9.item.badge.tdsStyle);
} }
function TDSMenuGroupInlineComponent_a_7_tds_tag_4_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "tds-tag", 22);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r10 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("status", ctx_r10.item.tag.status)("rounded", ctx_r10.item.tag.rounded)("type", ctx_r10.item.tag.type);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(ctx_r10.item.tag.text);
} }
const _c2 = function (a0) { return [a0]; };
function TDSMenuGroupInlineComponent_a_7_Template(rf, ctx) { if (rf & 1) {
    const _r12 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "a", 18);
    i0.ɵɵlistener("click", function TDSMenuGroupInlineComponent_a_7_Template_a_click_0_listener($event) { i0.ɵɵrestoreView(_r12); const ctx_r11 = i0.ɵɵnextContext(); return ctx_r11.onClickItem($event); });
    i0.ɵɵelementStart(1, "span");
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(3, TDSMenuGroupInlineComponent_a_7_tds_badge_3_Template, 1, 4, "tds-badge", 19);
    i0.ɵɵtemplate(4, TDSMenuGroupInlineComponent_a_7_tds_tag_4_Template, 2, 4, "tds-tag", 20);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = i0.ɵɵnextContext();
    i0.ɵɵproperty("routerLink", i0.ɵɵpureFunction1(11, _c2, ctx_r3.item.link))("queryParams", ctx_r3.item.linkProps == null ? null : ctx_r3.item.linkProps.queryParams)("fragment", ctx_r3.item.linkProps == null ? null : ctx_r3.item.linkProps.fragment)("queryParamsHandling", ctx_r3.item.linkProps == null ? null : ctx_r3.item.linkProps.queryParamsHandling)("preserveFragment", ctx_r3.item.linkProps == null ? null : ctx_r3.item.linkProps.preserveFragment)("skipLocationChange", ctx_r3.item.linkProps == null ? null : ctx_r3.item.linkProps.skipLocationChange)("replaceUrl", ctx_r3.item.linkProps == null ? null : ctx_r3.item.linkProps.replaceUrl)("state", ctx_r3.item.linkProps == null ? null : ctx_r3.item.linkProps.state);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(ctx_r3.item.name);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r3.item.badge);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r3.item.tag);
} }
function TDSMenuGroupInlineComponent_span_8_tds_badge_3_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "tds-badge", 21);
} if (rf & 2) {
    const ctx_r13 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("standalone", true)("overflowCount", ctx_r13.item.badge.overflowCount)("count", ctx_r13.item.badge.count)("tdsStyle", ctx_r13.item.badge.tdsStyle);
} }
function TDSMenuGroupInlineComponent_span_8_tds_tag_4_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "tds-tag", 22);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r14 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("status", ctx_r14.item.tag.status)("rounded", ctx_r14.item.tag.rounded)("type", ctx_r14.item.tag.type);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(ctx_r14.item.tag.text);
} }
function TDSMenuGroupInlineComponent_span_8_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "span", 23)(1, "span");
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(3, TDSMenuGroupInlineComponent_span_8_tds_badge_3_Template, 1, 4, "tds-badge", 19);
    i0.ɵɵtemplate(4, TDSMenuGroupInlineComponent_span_8_tds_tag_4_Template, 2, 4, "tds-tag", 20);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = i0.ɵɵnextContext();
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(ctx_r4.item.name);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r4.item.badge);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r4.item.tag);
} }
const _c3 = function (a0, a1, a2, a3) { return { "rotate-90 ": a0, "rotate-0": a1, "dark:text-d-neutral-1-900 text-neutral-1-900": a2, "dark:text-d-neutral-1-400 text-neutral-1-500": a3 }; };
function TDSMenuGroupInlineComponent_span_10_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "span", 24);
} if (rf & 2) {
    const ctx_r5 = i0.ɵɵnextContext();
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction4(1, _c3, ctx_r5.item.isOpen, !ctx_r5.item.isOpen, ctx_r5.isSelected, !ctx_r5.isSelected));
} }
const _c4 = function (a0, a1) { return { "py-2": a0, "py-1": a1 }; };
function TDSMenuGroupInlineComponent_div_11_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 25)(1, "div", 26);
    i0.ɵɵprojection(2);
    i0.ɵɵelementEnd()();
} if (rf & 2) {
    const ctx_r6 = i0.ɵɵnextContext();
    i0.ɵɵproperty("@menuCollapseMotion", ctx_r6.item.isOpen && !ctx_r6.hasAllHidden ? "expanded" : "collapsed");
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction2(2, _c4, ctx_r6.showIcon, !ctx_r6.showIcon));
} }
const _c5 = function (a0) { return { "hidden": a0 }; };
const _c6 = function (a0, a1) { return { "dark:text-d-neutral-1-900": a0, "text-neutral-1-900 dark:text-d-neutral-1-400": a1 }; };
const _c7 = ["*"];
export class TDSMenuGroupInlineComponent {
    constructor(_cdr, tdsMenuService, routerLink, routerLinkWithHref, router) {
        this._cdr = _cdr;
        this.tdsMenuService = tdsMenuService;
        this.routerLink = routerLink;
        this.routerLinkWithHref = routerLinkWithHref;
        this.router = router;
        this.destroy$ = new Subject();
        this.showIcon = true;
        this.isSelected = false;
        this.options = {
            background: 'bg-white dark:bg-d-neutral-3-200',
            backgroundItem: 'bg-white dark:bg-d-neutral-3-200',
            backgroundItemSelected: 'bg-neutral-3-50 dark:bg-d-neutral-3-300',
            backgroundItemHover: 'dark:hover:bg-d-neutral-3-300  hover:bg-neutral-3-50'
        };
        this.cdkOverlayOrigin = null;
        this.IsActiveMatchOptions = {
            paths: "subset",
            matrixParams: "ignored",
            queryParams: "ignored",
            fragment: "ignored",
        };
        this.ngStyleItem = {};
        if (router) {
            this.router.events.pipe(takeUntil(this.destroy$), filter(e => e instanceof NavigationEnd)).subscribe(() => {
                this.updateRouterActive();
            });
        }
    }
    get uid() {
        return this.item ? this.item.uid : "";
    }
    ngOnInit() {
        this.ngStyleItem = this.getStyleItem();
    }
    ngAfterContentInit() {
        this.listenItemChangeSelected();
    }
    ngAfterViewInit() {
        if (!this.hasListChild || this.hasAllHidden) {
            this.updateRouterActive();
        }
    }
    ngOnChanges(changes) {
        if (changes['item']) {
            this._cdr.markForCheck();
        }
        if (changes.isSelected) {
            this.setSelectedState(this.isSelected);
        }
    }
    onClickItem(e) {
        if (this.item.disabled) {
            e.stopPropagation();
            e.preventDefault();
        }
        if (this.hasListChild && !this.hasAllHidden) {
            this.tdsMenuService.groupMenuOpen$.next(this);
            // this.item.isOpen = !this.item.isOpen;
        }
        else {
            if (!this.isSelected)
                this.tdsMenuService.onDescendantMenuItemClick(this);
            if (this.hasLink)
                this.p_NavigateByUrl();
        }
    }
    get hasListChild() {
        return TDSHelperArray.hasListValue(this.item.listChild);
    }
    get hasAllHidden() {
        let childs = this.item.listChild?.find(f => { return !f.hidden; });
        return childs == undefined;
    }
    get hasGroupTitle() {
        return this.item && TDSHelperString.hasValueString(this.item.groupTitle);
    }
    ngOnDestroy() {
        this.destroy$.next();
        this.destroy$.complete();
    }
    setSelectedState(value) {
        this.isSelected = value;
        this.item.isSelected = value;
        if (this.isSelected) {
            if (!this.item.isOpen) {
                this.item.isOpen = true;
            }
        }
        this.ngStyleItem = this.getStyleItem();
        this._cdr.markForCheck();
    }
    updateRouterActive() {
        if (this.hasListChild || !this.listOfRouterLink || !this.listOfRouterLinkWithHref || !this.router || !this.router.navigated) {
            return;
        }
        Promise.resolve().then(() => {
            const hasActiveLinks = this.hasActiveLinks();
            if (this.isSelected !== hasActiveLinks) {
                this.setSelectedState(hasActiveLinks);
            }
        });
    }
    hasActiveLinks() {
        const isActiveCheckFn = this.isLinkActive(this.router);
        return ((this.routerLink && isActiveCheckFn(this.routerLink)) ||
            (this.routerLinkWithHref && isActiveCheckFn(this.routerLinkWithHref)) ||
            this.listOfRouterLink.some(isActiveCheckFn) ||
            this.listOfRouterLinkWithHref.some(isActiveCheckFn));
    }
    isLinkActive(router) {
        return (link) => router.isActive(link.urlTree, this.IsActiveMatchOptions);
    }
    setSelectedStateListChildren(uid) {
        if (TDSHelperArray.hasListValue(this.listItem)) {
            this.listItem.forEach(f => {
                f.setSelectedStateListChildren(uid);
            });
        }
        else {
            this.setSelectedState(uid === this.uid);
        }
    }
    get hasLink() {
        return !this.item.disabled && (!this.hasListChild || this.hasAllHidden) && TDSHelperObject.hasValue(this.item.link);
    }
    get hasIcon() {
        return this.showIcon && this.item && TDSHelperString.hasValueString(this.item.icon);
    }
    listenItemChangeSelected() {
        if (TDSHelperArray.hasListValue(this.listItem)) {
            const listOfTDSMenuItemComponent = this.listItem;
            const changes = listOfTDSMenuItemComponent.changes;
            const mergedObservable = merge(...[changes, ...listOfTDSMenuItemComponent.map(menu => menu.selected$)]);
            changes
                .pipe(startWith(listOfTDSMenuItemComponent), switchMap(() => mergedObservable), startWith(true), 
            // debounceTime(200),
            map(() => listOfTDSMenuItemComponent.some(e => e.isSelected)), takeUntil(this.destroy$))
                .subscribe(selected => {
                if (selected != this.isSelected) {
                    if (!this.hasAllHidden) {
                        this.setSelectedState(selected);
                    }
                    else {
                        //lấy link hiện tại khi tất ẩn tất cả menu con
                        const hasActiveLinks = this.hasActiveLinks();
                        this.setSelectedState(hasActiveLinks || selected);
                    }
                }
            });
        }
    }
    setOpenStateListChildren(value) {
        if (TDSHelperArray.hasListValue(this.listItem)) {
            this.listItem.forEach(f => {
                if (!f.hasListChild)
                    f.setOpenChildren(value);
            });
            this.item.isOpen = value;
            this._cdr.markForCheck();
        }
    }
    getStyleItem() {
        return {
            [`${this.options.backgroundItemSelected}`]: this.isSelected,
            [`${this.options.backgroundItem}`]: !this.isSelected,
            [`${this.options.backgroundItemHover}`]: true,
            [`cursor-pointer`]: !this.item.disabled,
            ['py-2.5']: this.showIcon,
            ['py-2']: !this.showIcon
        };
    }
    p_NavigateByUrl() {
        if (!TDSHelperObject.hasValue(this.item.linkProps)) {
            this.router?.navigateByUrl(this.item.link);
        }
        else {
            this.router?.navigate([this.item.link], {
                queryParams: this.item.linkProps?.queryParams,
                fragment: this.item.linkProps?.fragment,
                queryParamsHandling: this.item.linkProps?.queryParamsHandling,
                preserveFragment: this.item.linkProps?.preserveFragment,
                skipLocationChange: this.item.linkProps?.skipLocationChange,
                replaceUrl: this.item.linkProps?.replaceUrl,
                state: this.item.linkProps?.state
            });
        }
    }
}
TDSMenuGroupInlineComponent.ɵfac = function TDSMenuGroupInlineComponent_Factory(t) { return new (t || TDSMenuGroupInlineComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.TDSMenuService), i0.ɵɵdirectiveInject(i2.RouterLink, 8), i0.ɵɵdirectiveInject(i2.RouterLinkWithHref, 8), i0.ɵɵdirectiveInject(i2.Router, 8)); };
TDSMenuGroupInlineComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TDSMenuGroupInlineComponent, selectors: [["tds-menu-group-inline"]], contentQueries: function TDSMenuGroupInlineComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        i0.ɵɵcontentQuery(dirIndex, TDSMenuItemComponent, 5);
    } if (rf & 2) {
        let _t;
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listItem = _t);
    } }, viewQuery: function TDSMenuGroupInlineComponent_Query(rf, ctx) { if (rf & 1) {
        i0.ɵɵviewQuery(CdkOverlayOrigin, 7, ElementRef);
        i0.ɵɵviewQuery(RouterLink, 5);
        i0.ɵɵviewQuery(RouterLinkWithHref, 5);
    } if (rf & 2) {
        let _t;
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cdkOverlayOrigin = _t.first);
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listOfRouterLink = _t);
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listOfRouterLinkWithHref = _t);
    } }, hostAttrs: ["clas", "w-full flex flex-col box-border"], inputs: { showIcon: "showIcon", item: "item", isSelected: "isSelected", options: "options" }, features: [i0.ɵɵNgOnChangesFeature], ngContentSelectors: _c7, decls: 12, vars: 14, consts: [["class", "w-full flex text body-2 font-semibold items-center  px-3  rounded group  text-neutral-1-500 dark:text-d-neutral-1-400", 3, "class", "ngClass", 4, "ngIf"], ["cdkOverlayOrigin", "", 1, "w-full", "flex", "items-center", "pl-3", "pr-2.5", "rounded", "group", 3, "ngClass", "click"], ["origin", "cdkOverlayOrigin"], ["class", "h-6 w-6 flex mr-2", 3, "ngClass", 4, "ngIf"], [1, "flex-auto", "font-semibold", "text-body-2", "dark:font-regular"], [1, "w-full", "flex", "justify-between", "dark:group-hover:text-d-neutral-1-900", 3, "ngClass"], [1, "w-full", "mr-2"], ["class", "flex items-center justify-between", 3, "routerLink", "queryParams", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", "click", 4, "ngIf"], ["class", "flex items-center justify-between", 4, "ngIf"], [1, "flex", "justify-between"], ["class", "text-base leading-4 flex items-center justify-center tdsi-arrow-right-line transform delay-100 duration-300", 3, "ngClass", 4, "ngIf"], ["class", "w-full flex flex-col", 4, "ngIf"], [1, "w-full", "flex", "text", "body-2", "font-semibold", "items-center", "px-3", "rounded", "group", "text-neutral-1-500", "dark:text-d-neutral-1-400", 3, "ngClass"], [1, "h-6", "w-6", "flex", "mr-2", 3, "ngClass"], [3, "innerHTML", 4, "ngIf"], ["class", "text-2xl leading-6 dark:group-hover:text-d-neutral-1-900  dark:text-d-neutral-1-900", 3, "ngClass", 4, "ngIf"], [3, "innerHTML"], [1, "text-2xl", "leading-6", "dark:group-hover:text-d-neutral-1-900", "dark:text-d-neutral-1-900", 3, "ngClass"], [1, "flex", "items-center", "justify-between", 3, "routerLink", "queryParams", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", "click"], [3, "standalone", "overflowCount", "count", "tdsStyle", 4, "ngIf"], [3, "status", "rounded", "type", 4, "ngIf"], [3, "standalone", "overflowCount", "count", "tdsStyle"], [3, "status", "rounded", "type"], [1, "flex", "items-center", "justify-between"], [1, "text-base", "leading-4", "flex", "items-center", "justify-center", "tdsi-arrow-right-line", "transform", "delay-100", "duration-300", 3, "ngClass"], [1, "w-full", "flex", "flex-col"], [1, "w-full", "flex", "flex-col", 3, "ngClass"]], template: function TDSMenuGroupInlineComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵprojectionDef();
        i0.ɵɵtemplate(0, TDSMenuGroupInlineComponent_div_0_Template, 2, 7, "div", 0);
        i0.ɵɵelementStart(1, "div", 1, 2);
        i0.ɵɵlistener("click", function TDSMenuGroupInlineComponent_Template_div_click_1_listener($event) { return ctx.onClickItem($event); });
        i0.ɵɵtemplate(3, TDSMenuGroupInlineComponent_div_3_Template, 3, 6, "div", 3);
        i0.ɵɵelementStart(4, "div", 4)(5, "div", 5)(6, "div", 6);
        i0.ɵɵtemplate(7, TDSMenuGroupInlineComponent_a_7_Template, 5, 13, "a", 7);
        i0.ɵɵtemplate(8, TDSMenuGroupInlineComponent_span_8_Template, 5, 3, "span", 8);
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(9, "div", 9);
        i0.ɵɵtemplate(10, TDSMenuGroupInlineComponent_span_10_Template, 1, 6, "span", 10);
        i0.ɵɵelementEnd()()()();
        i0.ɵɵtemplate(11, TDSMenuGroupInlineComponent_div_11_Template, 3, 5, "div", 11);
    } if (rf & 2) {
        i0.ɵɵproperty("ngIf", ctx.hasGroupTitle);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction1(9, _c5, ctx.item.hidden))("ngClass", ctx.ngStyleItem);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", ctx.showIcon);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction2(11, _c6, ctx.isSelected, !ctx.isSelected));
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", ctx.hasLink);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", !ctx.hasLink);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", ctx.hasListChild && !ctx.hasAllHidden);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx.hasListChild);
    } }, directives: [i3.NgIf, i3.NgClass, i4.CdkOverlayOrigin, i2.RouterLinkWithHref, i5.TDSBadgeComponent, i6.TDSTagComponent], styles: [""], encapsulation: 2, data: { animation: [menuCollapseMotion] }, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSMenuGroupInlineComponent, [{
        type: Component,
        args: [{ selector: 'tds-menu-group-inline', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, animations: [menuCollapseMotion], host: {
                    clas: "w-full flex flex-col box-border",
                }, template: "<div *ngIf=\"hasGroupTitle\" [class]=\"options.background\"\r\n    class=\"w-full flex text body-2 font-semibold items-center  px-3  rounded group  text-neutral-1-500 dark:text-d-neutral-1-400\"\r\n    [ngClass]=\"{'py-3':showIcon,\r\n    'py-2':!showIcon}\">\r\n    {{item.groupTitle}}\r\n</div>\r\n<div class=\"w-full flex  items-center  pl-3 pr-2.5  rounded group\" [ngClass]=\"{'hidden':item.hidden}\" cdkOverlayOrigin\r\n    #origin=\"cdkOverlayOrigin\" [ngClass]=\"ngStyleItem\" (click)=\"onClickItem($event)\">\r\n    <div *ngIf='showIcon' class=\"h-6 w-6 flex mr-2\" [ngClass]=\"{'dark:text-d-neutral-1-900 text-primary-1':isSelected,\r\n    'text-neutral-1-300 dark:text-d-neutral-1-900':!isSelected}\">\r\n        <span *ngIf=\"item.htmlIcon\" [innerHTML]=\"item.htmlIcon\"></span>\r\n        <span *ngIf=\"hasIcon && !item.htmlIcon\" [ngClass]=\"item.icon!\"\r\n            class=\"text-2xl leading-6 dark:group-hover:text-d-neutral-1-900  dark:text-d-neutral-1-900\"></span>\r\n    </div>\r\n    <div class=\"flex-auto  font-semibold  text-body-2 dark:font-regular\">\r\n        <div class=\"w-full flex justify-between  dark:group-hover:text-d-neutral-1-900\" [ngClass]=\"{'dark:text-d-neutral-1-900':isSelected,\r\n    'text-neutral-1-900 dark:text-d-neutral-1-400':!isSelected}\">\r\n            <div class=\"w-full mr-2\">\r\n                <a class=\"flex items-center justify-between\" (click)=\"onClickItem($event)\" [routerLink]=\"[item.link]\"\r\n                    *ngIf=\"hasLink\" [queryParams]=\"item.linkProps?.queryParams\" [fragment]=\"item.linkProps?.fragment\"\r\n                    [queryParamsHandling]=\"item.linkProps?.queryParamsHandling\"\r\n                    [preserveFragment]=\"item.linkProps?.preserveFragment!\"\r\n                    [skipLocationChange]=\"item.linkProps?.skipLocationChange!\" [replaceUrl]=\"item.linkProps?.replaceUrl!\"\r\n                    [state]=\"item.linkProps?.state\"> \r\n                    <span>{{item.name}}</span>  \r\n                    <tds-badge *ngIf=\"item.badge\" [standalone]=\"true\" [overflowCount]=\"item.badge.overflowCount!\" [count]=\"item.badge.count\" [tdsStyle]=\"item.badge.tdsStyle!\"></tds-badge>\r\n                    <tds-tag *ngIf=\"item.tag\" [status]='item.tag.status!' [rounded]=\"item.tag.rounded!\" [type]=\"item.tag.type!\">{{item.tag.text}}</tds-tag>\r\n                </a>\r\n                <span class=\"flex items-center justify-between\" *ngIf=\"!hasLink\">\r\n                    <span>{{item.name}}</span>  \r\n                    <tds-badge *ngIf=\"item.badge\" [standalone]=\"true\" [overflowCount]=\"item.badge.overflowCount\" [count]=\"item.badge.count\" [tdsStyle]=\"item.badge.tdsStyle!\"></tds-badge>\r\n                    <tds-tag *ngIf=\"item.tag\" [status]='item.tag.status!' [rounded]=\"item.tag.rounded!\" [type]=\"item.tag.type!\">{{item.tag.text}}</tds-tag>\r\n                </span>\r\n            </div>\r\n            <div class=\"flex justify-between\">\r\n                <span *ngIf=\"hasListChild && !hasAllHidden\" [ngClass]=\"{'rotate-90 ':item.isOpen,'rotate-0':!item.isOpen,\r\n                'dark:text-d-neutral-1-900 text-neutral-1-900':isSelected,\r\n                'dark:text-d-neutral-1-400 text-neutral-1-500':!isSelected}\"\r\n                    class=\"text-base leading-4 flex items-center justify-center tdsi-arrow-right-line transform delay-100 duration-300\"></span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div *ngIf=\"hasListChild\" class=\"w-full flex flex-col\"\r\n    [@menuCollapseMotion]=\"item.isOpen && !hasAllHidden ? 'expanded' : 'collapsed'\">\r\n    <div class=\"w-full flex flex-col\" [ngClass]=\"{'py-2':showIcon,\r\n    'py-1':!showIcon}\">\r\n        <ng-content></ng-content>\r\n    </div>\r\n</div>", styles: [""] }]
    }], function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.TDSMenuService }, { type: i2.RouterLink, decorators: [{
                type: Optional
            }] }, { type: i2.RouterLinkWithHref, decorators: [{
                type: Optional
            }] }, { type: i2.Router, decorators: [{
                type: Optional
            }] }]; }, { showIcon: [{
            type: Input
        }], item: [{
            type: Input
        }], isSelected: [{
            type: Input
        }], options: [{
            type: Input
        }], listItem: [{
            type: ContentChildren,
            args: [TDSMenuItemComponent, { descendants: true }]
        }], cdkOverlayOrigin: [{
            type: ViewChild,
            args: [CdkOverlayOrigin, { static: true, read: ElementRef }]
        }], listOfRouterLink: [{
            type: ViewChildren,
            args: [RouterLink]
        }], listOfRouterLinkWithHref: [{
            type: ViewChildren,
            args: [RouterLinkWithHref]
        }] }); })();
//# sourceMappingURL=data:application/json;base64,