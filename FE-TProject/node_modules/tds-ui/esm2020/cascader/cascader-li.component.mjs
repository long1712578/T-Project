import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "tds-ui/progress-spinner";
import * as i3 from "tds-ui/core/outlet";
import * as i4 from "tds-ui/core/highlight";
const _c0 = ["tds-cascader-option", ""];
function TDSCascaderOptionComponent_ng_container_0_ng_template_1_Template(rf, ctx) { }
const _c1 = function (a0, a1) { return { $implicit: a0, index: a1 }; };
function TDSCascaderOptionComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtemplate(1, TDSCascaderOptionComponent_ng_container_0_ng_template_1_Template, 0, 0, "ng-template", 3);
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngTemplateOutlet", ctx_r0.optionTemplate)("ngTemplateOutletContext", i0.ɵɵpureFunction2(2, _c1, ctx_r0.option, ctx_r0.columnIndex));
} }
function TDSCascaderOptionComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "div", 4);
    i0.ɵɵpipe(1, "tdsHighlight");
} if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵproperty("innerHTML", i0.ɵɵpipeBind4(1, 1, ctx_r2.optionLabel, ctx_r2.highlightText, "g", "tds-cascader-menu-item-keyword"), i0.ɵɵsanitizeHtml);
} }
function TDSCascaderOptionComponent_div_3_span_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "span");
    i0.ɵɵelement(1, "tds-spinner", 7);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("color", "primary");
} }
function TDSCascaderOptionComponent_div_3_ng_template_2_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵelement(1, "span");
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r8 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance(1);
    i0.ɵɵclassMap(ctx_r8.expandIcon);
} }
function TDSCascaderOptionComponent_div_3_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtemplate(0, TDSCascaderOptionComponent_div_3_ng_template_2_ng_container_0_Template, 2, 2, "ng-container", 8);
} if (rf & 2) {
    const ctx_r7 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("tdsStringTemplateOutlet", ctx_r7.expandIcon);
} }
function TDSCascaderOptionComponent_div_3_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 5);
    i0.ɵɵtemplate(1, TDSCascaderOptionComponent_div_3_span_1_Template, 2, 1, "span", 0);
    i0.ɵɵtemplate(2, TDSCascaderOptionComponent_div_3_ng_template_2_Template, 1, 1, "ng-template", null, 6, i0.ɵɵtemplateRefExtractor);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const _r6 = i0.ɵɵreference(3);
    const ctx_r3 = i0.ɵɵnextContext();
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r3.option.loading)("ngIfElse", _r6);
} }
export class TDSCascaderOptionComponent {
    constructor(cdr, elementRef, renderer) {
        this.cdr = cdr;
        this.optionTemplate = null;
        this.activated = false;
        this.tdsLabelProperty = 'label';
        this.expandIcon = '';
        this.dir = 'ltr';
        renderer.addClass(elementRef.nativeElement, 'tds-cascader-menu-item');
        renderer.addClass(elementRef.nativeElement, 'tds-cascader-menu-item-expanded');
        this.nativeElement = elementRef.nativeElement;
    }
    ngOnInit() {
        if (this.expandIcon === '' && this.dir === 'rtl') {
            this.expandIcon = 'tdsi-arrow-left-line';
        }
        else if (this.expandIcon === '') {
            this.expandIcon = 'tdsi-arrow-right-line';
        }
    }
    get optionLabel() {
        return this.option[this.tdsLabelProperty];
    }
    markForCheck() {
        this.cdr.markForCheck();
    }
}
TDSCascaderOptionComponent.ɵfac = function TDSCascaderOptionComponent_Factory(t) { return new (t || TDSCascaderOptionComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2)); };
TDSCascaderOptionComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TDSCascaderOptionComponent, selectors: [["", "tds-cascader-option", ""]], hostVars: 7, hostBindings: function TDSCascaderOptionComponent_HostBindings(rf, ctx) { if (rf & 2) {
        i0.ɵɵattribute("title", ctx.option.title || ctx.optionLabel);
        i0.ɵɵclassProp("tds-cascader-menu-item-active", ctx.activated)("tds-cascader-menu-item-expand", !ctx.option.isLeaf)("tds-cascader-menu-item-disabled", ctx.option.disabled);
    } }, inputs: { optionTemplate: "optionTemplate", option: "option", activated: "activated", highlightText: "highlightText", tdsLabelProperty: "tdsLabelProperty", columnIndex: "columnIndex", expandIcon: "expandIcon", dir: "dir" }, exportAs: ["tdsCascaderOption"], attrs: _c0, decls: 4, vars: 3, consts: [[4, "ngIf", "ngIfElse"], ["defaultOptionTemplate", ""], ["class", "tds-cascader-menu-item-expand-icon text-base leading-4 text-neutral-600 dark:text-d-neutral-1-600", 4, "ngIf"], [3, "ngTemplateOutlet", "ngTemplateOutletContext"], [1, "tds-cascader-menu-item-content", 3, "innerHTML"], [1, "tds-cascader-menu-item-expand-icon", "text-base", "leading-4", "text-neutral-600", "dark:text-d-neutral-1-600"], ["icon", ""], [1, "h-4", "w-4", 3, "color"], [4, "tdsStringTemplateOutlet"]], template: function TDSCascaderOptionComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵtemplate(0, TDSCascaderOptionComponent_ng_container_0_Template, 2, 5, "ng-container", 0);
        i0.ɵɵtemplate(1, TDSCascaderOptionComponent_ng_template_1_Template, 2, 6, "ng-template", null, 1, i0.ɵɵtemplateRefExtractor);
        i0.ɵɵtemplate(3, TDSCascaderOptionComponent_div_3_Template, 4, 2, "div", 2);
    } if (rf & 2) {
        const _r1 = i0.ɵɵreference(2);
        i0.ɵɵproperty("ngIf", ctx.optionTemplate)("ngIfElse", _r1);
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("ngIf", !ctx.option.isLeaf || (ctx.option.children == null ? null : ctx.option.children.length) || ctx.option.loading);
    } }, directives: [i1.NgIf, i1.NgTemplateOutlet, i2.TDSProgressSpinnerComponent, i3.TDSStringTemplateOutletDirective], pipes: [i4.TDSHighlightPipe], encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSCascaderOptionComponent, [{
        type: Component,
        args: [{
                changeDetection: ChangeDetectionStrategy.OnPush,
                encapsulation: ViewEncapsulation.None,
                selector: '[tds-cascader-option]',
                exportAs: 'tdsCascaderOption',
                template: `
    <ng-container *ngIf="optionTemplate; else defaultOptionTemplate">
      <ng-template
        [ngTemplateOutlet]="optionTemplate"
        [ngTemplateOutletContext]="{ $implicit: option, index: columnIndex }"
      ></ng-template>
    </ng-container>
    <ng-template #defaultOptionTemplate>
      <div
        class="tds-cascader-menu-item-content"
        [innerHTML]="optionLabel | tdsHighlight: highlightText:'g':'tds-cascader-menu-item-keyword'"
      ></div>
    </ng-template>
    <div *ngIf="!option.isLeaf || option.children?.length || option.loading" class="tds-cascader-menu-item-expand-icon text-base leading-4 text-neutral-600 dark:text-d-neutral-1-600">
      <span *ngIf="option.loading; else icon">
        <tds-spinner [color]="'primary'" class="h-4 w-4"></tds-spinner>
      </span>      
      <ng-template #icon>
      <ng-container *tdsStringTemplateOutlet="expandIcon">
      <span [class]="expandIcon"></span>
  </ng-container>
      </ng-template>
    </div>
  `,
                host: {
                    '[attr.title]': 'option.title || optionLabel',
                    '[class.tds-cascader-menu-item-active]': 'activated',
                    '[class.tds-cascader-menu-item-expand]': '!option.isLeaf',
                    '[class.tds-cascader-menu-item-disabled]': 'option.disabled',
                }
            }]
    }], function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.Renderer2 }]; }, { optionTemplate: [{
            type: Input
        }], option: [{
            type: Input
        }], activated: [{
            type: Input
        }], highlightText: [{
            type: Input
        }], tdsLabelProperty: [{
            type: Input
        }], columnIndex: [{
            type: Input
        }], expandIcon: [{
            type: Input
        }], dir: [{
            type: Input
        }] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FzY2FkZXItbGkuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvdGRzLXVpL2Nhc2NhZGVyL2Nhc2NhZGVyLWxpLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQ0wsdUJBQXVCLEVBRXZCLFNBQVMsRUFFVCxLQUFLLEVBSUwsaUJBQWlCLEVBQ2xCLE1BQU0sZUFBZSxDQUFDOzs7Ozs7Ozs7O0lBVW5CLDZCQUFpRTtJQUMvRCwwR0FHZTtJQUNqQiwwQkFBZTs7O0lBSFgsZUFBbUM7SUFBbkMsd0RBQW1DLDBGQUFBOzs7SUFLckMseUJBR087Ozs7SUFETCxvSkFBNEY7OztJQUk5Riw0QkFBd0M7SUFDdEMsaUNBQStEO0lBQ2pFLGlCQUFPOztJQURRLGVBQW1CO0lBQW5CLGlDQUFtQjs7O0lBR2xDLDZCQUFvRDtJQUNwRCx1QkFBa0M7SUFDdEMsMEJBQWU7OztJQURMLGVBQW9CO0lBQXBCLGdDQUFvQjs7O0lBRDFCLGlIQUVXOzs7SUFGSSwyREFBbUM7OztJQUxwRCw4QkFBbUw7SUFDakwsbUZBRU87SUFDUCxrSUFJYztJQUNoQixpQkFBTTs7OztJQVJHLGVBQXNCO0lBQXRCLDRDQUFzQixpQkFBQTs7QUFrQm5DLE1BQU0sT0FBTywwQkFBMEI7SUFZckMsWUFBb0IsR0FBc0IsRUFBRSxVQUFzQixFQUFFLFFBQW1CO1FBQW5FLFFBQUcsR0FBSCxHQUFHLENBQW1CO1FBWGpDLG1CQUFjLEdBQTBDLElBQUksQ0FBQztRQUU3RCxjQUFTLEdBQUcsS0FBSyxDQUFDO1FBRWxCLHFCQUFnQixHQUFHLE9BQU8sQ0FBQztRQUUzQixlQUFVLEdBQStCLEVBQUUsQ0FBQztRQUM1QyxRQUFHLEdBQWMsS0FBSyxDQUFDO1FBSzlCLFFBQVEsQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLGFBQWEsRUFBRSx3QkFBd0IsQ0FBQyxDQUFDO1FBQ3RFLFFBQVEsQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLGFBQWEsRUFBRSxpQ0FBaUMsQ0FBQyxDQUFDO1FBQy9FLElBQUksQ0FBQyxhQUFhLEdBQUcsVUFBVSxDQUFDLGFBQWEsQ0FBQztJQUNoRCxDQUFDO0lBQ0QsUUFBUTtRQUNOLElBQUksSUFBSSxDQUFDLFVBQVUsS0FBSyxFQUFFLElBQUksSUFBSSxDQUFDLEdBQUcsS0FBSyxLQUFLLEVBQUU7WUFDaEQsSUFBSSxDQUFDLFVBQVUsR0FBRyxzQkFBc0IsQ0FBQztTQUMxQzthQUFNLElBQUksSUFBSSxDQUFDLFVBQVUsS0FBSyxFQUFFLEVBQUU7WUFDakMsSUFBSSxDQUFDLFVBQVUsR0FBRyx1QkFBdUIsQ0FBQztTQUMzQztJQUNILENBQUM7SUFFRCxJQUFJLFdBQVc7UUFDYixPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUM7SUFDNUMsQ0FBQztJQUVELFlBQVk7UUFDVixJQUFJLENBQUMsR0FBRyxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQzFCLENBQUM7O29HQS9CVSwwQkFBMEI7NkVBQTFCLDBCQUEwQjs7OztRQS9CbkMsNkZBS2U7UUFDZiw0SEFLYztRQUNkLDJFQVNNOzs7UUFyQlMseUNBQXNCLGlCQUFBO1FBWS9CLGVBQWlFO1FBQWpFLG9JQUFpRTs7dUZBbUI5RCwwQkFBMEI7Y0FyQ3RDLFNBQVM7ZUFBQztnQkFDVCxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtnQkFDL0MsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7Z0JBQ3JDLFFBQVEsRUFBRSx1QkFBdUI7Z0JBQ2pDLFFBQVEsRUFBRSxtQkFBbUI7Z0JBQzdCLFFBQVEsRUFBRTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0F1QlQ7Z0JBQ0QsSUFBSSxFQUFFO29CQUNKLGNBQWMsRUFBRSw2QkFBNkI7b0JBQzdDLHVDQUF1QyxFQUFFLFdBQVc7b0JBQ3BELHVDQUF1QyxFQUFFLGdCQUFnQjtvQkFDekQseUNBQXlDLEVBQUUsaUJBQWlCO2lCQUU3RDthQUNGO3FIQUVVLGNBQWM7a0JBQXRCLEtBQUs7WUFDRyxNQUFNO2tCQUFkLEtBQUs7WUFDRyxTQUFTO2tCQUFqQixLQUFLO1lBQ0csYUFBYTtrQkFBckIsS0FBSztZQUNHLGdCQUFnQjtrQkFBeEIsS0FBSztZQUNHLFdBQVc7a0JBQW5CLEtBQUs7WUFDRyxVQUFVO2tCQUFsQixLQUFLO1lBQ0csR0FBRztrQkFBWCxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL2JpZGknO1xyXG5pbXBvcnQge1xyXG4gIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxyXG4gIENoYW5nZURldGVjdG9yUmVmLFxyXG4gIENvbXBvbmVudCxcclxuICBFbGVtZW50UmVmLFxyXG4gIElucHV0LFxyXG4gIE9uSW5pdCxcclxuICBSZW5kZXJlcjIsXHJcbiAgVGVtcGxhdGVSZWYsXHJcbiAgVmlld0VuY2Fwc3VsYXRpb25cclxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbmltcG9ydCB7IFREU0Nhc2NhZGVyT3B0aW9uIH0gZnJvbSAnLi90eXBpbmdzJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxyXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXHJcbiAgc2VsZWN0b3I6ICdbdGRzLWNhc2NhZGVyLW9wdGlvbl0nLFxyXG4gIGV4cG9ydEFzOiAndGRzQ2FzY2FkZXJPcHRpb24nLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8bmctY29udGFpbmVyICpuZ0lmPVwib3B0aW9uVGVtcGxhdGU7IGVsc2UgZGVmYXVsdE9wdGlvblRlbXBsYXRlXCI+XHJcbiAgICAgIDxuZy10ZW1wbGF0ZVxyXG4gICAgICAgIFtuZ1RlbXBsYXRlT3V0bGV0XT1cIm9wdGlvblRlbXBsYXRlXCJcclxuICAgICAgICBbbmdUZW1wbGF0ZU91dGxldENvbnRleHRdPVwieyAkaW1wbGljaXQ6IG9wdGlvbiwgaW5kZXg6IGNvbHVtbkluZGV4IH1cIlxyXG4gICAgICA+PC9uZy10ZW1wbGF0ZT5cclxuICAgIDwvbmctY29udGFpbmVyPlxyXG4gICAgPG5nLXRlbXBsYXRlICNkZWZhdWx0T3B0aW9uVGVtcGxhdGU+XHJcbiAgICAgIDxkaXZcclxuICAgICAgICBjbGFzcz1cInRkcy1jYXNjYWRlci1tZW51LWl0ZW0tY29udGVudFwiXHJcbiAgICAgICAgW2lubmVySFRNTF09XCJvcHRpb25MYWJlbCB8IHRkc0hpZ2hsaWdodDogaGlnaGxpZ2h0VGV4dDonZyc6J3Rkcy1jYXNjYWRlci1tZW51LWl0ZW0ta2V5d29yZCdcIlxyXG4gICAgICA+PC9kaXY+XHJcbiAgICA8L25nLXRlbXBsYXRlPlxyXG4gICAgPGRpdiAqbmdJZj1cIiFvcHRpb24uaXNMZWFmIHx8IG9wdGlvbi5jaGlsZHJlbj8ubGVuZ3RoIHx8IG9wdGlvbi5sb2FkaW5nXCIgY2xhc3M9XCJ0ZHMtY2FzY2FkZXItbWVudS1pdGVtLWV4cGFuZC1pY29uIHRleHQtYmFzZSBsZWFkaW5nLTQgdGV4dC1uZXV0cmFsLTYwMCBkYXJrOnRleHQtZC1uZXV0cmFsLTEtNjAwXCI+XHJcbiAgICAgIDxzcGFuICpuZ0lmPVwib3B0aW9uLmxvYWRpbmc7IGVsc2UgaWNvblwiPlxyXG4gICAgICAgIDx0ZHMtc3Bpbm5lciBbY29sb3JdPVwiJ3ByaW1hcnknXCIgY2xhc3M9XCJoLTQgdy00XCI+PC90ZHMtc3Bpbm5lcj5cclxuICAgICAgPC9zcGFuPiAgICAgIFxyXG4gICAgICA8bmctdGVtcGxhdGUgI2ljb24+XHJcbiAgICAgIDxuZy1jb250YWluZXIgKnRkc1N0cmluZ1RlbXBsYXRlT3V0bGV0PVwiZXhwYW5kSWNvblwiPlxyXG4gICAgICA8c3BhbiBbY2xhc3NdPVwiZXhwYW5kSWNvblwiPjwvc3Bhbj5cclxuICA8L25nLWNvbnRhaW5lcj5cclxuICAgICAgPC9uZy10ZW1wbGF0ZT5cclxuICAgIDwvZGl2PlxyXG4gIGAsXHJcbiAgaG9zdDoge1xyXG4gICAgJ1thdHRyLnRpdGxlXSc6ICdvcHRpb24udGl0bGUgfHwgb3B0aW9uTGFiZWwnLFxyXG4gICAgJ1tjbGFzcy50ZHMtY2FzY2FkZXItbWVudS1pdGVtLWFjdGl2ZV0nOiAnYWN0aXZhdGVkJyxcclxuICAgICdbY2xhc3MudGRzLWNhc2NhZGVyLW1lbnUtaXRlbS1leHBhbmRdJzogJyFvcHRpb24uaXNMZWFmJyxcclxuICAgICdbY2xhc3MudGRzLWNhc2NhZGVyLW1lbnUtaXRlbS1kaXNhYmxlZF0nOiAnb3B0aW9uLmRpc2FibGVkJyxcclxuICAgXHJcbiAgfVxyXG59KVxyXG5leHBvcnQgY2xhc3MgVERTQ2FzY2FkZXJPcHRpb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG4gIEBJbnB1dCgpIG9wdGlvblRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxURFNDYXNjYWRlck9wdGlvbj4gfCBudWxsID0gbnVsbDtcclxuICBASW5wdXQoKSBvcHRpb24hOiBURFNDYXNjYWRlck9wdGlvbjtcclxuICBASW5wdXQoKSBhY3RpdmF0ZWQgPSBmYWxzZTtcclxuICBASW5wdXQoKSBoaWdobGlnaHRUZXh0ITogc3RyaW5nO1xyXG4gIEBJbnB1dCgpIHRkc0xhYmVsUHJvcGVydHkgPSAnbGFiZWwnO1xyXG4gIEBJbnB1dCgpIGNvbHVtbkluZGV4ITogbnVtYmVyO1xyXG4gIEBJbnB1dCgpIGV4cGFuZEljb246IHN0cmluZyB8IFRlbXBsYXRlUmVmPHZvaWQ+ID0gJyc7XHJcbiAgQElucHV0KCkgZGlyOiBEaXJlY3Rpb24gPSAnbHRyJztcclxuXHJcbiAgcmVhZG9ubHkgbmF0aXZlRWxlbWVudDogSFRNTEVsZW1lbnQ7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgY2RyOiBDaGFuZ2VEZXRlY3RvclJlZiwgZWxlbWVudFJlZjogRWxlbWVudFJlZiwgcmVuZGVyZXI6IFJlbmRlcmVyMikge1xyXG4gICAgcmVuZGVyZXIuYWRkQ2xhc3MoZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LCAndGRzLWNhc2NhZGVyLW1lbnUtaXRlbScpO1xyXG4gICAgcmVuZGVyZXIuYWRkQ2xhc3MoZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LCAndGRzLWNhc2NhZGVyLW1lbnUtaXRlbS1leHBhbmRlZCcpO1xyXG4gICAgdGhpcy5uYXRpdmVFbGVtZW50ID0gZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50O1xyXG4gIH1cclxuICBuZ09uSW5pdCgpOiB2b2lkIHtcclxuICAgIGlmICh0aGlzLmV4cGFuZEljb24gPT09ICcnICYmIHRoaXMuZGlyID09PSAncnRsJykge1xyXG4gICAgICB0aGlzLmV4cGFuZEljb24gPSAndGRzaS1hcnJvdy1sZWZ0LWxpbmUnO1xyXG4gICAgfSBlbHNlIGlmICh0aGlzLmV4cGFuZEljb24gPT09ICcnKSB7XHJcbiAgICAgIHRoaXMuZXhwYW5kSWNvbiA9ICd0ZHNpLWFycm93LXJpZ2h0LWxpbmUnO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZ2V0IG9wdGlvbkxhYmVsKCk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gdGhpcy5vcHRpb25bdGhpcy50ZHNMYWJlbFByb3BlcnR5XTtcclxuICB9XHJcblxyXG4gIG1hcmtGb3JDaGVjaygpOiB2b2lkIHtcclxuICAgIHRoaXMuY2RyLm1hcmtGb3JDaGVjaygpO1xyXG4gIH1cclxuIFxyXG59XHJcbiJdfQ==