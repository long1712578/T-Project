import { BidiModule } from '@angular/cdk/bidi';
import { OverlayModule } from '@angular/cdk/overlay';
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { TDSHighlightModule } from 'tds-ui/core/highlight';
import { TDSNoAnimationModule } from 'tds-ui/core/no-animation';
import { TDSOutletModule } from 'tds-ui/core/outlet';
import { TDSOverlayModule } from 'tds-ui/core/overlay';
import { TDSEmptyModule } from 'tds-ui/empty';
import { TDSSpinnerModule } from 'tds-ui/progress-spinner';
import { TDSInputModule } from 'tds-ui/tds-input';
import { TDSCascaderOptionComponent } from './cascader-li.component';
import { TDSCascaderComponent } from './cascader.component';
import * as i0 from "@angular/core";
export class TDSCascaderModule {
}
TDSCascaderModule.ɵfac = function TDSCascaderModule_Factory(t) { return new (t || TDSCascaderModule)(); };
TDSCascaderModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: TDSCascaderModule });
TDSCascaderModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [[
            BidiModule,
            CommonModule,
            FormsModule,
            OverlayModule,
            TDSOutletModule,
            TDSEmptyModule,
            TDSHighlightModule,
            TDSInputModule,
            TDSNoAnimationModule,
            TDSOverlayModule,
            TDSSpinnerModule
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSCascaderModule, [{
        type: NgModule,
        args: [{
                imports: [
                    BidiModule,
                    CommonModule,
                    FormsModule,
                    OverlayModule,
                    TDSOutletModule,
                    TDSEmptyModule,
                    TDSHighlightModule,
                    TDSInputModule,
                    TDSNoAnimationModule,
                    TDSOverlayModule,
                    TDSSpinnerModule
                ],
                declarations: [TDSCascaderComponent, TDSCascaderOptionComponent],
                exports: [TDSCascaderComponent]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0.ɵɵsetNgModuleScope(TDSCascaderModule, { declarations: [TDSCascaderComponent, TDSCascaderOptionComponent], imports: [BidiModule,
        CommonModule,
        FormsModule,
        OverlayModule,
        TDSOutletModule,
        TDSEmptyModule,
        TDSHighlightModule,
        TDSInputModule,
        TDSNoAnimationModule,
        TDSOverlayModule,
        TDSSpinnerModule], exports: [TDSCascaderComponent] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FzY2FkZXIubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvdGRzLXVpL2Nhc2NhZGVyL2Nhc2NhZGVyLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDL0MsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUMzRCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNoRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDckQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDdkQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUM5QyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUMzRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFbEQsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDckUsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7O0FBbUI1RCxNQUFNLE9BQU8saUJBQWlCOztrRkFBakIsaUJBQWlCO21FQUFqQixpQkFBaUI7dUVBaEJuQjtZQUNQLFVBQVU7WUFDVixZQUFZO1lBQ1osV0FBVztZQUNYLGFBQWE7WUFDYixlQUFlO1lBQ2YsY0FBYztZQUNkLGtCQUFrQjtZQUNsQixjQUFjO1lBQ2Qsb0JBQW9CO1lBQ3BCLGdCQUFnQjtZQUNoQixnQkFBZ0I7U0FDakI7dUZBSVUsaUJBQWlCO2NBakI3QixRQUFRO2VBQUM7Z0JBQ1IsT0FBTyxFQUFFO29CQUNQLFVBQVU7b0JBQ1YsWUFBWTtvQkFDWixXQUFXO29CQUNYLGFBQWE7b0JBQ2IsZUFBZTtvQkFDZixjQUFjO29CQUNkLGtCQUFrQjtvQkFDbEIsY0FBYztvQkFDZCxvQkFBb0I7b0JBQ3BCLGdCQUFnQjtvQkFDaEIsZ0JBQWdCO2lCQUNqQjtnQkFDRCxZQUFZLEVBQUUsQ0FBQyxvQkFBb0IsRUFBRSwwQkFBMEIsQ0FBQztnQkFDaEUsT0FBTyxFQUFFLENBQUMsb0JBQW9CLENBQUM7YUFDaEM7O3dGQUNZLGlCQUFpQixtQkFIYixvQkFBb0IsRUFBRSwwQkFBMEIsYUFaN0QsVUFBVTtRQUNWLFlBQVk7UUFDWixXQUFXO1FBQ1gsYUFBYTtRQUNiLGVBQWU7UUFDZixjQUFjO1FBQ2Qsa0JBQWtCO1FBQ2xCLGNBQWM7UUFDZCxvQkFBb0I7UUFDcEIsZ0JBQWdCO1FBQ2hCLGdCQUFnQixhQUdSLG9CQUFvQiIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5cclxuaW1wb3J0IHsgQmlkaU1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9iaWRpJztcclxuaW1wb3J0IHsgT3ZlcmxheU1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9vdmVybGF5JztcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcbmltcG9ydCB7IFREU0hpZ2hsaWdodE1vZHVsZSB9IGZyb20gJ3Rkcy11aS9jb3JlL2hpZ2hsaWdodCc7XHJcbmltcG9ydCB7IFREU05vQW5pbWF0aW9uTW9kdWxlIH0gZnJvbSAndGRzLXVpL2NvcmUvbm8tYW5pbWF0aW9uJztcclxuaW1wb3J0IHsgVERTT3V0bGV0TW9kdWxlIH0gZnJvbSAndGRzLXVpL2NvcmUvb3V0bGV0JztcclxuaW1wb3J0IHsgVERTT3ZlcmxheU1vZHVsZSB9IGZyb20gJ3Rkcy11aS9jb3JlL292ZXJsYXknO1xyXG5pbXBvcnQgeyBURFNFbXB0eU1vZHVsZSB9IGZyb20gJ3Rkcy11aS9lbXB0eSc7XHJcbmltcG9ydCB7IFREU1NwaW5uZXJNb2R1bGUgfSBmcm9tICd0ZHMtdWkvcHJvZ3Jlc3Mtc3Bpbm5lcic7XHJcbmltcG9ydCB7IFREU0lucHV0TW9kdWxlIH0gZnJvbSAndGRzLXVpL3Rkcy1pbnB1dCc7XHJcblxyXG5pbXBvcnQgeyBURFNDYXNjYWRlck9wdGlvbkNvbXBvbmVudCB9IGZyb20gJy4vY2FzY2FkZXItbGkuY29tcG9uZW50JztcclxuaW1wb3J0IHsgVERTQ2FzY2FkZXJDb21wb25lbnQgfSBmcm9tICcuL2Nhc2NhZGVyLmNvbXBvbmVudCc7XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGltcG9ydHM6IFtcclxuICAgIEJpZGlNb2R1bGUsXHJcbiAgICBDb21tb25Nb2R1bGUsXHJcbiAgICBGb3Jtc01vZHVsZSxcclxuICAgIE92ZXJsYXlNb2R1bGUsXHJcbiAgICBURFNPdXRsZXRNb2R1bGUsXHJcbiAgICBURFNFbXB0eU1vZHVsZSxcclxuICAgIFREU0hpZ2hsaWdodE1vZHVsZSxcclxuICAgIFREU0lucHV0TW9kdWxlLFxyXG4gICAgVERTTm9BbmltYXRpb25Nb2R1bGUsXHJcbiAgICBURFNPdmVybGF5TW9kdWxlLFxyXG4gICAgVERTU3Bpbm5lck1vZHVsZVxyXG4gIF0sXHJcbiAgZGVjbGFyYXRpb25zOiBbVERTQ2FzY2FkZXJDb21wb25lbnQsIFREU0Nhc2NhZGVyT3B0aW9uQ29tcG9uZW50XSxcclxuICBleHBvcnRzOiBbVERTQ2FzY2FkZXJDb21wb25lbnRdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBURFNDYXNjYWRlck1vZHVsZSB7IH1cclxuIl19