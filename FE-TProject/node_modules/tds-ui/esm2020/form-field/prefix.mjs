/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import { Directive, InjectionToken } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * Injection token that can be used to reference instances of `TDSPrefix`. It serves as
 * alternative token to the actual `TDSPrefix` class which could cause unnecessary
 * retention of the class and its directive metadata.
 */
export const TDS_PREFIX = new InjectionToken('TDSPrefix');
/** Prefix to be placed in front of the form field. */
export class TDSPrefix {
}
TDSPrefix.ɵfac = function TDSPrefix_Factory(t) { return new (t || TDSPrefix)(); };
TDSPrefix.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: TDSPrefix, selectors: [["", "tdsPrefix", ""]], hostAttrs: [1, "tds-prefix", "text-neutral-1-300", "dark:text-d-neutral-1-900"], features: [i0.ɵɵProvidersFeature([{ provide: TDS_PREFIX, useExisting: TDSPrefix }])] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSPrefix, [{
        type: Directive,
        args: [{
                selector: '[tdsPrefix]',
                providers: [{ provide: TDS_PREFIX, useExisting: TDSPrefix }],
                host: {
                    class: 'tds-prefix  text-neutral-1-300 dark:text-d-neutral-1-900'
                }
            }]
    }], null, null); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJlZml4LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvdGRzLXVpL2Zvcm0tZmllbGQvcHJlZml4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7R0FNRztBQUVILE9BQU8sRUFBQyxTQUFTLEVBQUUsY0FBYyxFQUFDLE1BQU0sZUFBZSxDQUFDOztBQUV4RDs7OztHQUlHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sVUFBVSxHQUFHLElBQUksY0FBYyxDQUFZLFdBQVcsQ0FBQyxDQUFDO0FBRXJFLHNEQUFzRDtBQVF0RCxNQUFNLE9BQU8sU0FBUzs7a0VBQVQsU0FBUzs0REFBVCxTQUFTLHdKQUxULENBQUMsRUFBQyxPQUFPLEVBQUUsVUFBVSxFQUFFLFdBQVcsRUFBRSxTQUFTLEVBQUMsQ0FBQzt1RkFLL0MsU0FBUztjQVByQixTQUFTO2VBQUM7Z0JBQ1QsUUFBUSxFQUFFLGFBQWE7Z0JBQ3ZCLFNBQVMsRUFBRSxDQUFDLEVBQUMsT0FBTyxFQUFFLFVBQVUsRUFBRSxXQUFXLFdBQVcsRUFBQyxDQUFDO2dCQUMxRCxJQUFJLEVBQUM7b0JBQ0gsS0FBSyxFQUFDLDBEQUEwRDtpQkFDakU7YUFDRiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAbGljZW5zZVxyXG4gKiBDb3B5cmlnaHQgR29vZ2xlIExMQyBBbGwgUmlnaHRzIFJlc2VydmVkLlxyXG4gKlxyXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxyXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vYW5ndWxhci5pby9saWNlbnNlXHJcbiAqL1xyXG5cclxuaW1wb3J0IHtEaXJlY3RpdmUsIEluamVjdGlvblRva2VufSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbi8qKlxyXG4gKiBJbmplY3Rpb24gdG9rZW4gdGhhdCBjYW4gYmUgdXNlZCB0byByZWZlcmVuY2UgaW5zdGFuY2VzIG9mIGBURFNQcmVmaXhgLiBJdCBzZXJ2ZXMgYXNcclxuICogYWx0ZXJuYXRpdmUgdG9rZW4gdG8gdGhlIGFjdHVhbCBgVERTUHJlZml4YCBjbGFzcyB3aGljaCBjb3VsZCBjYXVzZSB1bm5lY2Vzc2FyeVxyXG4gKiByZXRlbnRpb24gb2YgdGhlIGNsYXNzIGFuZCBpdHMgZGlyZWN0aXZlIG1ldGFkYXRhLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IFREU19QUkVGSVggPSBuZXcgSW5qZWN0aW9uVG9rZW48VERTUHJlZml4PignVERTUHJlZml4Jyk7XHJcblxyXG4vKiogUHJlZml4IHRvIGJlIHBsYWNlZCBpbiBmcm9udCBvZiB0aGUgZm9ybSBmaWVsZC4gKi9cclxuQERpcmVjdGl2ZSh7XHJcbiAgc2VsZWN0b3I6ICdbdGRzUHJlZml4XScsXHJcbiAgcHJvdmlkZXJzOiBbe3Byb3ZpZGU6IFREU19QUkVGSVgsIHVzZUV4aXN0aW5nOiBURFNQcmVmaXh9XSxcclxuICBob3N0OntcclxuICAgIGNsYXNzOid0ZHMtcHJlZml4ICB0ZXh0LW5ldXRyYWwtMS0zMDAgZGFyazp0ZXh0LWQtbmV1dHJhbC0xLTkwMCdcclxuICB9XHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBURFNQcmVmaXgge31cclxuIl19