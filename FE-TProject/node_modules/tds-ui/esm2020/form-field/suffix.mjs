/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import { Directive, InjectionToken } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * Injection token that can be used to reference instances of `TDSSuffix`. It serves as
 * alternative token to the actual `TDSSuffix` class which could cause unnecessary
 * retention of the class and its directive metadata.
 */
export const TDS_SUFFIX = new InjectionToken('TDSSuffix');
/** Suffix to be placed at the end of the form field. */
export class TDSSuffix {
}
TDSSuffix.ɵfac = function TDSSuffix_Factory(t) { return new (t || TDSSuffix)(); };
TDSSuffix.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: TDSSuffix, selectors: [["", "tdsSuffix", ""]], hostAttrs: [1, "tds-suffix"], exportAs: ["tdsSuffix"], features: [i0.ɵɵProvidersFeature([{ provide: TDS_SUFFIX, useExisting: TDSSuffix }])] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSSuffix, [{
        type: Directive,
        args: [{
                selector: '[tdsSuffix]',
                exportAs: 'tdsSuffix',
                providers: [{ provide: TDS_SUFFIX, useExisting: TDSSuffix }],
                host: {
                    class: 'tds-suffix'
                }
            }]
    }], null, null); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3VmZml4LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvdGRzLXVpL2Zvcm0tZmllbGQvc3VmZml4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7R0FNRztBQUVILE9BQU8sRUFBQyxTQUFTLEVBQUUsY0FBYyxFQUFDLE1BQU0sZUFBZSxDQUFDOztBQUV4RDs7OztHQUlHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sVUFBVSxHQUFHLElBQUksY0FBYyxDQUFZLFdBQVcsQ0FBQyxDQUFDO0FBRXJFLHdEQUF3RDtBQVN4RCxNQUFNLE9BQU8sU0FBUzs7a0VBQVQsU0FBUzs0REFBVCxTQUFTLDhIQUxULENBQUMsRUFBQyxPQUFPLEVBQUUsVUFBVSxFQUFFLFdBQVcsRUFBRSxTQUFTLEVBQUMsQ0FBQzt1RkFLL0MsU0FBUztjQVJyQixTQUFTO2VBQUM7Z0JBQ1QsUUFBUSxFQUFFLGFBQWE7Z0JBQ3ZCLFFBQVEsRUFBQyxXQUFXO2dCQUNwQixTQUFTLEVBQUUsQ0FBQyxFQUFDLE9BQU8sRUFBRSxVQUFVLEVBQUUsV0FBVyxXQUFXLEVBQUMsQ0FBQztnQkFDMUQsSUFBSSxFQUFDO29CQUNILEtBQUssRUFBQyxZQUFZO2lCQUNuQjthQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCBHb29nbGUgTExDIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXHJcbiAqXHJcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXHJcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcclxuICovXHJcblxyXG5pbXBvcnQge0RpcmVjdGl2ZSwgSW5qZWN0aW9uVG9rZW59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuLyoqXHJcbiAqIEluamVjdGlvbiB0b2tlbiB0aGF0IGNhbiBiZSB1c2VkIHRvIHJlZmVyZW5jZSBpbnN0YW5jZXMgb2YgYFREU1N1ZmZpeGAuIEl0IHNlcnZlcyBhc1xyXG4gKiBhbHRlcm5hdGl2ZSB0b2tlbiB0byB0aGUgYWN0dWFsIGBURFNTdWZmaXhgIGNsYXNzIHdoaWNoIGNvdWxkIGNhdXNlIHVubmVjZXNzYXJ5XHJcbiAqIHJldGVudGlvbiBvZiB0aGUgY2xhc3MgYW5kIGl0cyBkaXJlY3RpdmUgbWV0YWRhdGEuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgVERTX1NVRkZJWCA9IG5ldyBJbmplY3Rpb25Ub2tlbjxURFNTdWZmaXg+KCdURFNTdWZmaXgnKTtcclxuXHJcbi8qKiBTdWZmaXggdG8gYmUgcGxhY2VkIGF0IHRoZSBlbmQgb2YgdGhlIGZvcm0gZmllbGQuICovXHJcbkBEaXJlY3RpdmUoe1xyXG4gIHNlbGVjdG9yOiAnW3Rkc1N1ZmZpeF0nLFxyXG4gIGV4cG9ydEFzOid0ZHNTdWZmaXgnLFxyXG4gIHByb3ZpZGVyczogW3twcm92aWRlOiBURFNfU1VGRklYLCB1c2VFeGlzdGluZzogVERTU3VmZml4fV0sXHJcbiAgaG9zdDp7XHJcbiAgICBjbGFzczondGRzLXN1ZmZpeCdcclxuICB9XHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBURFNTdWZmaXgge31cclxuIl19