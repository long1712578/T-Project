import { ChangeDetectionStrategy, Component, ContentChild, Input, TemplateRef, ViewChild, ViewEncapsulation } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "./anchor.component";
import * as i2 from "@angular/cdk/platform";
import * as i3 from "@angular/common";
const _c0 = ["tdsTemplate"];
const _c1 = ["linkTitle"];
function TDSAnchorLinkComponent_span_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "span");
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(ctx_r1.titleStr);
} }
const _c2 = function (a0) { return { "text-body-2 font-semibold text-neutral-1-900 dark:text-d-neutral-1-900": a0 }; };
const _c3 = ["*"];
export class TDSAnchorLinkComponent {
    constructor(elementRef, anchorComp, platform, renderer) {
        this.elementRef = elementRef;
        this.anchorComp = anchorComp;
        this.platform = platform;
        this.renderer = renderer;
        this.tdsHref = '#';
        this.titleStr = '';
        this.isGroup = false;
        this.renderer.addClass(elementRef.nativeElement, 'tds-anchor-link');
    }
    set tdsTitle(value) {
        if (value instanceof TemplateRef) {
            this.titleStr = null;
            this.titleTpl = value;
        }
        else {
            this.titleStr = value;
        }
    }
    ngOnInit() {
        this.anchorComp.registerLink(this);
    }
    getLinkTitleElement() {
        return this.linkTitle.nativeElement;
    }
    setActive() {
        this.renderer.addClass(this.elementRef.nativeElement, 'tds-anchor-link-active');
        this.renderer.addClass(this.elementRef.nativeElement, 'text-primary-1');
        this.renderer.removeClass(this.elementRef.nativeElement, 'text-neutral-1-500');
        this.renderer.addClass(this.elementRef.nativeElement, 'border-primary-1');
        this.renderer.addClass(this.elementRef.nativeElement, 'border-l-2');
        this.renderer.addClass(this.elementRef.nativeElement, 'ml-[-2px]');
        // this.renderer.removeClass(this.elementRef.nativeElement,'border-neutral-2-100');
        // this.renderer.removeClass(this.elementRef.nativeElement,'border-l');
    }
    unsetActive() {
        this.renderer.removeClass(this.elementRef.nativeElement, 'tds-anchor-link-active');
        this.renderer.addClass(this.elementRef.nativeElement, 'text-neutral-1-500');
        this.renderer.removeClass(this.elementRef.nativeElement, 'text-primary-1');
        // this.renderer.addClass(this.elementRef.nativeElement,'border-neutral-2-100');
        // this.renderer.addClass(this.elementRef.nativeElement,'border-l');
        this.renderer.removeClass(this.elementRef.nativeElement, 'border-primary-1');
        this.renderer.removeClass(this.elementRef.nativeElement, 'border-l-2');
        this.renderer.removeClass(this.elementRef.nativeElement, 'ml-[-2px]');
    }
    goToClick(e) {
        e.preventDefault();
        e.stopPropagation();
        if (this.platform.isBrowser) {
            this.anchorComp.handleScrollTo(this);
        }
    }
    ngOnDestroy() {
        this.anchorComp.unregisterLink(this);
    }
}
TDSAnchorLinkComponent.ɵfac = function TDSAnchorLinkComponent_Factory(t) { return new (t || TDSAnchorLinkComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.TDSAnchorComponent), i0.ɵɵdirectiveInject(i2.Platform), i0.ɵɵdirectiveInject(i0.Renderer2)); };
TDSAnchorLinkComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TDSAnchorLinkComponent, selectors: [["tds-link"]], contentQueries: function TDSAnchorLinkComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        i0.ɵɵcontentQuery(dirIndex, _c0, 5);
    } if (rf & 2) {
        let _t;
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tdsTemplate = _t.first);
    } }, viewQuery: function TDSAnchorLinkComponent_Query(rf, ctx) { if (rf & 1) {
        i0.ɵɵviewQuery(_c1, 5);
    } if (rf & 2) {
        let _t;
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.linkTitle = _t.first);
    } }, hostAttrs: [1, "flex", "flex-col", "pl-4", "py-1.5", "pr-2", "text-caption-1", "font-regular", "box-border"], inputs: { tdsHref: "tdsHref", tdsTarget: "tdsTarget", tdsTitle: "tdsTitle", isGroup: "isGroup" }, exportAs: ["tdsLink"], ngContentSelectors: _c3, decls: 4, vars: 8, consts: [[1, "tds-anchor-link-title", "hover:text-primary-1", "dark:hover:text-primary-1", 3, "href", "title", "target", "ngClass", "click"], ["linkTitle", ""], [4, "ngIf", "ngIfElse"]], template: function TDSAnchorLinkComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵprojectionDef();
        i0.ɵɵelementStart(0, "a", 0, 1);
        i0.ɵɵlistener("click", function TDSAnchorLinkComponent_Template_a_click_0_listener($event) { return ctx.goToClick($event); });
        i0.ɵɵtemplate(2, TDSAnchorLinkComponent_span_2_Template, 2, 1, "span", 2);
        i0.ɵɵelementEnd();
        i0.ɵɵprojection(3);
    } if (rf & 2) {
        i0.ɵɵproperty("href", ctx.tdsHref, i0.ɵɵsanitizeUrl)("title", ctx.titleStr)("target", ctx.tdsTarget)("ngClass", i0.ɵɵpureFunction1(6, _c2, ctx.isGroup));
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", ctx.titleStr)("ngIfElse", ctx.titleTpl || ctx.tdsTemplate);
    } }, directives: [i3.NgClass, i3.NgIf], encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSAnchorLinkComponent, [{
        type: Component,
        args: [{
                selector: 'tds-link',
                exportAs: 'tdsLink',
                preserveWhitespaces: false,
                template: `
    <a #linkTitle 
    (click)="goToClick($event)"
     [href]="tdsHref"
      class="tds-anchor-link-title hover:text-primary-1 dark:hover:text-primary-1"
       [title]="titleStr"
       [target]="tdsTarget"
        [ngClass]="{'text-body-2 font-semibold text-neutral-1-900 dark:text-d-neutral-1-900':isGroup}" >
      <span *ngIf="titleStr; else titleTpl || tdsTemplate">{{ titleStr }}</span>
    </a>
    <ng-content></ng-content>
  `,
                encapsulation: ViewEncapsulation.None,
                changeDetection: ChangeDetectionStrategy.OnPush,
                host: {
                    class: "flex flex-col pl-4 py-1.5 pr-2  text-caption-1 font-regular box-border",
                }
            }]
    }], function () { return [{ type: i0.ElementRef }, { type: i1.TDSAnchorComponent }, { type: i2.Platform }, { type: i0.Renderer2 }]; }, { tdsHref: [{
            type: Input
        }], tdsTarget: [{
            type: Input
        }], tdsTitle: [{
            type: Input
        }], isGroup: [{
            type: Input
        }], tdsTemplate: [{
            type: ContentChild,
            args: ['tdsTemplate', { static: false }]
        }], linkTitle: [{
            type: ViewChild,
            args: ['linkTitle']
        }] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5jaG9yLWxpbmsuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvdGRzLXVpL2FuY2hvci9hbmNob3ItbGluay5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0EsT0FBTyxFQUNMLHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsWUFBWSxFQUVaLEtBQUssRUFJTCxXQUFXLEVBQ1gsU0FBUyxFQUNULGlCQUFpQixFQUNsQixNQUFNLGVBQWUsQ0FBQzs7Ozs7Ozs7SUFnQmpCLDRCQUFxRDtJQUFBLFlBQWM7SUFBQSxpQkFBTzs7O0lBQXJCLGVBQWM7SUFBZCxxQ0FBYzs7OztBQVV6RSxNQUFNLE9BQU8sc0JBQXNCO0lBbUJqQyxZQUNTLFVBQXNCLEVBQ3JCLFVBQThCLEVBQzlCLFFBQWtCLEVBQ2xCLFFBQW1CO1FBSHBCLGVBQVUsR0FBVixVQUFVLENBQVk7UUFDckIsZUFBVSxHQUFWLFVBQVUsQ0FBb0I7UUFDOUIsYUFBUSxHQUFSLFFBQVEsQ0FBVTtRQUNsQixhQUFRLEdBQVIsUUFBUSxDQUFXO1FBdEJwQixZQUFPLEdBQUcsR0FBRyxDQUFDO1FBRXZCLGFBQVEsR0FBa0IsRUFBRSxDQUFDO1FBWXBCLFlBQU8sR0FBWSxLQUFLLENBQUM7UUFVaEMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxDQUFDO0lBQ3RFLENBQUM7SUFwQkQsSUFDSSxRQUFRLENBQUMsS0FBaUM7UUFDNUMsSUFBSSxLQUFLLFlBQVksV0FBVyxFQUFFO1lBQ2hDLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDO1lBQ3JCLElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO1NBQ3ZCO2FBQU07WUFDTCxJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQztTQUN2QjtJQUNILENBQUM7SUFjRCxRQUFRO1FBQ04sSUFBSSxDQUFDLFVB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ZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07Z0JBQy9DLElBQUksRUFBRTtvQkFDSixLQUFLLEVBQUUsd0VBQXdFO2lCQUNoRjthQUNGOzZJQUVVLE9BQU87a0JBQWYsS0FBSztZQUNHLFNBQVM7a0JBQWpCLEtBQUs7WUFLRixRQUFRO2tCQURYLEtBQUs7WUFTRyxPQUFPO2tCQUFmLEtBQUs7WUFDMEMsV0FBVztrQkFBMUQsWUFBWTttQkFBQyxhQUFhLEVBQUUsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFO1lBQ3RCLFNBQVM7a0JBQWhDLFNBQVM7bUJBQUMsV0FBVyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5cclxuaW1wb3J0IHsgUGxhdGZvcm0gfSBmcm9tICdAYW5ndWxhci9jZGsvcGxhdGZvcm0nO1xyXG5pbXBvcnQge1xyXG4gIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxyXG4gIENvbXBvbmVudCxcclxuICBDb250ZW50Q2hpbGQsXHJcbiAgRWxlbWVudFJlZixcclxuICBJbnB1dCxcclxuICBPbkRlc3Ryb3ksXHJcbiAgT25Jbml0LFxyXG4gIFJlbmRlcmVyMixcclxuICBUZW1wbGF0ZVJlZixcclxuICBWaWV3Q2hpbGQsXHJcbiAgVmlld0VuY2Fwc3VsYXRpb25cclxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgVERTU2FmZUFueSB9IGZyb20gJ3Rkcy11aS9zaGFyZWQvdXRpbGl0eSc7XHJcbmltcG9ydCB7IFREU0FuY2hvckNvbXBvbmVudCB9IGZyb20gJy4vYW5jaG9yLmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ3Rkcy1saW5rJyxcclxuICBleHBvcnRBczogJ3Rkc0xpbmsnLFxyXG4gIHByZXNlcnZlV2hpdGVzcGFjZXM6IGZhbHNlLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8YSAjbGlua1RpdGxlIFxyXG4gICAgKGNsaWNrKT1cImdvVG9DbGljaygkZXZlbnQpXCJcclxuICAgICBbaHJlZl09XCJ0ZHNIcmVmXCJcclxuICAgICAgY2xhc3M9XCJ0ZHMtYW5jaG9yLWxpbmstdGl0bGUgaG92ZXI6dGV4dC1wcmltYXJ5LTEgZGFyazpob3Zlcjp0ZXh0LXByaW1hcnktMVwiXHJcbiAgICAgICBbdGl0bGVdPVwidGl0bGVTdHJcIlxyXG4gICAgICAgW3RhcmdldF09XCJ0ZHNUYXJnZXRcIlxyXG4gICAgICAgIFtuZ0NsYXNzXT1cInsndGV4dC1ib2R5LTIgZm9udC1zZW1pYm9sZCB0ZXh0LW5ldXRyYWwtMS05MDAgZGFyazp0ZXh0LWQtbmV1dHJhbC0xLTkwMCc6aXNHcm91cH1cIiA+XHJcbiAgICAgIDxzcGFuICpuZ0lmPVwidGl0bGVTdHI7IGVsc2UgdGl0bGVUcGwgfHwgdGRzVGVtcGxhdGVcIj57eyB0aXRsZVN0ciB9fTwvc3Bhbj5cclxuICAgIDwvYT5cclxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cclxuICBgLFxyXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXHJcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXHJcbiAgaG9zdDoge1xyXG4gICAgY2xhc3M6IFwiZmxleCBmbGV4LWNvbCBwbC00IHB5LTEuNSBwci0yICB0ZXh0LWNhcHRpb24tMSBmb250LXJlZ3VsYXIgYm94LWJvcmRlclwiLFxyXG4gIH1cclxufSlcclxuZXhwb3J0IGNsYXNzIFREU0FuY2hvckxpbmtDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XHJcbiAgQElucHV0KCkgdGRzSHJlZiA9ICcjJztcclxuICBASW5wdXQoKSB0ZHNUYXJnZXQ/OiBzdHJpbmc7XHJcbiAgdGl0bGVTdHI6IHN0cmluZyB8IG51bGwgPSAnJztcclxuICB0aXRsZVRwbD86IFRlbXBsYXRlUmVmPFREU1NhZmVBbnk+O1xyXG5cclxuICBASW5wdXQoKVxyXG4gIHNldCB0ZHNUaXRsZSh2YWx1ZTogc3RyaW5nIHwgVGVtcGxhdGVSZWY8dm9pZD4pIHtcclxuICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIFRlbXBsYXRlUmVmKSB7XHJcbiAgICAgIHRoaXMudGl0bGVTdHIgPSBudWxsO1xyXG4gICAgICB0aGlzLnRpdGxlVHBsID0gdmFsdWU7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLnRpdGxlU3RyID0gdmFsdWU7XHJcbiAgICB9XHJcbiAgfVxyXG4gIEBJbnB1dCgpIGlzR3JvdXA6IGJvb2xlYW4gPSBmYWxzZTtcclxuICBAQ29udGVudENoaWxkKCd0ZHNUZW1wbGF0ZScsIHsgc3RhdGljOiBmYWxzZSB9KSB0ZHNUZW1wbGF0ZSE6IFRlbXBsYXRlUmVmPHZvaWQ+O1xyXG4gIEBWaWV3Q2hpbGQoJ2xpbmtUaXRsZScpIGxpbmtUaXRsZSE6IEVsZW1lbnRSZWY8SFRNTEFuY2hvckVsZW1lbnQ+O1xyXG5cclxuICBjb25zdHJ1Y3RvcihcclxuICAgIHB1YmxpYyBlbGVtZW50UmVmOiBFbGVtZW50UmVmLFxyXG4gICAgcHJpdmF0ZSBhbmNob3JDb21wOiBURFNBbmNob3JDb21wb25lbnQsXHJcbiAgICBwcml2YXRlIHBsYXRmb3JtOiBQbGF0Zm9ybSxcclxuICAgIHByaXZhdGUgcmVuZGVyZXI6IFJlbmRlcmVyMlxyXG4gICkge1xyXG4gICAgdGhpcy5yZW5kZXJlci5hZGRDbGFzcyhlbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQsICd0ZHMtYW5jaG9yLWxpbmsnKTtcclxuICB9XHJcblxyXG4gIG5nT25Jbml0KCk6IHZvaWQge1xyXG4gICAgdGhpcy5hbmNob3JDb21wLnJlZ2lzdGVyTGluayh0aGlzKTtcclxuICB9XHJcblxyXG4gIGdldExpbmtUaXRsZUVsZW1lbnQoKTogSFRNTEFuY2hvckVsZW1lbnQge1xyXG4gICAgcmV0dXJuIHRoaXMubGlua1RpdGxlLm5hdGl2ZUVsZW1lbnQ7XHJcbiAgfVxyXG5cclxuICBzZXRBY3RpdmUoKTogdm9pZCB7XHJcbiAgICB0aGlzLnJlbmRlcmVyLmFkZENsYXNzKHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LCAndGRzLWFuY2hvci1saW5rLWFjdGl2ZScpO1xyXG4gICAgdGhpcy5yZW5kZXJlci5hZGRDbGFzcyh0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudCwgJ3RleHQtcHJpbWFyeS0xJyk7XHJcbiAgICB0aGlzLnJlbmRlcmVyLnJlbW92ZUNsYXNzKHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LCAndGV4dC1uZXV0cmFsLTEtNTAwJyk7XHJcbiAgICB0aGlzLnJlbmRlcmVyLmFkZENsYXNzKHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LCAnYm9yZGVyLXByaW1hcnktMScpO1xyXG4gICAgdGhpcy5yZW5kZXJlci5hZGRDbGFzcyh0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudCwgJ2JvcmRlci1sLTInKTtcclxuICAgIHRoaXMucmVuZGVyZXIuYWRkQ2xhc3ModGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQsICdtbC1bLTJweF0nKTtcclxuICAgIC8vIHRoaXMucmVuZGVyZXIucmVtb3ZlQ2xhc3ModGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQsJ2JvcmRlci1uZXV0cmFsLTItMTAwJyk7XHJcbiAgICAvLyB0aGlzLnJlbmRlcmVyLnJlbW92ZUNsYXNzKHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LCdib3JkZXItbCcpO1xyXG4gIH1cclxuXHJcbiAgdW5zZXRBY3RpdmUoKTogdm9pZCB7XHJcbiAgICB0aGlzLnJlbmRlcmVyLnJlbW92ZUNsYXNzKHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LCAndGRzLWFuY2hvci1saW5rLWFjdGl2ZScpO1xyXG4gICAgdGhpcy5yZW5kZXJlci5hZGRDbGFzcyh0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudCwgJ3RleHQtbmV1dHJhbC0xLTUwMCcpO1xyXG4gICAgdGhpcy5yZW5kZXJlci5yZW1vdmVDbGFzcyh0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudCwgJ3RleHQtcHJpbWFyeS0xJyk7XHJcbiAgICAvLyB0aGlzLnJlbmRlcmVyLmFkZENsYXNzKHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LCdib3JkZXItbmV1dHJhbC0yLTEwMCcpO1xyXG4gICAgLy8gdGhpcy5yZW5kZXJlci5hZGRDbGFzcyh0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudCwnYm9yZGVyLWwnKTtcclxuXHJcbiAgICB0aGlzLnJlbmRlcmVyLnJlbW92ZUNsYXNzKHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LCAnYm9yZGVyLXByaW1hcnktMScpO1xyXG4gICAgdGhpcy5yZW5kZXJlci5yZW1vdmVDbGFzcyh0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudCwgJ2JvcmRlci1sLTInKTtcclxuICAgIHRoaXMucmVuZGVyZXIucmVtb3ZlQ2xhc3ModGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQsICdtbC1bLTJweF0nKTtcclxuICB9XHJcblxyXG4gIGdvVG9DbGljayhlOiBFdmVudCk6IHZvaWQge1xyXG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgIGlmICh0aGlzLnBsYXRmb3JtLmlzQnJvd3Nlcikge1xyXG4gICAgICB0aGlzLmFuY2hvckNvbXAuaGFuZGxlU2Nyb2xsVG8odGhpcyk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBuZ09uRGVzdHJveSgpOiB2b2lkIHtcclxuICAgIHRoaXMuYW5jaG9yQ29tcC51bnJlZ2lzdGVyTGluayh0aGlzKTtcclxuICB9XHJcbn1cclxuIl19