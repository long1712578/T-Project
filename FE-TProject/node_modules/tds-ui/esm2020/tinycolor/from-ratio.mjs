import { TinyColor } from './tinycolor';
import { convertToPercentage } from './util';
/**
 * If input is an object, force 1 into "1.0" to handle ratios properly
 * String input requires "1.0" as input, so 1 will be treated as 1
 */
export function fromRatio(ratio, opts) {
    const newColor = {
        r: convertToPercentage(ratio.r),
        g: convertToPercentage(ratio.g),
        b: convertToPercentage(ratio.b),
    };
    if (ratio.a !== undefined) {
        newColor.a = Number(ratio.a);
    }
    return new TinyColor(newColor, opts);
}
/** old random function */
export function legacyRandom() {
    return new TinyColor({
        r: Math.random(),
        g: Math.random(),
        b: Math.random(),
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnJvbS1yYXRpby5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL3Rkcy11aS90aW55Y29sb3IvZnJvbS1yYXRpby50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBRXhDLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLFFBQVEsQ0FBQztBQVM3Qzs7O0dBR0c7QUFDSCxNQUFNLFVBQVUsU0FBUyxDQUFDLEtBQWlCLEVBQUUsSUFBVTtJQUNyRCxNQUFNLFFBQVEsR0FBa0I7UUFDOUIsQ0FBQyxFQUFFLG1CQUFtQixDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDL0IsQ0FBQyxFQUFFLG1CQUFtQixDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDL0IsQ0FBQyxFQUFFLG1CQUFtQixDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7S0FDaEMsQ0FBQztJQUNGLElBQUksS0FBSyxDQUFDLENBQUMsS0FBSyxTQUFTLEVBQUU7UUFDekIsUUFBUSxDQUFDLENBQUMsR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQzlCO0lBRUQsT0FBTyxJQUFJLFNBQVMsQ0FBQyxRQUFnQixFQUFFLElBQUksQ0FBQyxDQUFDO0FBQy9DLENBQUM7QUFFRCwwQkFBMEI7QUFDMUIsTUFBTSxVQUFVLFlBQVk7SUFDMUIsT0FBTyxJQUFJLFNBQVMsQ0FBQztRQUNuQixDQUFDLEVBQUUsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNoQixDQUFDLEVBQUUsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNoQixDQUFDLEVBQUUsSUFBSSxDQUFDLE1BQU0sRUFBRTtLQUNqQixDQUFDLENBQUM7QUFDTCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVGlueUNvbG9yIH0gZnJvbSAnLi90aW55Y29sb3InO1xyXG5pbXBvcnQgeyBSR0JBIH0gZnJvbSAnLi9pbnRlcmZhY2VzJztcclxuaW1wb3J0IHsgY29udmVydFRvUGVyY2VudGFnZSB9IGZyb20gJy4vdXRpbCc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFJhdGlvSW5wdXQge1xyXG4gIHI6IG51bWJlciB8IHN0cmluZztcclxuICBnOiBudW1iZXIgfCBzdHJpbmc7XHJcbiAgYjogbnVtYmVyIHwgc3RyaW5nO1xyXG4gIGE/OiBudW1iZXIgfCBzdHJpbmc7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBJZiBpbnB1dCBpcyBhbiBvYmplY3QsIGZvcmNlIDEgaW50byBcIjEuMFwiIHRvIGhhbmRsZSByYXRpb3MgcHJvcGVybHlcclxuICogU3RyaW5nIGlucHV0IHJlcXVpcmVzIFwiMS4wXCIgYXMgaW5wdXQsIHNvIDEgd2lsbCBiZSB0cmVhdGVkIGFzIDFcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBmcm9tUmF0aW8ocmF0aW86IFJhdGlvSW5wdXQsIG9wdHM/OiBhbnkpOiBUaW55Q29sb3Ige1xyXG4gIGNvbnN0IG5ld0NvbG9yOiBQYXJ0aWFsPFJHQkE+ID0ge1xyXG4gICAgcjogY29udmVydFRvUGVyY2VudGFnZShyYXRpby5yKSxcclxuICAgIGc6IGNvbnZlcnRUb1BlcmNlbnRhZ2UocmF0aW8uZyksXHJcbiAgICBiOiBjb252ZXJ0VG9QZXJjZW50YWdlKHJhdGlvLmIpLFxyXG4gIH07XHJcbiAgaWYgKHJhdGlvLmEgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgbmV3Q29sb3IuYSA9IE51bWJlcihyYXRpby5hKTtcclxuICB9XHJcblxyXG4gIHJldHVybiBuZXcgVGlueUNvbG9yKG5ld0NvbG9yIGFzIFJHQkEsIG9wdHMpO1xyXG59XHJcblxyXG4vKiogb2xkIHJhbmRvbSBmdW5jdGlvbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gbGVnYWN5UmFuZG9tKCk6IFRpbnlDb2xvciB7XHJcbiAgcmV0dXJuIG5ldyBUaW55Q29sb3Ioe1xyXG4gICAgcjogTWF0aC5yYW5kb20oKSxcclxuICAgIGc6IE1hdGgucmFuZG9tKCksXHJcbiAgICBiOiBNYXRoLnJhbmRvbSgpLFxyXG4gIH0pO1xyXG59XHJcbiJdfQ==