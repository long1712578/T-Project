import { TDSHelperString } from "tds-ui/shared/utility";
export function getPercent(min, max, value) {
    return ((value - min) / (max - min)) * 100;
}
export function getPrecision(num) {
    const numStr = num.toString();
    const dotIndex = numStr.indexOf('.');
    return dotIndex >= 0 ? numStr.length - dotIndex - 1 : 0;
}
export function ensureNumberInRange(num, min, max) {
    if (isNaN(num) || num < min) {
        return min;
    }
    else if (num > max) {
        return max;
    }
    else {
        return num;
    }
}
export function isNumberFinite(value) {
    return typeof value === 'number' && isFinite(value);
}
export function toDecimal(value, decimal) {
    return Math.round(value * Math.pow(10, decimal)) / Math.pow(10, decimal);
}
export function sum(input, initial = 0) {
    return input.reduce((previous, current) => previous + current, initial);
}
export function formatNumberWithCommas(value, commas = ',') {
    if (value != null) {
        return value.toString().replace(/\B(?=(\d{3})+(?!\d))/g, commas);
    }
    return value;
}
;
export function parserNumberWithCommas(value, commas = ',') {
    if (value != null) {
        return TDSHelperString.replaceAll(value, commas, '');
    }
    return value;
}
;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnVtYmVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvdGRzLXVpL2NvcmUvdXRpbC9udW1iZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBRXhELE1BQU0sVUFBVSxVQUFVLENBQUMsR0FBVyxFQUFFLEdBQVcsRUFBRSxLQUFhO0lBQ2hFLE9BQU8sQ0FBQyxDQUFDLEtBQUssR0FBRyxHQUFHLENBQUMsR0FBRyxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQztBQUM3QyxDQUFDO0FBRUQsTUFBTSxVQUFVLFlBQVksQ0FBQyxHQUFXO0lBQ3RDLE1BQU0sTUFBTSxHQUFHLEdBQUcsQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUM5QixNQUFNLFFBQVEsR0FBRyxNQUFNLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3JDLE9BQU8sUUFBUSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sR0FBRyxRQUFRLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDMUQsQ0FBQztBQUVELE1BQU0sVUFBVSxtQkFBbUIsQ0FBQyxHQUFXLEVBQUUsR0FBVyxFQUFFLEdBQVc7SUFDdkUsSUFBSSxLQUFLLENBQUMsR0FBRyxDQUFDLElBQUksR0FBRyxHQUFHLEdBQUcsRUFBRTtRQUMzQixPQUFPLEdBQUcsQ0FBQztLQUNaO1NBQU0sSUFBSSxHQUFHLEdBQUcsR0FBRyxFQUFFO1FBQ3BCLE9BQU8sR0FBRyxDQUFDO0tBQ1o7U0FBTTtRQUNMLE9BQU8sR0FBRyxDQUFDO0tBQ1o7QUFDSCxDQUFDO0FBRUQsTUFBTSxVQUFVLGNBQWMsQ0FBQyxLQUFVO0lBQ3ZDLE9BQU8sT0FBTyxLQUFLLEtBQUssUUFBUSxJQUFJLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUN0RCxDQUFDO0FBRUQsTUFBTSxVQUFVLFNBQVMsQ0FBQyxLQUFhLEVBQUUsT0FBZTtJQUN0RCxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxFQUFFLE9BQU8sQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLEVBQUUsT0FBTyxDQUFDLENBQUM7QUFDM0UsQ0FBQztBQUVELE1BQU0sVUFBVSxHQUFHLENBQUMsS0FBZSxFQUFFLFVBQWtCLENBQUM7SUFDdEQsT0FBTyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsUUFBZ0IsRUFBRSxPQUFlLEVBQUUsRUFBRSxDQUFDLFFBQVEsR0FBRyxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUM7QUFDMUYsQ0FBQztBQUNELE1BQU0sVUFBVSxzQkFBc0IsQ0FBQyxLQUFhLEVBQUUsU0FBaUIsR0FBRztJQUN4RSxJQUFJLEtBQUssSUFBSSxJQUFJLEVBQUU7UUFDakIsT0FBTyxLQUFLLENBQUMsUUFBUSxFQUFFLENBQUMsT0FBTyxDQUFDLHVCQUF1QixFQUFFLE1BQU0sQ0FBQyxDQUFBO0tBQ2pFO0lBQ0QsT0FBTyxLQUFLLENBQUM7QUFDZixDQUFDO0FBQUEsQ0FBQztBQUNGLE1BQU0sVUFBVSxzQkFBc0IsQ0FBQyxLQUFhLEVBQUUsU0FBaUIsR0FBRztJQUN4RSxJQUFJLEtBQUssSUFBSSxJQUFJLEVBQUU7UUFDakIsT0FBTyxlQUFlLENBQUMsVUFBVSxDQUFDLEtBQUssRUFBRSxNQUFNLEVBQUUsRUFBRSxDQUFDLENBQUM7S0FDdEQ7SUFDRCxPQUFPLEtBQUssQ0FBQztBQUNmLENBQUM7QUFBQSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVERTSGVscGVyU3RyaW5nIH0gZnJvbSBcInRkcy11aS9zaGFyZWQvdXRpbGl0eVwiO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGdldFBlcmNlbnQobWluOiBudW1iZXIsIG1heDogbnVtYmVyLCB2YWx1ZTogbnVtYmVyKTogbnVtYmVyIHtcclxuICByZXR1cm4gKCh2YWx1ZSAtIG1pbikgLyAobWF4IC0gbWluKSkgKiAxMDA7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRQcmVjaXNpb24obnVtOiBudW1iZXIpOiBudW1iZXIge1xyXG4gIGNvbnN0IG51bVN0ciA9IG51bS50b1N0cmluZygpO1xyXG4gIGNvbnN0IGRvdEluZGV4ID0gbnVtU3RyLmluZGV4T2YoJy4nKTtcclxuICByZXR1cm4gZG90SW5kZXggPj0gMCA/IG51bVN0ci5sZW5ndGggLSBkb3RJbmRleCAtIDEgOiAwO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZW5zdXJlTnVtYmVySW5SYW5nZShudW06IG51bWJlciwgbWluOiBudW1iZXIsIG1heDogbnVtYmVyKTogbnVtYmVyIHtcclxuICBpZiAoaXNOYU4obnVtKSB8fCBudW0gPCBtaW4pIHtcclxuICAgIHJldHVybiBtaW47XHJcbiAgfSBlbHNlIGlmIChudW0gPiBtYXgpIHtcclxuICAgIHJldHVybiBtYXg7XHJcbiAgfSBlbHNlIHtcclxuICAgIHJldHVybiBudW07XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gaXNOdW1iZXJGaW5pdGUodmFsdWU6IGFueSk6IGJvb2xlYW4ge1xyXG4gIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICdudW1iZXInICYmIGlzRmluaXRlKHZhbHVlKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHRvRGVjaW1hbCh2YWx1ZTogbnVtYmVyLCBkZWNpbWFsOiBudW1iZXIpOiBudW1iZXIge1xyXG4gIHJldHVybiBNYXRoLnJvdW5kKHZhbHVlICogTWF0aC5wb3coMTAsIGRlY2ltYWwpKSAvIE1hdGgucG93KDEwLCBkZWNpbWFsKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHN1bShpbnB1dDogbnVtYmVyW10sIGluaXRpYWw6IG51bWJlciA9IDApOiBudW1iZXIge1xyXG4gIHJldHVybiBpbnB1dC5yZWR1Y2UoKHByZXZpb3VzOiBudW1iZXIsIGN1cnJlbnQ6IG51bWJlcikgPT4gcHJldmlvdXMgKyBjdXJyZW50LCBpbml0aWFsKTtcclxufVxyXG5leHBvcnQgZnVuY3Rpb24gZm9ybWF0TnVtYmVyV2l0aENvbW1hcyh2YWx1ZTogc3RyaW5nLCBjb21tYXM6IHN0cmluZyA9ICcsJykge1xyXG4gIGlmICh2YWx1ZSAhPSBudWxsKSB7XHJcbiAgICByZXR1cm4gdmFsdWUudG9TdHJpbmcoKS5yZXBsYWNlKC9cXEIoPz0oXFxkezN9KSsoPyFcXGQpKS9nLCBjb21tYXMpXHJcbiAgfVxyXG4gIHJldHVybiB2YWx1ZTtcclxufTtcclxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlck51bWJlcldpdGhDb21tYXModmFsdWU6IHN0cmluZywgY29tbWFzOiBzdHJpbmcgPSAnLCcpIHtcclxuICBpZiAodmFsdWUgIT0gbnVsbCkge1xyXG4gICAgcmV0dXJuIFREU0hlbHBlclN0cmluZy5yZXBsYWNlQWxsKHZhbHVlLCBjb21tYXMsICcnKTtcclxuICB9XHJcbiAgcmV0dXJuIHZhbHVlO1xyXG59OyJdfQ==