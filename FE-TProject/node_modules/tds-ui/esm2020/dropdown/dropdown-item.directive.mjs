import { __decorate } from "tslib";
import { Directive, Input } from '@angular/core';
import { Subject } from 'rxjs';
import { InputBoolean } from 'tds-ui/shared/utility';
import * as i0 from "@angular/core";
import * as i1 from "tds-ui/menu";
export class TDSDropDownItemDirective {
    constructor(TDSMenuService, cdr) {
        this.TDSMenuService = TDSMenuService;
        this.cdr = cdr;
        this.destroy$ = new Subject();
        this.selected$ = new Subject();
        this.disabled = false;
        this.selected = false;
    }
    /** clear all item selected status except this */
    clickMenuItem(e) {
        if (this.disabled) {
            e.preventDefault();
            e.stopPropagation();
        }
        else {
            this.TDSMenuService.onDescendantMenuItemClick(this);
        }
    }
    ngOnInit() {
    }
    ngAfterContentInit() {
    }
    ngOnChanges(changes) {
        if (changes.disabled) {
            this.cdr.markForCheck();
        }
    }
    ngOnDestroy() {
        this.destroy$.next();
        this.destroy$.complete();
    }
}
TDSDropDownItemDirective.ɵfac = function TDSDropDownItemDirective_Factory(t) { return new (t || TDSDropDownItemDirective)(i0.ɵɵdirectiveInject(i1.TDSMenuService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); };
TDSDropDownItemDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: TDSDropDownItemDirective, selectors: [["", "tds-dropdown-item", ""]], hostAttrs: [1, "tds-dropdown-item", "text-neutral-1-900", "dark:text-d-neutral-1-900", "text-body-2", "px-3", "py-1.5", "font-regular", "dark:hover:bg-d-neutral-3-400", "hover:bg-neutral-3-50", "w-full"], hostVars: 2, hostBindings: function TDSDropDownItemDirective_HostBindings(rf, ctx) { if (rf & 1) {
        i0.ɵɵlistener("click", function TDSDropDownItemDirective_click_HostBindingHandler($event) { return ctx.clickMenuItem($event); });
    } if (rf & 2) {
        i0.ɵɵclassProp("cursor-pointer", !ctx.disabled);
    } }, inputs: { disabled: "disabled", selected: "selected" }, exportAs: ["tdsDropdownItem"], features: [i0.ɵɵNgOnChangesFeature] });
__decorate([
    InputBoolean()
], TDSDropDownItemDirective.prototype, "disabled", void 0);
__decorate([
    InputBoolean()
], TDSDropDownItemDirective.prototype, "selected", void 0);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSDropDownItemDirective, [{
        type: Directive,
        args: [{
                selector: '[tds-dropdown-item]',
                exportAs: 'tdsDropdownItem',
                host: {
                    class: "tds-dropdown-item text-neutral-1-900  dark:text-d-neutral-1-900  text-body-2 px-3 py-1.5 font-regular dark:hover:bg-d-neutral-3-400 hover:bg-neutral-3-50  w-full",
                    '[class.cursor-pointer]': "!disabled",
                    '(click)': 'clickMenuItem($event)'
                }
            }]
    }], function () { return [{ type: i1.TDSMenuService }, { type: i0.ChangeDetectorRef }]; }, { disabled: [{
            type: Input
        }], selected: [{
            type: Input
        }] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcGRvd24taXRlbS5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy90ZHMtdWkvZHJvcGRvd24vZHJvcGRvd24taXRlbS5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUlBLE9BQU8sRUFJTCxTQUFTLEVBRVQsS0FBSyxFQU9OLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFDL0IsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHVCQUF1QixDQUFDOzs7QUFhckQsTUFBTSxPQUFPLHdCQUF3QjtJQTBCbkMsWUFDVSxjQUE4QixFQUM5QixHQUFzQjtRQUR0QixtQkFBYyxHQUFkLGNBQWMsQ0FBZ0I7UUFDOUIsUUFBRyxHQUFILEdBQUcsQ0FBbUI7UUF4QnhCLGFBQVEsR0FBRyxJQUFJLE9BQU8sRUFBUSxDQUFDO1FBQ3ZDLGNBQVMsR0FBRyxJQUFJLE9BQU8sRUFBVyxDQUFDO1FBRVYsYUFBUSxHQUFHLEtBQUssQ0FBQztRQUNqQixhQUFRLEdBQUcsS0FBSyxDQUFDO0lBdUIxQyxDQUFDO0lBckJELGlEQUFpRDtJQUNqRCxhQUFhLENBQUMsQ0FBYTtRQUV6QixJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDakIsQ0FBQyxDQUFDLGNBQWMsRUFBRSxDQUFDO1lBQ25CLENBQUMsQ0FBQyxlQUFlLEVBQUUsQ0FBQztTQUNyQjthQUFNO1lBQ0wsSUFBSSxDQUFDLGNBQWMsQ0FBQyx5QkFBeUIsQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUNyRDtJQUNILENBQUM7SUFjRCxRQUFRO0lBRVIsQ0FBQztJQUVELGtCQUFrQjtJQUVsQixDQUFDO0lBRUQsV0FBVyxDQUFDLE9BQXNCO1FBQ2hDLElBQUksT0FBTyxDQUFDLFFBQVEsRUFBRTtZQUNwQixJQUFJLENBQUMsR0FBRyxDQUFDLFlBQVksRUFBRSxDQUFDO1NBQ3pCO0lBQ0gsQ0FBQztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDM0IsQ0FBQzs7Z0dBbERVLHdCQUF3QjsyRUFBeEIsd0JBQXdCOzJHQUF4Qix5QkFBcUI7Ozs7QUFPUDtJQUFmLFlBQVksRUFBRTswREFBa0I7QUFDakI7SUFBZixZQUFZLEVBQUU7MERBQWtCO3VGQVIvQix3QkFBd0I7Y0FUcEMsU0FBUztlQUFDO2dCQUNULFFBQVEsRUFBRSxxQkFBcUI7Z0JBQy9CLFFBQVEsRUFBRSxpQkFBaUI7Z0JBQzNCLElBQUksRUFBRTtvQkFDSixLQUFLLEVBQUMsbUtBQW1LO29CQUN6Syx3QkFBd0IsRUFBQyxXQUFXO29CQUNwQyxTQUFTLEVBQUUsdUJBQXVCO2lCQUNuQzthQUNGO2lHQVEwQixRQUFRO2tCQUFoQyxLQUFLO1lBQ21CLFFBQVE7a0JBQWhDLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuXHJcbmltcG9ydCB7IERpcmVjdGlvbiwgRGlyZWN0aW9uYWxpdHkgfSBmcm9tICdAYW5ndWxhci9jZGsvYmlkaSc7XHJcbmltcG9ydCB7IEJvb2xlYW5JbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9jb2VyY2lvbic7XHJcbmltcG9ydCB7XHJcbiAgQWZ0ZXJDb250ZW50SW5pdCxcclxuICBDaGFuZ2VEZXRlY3RvclJlZixcclxuICBDb250ZW50Q2hpbGRyZW4sXHJcbiAgRGlyZWN0aXZlLFxyXG4gIEluamVjdCxcclxuICBJbnB1dCxcclxuICBPbkNoYW5nZXMsXHJcbiAgT25EZXN0cm95LFxyXG4gIE9uSW5pdCxcclxuICBPcHRpb25hbCxcclxuICBRdWVyeUxpc3QsXHJcbiAgU2ltcGxlQ2hhbmdlc1xyXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7IElucHV0Qm9vbGVhbiB9IGZyb20gJ3Rkcy11aS9zaGFyZWQvdXRpbGl0eSc7XHJcblxyXG5pbXBvcnQgeyBURFNNZW51U2VydmljZSB9IGZyb20gJ3Rkcy11aS9tZW51JztcclxuXHJcbkBEaXJlY3RpdmUoe1xyXG4gIHNlbGVjdG9yOiAnW3Rkcy1kcm9wZG93bi1pdGVtXScsXHJcbiAgZXhwb3J0QXM6ICd0ZHNEcm9wZG93bkl0ZW0nLFxyXG4gIGhvc3Q6IHtcclxuICAgIGNsYXNzOlwidGRzLWRyb3Bkb3duLWl0ZW0gdGV4dC1uZXV0cmFsLTEtOTAwICBkYXJrOnRleHQtZC1uZXV0cmFsLTEtOTAwICB0ZXh0LWJvZHktMiBweC0zIHB5LTEuNSBmb250LXJlZ3VsYXIgZGFyazpob3ZlcjpiZy1kLW5ldXRyYWwtMy00MDAgaG92ZXI6YmctbmV1dHJhbC0zLTUwICB3LWZ1bGxcIixcclxuICAgICdbY2xhc3MuY3Vyc29yLXBvaW50ZXJdJzpcIiFkaXNhYmxlZFwiLFxyXG4gICAgJyhjbGljayknOiAnY2xpY2tNZW51SXRlbSgkZXZlbnQpJ1xyXG4gIH1cclxufSlcclxuZXhwb3J0IGNsYXNzIFREU0Ryb3BEb3duSXRlbURpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzLCBPbkRlc3Ryb3ksIEFmdGVyQ29udGVudEluaXQge1xyXG4gIHN0YXRpYyBuZ0FjY2VwdElucHV0VHlwZV9kaXNhYmxlZDogQm9vbGVhbklucHV0O1xyXG4gIHN0YXRpYyBuZ0FjY2VwdElucHV0VHlwZV9zZWxlY3RlZDogQm9vbGVhbklucHV0O1xyXG5cclxuICBwcml2YXRlIGRlc3Ryb3kkID0gbmV3IFN1YmplY3Q8dm9pZD4oKTtcclxuICBzZWxlY3RlZCQgPSBuZXcgU3ViamVjdDxib29sZWFuPigpO1xyXG5cclxuICBASW5wdXQoKSBASW5wdXRCb29sZWFuKCkgZGlzYWJsZWQgPSBmYWxzZTtcclxuICBASW5wdXQoKSBASW5wdXRCb29sZWFuKCkgc2VsZWN0ZWQgPSBmYWxzZTtcclxuXHJcbiAgLyoqIGNsZWFyIGFsbCBpdGVtIHNlbGVjdGVkIHN0YXR1cyBleGNlcHQgdGhpcyAqL1xyXG4gIGNsaWNrTWVudUl0ZW0oZTogTW91c2VFdmVudCk6IHZvaWQge1xyXG4gICAgXHJcbiAgICBpZiAodGhpcy5kaXNhYmxlZCkge1xyXG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLlREU01lbnVTZXJ2aWNlLm9uRGVzY2VuZGFudE1lbnVJdGVtQ2xpY2sodGhpcyk7ICAgIFxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiBcclxuXHJcblxyXG5cclxuXHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBwcml2YXRlIFREU01lbnVTZXJ2aWNlOiBURFNNZW51U2VydmljZSxcclxuICAgIHByaXZhdGUgY2RyOiBDaGFuZ2VEZXRlY3RvclJlZiwgICAgXHJcbiAgKSB7XHJcbiAgICBcclxuICB9XHJcblxyXG4gIG5nT25Jbml0KCk6IHZvaWQge1xyXG4gXHJcbiAgfVxyXG5cclxuICBuZ0FmdGVyQ29udGVudEluaXQoKTogdm9pZCB7XHJcbiAgIFxyXG4gIH1cclxuXHJcbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQge1xyXG4gICAgaWYgKGNoYW5nZXMuZGlzYWJsZWQpIHtcclxuICAgICAgdGhpcy5jZHIubWFya0ZvckNoZWNrKCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBuZ09uRGVzdHJveSgpOiB2b2lkIHtcclxuICAgIHRoaXMuZGVzdHJveSQubmV4dCgpO1xyXG4gICAgdGhpcy5kZXN0cm95JC5jb21wbGV0ZSgpO1xyXG4gIH1cclxufVxyXG4iXX0=