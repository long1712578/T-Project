import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "tds-ui/core/outlet";
function TDSDividerComponent_ng_container_1_ng_container_1_ng_container_5_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1);
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r4 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(ctx_r4.tdsText);
} }
const _c0 = function (a0, a1) { return { "w-8": a0, "flex-auto": a1 }; };
function TDSDividerComponent_ng_container_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵelementStart(1, "div", 3)(2, "div", 4);
    i0.ɵɵelement(3, "div", 5);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(4, "div", 6);
    i0.ɵɵtemplate(5, TDSDividerComponent_ng_container_1_ng_container_1_ng_container_5_Template, 2, 1, "ng-container", 7);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(6, "div", 4);
    i0.ɵɵelement(7, "div", 5);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction2(7, _c0, ctx_r2.tdsOrientation === "left", ctx_r2.tdsOrientation !== "left"));
    i0.ɵɵadvance(1);
    i0.ɵɵclassMap(ctx_r2.tdsClass);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("tdsStringTemplateOutlet", ctx_r2.tdsText);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction2(10, _c0, ctx_r2.tdsOrientation === "right", ctx_r2.tdsOrientation !== "right"));
    i0.ɵɵadvance(1);
    i0.ɵɵclassMap(ctx_r2.tdsClass);
} }
function TDSDividerComponent_ng_container_1_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵelement(1, "div", 5);
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r3 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(1);
    i0.ɵɵclassMap(ctx_r3.tdsClass);
} }
function TDSDividerComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtemplate(1, TDSDividerComponent_ng_container_1_ng_container_1_Template, 8, 13, "ng-container", 2);
    i0.ɵɵtemplate(2, TDSDividerComponent_ng_container_1_ng_container_2_Template, 2, 2, "ng-container", 2);
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r0.tdsText);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", !ctx_r0.tdsText);
} }
function TDSDividerComponent_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵelement(1, "div", 8);
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(1);
    i0.ɵɵclassMap(ctx_r1.tdsClass);
} }
export class TDSDividerComponent {
    constructor(elementRef) {
        this.elementRef = elementRef;
        this.tdsClass = 'border-neutral-2-100 dark:border-d-neutral-2-100 ';
        this.tdsType = 'horizontal';
        this.tdsOrientation = 'center';
        // TODO: move to host after View Engine deprecation
        this.elementRef.nativeElement.classList.add('tds-divider');
    }
}
TDSDividerComponent.ɵfac = function TDSDividerComponent_Factory(t) { return new (t || TDSDividerComponent)(i0.ɵɵdirectiveInject(i0.ElementRef)); };
TDSDividerComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TDSDividerComponent, selectors: [["tds-divider"]], inputs: { tdsClass: "tdsClass", tdsText: "tdsText", tdsType: "tdsType", tdsOrientation: "tdsOrientation" }, exportAs: ["tdsDivider"], decls: 3, vars: 3, consts: [[3, "ngSwitch"], [4, "ngSwitchCase"], [4, "ngIf"], [1, "w-full", "flex", "items-stretch"], [1, "flex", "flex-col", "justify-center", 3, "ngClass"], [1, "w-full", "border-t"], [1, "tds-divider-inner-text", "px-4", "text-body-2", "font-regular", "text-neutral-1-900", "dark:text-d-neutral-1-900"], [4, "tdsStringTemplateOutlet"], [1, "relative", "mx-2", "border-l", "align-middle", "inline-block", "min-h-[16px]"]], template: function TDSDividerComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementContainerStart(0, 0);
        i0.ɵɵtemplate(1, TDSDividerComponent_ng_container_1_Template, 3, 2, "ng-container", 1);
        i0.ɵɵtemplate(2, TDSDividerComponent_ng_container_2_Template, 2, 2, "ng-container", 1);
        i0.ɵɵelementContainerEnd();
    } if (rf & 2) {
        i0.ɵɵproperty("ngSwitch", ctx.tdsType);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngSwitchCase", "horizontal");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngSwitchCase", "vertical");
    } }, directives: [i1.NgSwitch, i1.NgSwitchCase, i1.NgIf, i1.NgClass, i2.TDSStringTemplateOutletDirective], encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSDividerComponent, [{
        type: Component,
        args: [{ selector: 'tds-divider', exportAs: 'tdsDivider', preserveWhitespaces: false, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {
                // '[class.tds-divider-horizontal]': `tdsType === 'horizontal'`,
                // '[class.tds-divider-vertical]': `tdsType === 'vertical'`,
                // '[class.tds-divider-with-text]': `tdsText`,
                // '[class.tds-divider-plain]': `tdsPlain`,
                // '[class.tds-divider-with-text-left]': `tdsText && tdsOrientation === 'left'`,
                // '[class.tds-divider-with-text-right]': `tdsText && tdsOrientation === 'right'`,
                // '[class.tds-divider-with-text-center]': `tdsText && tdsOrientation === 'center'`,
                // '[class.tds-divider-dashed]': `tdsDashed`,
                // '[class.inline-block]': `tdsType === 'vertical'`,
                // '[class.mx-2]': `tdsType === 'vertical'`,
                // '[class.align-middle]': `tdsType === 'vertical'`,
                // '[class.border-l]': `tdsType === 'vertical'`,
                // '[class.border-neutral-2-100]': `tdsType === 'vertical'`,
                // '[class.h-3.5]': `tdsType === 'vertical'`,
                }, template: "<ng-container [ngSwitch]=\"tdsType\">\r\n    <ng-container *ngSwitchCase=\"'horizontal'\">\r\n        <ng-container *ngIf=\"tdsText\">\r\n            <div class=\"w-full flex items-stretch\">\r\n                <div class=\"flex flex-col justify-center\"  [ngClass]=\"{'w-8':tdsOrientation === 'left','flex-auto':tdsOrientation !== 'left'}\">\r\n                    <div class=\"w-full border-t\" [class]=\"tdsClass\">\r\n\r\n                    </div>\r\n                </div>\r\n                <div class=\"tds-divider-inner-text px-4 text-body-2 font-regular text-neutral-1-900 dark:text-d-neutral-1-900\">\r\n                    <ng-container *tdsStringTemplateOutlet=\"tdsText\">{{ tdsText }}</ng-container>\r\n                </div>\r\n                <div class=\"flex flex-col justify-center\" [ngClass]=\"{'w-8':tdsOrientation === 'right','flex-auto':tdsOrientation !== 'right'}\">\r\n                    <div class=\"w-full border-t\" [class]=\"tdsClass\">\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"!tdsText\">\r\n            <div class=\"w-full border-t\" [class]=\"tdsClass\"></div>\r\n        </ng-container>\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'vertical'\">\r\n        <div class=\"relative mx-2 border-l align-middle inline-block min-h-[16px]\" [class]=\"tdsClass\" ></div>\r\n    </ng-container>\r\n</ng-container>" }]
    }], function () { return [{ type: i0.ElementRef }]; }, { tdsClass: [{
            type: Input
        }], tdsText: [{
            type: Input
        }], tdsType: [{
            type: Input
        }], tdsOrientation: [{
            type: Input
        }] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGl2aWRlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy90ZHMtdWkvZGl2aWRlci9kaXZpZGVyLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uL3Byb2plY3RzL3Rkcy11aS9kaXZpZGVyL2RpdmlkZXIuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBYyxLQUFLLEVBQWUsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7O0lDU2xHLDZCQUFpRDtJQUFBLFlBQWE7SUFBQSwwQkFBZTs7O0lBQTVCLGVBQWE7SUFBYixvQ0FBYTs7OztJQVIxRSw2QkFBOEI7SUFDMUIsOEJBQXVDLGFBQUE7SUFFL0IseUJBRU07SUFDVixpQkFBTTtJQUNOLDhCQUErRztJQUMzRyxvSEFBNkU7SUFDakYsaUJBQU07SUFDTiw4QkFBZ0k7SUFDNUgseUJBRU07SUFDVixpQkFBTSxFQUFBO0lBRWQsMEJBQWU7OztJQWRvQyxlQUFtRjtJQUFuRix3SEFBbUY7SUFDN0YsZUFBa0I7SUFBbEIsOEJBQWtCO0lBS2hDLGVBQWdDO0lBQWhDLHdEQUFnQztJQUVULGVBQXFGO0lBQXJGLDJIQUFxRjtJQUM5RixlQUFrQjtJQUFsQiw4QkFBa0I7OztJQU0zRCw2QkFBK0I7SUFDM0IseUJBQXNEO0lBQzFELDBCQUFlOzs7SUFEa0IsZUFBa0I7SUFBbEIsOEJBQWtCOzs7SUFuQnZELDZCQUEyQztJQUN2QyxzR0FnQmU7SUFDZixxR0FFZTtJQUNuQiwwQkFBZTs7O0lBcEJJLGVBQWE7SUFBYixxQ0FBYTtJQWlCYixlQUFjO0lBQWQsc0NBQWM7OztJQUlqQyw2QkFBeUM7SUFDckMseUJBQXFHO0lBQ3pHLDBCQUFlOzs7SUFEZ0UsZUFBa0I7SUFBbEIsOEJBQWtCOztBRFNyRyxNQUFNLE9BQU8sbUJBQW1CO0lBSzlCLFlBQW9CLFVBQXNCO1FBQXRCLGVBQVUsR0FBVixVQUFVLENBQVk7UUFKakMsYUFBUSxHQUFXLG1EQUFtRCxDQUFBO1FBRXRFLFlBQU8sR0FBOEIsWUFBWSxDQUFDO1FBQ2xELG1CQUFjLEdBQWdDLFFBQVEsQ0FBQztRQUU5RCxtREFBbUQ7UUFDbkQsSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUM3RCxDQUFDOztzRkFSVSxtQkFBbUI7c0VBQW5CLG1CQUFtQjtRQ2pDaEMsZ0NBQW1DO1FBQy9CLHNGQXFCZTtRQUNmLHNGQUVlO1FBQ25CLDBCQUFlOztRQTFCRCxzQ0FBb0I7UUFDZixlQUEwQjtRQUExQiwyQ0FBMEI7UUFzQjFCLGVBQXdCO1FBQXhCLHlDQUF3Qjs7dUZEVTlCLG1CQUFtQjtjQTdCL0IsU0FBUzsyQkFDRSxhQUFhLFlBQ2IsWUFBWSx1QkFDRCxLQUFLLGlCQUNYLGlCQUFpQixDQUFDLElBQUksbUJBQ3BCLHVCQUF1QixDQUFDLE1BQU0sUUFPekM7Z0JBQ0osZ0VBQWdFO2dCQUNoRSw0REFBNEQ7Z0JBQzVELDhDQUE4QztnQkFDOUMsMkNBQTJDO2dCQUMzQyxnRkFBZ0Y7Z0JBQ2hGLGtGQUFrRjtnQkFDbEYsb0ZBQW9GO2dCQUNwRiw2Q0FBNkM7Z0JBQzdDLG9EQUFvRDtnQkFDcEQsNENBQTRDO2dCQUM1QyxvREFBb0Q7Z0JBQ3BELGdEQUFnRDtnQkFDaEQsNERBQTREO2dCQUM1RCw2Q0FBNkM7aUJBQzlDOzZEQUdRLFFBQVE7a0JBQWhCLEtBQUs7WUFDRyxPQUFPO2tCQUFmLEtBQUs7WUFDRyxPQUFPO2tCQUFmLEtBQUs7WUFDRyxjQUFjO2tCQUF0QixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIEVsZW1lbnRSZWYsIElucHV0LCBUZW1wbGF0ZVJlZiwgVmlld0VuY2Fwc3VsYXRpb24gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ3Rkcy1kaXZpZGVyJyxcclxuICBleHBvcnRBczogJ3Rkc0RpdmlkZXInLFxyXG4gIHByZXNlcnZlV2hpdGVzcGFjZXM6IGZhbHNlLFxyXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXHJcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL2RpdmlkZXIuY29tcG9uZW50Lmh0bWwnLFxyXG4gIC8vIHRlbXBsYXRlOiBgXHJcbiAgLy8gICA8c3BhbiAqbmdJZj1cInRkc1RleHRcIiBjbGFzcz1cInRkcy1kaXZpZGVyLWlubmVyLXRleHRcIj5cclxuICAvLyAgICAgPG5nLWNvbnRhaW5lciAqdGRzU3RyaW5nVGVtcGxhdGVPdXRsZXQ9XCJ0ZHNUZXh0XCI+e3sgdGRzVGV4dCB9fTwvbmctY29udGFpbmVyPlxyXG4gIC8vICAgPC9zcGFuPlxyXG4gIC8vIGAsXHJcbiAgaG9zdDoge1xyXG4gICAgLy8gJ1tjbGFzcy50ZHMtZGl2aWRlci1ob3Jpem9udGFsXSc6IGB0ZHNUeXBlID09PSAnaG9yaXpvbnRhbCdgLFxyXG4gICAgLy8gJ1tjbGFzcy50ZHMtZGl2aWRlci12ZXJ0aWNhbF0nOiBgdGRzVHlwZSA9PT0gJ3ZlcnRpY2FsJ2AsXHJcbiAgICAvLyAnW2NsYXNzLnRkcy1kaXZpZGVyLXdpdGgtdGV4dF0nOiBgdGRzVGV4dGAsXHJcbiAgICAvLyAnW2NsYXNzLnRkcy1kaXZpZGVyLXBsYWluXSc6IGB0ZHNQbGFpbmAsXHJcbiAgICAvLyAnW2NsYXNzLnRkcy1kaXZpZGVyLXdpdGgtdGV4dC1sZWZ0XSc6IGB0ZHNUZXh0ICYmIHRkc09yaWVudGF0aW9uID09PSAnbGVmdCdgLFxyXG4gICAgLy8gJ1tjbGFzcy50ZHMtZGl2aWRlci13aXRoLXRleHQtcmlnaHRdJzogYHRkc1RleHQgJiYgdGRzT3JpZW50YXRpb24gPT09ICdyaWdodCdgLFxyXG4gICAgLy8gJ1tjbGFzcy50ZHMtZGl2aWRlci13aXRoLXRleHQtY2VudGVyXSc6IGB0ZHNUZXh0ICYmIHRkc09yaWVudGF0aW9uID09PSAnY2VudGVyJ2AsXHJcbiAgICAvLyAnW2NsYXNzLnRkcy1kaXZpZGVyLWRhc2hlZF0nOiBgdGRzRGFzaGVkYCxcclxuICAgIC8vICdbY2xhc3MuaW5saW5lLWJsb2NrXSc6IGB0ZHNUeXBlID09PSAndmVydGljYWwnYCxcclxuICAgIC8vICdbY2xhc3MubXgtMl0nOiBgdGRzVHlwZSA9PT0gJ3ZlcnRpY2FsJ2AsXHJcbiAgICAvLyAnW2NsYXNzLmFsaWduLW1pZGRsZV0nOiBgdGRzVHlwZSA9PT0gJ3ZlcnRpY2FsJ2AsXHJcbiAgICAvLyAnW2NsYXNzLmJvcmRlci1sXSc6IGB0ZHNUeXBlID09PSAndmVydGljYWwnYCxcclxuICAgIC8vICdbY2xhc3MuYm9yZGVyLW5ldXRyYWwtMi0xMDBdJzogYHRkc1R5cGUgPT09ICd2ZXJ0aWNhbCdgLFxyXG4gICAgLy8gJ1tjbGFzcy5oLTMuNV0nOiBgdGRzVHlwZSA9PT0gJ3ZlcnRpY2FsJ2AsXHJcbiAgfVxyXG59KVxyXG5leHBvcnQgY2xhc3MgVERTRGl2aWRlckNvbXBvbmVudCB7XHJcbiAgQElucHV0KCkgdGRzQ2xhc3M6IHN0cmluZyA9ICdib3JkZXItbmV1dHJhbC0yLTEwMCBkYXJrOmJvcmRlci1kLW5ldXRyYWwtMi0xMDAgJ1xyXG4gIEBJbnB1dCgpIHRkc1RleHQ/OiBzdHJpbmcgfCBUZW1wbGF0ZVJlZjx2b2lkPjtcclxuICBASW5wdXQoKSB0ZHNUeXBlOiAnaG9yaXpvbnRhbCcgfCAndmVydGljYWwnID0gJ2hvcml6b250YWwnO1xyXG4gIEBJbnB1dCgpIHRkc09yaWVudGF0aW9uOiAnbGVmdCcgfCAncmlnaHQnIHwgJ2NlbnRlcicgPSAnY2VudGVyJztcclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYpIHtcclxuICAgIC8vIFRPRE86IG1vdmUgdG8gaG9zdCBhZnRlciBWaWV3IEVuZ2luZSBkZXByZWNhdGlvblxyXG4gICAgdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQuY2xhc3NMaXN0LmFkZCgndGRzLWRpdmlkZXInKTtcclxuICB9XHJcbn1cclxuIiwiPG5nLWNvbnRhaW5lciBbbmdTd2l0Y2hdPVwidGRzVHlwZVwiPlxyXG4gICAgPG5nLWNvbnRhaW5lciAqbmdTd2l0Y2hDYXNlPVwiJ2hvcml6b250YWwnXCI+XHJcbiAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cInRkc1RleHRcIj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInctZnVsbCBmbGV4IGl0ZW1zLXN0cmV0Y2hcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmbGV4IGZsZXgtY29sIGp1c3RpZnktY2VudGVyXCIgIFtuZ0NsYXNzXT1cInsndy04Jzp0ZHNPcmllbnRhdGlvbiA9PT0gJ2xlZnQnLCdmbGV4LWF1dG8nOnRkc09yaWVudGF0aW9uICE9PSAnbGVmdCd9XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInctZnVsbCBib3JkZXItdFwiIFtjbGFzc109XCJ0ZHNDbGFzc1wiPlxyXG5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRkcy1kaXZpZGVyLWlubmVyLXRleHQgcHgtNCB0ZXh0LWJvZHktMiBmb250LXJlZ3VsYXIgdGV4dC1uZXV0cmFsLTEtOTAwIGRhcms6dGV4dC1kLW5ldXRyYWwtMS05MDBcIj5cclxuICAgICAgICAgICAgICAgICAgICA8bmctY29udGFpbmVyICp0ZHNTdHJpbmdUZW1wbGF0ZU91dGxldD1cInRkc1RleHRcIj57eyB0ZHNUZXh0IH19PC9uZy1jb250YWluZXI+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmbGV4IGZsZXgtY29sIGp1c3RpZnktY2VudGVyXCIgW25nQ2xhc3NdPVwieyd3LTgnOnRkc09yaWVudGF0aW9uID09PSAncmlnaHQnLCdmbGV4LWF1dG8nOnRkc09yaWVudGF0aW9uICE9PSAncmlnaHQnfVwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3LWZ1bGwgYm9yZGVyLXRcIiBbY2xhc3NdPVwidGRzQ2xhc3NcIj5cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9uZy1jb250YWluZXI+XHJcbiAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cIiF0ZHNUZXh0XCI+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3LWZ1bGwgYm9yZGVyLXRcIiBbY2xhc3NdPVwidGRzQ2xhc3NcIj48L2Rpdj5cclxuICAgICAgICA8L25nLWNvbnRhaW5lcj5cclxuICAgIDwvbmctY29udGFpbmVyPlxyXG4gICAgPG5nLWNvbnRhaW5lciAqbmdTd2l0Y2hDYXNlPVwiJ3ZlcnRpY2FsJ1wiPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJyZWxhdGl2ZSBteC0yIGJvcmRlci1sIGFsaWduLW1pZGRsZSBpbmxpbmUtYmxvY2sgbWluLWgtWzE2cHhdXCIgW2NsYXNzXT1cInRkc0NsYXNzXCIgPjwvZGl2PlxyXG4gICAgPC9uZy1jb250YWluZXI+XHJcbjwvbmctY29udGFpbmVyPiJdfQ==