import { animate, style, transition, trigger } from '@angular/animations';
import { DOCUMENT } from '@angular/common';
import { ChangeDetectionStrategy, Component, Inject, Input, ViewEncapsulation } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/cdk/platform";
import * as i2 from "@angular/common";
import * as i3 from "tds-ui/tooltip";
import * as i4 from "tds-ui/progress-spinner";
import * as i5 from "tds-ui/progress";
function TDSUploadListComponent_div_0_ng_template_2_div_1_ng_template_1_Template(rf, ctx) { }
const _c0 = function (a0) { return { $implicit: a0 }; };
function TDSUploadListComponent_div_0_ng_template_2_div_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 19);
    i0.ɵɵtemplate(1, TDSUploadListComponent_div_0_ng_template_2_div_1_ng_template_1_Template, 0, 0, "ng-template", 20);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const file_r1 = i0.ɵɵnextContext(2).$implicit;
    const _r4 = i0.ɵɵreference(5);
    i0.ɵɵclassProp("tds-upload-list-item-file", !file_r1.isUploading);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngTemplateOutlet", _r4)("ngTemplateOutletContext", i0.ɵɵpureFunction1(4, _c0, file_r1));
} }
const _c1 = function (a0) { return { "h-28 w-28": a0 }; };
function TDSUploadListComponent_div_0_ng_template_2_a_2_img_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "img", 23);
} if (rf & 2) {
    const file_r1 = i0.ɵɵnextContext(3).$implicit;
    const ctx_r25 = i0.ɵɵnextContext();
    i0.ɵɵproperty("src", file_r1.thumbUrl || file_r1.url, i0.ɵɵsanitizeUrl)("ngClass", i0.ɵɵpureFunction1(3, _c1, ctx_r25.isPictureCard));
    i0.ɵɵattribute("alt", file_r1.name);
} }
const _c2 = function (a0, a1) { return { "w-12 h-12 mr-2": a0, "h-28 w-28": a1 }; };
function TDSUploadListComponent_div_0_ng_template_2_a_2_Template(rf, ctx) { if (rf & 1) {
    const _r29 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "a", 21);
    i0.ɵɵlistener("click", function TDSUploadListComponent_div_0_ng_template_2_a_2_Template_a_click_0_listener($event) { i0.ɵɵrestoreView(_r29); const file_r1 = i0.ɵɵnextContext(2).$implicit; const ctx_r27 = i0.ɵɵnextContext(); return ctx_r27.handlePreview(file_r1, $event); });
    i0.ɵɵtemplate(1, TDSUploadListComponent_div_0_ng_template_2_a_2_img_1_Template, 1, 5, "img", 22);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    i0.ɵɵnextContext();
    const _r21 = i0.ɵɵreference(5);
    const file_r1 = i0.ɵɵnextContext().$implicit;
    const ctx_r19 = i0.ɵɵnextContext();
    i0.ɵɵclassProp("tds-upload-list-item-file", !file_r1.isImageUrl);
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction2(6, _c2, !ctx_r19.isPictureCard, ctx_r19.isPictureCard))("href", file_r1.url || file_r1.thumbUrl, i0.ɵɵsanitizeUrl);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", file_r1.isImageUrl)("ngIfElse", _r21);
} }
function TDSUploadListComponent_div_0_ng_template_2_div_3_ng_template_1_Template(rf, ctx) { }
function TDSUploadListComponent_div_0_ng_template_2_div_3_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 24);
    i0.ɵɵtemplate(1, TDSUploadListComponent_div_0_ng_template_2_div_3_ng_template_1_Template, 0, 0, "ng-template", 20);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const file_r1 = i0.ɵɵnextContext(2).$implicit;
    const _r4 = i0.ɵɵreference(5);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngTemplateOutlet", _r4)("ngTemplateOutletContext", i0.ɵɵpureFunction1(2, _c0, file_r1));
} }
function TDSUploadListComponent_div_0_ng_template_2_ng_template_4_ng_template_0_Template(rf, ctx) { }
function TDSUploadListComponent_div_0_ng_template_2_ng_template_4_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtemplate(0, TDSUploadListComponent_div_0_ng_template_2_ng_template_4_ng_template_0_Template, 0, 0, "ng-template", 20);
} if (rf & 2) {
    const file_r1 = i0.ɵɵnextContext(2).$implicit;
    const _r4 = i0.ɵɵreference(5);
    i0.ɵɵproperty("ngTemplateOutlet", _r4)("ngTemplateOutletContext", i0.ɵɵpureFunction1(2, _c0, file_r1));
} }
function TDSUploadListComponent_div_0_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0, 14);
    i0.ɵɵtemplate(1, TDSUploadListComponent_div_0_ng_template_2_div_1_Template, 2, 6, "div", 15);
    i0.ɵɵtemplate(2, TDSUploadListComponent_div_0_ng_template_2_a_2_Template, 2, 9, "a", 16);
    i0.ɵɵtemplate(3, TDSUploadListComponent_div_0_ng_template_2_div_3_Template, 2, 4, "div", 17);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵtemplate(4, TDSUploadListComponent_div_0_ng_template_2_ng_template_4_Template, 1, 4, "ng-template", null, 18, i0.ɵɵtemplateRefExtractor);
} if (rf & 2) {
    const file_r1 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵproperty("ngSwitch", file_r1.iconType);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngSwitchCase", "uploading");
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngSwitchCase", "thumbnail");
} }
function TDSUploadListComponent_div_0_ng_template_4_ng_container_0_ng_container_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainer(0);
} }
function TDSUploadListComponent_div_0_ng_template_4_ng_container_0_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtemplate(1, TDSUploadListComponent_div_0_ng_template_4_ng_container_0_ng_container_2_ng_container_1_Template, 1, 0, "ng-container", 25);
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const file_r36 = i0.ɵɵnextContext(2).$implicit;
    const _r40 = i0.ɵɵreference(4);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", file_r36.isUploading)("ngIfElse", _r40);
} }
function TDSUploadListComponent_div_0_ng_template_4_ng_container_0_ng_container_3_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1);
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r47 = i0.ɵɵnextContext(5);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1(" ", ctx_r47.locale.uploading, " ");
} }
function TDSUploadListComponent_div_0_ng_template_4_ng_container_0_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtemplate(1, TDSUploadListComponent_div_0_ng_template_4_ng_container_0_ng_container_3_ng_container_1_Template, 2, 1, "ng-container", 25);
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const file_r36 = i0.ɵɵnextContext(2).$implicit;
    const _r40 = i0.ɵɵreference(4);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", file_r36.isUploading)("ngIfElse", _r40);
} }
function TDSUploadListComponent_div_0_ng_template_4_ng_container_0_ng_container_4_i_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "i", 32);
} }
function TDSUploadListComponent_div_0_ng_template_4_ng_container_0_ng_container_4_tds_spinner_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "tds-spinner", 33);
} }
function TDSUploadListComponent_div_0_ng_template_4_ng_container_0_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtemplate(1, TDSUploadListComponent_div_0_ng_template_4_ng_container_0_ng_container_4_i_1_Template, 1, 0, "i", 30);
    i0.ɵɵtemplate(2, TDSUploadListComponent_div_0_ng_template_4_ng_container_0_ng_container_4_tds_spinner_2_Template, 1, 0, "tds-spinner", 31);
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const file_r36 = i0.ɵɵnextContext(2).$implicit;
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", !file_r36.isUploading);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", file_r36.isUploading);
} }
function TDSUploadListComponent_div_0_ng_template_4_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0)(1, 14);
    i0.ɵɵtemplate(2, TDSUploadListComponent_div_0_ng_template_4_ng_container_0_ng_container_2_Template, 2, 2, "ng-container", 28);
    i0.ɵɵtemplate(3, TDSUploadListComponent_div_0_ng_template_4_ng_container_0_ng_container_3_Template, 2, 2, "ng-container", 28);
    i0.ɵɵtemplate(4, TDSUploadListComponent_div_0_ng_template_4_ng_container_0_ng_container_4_Template, 3, 2, "ng-container", 29);
    i0.ɵɵelementContainerEnd()();
} if (rf & 2) {
    const ctx_r37 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngSwitch", ctx_r37.listType);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngSwitchCase", "picture");
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngSwitchCase", "picture-card");
} }
function TDSUploadListComponent_div_0_ng_template_4_ng_template_1_Template(rf, ctx) { }
function TDSUploadListComponent_div_0_ng_template_4_ng_template_3_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "span", 34);
} }
function TDSUploadListComponent_div_0_ng_template_4_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtemplate(0, TDSUploadListComponent_div_0_ng_template_4_ng_container_0_Template, 5, 3, "ng-container", 25);
    i0.ɵɵtemplate(1, TDSUploadListComponent_div_0_ng_template_4_ng_template_1_Template, 0, 0, "ng-template", 20, 26, i0.ɵɵtemplateRefExtractor);
    i0.ɵɵtemplate(3, TDSUploadListComponent_div_0_ng_template_4_ng_template_3_Template, 1, 0, "ng-template", null, 27, i0.ɵɵtemplateRefExtractor);
} if (rf & 2) {
    const file_r36 = ctx.$implicit;
    const _r38 = i0.ɵɵreference(2);
    const ctx_r5 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("ngIf", !ctx_r5.iconRender)("ngIfElse", _r38);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngTemplateOutlet", ctx_r5.iconRender)("ngTemplateOutletContext", i0.ɵɵpureFunction1(4, _c0, file_r36));
} }
const _c3 = function (a0, a1) { return { "text-white": a0, "text-neutral-1-500 dark:text-d-neutral-1-500": a1 }; };
function TDSUploadListComponent_div_0_ng_template_6_button_0_Template(rf, ctx) { if (rf & 1) {
    const _r55 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "button", 36);
    i0.ɵɵlistener("click", function TDSUploadListComponent_div_0_ng_template_6_button_0_Template_button_click_0_listener($event) { i0.ɵɵrestoreView(_r55); const file_r1 = i0.ɵɵnextContext(2).$implicit; const ctx_r53 = i0.ɵɵnextContext(); return ctx_r53.handleRemove(file_r1, $event); });
    i0.ɵɵelementStart(1, "span", 37);
    i0.ɵɵelement(2, "i", 38);
    i0.ɵɵelementEnd()();
} if (rf & 2) {
    const ctx_r52 = i0.ɵɵnextContext(3);
    i0.ɵɵattribute("title", ctx_r52.locale.removeFile);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction2(2, _c3, ctx_r52.isPictureCard, !ctx_r52.isPictureCard));
} }
function TDSUploadListComponent_div_0_ng_template_6_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtemplate(0, TDSUploadListComponent_div_0_ng_template_6_button_0_Template, 3, 5, "button", 35);
} if (rf & 2) {
    const ctx_r7 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("ngIf", ctx_r7.icons.showRemoveIcon);
} }
function TDSUploadListComponent_div_0_ng_template_8_button_0_Template(rf, ctx) { if (rf & 1) {
    const _r59 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "button", 40);
    i0.ɵɵlistener("click", function TDSUploadListComponent_div_0_ng_template_8_button_0_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r59); const file_r1 = i0.ɵɵnextContext(2).$implicit; const ctx_r57 = i0.ɵɵnextContext(); return ctx_r57.handleDownload(file_r1); });
    i0.ɵɵelementStart(1, "span", 37);
    i0.ɵɵelement(2, "i", 41);
    i0.ɵɵelementEnd()();
} if (rf & 2) {
    const ctx_r56 = i0.ɵɵnextContext(3);
    i0.ɵɵattribute("title", ctx_r56.locale.downloadFile);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction2(2, _c3, ctx_r56.isPictureCard, !ctx_r56.isPictureCard));
} }
function TDSUploadListComponent_div_0_ng_template_8_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtemplate(0, TDSUploadListComponent_div_0_ng_template_8_button_0_Template, 3, 5, "button", 39);
} if (rf & 2) {
    const file_r1 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵproperty("ngIf", file_r1.showDownload);
} }
function TDSUploadListComponent_div_0_ng_template_10_span_0_ng_template_1_Template(rf, ctx) { }
function TDSUploadListComponent_div_0_ng_template_10_span_0_ng_template_2_Template(rf, ctx) { }
function TDSUploadListComponent_div_0_ng_template_10_span_0_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "span");
    i0.ɵɵtemplate(1, TDSUploadListComponent_div_0_ng_template_10_span_0_ng_template_1_Template, 0, 0, "ng-template", 11);
    i0.ɵɵtemplate(2, TDSUploadListComponent_div_0_ng_template_10_span_0_ng_template_2_Template, 0, 0, "ng-template", 11);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    i0.ɵɵnextContext(2);
    const _r8 = i0.ɵɵreference(9);
    const _r6 = i0.ɵɵreference(7);
    const ctx_r61 = i0.ɵɵnextContext();
    i0.ɵɵclassMapInterpolate1("tds-upload-list-item-card-actions ", ctx_r61.listType === "picture" ? "picture" : "", " flex");
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngTemplateOutlet", _r8);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngTemplateOutlet", _r6);
} }
function TDSUploadListComponent_div_0_ng_template_10_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtemplate(0, TDSUploadListComponent_div_0_ng_template_10_span_0_Template, 3, 5, "span", 42);
} if (rf & 2) {
    const ctx_r11 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("ngIf", ctx_r11.listType !== "picture-card");
} }
const _c4 = function (a0) { return { "hidden": a0 }; };
function TDSUploadListComponent_div_0_ng_template_12_a_0_Template(rf, ctx) { if (rf & 1) {
    const _r69 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "a", 45);
    i0.ɵɵlistener("click", function TDSUploadListComponent_div_0_ng_template_12_a_0_Template_a_click_0_listener($event) { i0.ɵɵrestoreView(_r69); const file_r1 = i0.ɵɵnextContext(2).$implicit; const ctx_r67 = i0.ɵɵnextContext(); return ctx_r67.handlePreview(file_r1, $event); });
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const file_r1 = i0.ɵɵnextContext(2).$implicit;
    const ctx_r64 = i0.ɵɵnextContext();
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction1(5, _c4, ctx_r64.isPictureCard && file_r1.status !== "error"))("href", file_r1.url, i0.ɵɵsanitizeUrl);
    i0.ɵɵattribute("title", file_r1.name)("download", file_r1.linkProps && file_r1.linkProps.download);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1(" ", file_r1.name, " ");
} }
function TDSUploadListComponent_div_0_ng_template_12_span_1_Template(rf, ctx) { if (rf & 1) {
    const _r73 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "span", 46);
    i0.ɵɵlistener("click", function TDSUploadListComponent_div_0_ng_template_12_span_1_Template_span_click_0_listener($event) { i0.ɵɵrestoreView(_r73); const file_r1 = i0.ɵɵnextContext(2).$implicit; const ctx_r71 = i0.ɵɵnextContext(); return ctx_r71.handlePreview(file_r1, $event); });
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const file_r1 = i0.ɵɵnextContext(2).$implicit;
    const ctx_r65 = i0.ɵɵnextContext();
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction1(3, _c4, ctx_r65.isPictureCard && (file_r1.isUploading || file_r1.iconType == "thumbnail")));
    i0.ɵɵattribute("title", file_r1.name);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1(" ", file_r1.name, " ");
} }
function TDSUploadListComponent_div_0_ng_template_12_ng_template_2_Template(rf, ctx) { }
function TDSUploadListComponent_div_0_ng_template_12_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtemplate(0, TDSUploadListComponent_div_0_ng_template_12_a_0_Template, 2, 7, "a", 43);
    i0.ɵɵtemplate(1, TDSUploadListComponent_div_0_ng_template_12_span_1_Template, 2, 5, "span", 44);
    i0.ɵɵtemplate(2, TDSUploadListComponent_div_0_ng_template_12_ng_template_2_Template, 0, 0, "ng-template", 11);
} if (rf & 2) {
    const file_r1 = i0.ɵɵnextContext().$implicit;
    const _r10 = i0.ɵɵreference(11);
    i0.ɵɵproperty("ngIf", file_r1.url);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", !file_r1.url);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngTemplateOutlet", _r10);
} }
function TDSUploadListComponent_div_0_ng_template_16_Template(rf, ctx) { }
function TDSUploadListComponent_div_0_ng_template_17_Template(rf, ctx) { }
const _c5 = function () { return { opacity: 0.5, "pointer-events": "none" }; };
function TDSUploadListComponent_div_0_span_18_a_1_Template(rf, ctx) { if (rf & 1) {
    const _r81 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "a", 50);
    i0.ɵɵlistener("click", function TDSUploadListComponent_div_0_span_18_a_1_Template_a_click_0_listener($event) { i0.ɵɵrestoreView(_r81); const file_r1 = i0.ɵɵnextContext(2).$implicit; const ctx_r79 = i0.ɵɵnextContext(); return ctx_r79.handlePreview(file_r1, $event); });
    i0.ɵɵelement(1, "i", 51);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const file_r1 = i0.ɵɵnextContext(2).$implicit;
    const ctx_r76 = i0.ɵɵnextContext();
    i0.ɵɵproperty("href", file_r1.url || file_r1.thumbUrl, i0.ɵɵsanitizeUrl)("ngStyle", !(file_r1.url || file_r1.thumbUrl) ? i0.ɵɵpureFunction0(3, _c5) : null);
    i0.ɵɵattribute("title", ctx_r76.locale.previewFile);
} }
function TDSUploadListComponent_div_0_span_18_ng_container_2_ng_template_1_Template(rf, ctx) { }
function TDSUploadListComponent_div_0_span_18_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtemplate(1, TDSUploadListComponent_div_0_span_18_ng_container_2_ng_template_1_Template, 0, 0, "ng-template", 11);
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    i0.ɵɵnextContext(2);
    const _r8 = i0.ɵɵreference(9);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngTemplateOutlet", _r8);
} }
function TDSUploadListComponent_div_0_span_18_ng_template_3_Template(rf, ctx) { }
function TDSUploadListComponent_div_0_span_18_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "span", 47);
    i0.ɵɵtemplate(1, TDSUploadListComponent_div_0_span_18_a_1_Template, 2, 4, "a", 48);
    i0.ɵɵtemplate(2, TDSUploadListComponent_div_0_span_18_ng_container_2_Template, 2, 1, "ng-container", 49);
    i0.ɵɵtemplate(3, TDSUploadListComponent_div_0_span_18_ng_template_3_Template, 0, 0, "ng-template", 11);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const file_r1 = i0.ɵɵnextContext().$implicit;
    const _r6 = i0.ɵɵreference(7);
    const ctx_r16 = i0.ɵɵnextContext();
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r16.icons.showPreviewIcon);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", file_r1.status === "done");
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngTemplateOutlet", _r6);
} }
const _c6 = function (a0) { return { "mt-6": a0 }; };
function TDSUploadListComponent_div_0_div_19_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 52);
    i0.ɵɵelement(1, "tds-progress", 53);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const file_r1 = i0.ɵɵnextContext().$implicit;
    const ctx_r17 = i0.ɵɵnextContext();
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction1(4, _c6, ctx_r17.isPictureCard));
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("percent", file_r1.percent)("showInfo", false)("strokeWidth", 2);
} }
const _c7 = function (a0, a1) { return { "h-28 w-28  mr-2.5 flex justify-center items-center relative group ": a0, "border-dashed border-neutral-2-200 dark:border-d-neutral-2-200 border rounded": a1 }; };
const _c8 = function (a0, a1, a2) { return { "bg-neutral-3-50 rounded dark:bg-d-neutral-3-200": a0, "w-full h-full flex justify-center items-center relative": a1, "border-error-300 border rounded": a2 }; };
const _c9 = function (a0, a1) { return { "h-full p-1": a0, "text-center": a1 }; };
const _c10 = function (a0) { return { "flex items-center": a0 }; };
function TDSUploadListComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 1)(1, "div", 2);
    i0.ɵɵtemplate(2, TDSUploadListComponent_div_0_ng_template_2_Template, 6, 3, "ng-template", null, 3, i0.ɵɵtemplateRefExtractor);
    i0.ɵɵtemplate(4, TDSUploadListComponent_div_0_ng_template_4_Template, 5, 6, "ng-template", null, 4, i0.ɵɵtemplateRefExtractor);
    i0.ɵɵtemplate(6, TDSUploadListComponent_div_0_ng_template_6_Template, 1, 1, "ng-template", null, 5, i0.ɵɵtemplateRefExtractor);
    i0.ɵɵtemplate(8, TDSUploadListComponent_div_0_ng_template_8_Template, 1, 1, "ng-template", null, 6, i0.ɵɵtemplateRefExtractor);
    i0.ɵɵtemplate(10, TDSUploadListComponent_div_0_ng_template_10_Template, 1, 1, "ng-template", null, 7, i0.ɵɵtemplateRefExtractor);
    i0.ɵɵtemplate(12, TDSUploadListComponent_div_0_ng_template_12_Template, 3, 3, "ng-template", null, 8, i0.ɵɵtemplateRefExtractor);
    i0.ɵɵelementStart(14, "div", 9)(15, "span", 10);
    i0.ɵɵtemplate(16, TDSUploadListComponent_div_0_ng_template_16_Template, 0, 0, "ng-template", 11);
    i0.ɵɵtemplate(17, TDSUploadListComponent_div_0_ng_template_17_Template, 0, 0, "ng-template", 11);
    i0.ɵɵelementEnd()();
    i0.ɵɵtemplate(18, TDSUploadListComponent_div_0_span_18_Template, 4, 3, "span", 12);
    i0.ɵɵtemplate(19, TDSUploadListComponent_div_0_div_19_Template, 2, 6, "div", 13);
    i0.ɵɵelementEnd()();
} if (rf & 2) {
    const file_r1 = ctx.$implicit;
    const _r2 = i0.ɵɵreference(3);
    const _r12 = i0.ɵɵreference(13);
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵclassMapInterpolate1("tds-upload-list-", ctx_r0.listType, "-container mt-2.5");
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction2(19, _c7, ctx_r0.isPictureCard, file_r1.status == "uploading" && ctx_r0.isPictureCard));
    i0.ɵɵadvance(1);
    i0.ɵɵclassMapInterpolate3("tds-upload-list-item relative tds-upload-list-item-", file_r1.status, " text-", file_r1.status != "done" ? file_r1.status : "success", "-500 tds-upload-list-item-list-type-", ctx_r0.listType, "  ");
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction3(22, _c8, !ctx_r0.isPictureCard, ctx_r0.isPictureCard && file_r1.status !== "uploading", file_r1.status == "error" && ctx_r0.isPictureCard))("@itemState", undefined)("tooltipTitle", file_r1.status === "error" ? file_r1.message : null);
    i0.ɵɵattribute("data-key", file_r1.key);
    i0.ɵɵadvance(13);
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction2(26, _c9, !ctx_r0.isPictureCard, ctx_r0.isPictureCard));
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction1(29, _c10, !ctx_r0.isPictureCard));
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngTemplateOutlet", _r2);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngTemplateOutlet", _r12);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r0.listType === "picture-card" && !file_r1.isUploading);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", file_r1.isUploading);
} }
const isImageFileType = (type) => !!type && type.indexOf('image/') === 0;
const MEASURE_SIZE = 200;
export class TDSUploadListComponent {
    // #endregion
    constructor(cdr, doc, ngZone, platform, elementRef) {
        this.cdr = cdr;
        this.doc = doc;
        this.ngZone = ngZone;
        this.platform = platform;
        this.elementRef = elementRef;
        this.list = [];
        this.locale = {};
        this.iconRender = null;
        this.dir = 'ltr';
        // TODO: move to host after View Engine deprecation
        this.elementRef.nativeElement.classList.add('tds-upload-list');
    }
    get showPic() {
        return this.listType === 'picture' || this.listType === 'picture-card';
    }
    set items(list) {
        this.list = list;
    }
    genErr(file) {
        if (file.response && typeof file.response === 'string') {
            return file.response;
        }
        return (file.error && file.error.statusText) || this.locale.uploadError;
    }
    extname(url) {
        const temp = url.split('/');
        const filename = temp[temp.length - 1];
        const filenameWithoutSuffix = filename.split(/#|\?/)[0];
        return (/\.[^./\\]*$/.exec(filenameWithoutSuffix) || [''])[0];
    }
    isImageUrl(file) {
        if (isImageFileType(file.type)) {
            return true;
        }
        const url = (file.thumbUrl || file.url || '');
        if (!url) {
            return false;
        }
        const extension = this.extname(url);
        if (/^data:image\//.test(url) || /(webp|svg|png|gif|jpg|jpeg|jfif|bmp|dpg)$/i.test(extension)) {
            return true;
        }
        else if (/^data:/.test(url)) {
            // other file types of base64
            return false;
        }
        else if (extension) {
            // other file types which have extension
            return false;
        }
        return true;
    }
    getIconType(file) {
        if (!this.showPic) {
            return '';
        }
        if (file.isUploading || (!file.thumbUrl && !file.url)) {
            return 'uploading';
        }
        else {
            return 'thumbnail';
        }
    }
    previewImage(file) {
        return new Promise(resolve => {
            if (!isImageFileType(file.type) || !this.platform.isBrowser) {
                resolve('');
                return;
            }
            this.ngZone.runOutsideAngular(() => {
                const canvas = this.doc.createElement('canvas');
                canvas.width = MEASURE_SIZE;
                canvas.height = MEASURE_SIZE;
                canvas.style.cssText = `position: fixed; left: 0; top: 0; width: ${MEASURE_SIZE}px; height: ${MEASURE_SIZE}px; z-index: 9999; display: none;`;
                this.doc.body.appendChild(canvas);
                const ctx = canvas.getContext('2d');
                const img = new Image();
                img.onload = () => {
                    const { width, height } = img;
                    let drawWidth = MEASURE_SIZE;
                    let drawHeight = MEASURE_SIZE;
                    let offsetX = 0;
                    let offsetY = 0;
                    if (width < height) {
                        drawHeight = height * (MEASURE_SIZE / width);
                        offsetY = -(drawHeight - drawWidth) / 2;
                    }
                    else {
                        drawWidth = width * (MEASURE_SIZE / height);
                        offsetX = -(drawWidth - drawHeight) / 2;
                    }
                    try {
                        ctx.drawImage(img, offsetX, offsetY, drawWidth, drawHeight);
                    }
                    catch { }
                    const dataURL = canvas.toDataURL();
                    this.doc.body.removeChild(canvas);
                    resolve(dataURL);
                };
                img.src = window.URL.createObjectURL(file);
            });
        });
    }
    genThumb() {
        if (!this.platform.isBrowser) {
            return;
        }
        const win = window;
        if (!this.showPic ||
            typeof document === 'undefined' ||
            typeof win === 'undefined' ||
            !win.FileReader ||
            !win.File) {
            return;
        }
        this.list
            .filter(file => file.originFileObj instanceof File && file.thumbUrl === undefined)
            .forEach(file => {
            file.thumbUrl = '';
            (this.previewFile ? this.previewFile(file).toPromise() : this.previewImage(file.originFileObj)).then(dataUrl => {
                file.thumbUrl = dataUrl;
                this.detectChanges();
            });
        });
    }
    showDownload(file) {
        return !!(this.icons.showDownloadIcon && file.status === 'done');
    }
    fixData() {
        this.list.forEach(file => {
            file.isUploading = file.status === 'uploading';
            file.message = this.genErr(file);
            file.linkProps = typeof file.linkProps === 'string' ? JSON.parse(file.linkProps) : file.linkProps;
            file.isImageUrl = this.previewIsImage ? this.previewIsImage(file) : this.isImageUrl(file);
            file.iconType = this.getIconType(file);
            file.showDownload = this.showDownload(file);
        });
    }
    handlePreview(file, e) {
        if (!this.onPreview) {
            return;
        }
        e.preventDefault();
        return this.onPreview(file);
    }
    handleRemove(file, e) {
        e.preventDefault();
        if (this.onRemove) {
            this.onRemove(file);
        }
        return;
    }
    handleDownload(file) {
        if (typeof this.onDownload === 'function') {
            this.onDownload(file);
        }
        else if (file.url) {
            window.open(file.url);
        }
    }
    get isPictureCard() {
        return this.listType === 'picture-card';
    }
    detectChanges() {
        this.fixData();
        this.cdr.detectChanges();
    }
    ngOnChanges() {
        this.fixData();
        this.genThumb();
    }
}
TDSUploadListComponent.ɵfac = function TDSUploadListComponent_Factory(t) { return new (t || TDSUploadListComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(i0.ElementRef)); };
TDSUploadListComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TDSUploadListComponent, selectors: [["tds-upload-list"]], hostVars: 12, hostBindings: function TDSUploadListComponent_HostBindings(rf, ctx) { if (rf & 2) {
        i0.ɵɵclassProp("tds-upload-list-rtl", ctx.dir === "rtl")("tds-upload-list-text", ctx.listType === "text")("tds-upload-list-picture", ctx.listType === "picture")("tds-upload-list-picture-card", ctx.listType === "picture-card")("flex", ctx.listType === "picture-card")("flex-nowrap", ctx.listType === "picture-card");
    } }, inputs: { locale: "locale", listType: "listType", items: "items", icons: "icons", onPreview: "onPreview", onRemove: "onRemove", onDownload: "onDownload", previewFile: "previewFile", previewIsImage: "previewIsImage", iconRender: "iconRender", dir: "dir" }, exportAs: ["tdsUploadList"], features: [i0.ɵɵNgOnChangesFeature], decls: 1, vars: 1, consts: [[3, "class", "ngClass", 4, "ngFor", "ngForOf"], [3, "ngClass"], ["tds-tooltip", "", 3, "ngClass", "tooltipTitle"], ["icon", ""], ["iconNode", ""], ["removeIcon", ""], ["downloadIcon", ""], ["downloadOrDelete", ""], ["preview", ""], [1, "tds-upload-list-item-info", 3, "ngClass"], [1, "tds-upload-span", 3, "ngClass"], [3, "ngTemplateOutlet"], ["class", "tds-upload-list-item-actions hidden rounded  group-hover:flex absolute   justify-center inset-0 items-center bg-black bg-opacity-40", 4, "ngIf"], ["class", "tds-upload-list-item-progress", 3, "ngClass", 4, "ngIf"], [3, "ngSwitch"], ["class", "tds-upload-list-item-thumbnail", 3, "tds-upload-list-item-file", 4, "ngSwitchCase"], ["class", "tds-upload-list-item-thumbnail", "target", "_blank", "rel", "noopener noreferrer", 3, "ngClass", "tds-upload-list-item-file", "href", "click", 4, "ngSwitchCase"], ["class", "tds-upload-text-icon flex items-center", 4, "ngSwitchDefault"], ["noImageThumbTpl", ""], [1, "tds-upload-list-item-thumbnail"], [3, "ngTemplateOutlet", "ngTemplateOutletContext"], ["target", "_blank", "rel", "noopener noreferrer", 1, "tds-upload-list-item-thumbnail", 3, "ngClass", "href", "click"], ["class", "tds-upload-list-item-image rounded object-cover", 3, "src", "ngClass", 4, "ngIf", "ngIfElse"], [1, "tds-upload-list-item-image", "rounded", "object-cover", 3, "src", "ngClass"], [1, "tds-upload-text-icon", "flex", "items-center"], [4, "ngIf", "ngIfElse"], ["customIconRender", ""], ["iconNodeFileIcon", ""], [4, "ngSwitchCase"], [4, "ngSwitchDefault"], ["class", "tdsi-attached-file-fill  text-base leading-4 mr-2", 4, "ngIf"], ["class", "w-3 h-3  mr-2", 4, "ngIf"], [1, "tdsi-attached-file-fill", "text-base", "leading-4", "mr-2"], [1, "w-3", "h-3", "mr-2"], [1, "tdsi-warning-fill", "text-xl", "leading-5", "mb-6"], ["class", "tds-upload-list-item-card-actions-btn flex", 3, "click", 4, "ngIf"], [1, "tds-upload-list-item-card-actions-btn", "flex", 3, "click"], [1, "flex", "items-center"], [1, "tdsi-close-fill", "text-base", "leading-4", 3, "ngClass"], ["class", "tds-upload-list-item-card-actions-btn mr-2", 3, "click", 4, "ngIf"], [1, "tds-upload-list-item-card-actions-btn", "mr-2", 3, "click"], [1, "tdsi-download-fill", "text-base", "leading-4", 3, "ngClass"], [3, "class", 4, "ngIf"], ["target", "_blank", "rel", "noopener noreferrer", "class", "tds-upload-list-item-name flex-auto hidden", 3, "ngClass", "href", "click", 4, "ngIf"], ["class", "tds-upload-list-item-name text-body-2 font-regular flex-auto ", 3, "ngClass", "click", 4, "ngIf"], ["target", "_blank", "rel", "noopener noreferrer", 1, "tds-upload-list-item-name", "flex-auto", "hidden", 3, "ngClass", "href", "click"], [1, "tds-upload-list-item-name", "text-body-2", "font-regular", "flex-auto", 3, "ngClass", "click"], [1, "tds-upload-list-item-actions", "hidden", "rounded", "group-hover:flex", "absolute", "justify-center", "inset-0", "items-center", "bg-black", "bg-opacity-40"], ["class", "flex mr-2", "target", "_blank", "rel", "noopener noreferrer", 3, "href", "ngStyle", "click", 4, "ngIf"], [4, "ngIf"], ["target", "_blank", "rel", "noopener noreferrer", 1, "flex", "mr-2", 3, "href", "ngStyle", "click"], [1, "tdsi-eye-open-fill", "text-base", "leading-4", "text-white"], [1, "tds-upload-list-item-progress", 3, "ngClass"], ["type", "line", 3, "percent", "showInfo", "strokeWidth"]], template: function TDSUploadListComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵtemplate(0, TDSUploadListComponent_div_0_Template, 20, 31, "div", 0);
    } if (rf & 2) {
        i0.ɵɵproperty("ngForOf", ctx.list);
    } }, directives: [i2.NgForOf, i2.NgClass, i3.TDSTooltipDirective, i2.NgSwitch, i2.NgSwitchCase, i2.NgTemplateOutlet, i2.NgIf, i2.NgSwitchDefault, i4.TDSProgressSpinnerComponent, i2.NgStyle, i5.TDSProgressComponent], encapsulation: 2, data: { animation: [
            trigger('itemState', [
                transition(':enter', [
                    style({ height: '0', width: '0', opacity: 0 }),
                    animate(150, style({ height: '*', width: '*', opacity: 1 }))
                ]),
                transition(':leave', [animate(150, style({ height: '0', width: '0', opacity: 0 }))])
            ])
        ] }, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSUploadListComponent, [{
        type: Component,
        args: [{ selector: 'tds-upload-list', exportAs: 'tdsUploadList', animations: [
                    trigger('itemState', [
                        transition(':enter', [
                            style({ height: '0', width: '0', opacity: 0 }),
                            animate(150, style({ height: '*', width: '*', opacity: 1 }))
                        ]),
                        transition(':leave', [animate(150, style({ height: '0', width: '0', opacity: 0 }))])
                    ])
                ], host: {
                    '[class.tds-upload-list-rtl]': `dir === 'rtl'`,
                    '[class.tds-upload-list-text]': `listType === 'text'`,
                    '[class.tds-upload-list-picture]': `listType === 'picture'`,
                    '[class.tds-upload-list-picture-card]': `listType === 'picture-card'`,
                    '[class.flex]': `listType === 'picture-card'`,
                    '[class.flex-nowrap]': `listType === 'picture-card'`
                }, preserveWhitespaces: false, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: "<div *ngFor=\"let file of list\" class=\"tds-upload-list-{{ listType }}-container mt-2.5\" \r\n[ngClass]=\"{'h-28 w-28  mr-2.5 flex justify-center items-center relative group ':isPictureCard,\r\n'border-dashed border-neutral-2-200 dark:border-d-neutral-2-200 border rounded': file.status == 'uploading' && isPictureCard\r\n}\">\r\n  <div class=\"tds-upload-list-item relative tds-upload-list-item-{{ file.status }} text-{{file.status != 'done' ?file.status:'success' }}-500 tds-upload-list-item-list-type-{{ listType }}  \"\r\n   [ngClass]=\"{'bg-neutral-3-50 rounded dark:bg-d-neutral-3-200':!isPictureCard,'w-full h-full flex justify-center items-center relative':isPictureCard && file.status !=='uploading',\r\n   'border-error-300 border rounded': file.status == 'error' && isPictureCard }\"\r\n    [attr.data-key]=\"file.key\" @itemState tds-tooltip [tooltipTitle]=\"file.status === 'error' ? file.message : null\">\r\n    <ng-template #icon>\r\n      <ng-container [ngSwitch]=\"file.iconType\">\r\n        <div *ngSwitchCase=\"'uploading'\" class=\"tds-upload-list-item-thumbnail\"\r\n          [class.tds-upload-list-item-file]=\"!file.isUploading\">\r\n          <ng-template [ngTemplateOutlet]=\"iconNode\" [ngTemplateOutletContext]=\"{ $implicit: file }\"></ng-template>\r\n        </div>\r\n        <a *ngSwitchCase=\"'thumbnail'\" class=\"tds-upload-list-item-thumbnail\" [ngClass]=\"{'w-12 h-12 mr-2':!isPictureCard , 'h-28 w-28':isPictureCard}\"\r\n          [class.tds-upload-list-item-file]=\"!file.isImageUrl\" target=\"_blank\" rel=\"noopener noreferrer\"\r\n          [href]=\"file.url || file.thumbUrl\" (click)=\"handlePreview(file, $event)\">\r\n          <img *ngIf=\"file.isImageUrl; else noImageThumbTpl\" class=\"tds-upload-list-item-image rounded object-cover\"\r\n            [src]=\"file.thumbUrl || file.url\" [attr.alt]=\"file.name\" [ngClass]=\"{'h-28 w-28':isPictureCard}\"/>\r\n        </a>\r\n        <div *ngSwitchDefault class=\"tds-upload-text-icon flex items-center\">\r\n          <ng-template [ngTemplateOutlet]=\"iconNode\" [ngTemplateOutletContext]=\"{ $implicit: file }\"></ng-template>\r\n        </div>\r\n      </ng-container>\r\n      <ng-template #noImageThumbTpl>\r\n        <ng-template [ngTemplateOutlet]=\"iconNode\" [ngTemplateOutletContext]=\"{ $implicit: file }\"></ng-template>\r\n      </ng-template>\r\n    </ng-template>\r\n    <ng-template #iconNode let-file>\r\n      <ng-container *ngIf=\"!iconRender; else customIconRender\">\r\n        <ng-container [ngSwitch]=\"listType\">\r\n          <ng-container *ngSwitchCase=\"'picture'\">\r\n            <ng-container *ngIf=\"file.isUploading; else iconNodeFileIcon\">\r\n              <!-- <i nz-icon type=\"loading\"></i> -->\r\n            </ng-container>\r\n          </ng-container>\r\n          <ng-container *ngSwitchCase=\"'picture-card'\">\r\n            <ng-container *ngIf=\"file.isUploading; else iconNodeFileIcon\">\r\n              {{ locale.uploading }}\r\n            </ng-container>\r\n          </ng-container>\r\n          <ng-container *ngSwitchDefault>\r\n            <i *ngIf=\"!file.isUploading\"  class=\"tdsi-attached-file-fill  text-base leading-4 mr-2\"></i>\r\n            <tds-spinner *ngIf=\"file.isUploading\"  class=\"w-3 h-3  mr-2\"></tds-spinner>\r\n          </ng-container>\r\n          \r\n        </ng-container>\r\n      </ng-container>\r\n      <ng-template #customIconRender [ngTemplateOutlet]=\"iconRender\" [ngTemplateOutletContext]=\"{ $implicit: file }\">\r\n      </ng-template>\r\n      <ng-template #iconNodeFileIcon>\r\n        <!-- <i  [type]=\"file.isImageUrl ? 'picture' : 'file'\" nzTheme=\"twotone\"></i> -->\r\n        <span class=\"tdsi-warning-fill text-xl leading-5 mb-6\"></span>\r\n      </ng-template>\r\n    </ng-template>\r\n    <ng-template #removeIcon>\r\n      <button (click)=\"handleRemove(file, $event)\" [attr.title]=\"locale.removeFile\"\r\n        class=\"tds-upload-list-item-card-actions-btn flex\" *ngIf=\"icons.showRemoveIcon\">\r\n        <span class=\"flex items-center\">\r\n          <i class=\"tdsi-close-fill text-base leading-4 \" [ngClass]=\"{'text-white':isPictureCard,'text-neutral-1-500 dark:text-d-neutral-1-500':!isPictureCard}\"></i>\r\n        </span>\r\n      </button>\r\n    </ng-template>\r\n    <ng-template #downloadIcon>\r\n      <button *ngIf=\"file.showDownload\" (click)=\"handleDownload(file)\" [attr.title]=\"locale.downloadFile\"\r\n        class=\"tds-upload-list-item-card-actions-btn mr-2\">\r\n        <span class=\"flex items-center\">\r\n          <i class=\"tdsi-download-fill text-base leading-4\" [ngClass]=\"{'text-white':isPictureCard,'text-neutral-1-500 dark:text-d-neutral-1-500':!isPictureCard}\"></i>\r\n        </span>\r\n      </button>\r\n    </ng-template>\r\n    <ng-template #downloadOrDelete>\r\n      <span *ngIf=\"listType !== 'picture-card'\"\r\n        class=\"tds-upload-list-item-card-actions {{ listType === 'picture' ? 'picture' : '' }} flex\">\r\n        <ng-template [ngTemplateOutlet]=\"downloadIcon\"></ng-template>\r\n        <ng-template [ngTemplateOutlet]=\"removeIcon\"></ng-template>\r\n      </span>\r\n    </ng-template>\r\n    <ng-template #preview>\r\n      <a *ngIf=\"file.url\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"tds-upload-list-item-name flex-auto hidden\" [ngClass]=\"{'hidden':isPictureCard && file.status !== 'error' }\"\r\n        [attr.title]=\"file.name\" [href]=\"file.url\" [attr.download]=\"file.linkProps && file.linkProps.download\"\r\n        (click)=\"handlePreview(file, $event)\">\r\n        {{ file.name }} \r\n      </a>     \r\n      <span *ngIf=\"!file.url\" class=\"tds-upload-list-item-name text-body-2 font-regular flex-auto \" [attr.title]=\"file.name\" [ngClass]=\"{'hidden':isPictureCard && (file.isUploading || file.iconType =='thumbnail') }\"\r\n        (click)=\"handlePreview(file, $event)\">\r\n        {{ file.name }} \r\n      </span>\r\n      <ng-template [ngTemplateOutlet]=\"downloadOrDelete\"></ng-template>\r\n    </ng-template>\r\n    <div class=\"tds-upload-list-item-info \" [ngClass]=\"{'h-full p-1':!isPictureCard,'text-center':isPictureCard}\">\r\n      <span class=\"tds-upload-span \" [ngClass]=\"{'flex items-center':!isPictureCard}\">\r\n        <ng-template [ngTemplateOutlet]=\"icon\"></ng-template>\r\n        <ng-template [ngTemplateOutlet]=\"preview\"></ng-template>\r\n      </span>\r\n    </div>\r\n    <span *ngIf=\"listType === 'picture-card' && !file.isUploading\" class=\"tds-upload-list-item-actions hidden rounded  group-hover:flex absolute   justify-center inset-0 items-center bg-black bg-opacity-40\"\r\n    >\r\n      <a class=\"flex mr-2\" *ngIf=\"icons.showPreviewIcon\" [href]=\"file.url || file.thumbUrl\" target=\"_blank\" rel=\"noopener noreferrer\"\r\n        [attr.title]=\"locale.previewFile\"\r\n        [ngStyle]=\"!(file.url || file.thumbUrl) ? { opacity: 0.5, 'pointer-events': 'none' } : null\"\r\n        (click)=\"handlePreview(file, $event)\">\r\n        <i class=\"tdsi-eye-open-fill text-base leading-4 text-white\"></i>\r\n      </a>\r\n      <ng-container *ngIf=\"file.status === 'done'\">\r\n        <ng-template [ngTemplateOutlet]=\"downloadIcon\"></ng-template>\r\n      </ng-container>\r\n      <ng-template [ngTemplateOutlet]=\"removeIcon\"></ng-template>\r\n    </span>\r\n    <div *ngIf=\"file.isUploading\" class=\"tds-upload-list-item-progress\" [ngClass]=\"{'mt-6':isPictureCard}\">\r\n      <tds-progress [percent]=\"file.percent!\" type=\"line\" [showInfo]=\"false\" [strokeWidth]=\"2\"></tds-progress>\r\n    </div>\r\n  </div>\r\n</div>" }]
    }], function () { return [{ type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{
                type: Inject,
                args: [DOCUMENT]
            }] }, { type: i0.NgZone }, { type: i1.Platform }, { type: i0.ElementRef }]; }, { locale: [{
            type: Input
        }], listType: [{
            type: Input
        }], items: [{
            type: Input
        }], icons: [{
            type: Input
        }], onPreview: [{
            type: Input
        }], onRemove: [{
            type: Input
        }], onDownload: [{
            type: Input
        }], previewFile: [{
            type: Input
        }], previewIsImage: [{
            type: Input
        }], iconRender: [{
            type: Input
        }], dir: [{
            type: Input
        }] }); })();
//# sourceMappingURL=data:application/json;base64,