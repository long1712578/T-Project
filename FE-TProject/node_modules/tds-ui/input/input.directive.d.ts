import { Direction, Directionality } from '@angular/cdk/bidi';
import { BooleanInput } from '@angular/cdk/coercion';
import { ElementRef, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChanges } from '@angular/core';
import { NgControl } from '@angular/forms';
import { Subject } from 'rxjs';
import { ButtonSize } from 'tds-ui/core/config';
import * as i0 from "@angular/core";
export declare class TDSInputDirective implements OnChanges, OnInit, OnDestroy {
    ngControl: NgControl;
    private directionality;
    static ngAcceptInputType_disabled: BooleanInput;
    static ngAcceptInputType_tdsBorderless: BooleanInput;
    tdsBorderless: boolean;
    tdsSize: ButtonSize;
    get disabled(): boolean;
    set disabled(value: boolean);
    _disabled: boolean;
    disabled$: Subject<boolean>;
    dir: Direction;
    private destroy$;
    constructor(ngControl: NgControl, renderer: Renderer2, elementRef: ElementRef, directionality: Directionality);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSInputDirective, [{ optional: true; self: true; }, null, null, { optional: true; }]>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<TDSInputDirective, "input[tds-input],textarea[tds-input]", ["tdsinput"], { "tdsBorderless": "tdsBorderless"; "tdsSize": "tdsSize"; "disabled": "disabled"; }, {}, never>;
}
//# sourceMappingURL=input.directive.d.ts.map