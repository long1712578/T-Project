import { Direction, Directionality } from '@angular/cdk/bidi';
import { BooleanInput } from '@angular/cdk/coercion';
import { ChangeDetectorRef, ElementRef, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';
import { TDSConfigKey, TDSConfigService } from 'tds-ui/core/config';
import { TDSSafeAny } from 'tds-ui/shared/utility';
import { TDSImageGroupComponent } from './image-group.component';
import { TDSImageService } from './image.service';
import * as i0 from "@angular/core";
export declare type ImageStatusType = 'error' | 'loading' | 'normal';
export declare class TDSImageDirective implements OnInit, OnChanges, OnDestroy {
    private document;
    tdsConfigService: TDSConfigService;
    private elementRef;
    private tdsImageService;
    protected cdr: ChangeDetectorRef;
    private parentGroup;
    private directionality;
    readonly _TDSModuleName: TDSConfigKey;
    static ngAcceptInputType_disablePreview: BooleanInput;
    tdsSrc: string;
    srcset: string;
    disablePreview: boolean;
    fallback: string | null;
    placeholder: string | null;
    dir?: Direction;
    backLoadImage: HTMLImageElement;
    private status;
    private destroy$;
    get previewable(): boolean;
    constructor(document: TDSSafeAny, tdsConfigService: TDSConfigService, elementRef: ElementRef, tdsImageService: TDSImageService, cdr: ChangeDetectorRef, parentGroup: TDSImageGroupComponent, directionality: Directionality);
    ngOnInit(): void;
    ngOnDestroy(): void;
    onPreview(): void;
    getElement(): ElementRef<HTMLImageElement>;
    ngOnChanges(changes: SimpleChanges): void;
    /**
     * use internal Image object handle fallback & placeholder
     *
     * @private
     */
    private backLoad;
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSImageDirective, [null, null, null, null, null, { optional: true; }, { optional: true; }]>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<TDSImageDirective, "img[tds-image]", ["tdsImage"], { "tdsSrc": "tdsSrc"; "srcset": "srcset"; "disablePreview": "disablePreview"; "fallback": "fallback"; "placeholder": "placeholder"; }, {}, never>;
}
//# sourceMappingURL=image.directive.d.ts.map