import { ChangeDetectorRef, ElementRef, NgZone, OnChanges, OnDestroy, OnInit, SimpleChanges, TemplateRef } from "@angular/core";
import { TDSButtonColor, TDSThemePalette } from "tds-ui/shared/common";
import { ButtonSize } from "tds-ui/core/config";
import { TDSButtonGroupComponent } from "./button-group.component";
import * as i0 from "@angular/core";
export declare class TDSButtonBase implements OnDestroy, OnChanges, OnInit {
    ngZone: NgZone;
    elementRef: ElementRef;
    cdr: ChangeDetectorRef;
    _buttonGroup: TDSButtonGroupComponent;
    loading: boolean;
    color: TDSButtonColor;
    size: ButtonSize;
    loadingTemplate?: string | TemplateRef<void>;
    disabled: boolean;
    rounded: string;
    cssClass: string;
    spinerColor: TDSThemePalette;
    loadingCss: string;
    private destroy$;
    constructor(ngZone: NgZone, elementRef: ElementRef, cdr: ChangeDetectorRef, _buttonGroup: TDSButtonGroupComponent);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    getClassCssLoading(): string;
    getClassCssDisabled(): string;
    getClassCssActive(): string;
    defaultClassCss(): string;
    getClassCssBySize(size: ButtonSize): string;
    getClassCssButtonGroup(): string;
    buildCss(): void;
    builClassCssButton(): string;
    buildSpinerColor(): TDSThemePalette;
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSButtonBase, [null, null, null, { optional: true; }]>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<TDSButtonBase, never, never, { "loading": "loading"; "color": "color"; "size": "size"; "loadingTemplate": "loadingTemplate"; "disabled": "disabled"; "rounded": "rounded"; }, {}, never>;
}
//# sourceMappingURL=button.base.d.ts.map