import { Overlay } from '@angular/cdk/overlay';
import { Injector, TemplateRef } from '@angular/core';
import { TDSSingletonService } from 'tds-ui/core/services';
import { TDSMNService } from 'tds-ui/message';
import { TDSNotificationContainerComponent } from './notification-container.component';
import { TDSNotificationDataOptions, TDSNotificationRef } from './typings';
import * as i0 from "@angular/core";
export declare class TDSNotificationService extends TDSMNService {
    protected container: TDSNotificationContainerComponent;
    protected componentPrefix: string;
    constructor(tdsSingletonService: TDSSingletonService, overlay: Overlay, injector: Injector);
    success(title: string, content: string, options?: TDSNotificationDataOptions): TDSNotificationRef;
    error(title: string, content: string, options?: TDSNotificationDataOptions): TDSNotificationRef;
    info(title: string, content: string, options?: TDSNotificationDataOptions): TDSNotificationRef;
    warning(title: string, content: string, options?: TDSNotificationDataOptions): TDSNotificationRef;
    blank(title: string, content: string, options?: TDSNotificationDataOptions): TDSNotificationRef;
    create(type: 'success' | 'info' | 'warning' | 'error' | 'blank' | string, title: string, content: string, options?: TDSNotificationDataOptions): TDSNotificationRef;
    template(template: TemplateRef<{}>, options?: TDSNotificationDataOptions): TDSNotificationRef;
    protected generateMessageId(): string;
    private createInstance;
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSNotificationService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<TDSNotificationService>;
}
//# sourceMappingURL=notification.service.d.ts.map