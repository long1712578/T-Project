import { Direction, Directionality } from '@angular/cdk/bidi';
import { ChangeDetectorRef, ElementRef, EventEmitter, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChanges, TemplateRef } from '@angular/core';
import { ButtonSize } from "tds-ui/core/config";
import { PaginationItemRenderContext } from './pagination.types';
import { TDSPaginationI18nInterface } from 'tds-ui/i18n';
import { TDSSafeAny } from 'tds-ui/shared/utility';
import * as i0 from "@angular/core";
export declare class TDSPaginationSimpleComponent implements OnChanges, OnDestroy, OnInit {
    private cdr;
    private renderer;
    private elementRef;
    private directionality;
    template: TemplateRef<TDSSafeAny>;
    itemRender: TemplateRef<PaginationItemRenderContext> | null;
    disabled: boolean;
    locale: TDSPaginationI18nInterface;
    total: number;
    pageIndex: number;
    pageSize: number;
    size: ButtonSize;
    readonly pageIndexChange: EventEmitter<number>;
    lastIndex: number;
    isFirstIndex: boolean;
    isLastIndex: boolean;
    dir: Direction;
    private destroy$;
    constructor(cdr: ChangeDetectorRef, renderer: Renderer2, elementRef: ElementRef, directionality: Directionality);
    ngOnInit(): void;
    private updateRtlStyle;
    ngOnDestroy(): void;
    jumpToPageViaInput($event: Event): void;
    prePage(): void;
    nextPage(): void;
    onPageIndexChange(index: number): void;
    updateBindingValue(): void;
    ngOnChanges(changes: SimpleChanges): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSPaginationSimpleComponent, [null, null, null, { optional: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TDSPaginationSimpleComponent, "tds-pagination-simple", never, { "itemRender": "itemRender"; "disabled": "disabled"; "locale": "locale"; "total": "total"; "pageIndex": "pageIndex"; "pageSize": "pageSize"; "size": "size"; }, { "pageIndexChange": "pageIndexChange"; }, never, never>;
}
//# sourceMappingURL=pagination-simple.component.d.ts.map