import { Direction, Directionality } from '@angular/cdk/bidi';
import { ChangeDetectorRef, ElementRef, EventEmitter, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChanges, TemplateRef } from '@angular/core';
import { TDSSafeAny } from 'tds-ui/shared/utility';
import { ButtonSize } from "tds-ui/core/config";
import { TDSPaginationItemComponent } from './pagination-item.component';
import { PaginationItemRenderContext } from './pagination.types';
import { TDSPaginationI18nInterface } from 'tds-ui/i18n';
import * as i0 from "@angular/core";
export declare class TDSPaginationDefaultComponent implements OnChanges, OnDestroy, OnInit {
    private cdr;
    private renderer;
    private elementRef;
    private directionality;
    template: TemplateRef<TDSSafeAny>;
    size: ButtonSize;
    itemRender: TemplateRef<PaginationItemRenderContext> | null;
    showTotal: TemplateRef<{
        $implicit: number;
        range: [number, number];
    }> | null;
    disabled: boolean;
    locale: TDSPaginationI18nInterface;
    showSizeChanger: boolean;
    showQuickJumper: boolean;
    total: number;
    pageIndex: number;
    pageSize: number;
    pageSizeOptions: number[];
    showRefresh: boolean;
    bordered: boolean;
    readonly pageIndexChange: EventEmitter<number>;
    readonly pageSizeChange: EventEmitter<number>;
    readonly clickRefresh: EventEmitter<MouseEvent>;
    ranges: number[];
    listOfPageItem: Array<Partial<TDSPaginationItemComponent>>;
    dir: Direction;
    private destroy$;
    constructor(cdr: ChangeDetectorRef, renderer: Renderer2, elementRef: ElementRef, directionality: Directionality);
    ngOnInit(): void;
    private updateRtlStyle;
    ngOnDestroy(): void;
    jumpPage(index: number): void;
    jumpDiff(diff: number): void;
    trackByPageItem(_: number, value: Partial<TDSPaginationItemComponent>): string;
    onPageIndexChange(index: number): void;
    onPageSizeChange(size: number): void;
    getLastIndex(total: number, pageSize: number): number;
    buildIndexes(): void;
    getListOfPageItem(pageIndex: number, lastIndex: number): Array<Partial<TDSPaginationItemComponent>>;
    ngOnChanges(changes: SimpleChanges): void;
    onRefresh(e: MouseEvent): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSPaginationDefaultComponent, [null, null, null, { optional: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TDSPaginationDefaultComponent, "tds-pagination-default", never, { "size": "size"; "itemRender": "itemRender"; "showTotal": "showTotal"; "disabled": "disabled"; "locale": "locale"; "showSizeChanger": "showSizeChanger"; "showQuickJumper": "showQuickJumper"; "total": "total"; "pageIndex": "pageIndex"; "pageSize": "pageSize"; "pageSizeOptions": "pageSizeOptions"; "showRefresh": "showRefresh"; "bordered": "bordered"; }, { "pageIndexChange": "pageIndexChange"; "pageSizeChange": "pageSizeChange"; "clickRefresh": "clickRefresh"; }, never, never>;
}
//# sourceMappingURL=pagination-default.component.d.ts.map