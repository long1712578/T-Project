import { BidiModule } from '@angular/cdk/bidi';
import * as i3$1 from '@angular/cdk/overlay';
import { CdkOverlayOrigin, OverlayModule } from '@angular/cdk/overlay';
import { PlatformModule } from '@angular/cdk/platform';
import * as i3 from '@angular/common';
import { CommonModule } from '@angular/common';
import * as i0 from '@angular/core';
import { Injectable, ElementRef, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, Input, ViewChildren, ViewChild, ContentChildren, EventEmitter, Output, ContentChild, NgModule } from '@angular/core';
import { __decorate } from 'tslib';
import { BehaviorSubject, Subject, merge } from 'rxjs';
import { takeUntil, filter, startWith, switchMap, map, debounceTime, distinctUntilChanged } from 'rxjs/operators';
import { TDSHelperArray, TDSHelperObject, TDSHelperString, InputBoolean } from 'tds-ui/shared/utility';
import * as i2 from '@angular/router';
import { NavigationEnd, RouterLink, RouterLinkWithHref, RouterModule } from '@angular/router';
import { menuCollapseMotion, slideMotion } from 'tds-ui/core/animation';
import * as i4 from 'tds-ui/badges';
import { TDSBadgeModule } from 'tds-ui/badges';
import * as i5 from 'tds-ui/tag';
import { TDSTagModule } from 'tds-ui/tag';
import { POSITION_MAP, getPlacementName } from 'tds-ui/core/overlay';
import * as i5$1 from 'tds-ui/tooltip';
import { TDSToolTipModule } from 'tds-ui/tooltip';
import * as i3$2 from '@angular/cdk/scrolling';
import { TDSOutletModule } from 'tds-ui/core/outlet';

class TDSMenuService {
    constructor() {
        this.mode$ = new BehaviorSubject('dark');
        this.isChildSubMenuOpen$ = new BehaviorSubject(false);
        /** all descendant menu click **/
        this.descendantMenuItemClick$ = new Subject();
        this.groupMenuOpen$ = new BehaviorSubject(null);
    }
    onDescendantMenuItemClick(menu) {
        this.descendantMenuItemClick$.next(menu);
    }
    onModeChange(mode) {
        this.mode$.next(mode);
    }
}
TDSMenuService.ɵfac = function TDSMenuService_Factory(t) { return new (t || TDSMenuService)(); };
TDSMenuService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: TDSMenuService, factory: TDSMenuService.ɵfac });
(function () {
    (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSMenuService, [{
            type: Injectable
        }], null, null);
})();

function TDSMenuItemComponent_a_6_tds_badge_3_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelement(0, "tds-badge", 13);
    }
    if (rf & 2) {
        const ctx_r4 = i0.ɵɵnextContext(2);
        i0.ɵɵproperty("standalone", true)("count", ctx_r4.item.badge.count)("tdsStyle", ctx_r4.item.badge.tdsStyle);
    }
}
function TDSMenuItemComponent_a_6_tds_tag_4_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "tds-tag", 14);
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const ctx_r5 = i0.ɵɵnextContext(2);
        i0.ɵɵproperty("status", ctx_r5.item.tag.status)("rounded", ctx_r5.item.tag.rounded)("type", ctx_r5.item.tag.type);
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate(ctx_r5.item.tag.text);
    }
}
const _c0$3 = function (a0) { return { "cursor-pointer": a0 }; };
const _c1$3 = function (a0) { return [a0]; };
function TDSMenuItemComponent_a_6_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "a", 10)(1, "span");
        i0.ɵɵtext(2);
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(3, TDSMenuItemComponent_a_6_tds_badge_3_Template, 1, 3, "tds-badge", 11);
        i0.ɵɵtemplate(4, TDSMenuItemComponent_a_6_tds_tag_4_Template, 2, 4, "tds-tag", 12);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const ctx_r0 = i0.ɵɵnextContext();
        i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction1(12, _c0$3, !ctx_r0.item.disabled))("routerLink", i0.ɵɵpureFunction1(14, _c1$3, ctx_r0.item.link))("queryParams", ctx_r0.item.linkProps == null ? null : ctx_r0.item.linkProps.queryParams)("fragment", ctx_r0.item.linkProps == null ? null : ctx_r0.item.linkProps.fragment)("queryParamsHandling", ctx_r0.item.linkProps == null ? null : ctx_r0.item.linkProps.queryParamsHandling)("preserveFragment", ctx_r0.item.linkProps == null ? null : ctx_r0.item.linkProps.preserveFragment)("skipLocationChange", ctx_r0.item.linkProps == null ? null : ctx_r0.item.linkProps.skipLocationChange)("replaceUrl", ctx_r0.item.linkProps == null ? null : ctx_r0.item.linkProps.replaceUrl)("state", ctx_r0.item.linkProps == null ? null : ctx_r0.item.linkProps.state);
        i0.ɵɵadvance(2);
        i0.ɵɵtextInterpolate(ctx_r0.item.name);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r0.item.badge);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r0.item.tag);
    }
}
function TDSMenuItemComponent_span_7_tds_badge_3_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelement(0, "tds-badge", 13);
    }
    if (rf & 2) {
        const ctx_r6 = i0.ɵɵnextContext(2);
        i0.ɵɵproperty("standalone", true)("count", ctx_r6.item.badge.count)("tdsStyle", ctx_r6.item.badge.tdsStyle);
    }
}
function TDSMenuItemComponent_span_7_tds_tag_4_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "tds-tag", 14);
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const ctx_r7 = i0.ɵɵnextContext(2);
        i0.ɵɵproperty("status", ctx_r7.item.tag.status)("rounded", ctx_r7.item.tag.rounded)("type", ctx_r7.item.tag.type);
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate(ctx_r7.item.tag.text);
    }
}
function TDSMenuItemComponent_span_7_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "span", 15)(1, "span");
        i0.ɵɵtext(2);
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(3, TDSMenuItemComponent_span_7_tds_badge_3_Template, 1, 3, "tds-badge", 11);
        i0.ɵɵtemplate(4, TDSMenuItemComponent_span_7_tds_tag_4_Template, 2, 4, "tds-tag", 12);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const ctx_r1 = i0.ɵɵnextContext();
        i0.ɵɵadvance(2);
        i0.ɵɵtextInterpolate(ctx_r1.item.name);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r1.item.badge);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r1.item.tag);
    }
}
const _c2$3 = function (a0, a1, a2, a3) { return { "rotate-90 ": a0, "rotate-0": a1, "dark:text-d-neutral-1-900 text-neutral-1-900": a2, "dark:text-d-neutral-1-400 text-neutral-1-500": a3 }; };
function TDSMenuItemComponent_div_8_span_1_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelement(0, "span", 18);
    }
    if (rf & 2) {
        const ctx_r8 = i0.ɵɵnextContext(2);
        i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction4(1, _c2$3, ctx_r8.item.isOpen, !ctx_r8.item.isOpen, ctx_r8.isSelected, !ctx_r8.isSelected));
    }
}
function TDSMenuItemComponent_div_8_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 16);
        i0.ɵɵtemplate(1, TDSMenuItemComponent_div_8_span_1_Template, 1, 6, "span", 17);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const ctx_r2 = i0.ɵɵnextContext();
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r2.hasListChild && !ctx_r2.hasAllHidden);
    }
}
function TDSMenuItemComponent_div_9_ng_template_2_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelement(0, "tds-menu-item", 22);
    }
    if (rf & 2) {
        const menu_r10 = ctx.$implicit;
        const ctx_r9 = i0.ɵɵnextContext(2);
        i0.ɵɵproperty("options", ctx_r9.options)("item", menu_r10)("isSelected", menu_r10.isSelected);
    }
}
const _c3$3 = function (a0, a1) { return { "pl-10 pr-2.5 ": a0, "pl-3": a1 }; };
function TDSMenuItemComponent_div_9_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 19)(1, "div", 20);
        i0.ɵɵtemplate(2, TDSMenuItemComponent_div_9_ng_template_2_Template, 1, 3, "ng-template", 21);
        i0.ɵɵelementEnd()();
    }
    if (rf & 2) {
        const ctx_r3 = i0.ɵɵnextContext();
        i0.ɵɵproperty("@menuCollapseMotion", ctx_r3.item.isOpen && !ctx_r3.hasAllHidden ? "expanded" : "collapsed")("ngClass", i0.ɵɵpureFunction2(3, _c3$3, ctx_r3.parentIsGroup, !ctx_r3.parentIsGroup));
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngForOf", ctx_r3.item.listChild);
    }
}
const _c4$3 = function (a0, a1, a2) { return { "h-6 w-6": a0, "w-2": a1, "pl-1": a2 }; };
const _c5$2 = function (a0) { return { "invisible": a0 }; };
const _c6$2 = function (a0) { return { "text-neutral-1-500 dark:text-d-neutral-1-400": a0 }; };
const _c7$1 = function (a0, a1) { return { "dark:text-d-neutral-1-900 dark:font-regular text-neutral-1-900 font-semibold": a0, "dark:text-d-neutral-1-400 text-neutral-1-500": a1 }; };
class TDSMenuItemComponent {
    constructor(_cdr, tdsMenuService, routerLink, routerLinkWithHref, router) {
        this._cdr = _cdr;
        this.tdsMenuService = tdsMenuService;
        this.routerLink = routerLink;
        this.routerLinkWithHref = routerLinkWithHref;
        this.router = router;
        this.destroy$ = new Subject();
        this.showIcon = true;
        this.isSelected = false;
        this.parentIsGroup = false;
        this.inlineCollapsed = false;
        this.options = {
            background: 'bg-white dark:bg-d-neutral-3-200',
            backgroundItem: 'bg-white dark:bg-d-neutral-3-200',
            backgroundItemSelected: 'bg-white dark:bg-d-neutral-3-200',
            backgroundItemHover: 'dark:hover:bg-d-neutral-3-300  hover:bg-neutral-3-50'
        };
        this.selected$ = new Subject();
        this.isOpenPopup = false;
        this.cdkOverlayOrigin = null;
        this.IsActiveMatchOptions = {
            paths: "subset",
            matrixParams: "ignored",
            queryParams: "ignored",
            fragment: "ignored",
        };
        this.ngStyleItem = {};
        if (router) {
            this.router.events.pipe(takeUntil(this.destroy$), filter(e => e instanceof NavigationEnd)).subscribe(() => {
                this.updateRouterActive();
            });
        }
    }
    get uid() {
        return this.item ? this.item.uid : "";
    }
    ngOnInit() {
    }
    ngAfterViewInit() {
        this.listenItemChangeSelected();
    }
    ngOnChanges(changes) {
        if (changes['item']) {
            this._cdr.markForCheck();
        }
        if (changes.isSelected) {
            this.setSelectedState(this.isSelected);
        }
    }
    onClickItem(e) {
        if (this.item.disabled) {
            e.stopPropagation();
            e.preventDefault();
        }
        if (this.hasListChild) {
            this.item.isOpen = !this.item.isOpen;
        }
        else {
            if (this.hasLink) {
                this.p_NavigateByUrl();
            }
            this.tdsMenuService.onDescendantMenuItemClick(this);
        }
    }
    get hasListChild() {
        return TDSHelperArray.hasListValue(this.item.listChild);
    }
    get hasAllHidden() {
        var _a;
        let childs = (_a = this.item.listChild) === null || _a === void 0 ? void 0 : _a.find(f => { return !f.hidden; });
        return childs == undefined;
    }
    ngOnDestroy() {
        this.destroy$.next();
        this.destroy$.complete();
    }
    setSelectedState(value) {
        this.isSelected = value;
        this.item.isSelected = value;
        this.selected$.next(value);
        if (this.isSelected) {
            if (!this.item.isOpen) {
                this.item.isOpen = true;
            }
        }
        this.ngStyleItem = this.getStyleItem();
        this._cdr.markForCheck();
    }
    updateRouterActive() {
        if (this.hasListChild || !this.listOfRouterLink || !this.listOfRouterLinkWithHref || !this.router || !this.router.navigated) {
            return;
        }
        Promise.resolve().then(() => {
            const hasActiveLinks = this.hasActiveLinks();
            if (!this.hasListChild)
                if (this.isSelected !== hasActiveLinks) {
                    this.isSelected = hasActiveLinks;
                    this.setSelectedState(this.isSelected);
                }
        });
    }
    hasActiveLinks() {
        const isActiveCheckFn = this.isLinkActive(this.router);
        return ((this.routerLink && isActiveCheckFn(this.routerLink)) ||
            (this.routerLinkWithHref && isActiveCheckFn(this.routerLinkWithHref)) ||
            this.listOfRouterLink.some(isActiveCheckFn) ||
            this.listOfRouterLinkWithHref.some(isActiveCheckFn));
    }
    isLinkActive(router) {
        return (link) => router.isActive(link.urlTree, this.IsActiveMatchOptions);
    }
    setSelectedStateListChildren(uid) {
        if (TDSHelperArray.hasListValue(this.listItem)) {
            this.listItem.forEach(f => {
                f.setSelectedStateListChildren(uid);
            });
        }
        else {
            this.setSelectedState(uid === this.uid);
        }
    }
    get hasLink() {
        return !this.item.disabled && !this.hasListChild && TDSHelperObject.hasValue(this.item.link);
    }
    get hasIcon() {
        return this.item && TDSHelperString.hasValueString(this.item.icon);
    }
    listenItemChangeSelected() {
        if (this.listOfRouterLink)
            this.listOfRouterLink.changes.pipe(takeUntil(this.destroy$)).subscribe(() => this.updateRouterActive());
        if (this.listOfRouterLinkWithHref)
            this.listOfRouterLinkWithHref.changes.pipe(takeUntil(this.destroy$)).subscribe(() => this.updateRouterActive());
        if (TDSHelperArray.hasListValue(this.listItem)) {
            const listOfTDSMenuItemComponent = this.listItem;
            const changes = listOfTDSMenuItemComponent.changes;
            const mergedObservable = merge(...[changes, ...listOfTDSMenuItemComponent.map(menu => menu.selected$)]);
            changes
                .pipe(startWith(listOfTDSMenuItemComponent), switchMap(() => mergedObservable), startWith(true), map(() => listOfTDSMenuItemComponent.some(e => e.isSelected)), debounceTime(100), distinctUntilChanged(), takeUntil(this.destroy$))
                .subscribe(selected => {
                this.setSelectedState(selected);
            });
        }
        this.updateRouterActive();
    }
    setOpen(value) {
        if (this.item.isOpen != value) {
            this.item.isOpen = value;
            this._cdr.markForCheck();
        }
    }
    setOpenChildren(value) {
        if (this.listItem.length) {
            this.listItem.forEach(f => {
                f.setOpenChildren(value);
            });
            this.setOpen(value);
        }
        this._cdr.markForCheck();
    }
    getStyleItem() {
        return {
            // [`${this.options.backgroundItemSelected}`]: this.isSelected,
            ['h-0 invisible select-none']: this.item.hidden,
            [`pl-3 pr-2.5  ${this.options.backgroundItemHover}`]: this.parentIsGroup,
            [`cursor-pointer`]: !this.item.disabled,
            ['py-2.5']: !this.item.hidden && this.showIcon,
            ['py-2']: !this.item.hidden && !this.showIcon
        };
    }
    p_NavigateByUrl() {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j;
        if (!TDSHelperObject.hasValue(this.item.linkProps)) {
            (_a = this.router) === null || _a === void 0 ? void 0 : _a.navigateByUrl(this.item.link);
        }
        else {
            (_b = this.router) === null || _b === void 0 ? void 0 : _b.navigate([this.item.link], {
                queryParams: (_c = this.item.linkProps) === null || _c === void 0 ? void 0 : _c.queryParams,
                fragment: (_d = this.item.linkProps) === null || _d === void 0 ? void 0 : _d.fragment,
                queryParamsHandling: (_e = this.item.linkProps) === null || _e === void 0 ? void 0 : _e.queryParamsHandling,
                preserveFragment: (_f = this.item.linkProps) === null || _f === void 0 ? void 0 : _f.preserveFragment,
                skipLocationChange: (_g = this.item.linkProps) === null || _g === void 0 ? void 0 : _g.skipLocationChange,
                replaceUrl: (_h = this.item.linkProps) === null || _h === void 0 ? void 0 : _h.replaceUrl,
                state: (_j = this.item.linkProps) === null || _j === void 0 ? void 0 : _j.state
            });
        }
    }
}
TDSMenuItemComponent.ɵfac = function TDSMenuItemComponent_Factory(t) { return new (t || TDSMenuItemComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(TDSMenuService), i0.ɵɵdirectiveInject(i2.RouterLink, 8), i0.ɵɵdirectiveInject(i2.RouterLinkWithHref, 8), i0.ɵɵdirectiveInject(i2.Router, 8)); };
TDSMenuItemComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TDSMenuItemComponent, selectors: [["tds-menu-item"]], viewQuery: function TDSMenuItemComponent_Query(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵviewQuery(CdkOverlayOrigin, 7, ElementRef);
            i0.ɵɵviewQuery(TDSMenuItemComponent, 5);
            i0.ɵɵviewQuery(RouterLink, 5);
            i0.ɵɵviewQuery(RouterLinkWithHref, 5);
        }
        if (rf & 2) {
            let _t;
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cdkOverlayOrigin = _t.first);
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listItem = _t);
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listOfRouterLink = _t);
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listOfRouterLinkWithHref = _t);
        }
    }, hostAttrs: ["clas", "w-full flex flex-col box-border"], inputs: { showIcon: "showIcon", item: "item", isSelected: "isSelected", parentIsGroup: "parentIsGroup", inlineCollapsed: "inlineCollapsed", options: "options", isOpenPopup: "isOpenPopup" }, features: [i0.ɵɵNgOnChangesFeature], decls: 10, vars: 20, consts: [[1, "w-full", "flex", "items-center", "group", "rounded", 3, "ngClass", "click"], [1, "flex", "mr-2", "flex-row-reverse", "items-center", "justify-between", 3, "ngClass"], ["status", "primary", 1, "!flex", "flex-row-reverse", "items-center", "justify-center", 3, "ngClass"], [1, "flex-auto", "text-body-2", "dark:font-regular", "group-hover:text-d-neutral-1-900", 3, "ngClass"], [1, "w-full", "flex", "justify-between", "group-hover:text-neutral-1-900", "dark:group-hover:text-d-neutral-1-900", 3, "ngClass"], [1, "pr-2", "w-full"], ["class", "w-full flex items-center justify-between", "routerLinkActive", "", 3, "ngClass", "routerLink", "queryParams", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", 4, "ngIf"], ["class", "w-full flex items-center justify-between", 4, "ngIf"], ["class", "flex items-center", 4, "ngIf"], ["class", "w-full flex flex-col py-1", 3, "ngClass", 4, "ngIf"], ["routerLinkActive", "", 1, "w-full", "flex", "items-center", "justify-between", 3, "ngClass", "routerLink", "queryParams", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state"], [3, "standalone", "count", "tdsStyle", 4, "ngIf"], [3, "status", "rounded", "type", 4, "ngIf"], [3, "standalone", "count", "tdsStyle"], [3, "status", "rounded", "type"], [1, "w-full", "flex", "items-center", "justify-between"], [1, "flex", "items-center"], ["class", "text-base leading-4 flex items-center justify-center tdsi-arrow-right-line transform delay-100 duration-300", 3, "ngClass", 4, "ngIf"], [1, "text-base", "leading-4", "flex", "items-center", "justify-center", "tdsi-arrow-right-line", "transform", "delay-100", "duration-300", 3, "ngClass"], [1, "w-full", "flex", "flex-col", "py-1", 3, "ngClass"], [1, "w-full", "flex", "flex-col"], ["ngFor", "", 3, "ngForOf"], [3, "options", "item", "isSelected"]], template: function TDSMenuItemComponent_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelementStart(0, "div", 0);
            i0.ɵɵlistener("click", function TDSMenuItemComponent_Template_div_click_0_listener($event) { return ctx.onClickItem($event); });
            i0.ɵɵelementStart(1, "div", 1);
            i0.ɵɵelement(2, "tds-badge", 2);
            i0.ɵɵelementEnd();
            i0.ɵɵelementStart(3, "div", 3)(4, "div", 4)(5, "div", 5);
            i0.ɵɵtemplate(6, TDSMenuItemComponent_a_6_Template, 5, 16, "a", 6);
            i0.ɵɵtemplate(7, TDSMenuItemComponent_span_7_Template, 5, 3, "span", 7);
            i0.ɵɵelementEnd();
            i0.ɵɵtemplate(8, TDSMenuItemComponent_div_8_Template, 2, 1, "div", 8);
            i0.ɵɵelementEnd()()();
            i0.ɵɵtemplate(9, TDSMenuItemComponent_div_9_Template, 3, 6, "div", 9);
        }
        if (rf & 2) {
            i0.ɵɵproperty("ngClass", ctx.ngStyleItem);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction3(9, _c4$3, ctx.parentIsGroup && ctx.showIcon, !ctx.parentIsGroup || !ctx.showIcon, ctx.parentIsGroup && !ctx.showIcon));
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction1(13, _c5$2, !(ctx.isSelected && !ctx.hasListChild)));
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction1(15, _c6$2, !ctx.isSelected));
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction2(17, _c7$1, ctx.isSelected, !ctx.isSelected));
            i0.ɵɵadvance(2);
            i0.ɵɵproperty("ngIf", ctx.hasLink);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngIf", !ctx.hasLink);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngIf", ctx.hasListChild && !ctx.hasAllHidden);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngIf", ctx.hasListChild);
        }
    }, directives: [i3.NgClass, i4.TDSBadgeComponent, i3.NgIf, i2.RouterLinkWithHref, i2.RouterLinkActive, i5.TDSTagComponent, i3.NgForOf, TDSMenuItemComponent], styles: [""], encapsulation: 2, data: { animation: [menuCollapseMotion] }, changeDetection: 0 });
__decorate([
    InputBoolean()
], TDSMenuItemComponent.prototype, "parentIsGroup", void 0);
__decorate([
    InputBoolean()
], TDSMenuItemComponent.prototype, "inlineCollapsed", void 0);
(function () {
    (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSMenuItemComponent, [{
            type: Component,
            args: [{ selector: 'tds-menu-item', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, animations: [menuCollapseMotion], host: {
                        clas: "w-full flex flex-col box-border",
                    }, template: "<div class=\"w-full flex items-center group rounded\" [ngClass]=\"ngStyleItem\" (click)=\"onClickItem($event)\">\r\n    <div class=\" flex mr-2  flex-row-reverse items-center justify-between\"\r\n        [ngClass]=\"{'h-6 w-6':parentIsGroup && showIcon,'w-2':!parentIsGroup || !showIcon,'pl-1':parentIsGroup && !showIcon }\">\r\n        <tds-badge class=\"!flex flex-row-reverse items-center justify-center\"\r\n            [ngClass]=\"{'invisible':!(isSelected && !hasListChild)}\" status=\"primary\">\r\n        </tds-badge>\r\n\r\n    </div>\r\n    <div class=\"flex-auto  text-body-2  dark:font-regular group-hover:text-d-neutral-1-900\"\r\n        [ngClass]=\"{'text-neutral-1-500 dark:text-d-neutral-1-400':!isSelected}\">\r\n        <div class=\"w-full flex justify-between group-hover:text-neutral-1-900 dark:group-hover:text-d-neutral-1-900 \"\r\n            [ngClass]=\"{'dark:text-d-neutral-1-900 dark:font-regular text-neutral-1-900 font-semibold':isSelected,'dark:text-d-neutral-1-400 text-neutral-1-500':!isSelected}\">\r\n            <div class=\"pr-2 w-full\">\r\n                <a [ngClass]=\"{'cursor-pointer':!item.disabled}\" class=\"w-full flex items-center justify-between\"\r\n                    [routerLink]=\"[item.link]\" *ngIf=\"hasLink\" [queryParams]=\"item.linkProps?.queryParams\"\r\n                    [fragment]=\"item.linkProps?.fragment\" [queryParamsHandling]=\"item.linkProps?.queryParamsHandling\"\r\n                    [preserveFragment]=\"item.linkProps?.preserveFragment!\"\r\n                    [skipLocationChange]=\"item.linkProps?.skipLocationChange!\" [replaceUrl]=\"item.linkProps?.replaceUrl!\"\r\n                    [state]=\"item.linkProps?.state\" routerLinkActive>\r\n                    <span>{{item.name}}</span>\r\n                    <tds-badge *ngIf=\"item.badge\" [standalone]=\"true\" [count]=\"item.badge.count\"\r\n                        [tdsStyle]=\"item.badge.tdsStyle!\"></tds-badge>\r\n                    <tds-tag *ngIf=\"item.tag\" [status]='item.tag.status!' [rounded]=\"item.tag.rounded!\"\r\n                        [type]=\"item.tag.type!\">{{item.tag.text}}</tds-tag>\r\n                </a>\r\n                <span class=\"w-full flex items-center justify-between\" *ngIf=\"!hasLink\">\r\n                    <span>{{item.name}}</span>\r\n                    <tds-badge *ngIf=\"item.badge\" [standalone]=\"true\" [count]=\"item.badge.count!\"\r\n                        [tdsStyle]=\"item.badge.tdsStyle!\"></tds-badge>\r\n                    <tds-tag *ngIf=\"item.tag\" [status]='item.tag.status!' [rounded]=\"item.tag.rounded!\"\r\n                        [type]=\"item.tag.type!\">{{item.tag.text!}}</tds-tag>\r\n                </span>\r\n            </div>\r\n            <div *ngIf=\"hasListChild && !hasAllHidden\" class=\"flex items-center\">\r\n                <span *ngIf=\"hasListChild && !hasAllHidden\" [ngClass]=\"{'rotate-90 ':item.isOpen,'rotate-0':!item.isOpen,\r\n                    'dark:text-d-neutral-1-900 text-neutral-1-900':isSelected,\r\n                    'dark:text-d-neutral-1-400 text-neutral-1-500':!isSelected}\"\r\n                    class=\"text-base leading-4 flex items-center justify-center tdsi-arrow-right-line transform delay-100 duration-300\"></span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- <div *ngIf=\"hasListChild\" class=\"w-full flex flex-col py-2\"\r\n    [@menuCollapseMotion]=\"item.isOpen && !hasAllHidden ? 'expanded' : 'collapsed'\"\r\n    [ngClass]=\"{'h-0 overflow-hidden w-0': !item.isOpen || inlineCollapsed,'pl-10 pr-2.5 ':parentIsGroup,'pl-3':!parentIsGroup && !parentIsRoot}\">\r\n  \r\n</div> -->\r\n<div *ngIf=\"hasListChild\" class=\"w-full flex flex-col py-1\"\r\n    [@menuCollapseMotion]=\"item.isOpen && !hasAllHidden ? 'expanded' : 'collapsed'\"\r\n    [ngClass]=\"{'pl-10 pr-2.5 ':parentIsGroup,'pl-3':!parentIsGroup}\"\r\n    >\r\n    <div class=\"w-full flex flex-col\">\r\n        <ng-template ngFor let-menu [ngForOf]=\"item.listChild\">\r\n            <tds-menu-item [options]=\"options\" [item]=\"menu\" [isSelected]=\"menu.isSelected!\">\r\n            </tds-menu-item>\r\n        </ng-template>\r\n    </div>\r\n</div>", styles: [""] }]
        }], function () {
        return [{ type: i0.ChangeDetectorRef }, { type: TDSMenuService }, { type: i2.RouterLink, decorators: [{
                        type: Optional
                    }] }, { type: i2.RouterLinkWithHref, decorators: [{
                        type: Optional
                    }] }, { type: i2.Router, decorators: [{
                        type: Optional
                    }] }];
    }, { showIcon: [{
                type: Input
            }], item: [{
                type: Input
            }], isSelected: [{
                type: Input
            }], parentIsGroup: [{
                type: Input
            }], inlineCollapsed: [{
                type: Input
            }], options: [{
                type: Input
            }], isOpenPopup: [{
                type: Input
            }], listItem: [{
                type: ViewChildren,
                args: [TDSMenuItemComponent]
            }], cdkOverlayOrigin: [{
                type: ViewChild,
                args: [CdkOverlayOrigin, { static: true, read: ElementRef }]
            }], listOfRouterLink: [{
                type: ViewChildren,
                args: [RouterLink]
            }], listOfRouterLinkWithHref: [{
                type: ViewChildren,
                args: [RouterLinkWithHref]
            }] });
})();

const _c0$2 = function (a0, a1) { return { "py-3": a0, "py-2": a1 }; };
function TDSMenuGroupInlineComponent_div_0_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 12);
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const ctx_r0 = i0.ɵɵnextContext();
        i0.ɵɵclassMap(ctx_r0.options.background);
        i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction2(4, _c0$2, ctx_r0.showIcon, !ctx_r0.showIcon));
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", ctx_r0.item.groupTitle, "\n");
    }
}
function TDSMenuGroupInlineComponent_div_3_span_1_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelement(0, "span", 16);
    }
    if (rf & 2) {
        const ctx_r7 = i0.ɵɵnextContext(2);
        i0.ɵɵproperty("innerHTML", ctx_r7.item.htmlIcon, i0.ɵɵsanitizeHtml);
    }
}
function TDSMenuGroupInlineComponent_div_3_span_2_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelement(0, "span", 17);
    }
    if (rf & 2) {
        const ctx_r8 = i0.ɵɵnextContext(2);
        i0.ɵɵproperty("ngClass", ctx_r8.item.icon);
    }
}
const _c1$2 = function (a0, a1) { return { "dark:text-d-neutral-1-900 text-primary-1": a0, "text-neutral-1-300 dark:text-d-neutral-1-900": a1 }; };
function TDSMenuGroupInlineComponent_div_3_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 13);
        i0.ɵɵtemplate(1, TDSMenuGroupInlineComponent_div_3_span_1_Template, 1, 1, "span", 14);
        i0.ɵɵtemplate(2, TDSMenuGroupInlineComponent_div_3_span_2_Template, 1, 1, "span", 15);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const ctx_r2 = i0.ɵɵnextContext();
        i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction2(3, _c1$2, ctx_r2.isSelected, !ctx_r2.isSelected));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r2.item.htmlIcon);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r2.hasIcon && !ctx_r2.item.htmlIcon);
    }
}
function TDSMenuGroupInlineComponent_a_7_tds_badge_3_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelement(0, "tds-badge", 21);
    }
    if (rf & 2) {
        const ctx_r9 = i0.ɵɵnextContext(2);
        i0.ɵɵproperty("standalone", true)("overflowCount", ctx_r9.item.badge.overflowCount)("count", ctx_r9.item.badge.count)("tdsStyle", ctx_r9.item.badge.tdsStyle);
    }
}
function TDSMenuGroupInlineComponent_a_7_tds_tag_4_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "tds-tag", 22);
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const ctx_r10 = i0.ɵɵnextContext(2);
        i0.ɵɵproperty("status", ctx_r10.item.tag.status)("rounded", ctx_r10.item.tag.rounded)("type", ctx_r10.item.tag.type);
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate(ctx_r10.item.tag.text);
    }
}
const _c2$2 = function (a0) { return [a0]; };
function TDSMenuGroupInlineComponent_a_7_Template(rf, ctx) {
    if (rf & 1) {
        const _r12 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "a", 18);
        i0.ɵɵlistener("click", function TDSMenuGroupInlineComponent_a_7_Template_a_click_0_listener($event) { i0.ɵɵrestoreView(_r12); const ctx_r11 = i0.ɵɵnextContext(); return ctx_r11.onClickItem($event); });
        i0.ɵɵelementStart(1, "span");
        i0.ɵɵtext(2);
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(3, TDSMenuGroupInlineComponent_a_7_tds_badge_3_Template, 1, 4, "tds-badge", 19);
        i0.ɵɵtemplate(4, TDSMenuGroupInlineComponent_a_7_tds_tag_4_Template, 2, 4, "tds-tag", 20);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const ctx_r3 = i0.ɵɵnextContext();
        i0.ɵɵproperty("routerLink", i0.ɵɵpureFunction1(11, _c2$2, ctx_r3.item.link))("queryParams", ctx_r3.item.linkProps == null ? null : ctx_r3.item.linkProps.queryParams)("fragment", ctx_r3.item.linkProps == null ? null : ctx_r3.item.linkProps.fragment)("queryParamsHandling", ctx_r3.item.linkProps == null ? null : ctx_r3.item.linkProps.queryParamsHandling)("preserveFragment", ctx_r3.item.linkProps == null ? null : ctx_r3.item.linkProps.preserveFragment)("skipLocationChange", ctx_r3.item.linkProps == null ? null : ctx_r3.item.linkProps.skipLocationChange)("replaceUrl", ctx_r3.item.linkProps == null ? null : ctx_r3.item.linkProps.replaceUrl)("state", ctx_r3.item.linkProps == null ? null : ctx_r3.item.linkProps.state);
        i0.ɵɵadvance(2);
        i0.ɵɵtextInterpolate(ctx_r3.item.name);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r3.item.badge);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r3.item.tag);
    }
}
function TDSMenuGroupInlineComponent_span_8_tds_badge_3_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelement(0, "tds-badge", 21);
    }
    if (rf & 2) {
        const ctx_r13 = i0.ɵɵnextContext(2);
        i0.ɵɵproperty("standalone", true)("overflowCount", ctx_r13.item.badge.overflowCount)("count", ctx_r13.item.badge.count)("tdsStyle", ctx_r13.item.badge.tdsStyle);
    }
}
function TDSMenuGroupInlineComponent_span_8_tds_tag_4_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "tds-tag", 22);
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const ctx_r14 = i0.ɵɵnextContext(2);
        i0.ɵɵproperty("status", ctx_r14.item.tag.status)("rounded", ctx_r14.item.tag.rounded)("type", ctx_r14.item.tag.type);
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate(ctx_r14.item.tag.text);
    }
}
function TDSMenuGroupInlineComponent_span_8_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "span", 23)(1, "span");
        i0.ɵɵtext(2);
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(3, TDSMenuGroupInlineComponent_span_8_tds_badge_3_Template, 1, 4, "tds-badge", 19);
        i0.ɵɵtemplate(4, TDSMenuGroupInlineComponent_span_8_tds_tag_4_Template, 2, 4, "tds-tag", 20);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const ctx_r4 = i0.ɵɵnextContext();
        i0.ɵɵadvance(2);
        i0.ɵɵtextInterpolate(ctx_r4.item.name);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r4.item.badge);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r4.item.tag);
    }
}
const _c3$2 = function (a0, a1, a2, a3) { return { "rotate-90 ": a0, "rotate-0": a1, "dark:text-d-neutral-1-900 text-neutral-1-900": a2, "dark:text-d-neutral-1-400 text-neutral-1-500": a3 }; };
function TDSMenuGroupInlineComponent_span_10_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelement(0, "span", 24);
    }
    if (rf & 2) {
        const ctx_r5 = i0.ɵɵnextContext();
        i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction4(1, _c3$2, ctx_r5.item.isOpen, !ctx_r5.item.isOpen, ctx_r5.isSelected, !ctx_r5.isSelected));
    }
}
const _c4$2 = function (a0, a1) { return { "py-2": a0, "py-1": a1 }; };
function TDSMenuGroupInlineComponent_div_11_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 25)(1, "div", 26);
        i0.ɵɵprojection(2);
        i0.ɵɵelementEnd()();
    }
    if (rf & 2) {
        const ctx_r6 = i0.ɵɵnextContext();
        i0.ɵɵproperty("@menuCollapseMotion", ctx_r6.item.isOpen && !ctx_r6.hasAllHidden ? "expanded" : "collapsed");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction2(2, _c4$2, ctx_r6.showIcon, !ctx_r6.showIcon));
    }
}
const _c5$1 = function (a0) { return { "hidden": a0 }; };
const _c6$1 = function (a0, a1) { return { "dark:text-d-neutral-1-900": a0, "text-neutral-1-900 dark:text-d-neutral-1-400": a1 }; };
const _c7 = ["*"];
class TDSMenuGroupInlineComponent {
    constructor(_cdr, tdsMenuService, routerLink, routerLinkWithHref, router) {
        this._cdr = _cdr;
        this.tdsMenuService = tdsMenuService;
        this.routerLink = routerLink;
        this.routerLinkWithHref = routerLinkWithHref;
        this.router = router;
        this.destroy$ = new Subject();
        this.showIcon = true;
        this.isSelected = false;
        this.options = {
            background: 'bg-white dark:bg-d-neutral-3-200',
            backgroundItem: 'bg-white dark:bg-d-neutral-3-200',
            backgroundItemSelected: 'bg-neutral-3-50 dark:bg-d-neutral-3-300',
            backgroundItemHover: 'dark:hover:bg-d-neutral-3-300  hover:bg-neutral-3-50'
        };
        this.cdkOverlayOrigin = null;
        this.IsActiveMatchOptions = {
            paths: "subset",
            matrixParams: "ignored",
            queryParams: "ignored",
            fragment: "ignored",
        };
        this.ngStyleItem = {};
        if (router) {
            this.router.events.pipe(takeUntil(this.destroy$), filter(e => e instanceof NavigationEnd)).subscribe(() => {
                this.updateRouterActive();
            });
        }
    }
    get uid() {
        return this.item ? this.item.uid : "";
    }
    ngOnInit() {
        this.ngStyleItem = this.getStyleItem();
    }
    ngAfterContentInit() {
        this.listenItemChangeSelected();
    }
    ngAfterViewInit() {
        if (!this.hasListChild || this.hasAllHidden) {
            this.updateRouterActive();
        }
    }
    ngOnChanges(changes) {
        if (changes['item']) {
            this._cdr.markForCheck();
        }
        if (changes.isSelected) {
            this.setSelectedState(this.isSelected);
        }
    }
    onClickItem(e) {
        if (this.item.disabled) {
            e.stopPropagation();
            e.preventDefault();
        }
        if (this.hasListChild && !this.hasAllHidden) {
            this.tdsMenuService.groupMenuOpen$.next(this);
            // this.item.isOpen = !this.item.isOpen;
        }
        else {
            if (!this.isSelected)
                this.tdsMenuService.onDescendantMenuItemClick(this);
            if (this.hasLink)
                this.p_NavigateByUrl();
        }
    }
    get hasListChild() {
        return TDSHelperArray.hasListValue(this.item.listChild);
    }
    get hasAllHidden() {
        var _a;
        let childs = (_a = this.item.listChild) === null || _a === void 0 ? void 0 : _a.find(f => { return !f.hidden; });
        return childs == undefined;
    }
    get hasGroupTitle() {
        return this.item && TDSHelperString.hasValueString(this.item.groupTitle);
    }
    ngOnDestroy() {
        this.destroy$.next();
        this.destroy$.complete();
    }
    setSelectedState(value) {
        this.isSelected = value;
        this.item.isSelected = value;
        if (this.isSelected) {
            if (!this.item.isOpen) {
                this.item.isOpen = true;
            }
        }
        this.ngStyleItem = this.getStyleItem();
        this._cdr.markForCheck();
    }
    updateRouterActive() {
        if (this.hasListChild || !this.listOfRouterLink || !this.listOfRouterLinkWithHref || !this.router || !this.router.navigated) {
            return;
        }
        Promise.resolve().then(() => {
            const hasActiveLinks = this.hasActiveLinks();
            if (this.isSelected !== hasActiveLinks) {
                this.setSelectedState(hasActiveLinks);
            }
        });
    }
    hasActiveLinks() {
        const isActiveCheckFn = this.isLinkActive(this.router);
        return ((this.routerLink && isActiveCheckFn(this.routerLink)) ||
            (this.routerLinkWithHref && isActiveCheckFn(this.routerLinkWithHref)) ||
            this.listOfRouterLink.some(isActiveCheckFn) ||
            this.listOfRouterLinkWithHref.some(isActiveCheckFn));
    }
    isLinkActive(router) {
        return (link) => router.isActive(link.urlTree, this.IsActiveMatchOptions);
    }
    setSelectedStateListChildren(uid) {
        if (TDSHelperArray.hasListValue(this.listItem)) {
            this.listItem.forEach(f => {
                f.setSelectedStateListChildren(uid);
            });
        }
        else {
            this.setSelectedState(uid === this.uid);
        }
    }
    get hasLink() {
        return !this.item.disabled && (!this.hasListChild || this.hasAllHidden) && TDSHelperObject.hasValue(this.item.link);
    }
    get hasIcon() {
        return this.showIcon && this.item && TDSHelperString.hasValueString(this.item.icon);
    }
    listenItemChangeSelected() {
        if (TDSHelperArray.hasListValue(this.listItem)) {
            const listOfTDSMenuItemComponent = this.listItem;
            const changes = listOfTDSMenuItemComponent.changes;
            const mergedObservable = merge(...[changes, ...listOfTDSMenuItemComponent.map(menu => menu.selected$)]);
            changes
                .pipe(startWith(listOfTDSMenuItemComponent), switchMap(() => mergedObservable), startWith(true), 
            // debounceTime(200),
            map(() => listOfTDSMenuItemComponent.some(e => e.isSelected)), takeUntil(this.destroy$))
                .subscribe(selected => {
                if (selected != this.isSelected) {
                    if (!this.hasAllHidden) {
                        this.setSelectedState(selected);
                    }
                    else {
                        //lấy link hiện tại khi tất ẩn tất cả menu con
                        const hasActiveLinks = this.hasActiveLinks();
                        this.setSelectedState(hasActiveLinks || selected);
                    }
                }
            });
        }
    }
    setOpenStateListChildren(value) {
        if (TDSHelperArray.hasListValue(this.listItem)) {
            this.listItem.forEach(f => {
                if (!f.hasListChild)
                    f.setOpenChildren(value);
            });
            this.item.isOpen = value;
            this._cdr.markForCheck();
        }
    }
    getStyleItem() {
        return {
            [`${this.options.backgroundItemSelected}`]: this.isSelected,
            [`${this.options.backgroundItem}`]: !this.isSelected,
            [`${this.options.backgroundItemHover}`]: true,
            [`cursor-pointer`]: !this.item.disabled,
            ['py-2.5']: this.showIcon,
            ['py-2']: !this.showIcon
        };
    }
    p_NavigateByUrl() {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j;
        if (!TDSHelperObject.hasValue(this.item.linkProps)) {
            (_a = this.router) === null || _a === void 0 ? void 0 : _a.navigateByUrl(this.item.link);
        }
        else {
            (_b = this.router) === null || _b === void 0 ? void 0 : _b.navigate([this.item.link], {
                queryParams: (_c = this.item.linkProps) === null || _c === void 0 ? void 0 : _c.queryParams,
                fragment: (_d = this.item.linkProps) === null || _d === void 0 ? void 0 : _d.fragment,
                queryParamsHandling: (_e = this.item.linkProps) === null || _e === void 0 ? void 0 : _e.queryParamsHandling,
                preserveFragment: (_f = this.item.linkProps) === null || _f === void 0 ? void 0 : _f.preserveFragment,
                skipLocationChange: (_g = this.item.linkProps) === null || _g === void 0 ? void 0 : _g.skipLocationChange,
                replaceUrl: (_h = this.item.linkProps) === null || _h === void 0 ? void 0 : _h.replaceUrl,
                state: (_j = this.item.linkProps) === null || _j === void 0 ? void 0 : _j.state
            });
        }
    }
}
TDSMenuGroupInlineComponent.ɵfac = function TDSMenuGroupInlineComponent_Factory(t) { return new (t || TDSMenuGroupInlineComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(TDSMenuService), i0.ɵɵdirectiveInject(i2.RouterLink, 8), i0.ɵɵdirectiveInject(i2.RouterLinkWithHref, 8), i0.ɵɵdirectiveInject(i2.Router, 8)); };
TDSMenuGroupInlineComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TDSMenuGroupInlineComponent, selectors: [["tds-menu-group-inline"]], contentQueries: function TDSMenuGroupInlineComponent_ContentQueries(rf, ctx, dirIndex) {
        if (rf & 1) {
            i0.ɵɵcontentQuery(dirIndex, TDSMenuItemComponent, 5);
        }
        if (rf & 2) {
            let _t;
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listItem = _t);
        }
    }, viewQuery: function TDSMenuGroupInlineComponent_Query(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵviewQuery(CdkOverlayOrigin, 7, ElementRef);
            i0.ɵɵviewQuery(RouterLink, 5);
            i0.ɵɵviewQuery(RouterLinkWithHref, 5);
        }
        if (rf & 2) {
            let _t;
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cdkOverlayOrigin = _t.first);
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listOfRouterLink = _t);
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listOfRouterLinkWithHref = _t);
        }
    }, hostAttrs: ["clas", "w-full flex flex-col box-border"], inputs: { showIcon: "showIcon", item: "item", isSelected: "isSelected", options: "options" }, features: [i0.ɵɵNgOnChangesFeature], ngContentSelectors: _c7, decls: 12, vars: 14, consts: [["class", "w-full flex text body-2 font-semibold items-center  px-3  rounded group  text-neutral-1-500 dark:text-d-neutral-1-400", 3, "class", "ngClass", 4, "ngIf"], ["cdkOverlayOrigin", "", 1, "w-full", "flex", "items-center", "pl-3", "pr-2.5", "rounded", "group", 3, "ngClass", "click"], ["origin", "cdkOverlayOrigin"], ["class", "h-6 w-6 flex mr-2", 3, "ngClass", 4, "ngIf"], [1, "flex-auto", "font-semibold", "text-body-2", "dark:font-regular"], [1, "w-full", "flex", "justify-between", "dark:group-hover:text-d-neutral-1-900", 3, "ngClass"], [1, "w-full", "mr-2"], ["class", "flex items-center justify-between", 3, "routerLink", "queryParams", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", "click", 4, "ngIf"], ["class", "flex items-center justify-between", 4, "ngIf"], [1, "flex", "justify-between"], ["class", "text-base leading-4 flex items-center justify-center tdsi-arrow-right-line transform delay-100 duration-300", 3, "ngClass", 4, "ngIf"], ["class", "w-full flex flex-col", 4, "ngIf"], [1, "w-full", "flex", "text", "body-2", "font-semibold", "items-center", "px-3", "rounded", "group", "text-neutral-1-500", "dark:text-d-neutral-1-400", 3, "ngClass"], [1, "h-6", "w-6", "flex", "mr-2", 3, "ngClass"], [3, "innerHTML", 4, "ngIf"], ["class", "text-2xl leading-6 dark:group-hover:text-d-neutral-1-900  dark:text-d-neutral-1-900", 3, "ngClass", 4, "ngIf"], [3, "innerHTML"], [1, "text-2xl", "leading-6", "dark:group-hover:text-d-neutral-1-900", "dark:text-d-neutral-1-900", 3, "ngClass"], [1, "flex", "items-center", "justify-between", 3, "routerLink", "queryParams", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", "click"], [3, "standalone", "overflowCount", "count", "tdsStyle", 4, "ngIf"], [3, "status", "rounded", "type", 4, "ngIf"], [3, "standalone", "overflowCount", "count", "tdsStyle"], [3, "status", "rounded", "type"], [1, "flex", "items-center", "justify-between"], [1, "text-base", "leading-4", "flex", "items-center", "justify-center", "tdsi-arrow-right-line", "transform", "delay-100", "duration-300", 3, "ngClass"], [1, "w-full", "flex", "flex-col"], [1, "w-full", "flex", "flex-col", 3, "ngClass"]], template: function TDSMenuGroupInlineComponent_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵprojectionDef();
            i0.ɵɵtemplate(0, TDSMenuGroupInlineComponent_div_0_Template, 2, 7, "div", 0);
            i0.ɵɵelementStart(1, "div", 1, 2);
            i0.ɵɵlistener("click", function TDSMenuGroupInlineComponent_Template_div_click_1_listener($event) { return ctx.onClickItem($event); });
            i0.ɵɵtemplate(3, TDSMenuGroupInlineComponent_div_3_Template, 3, 6, "div", 3);
            i0.ɵɵelementStart(4, "div", 4)(5, "div", 5)(6, "div", 6);
            i0.ɵɵtemplate(7, TDSMenuGroupInlineComponent_a_7_Template, 5, 13, "a", 7);
            i0.ɵɵtemplate(8, TDSMenuGroupInlineComponent_span_8_Template, 5, 3, "span", 8);
            i0.ɵɵelementEnd();
            i0.ɵɵelementStart(9, "div", 9);
            i0.ɵɵtemplate(10, TDSMenuGroupInlineComponent_span_10_Template, 1, 6, "span", 10);
            i0.ɵɵelementEnd()()()();
            i0.ɵɵtemplate(11, TDSMenuGroupInlineComponent_div_11_Template, 3, 5, "div", 11);
        }
        if (rf & 2) {
            i0.ɵɵproperty("ngIf", ctx.hasGroupTitle);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction1(9, _c5$1, ctx.item.hidden))("ngClass", ctx.ngStyleItem);
            i0.ɵɵadvance(2);
            i0.ɵɵproperty("ngIf", ctx.showIcon);
            i0.ɵɵadvance(2);
            i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction2(11, _c6$1, ctx.isSelected, !ctx.isSelected));
            i0.ɵɵadvance(2);
            i0.ɵɵproperty("ngIf", ctx.hasLink);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngIf", !ctx.hasLink);
            i0.ɵɵadvance(2);
            i0.ɵɵproperty("ngIf", ctx.hasListChild && !ctx.hasAllHidden);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngIf", ctx.hasListChild);
        }
    }, directives: [i3.NgIf, i3.NgClass, i3$1.CdkOverlayOrigin, i2.RouterLinkWithHref, i4.TDSBadgeComponent, i5.TDSTagComponent], styles: [""], encapsulation: 2, data: { animation: [menuCollapseMotion] }, changeDetection: 0 });
(function () {
    (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSMenuGroupInlineComponent, [{
            type: Component,
            args: [{ selector: 'tds-menu-group-inline', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, animations: [menuCollapseMotion], host: {
                        clas: "w-full flex flex-col box-border",
                    }, template: "<div *ngIf=\"hasGroupTitle\" [class]=\"options.background\"\r\n    class=\"w-full flex text body-2 font-semibold items-center  px-3  rounded group  text-neutral-1-500 dark:text-d-neutral-1-400\"\r\n    [ngClass]=\"{'py-3':showIcon,\r\n    'py-2':!showIcon}\">\r\n    {{item.groupTitle}}\r\n</div>\r\n<div class=\"w-full flex  items-center  pl-3 pr-2.5  rounded group\" [ngClass]=\"{'hidden':item.hidden}\" cdkOverlayOrigin\r\n    #origin=\"cdkOverlayOrigin\" [ngClass]=\"ngStyleItem\" (click)=\"onClickItem($event)\">\r\n    <div *ngIf='showIcon' class=\"h-6 w-6 flex mr-2\" [ngClass]=\"{'dark:text-d-neutral-1-900 text-primary-1':isSelected,\r\n    'text-neutral-1-300 dark:text-d-neutral-1-900':!isSelected}\">\r\n        <span *ngIf=\"item.htmlIcon\" [innerHTML]=\"item.htmlIcon\"></span>\r\n        <span *ngIf=\"hasIcon && !item.htmlIcon\" [ngClass]=\"item.icon!\"\r\n            class=\"text-2xl leading-6 dark:group-hover:text-d-neutral-1-900  dark:text-d-neutral-1-900\"></span>\r\n    </div>\r\n    <div class=\"flex-auto  font-semibold  text-body-2 dark:font-regular\">\r\n        <div class=\"w-full flex justify-between  dark:group-hover:text-d-neutral-1-900\" [ngClass]=\"{'dark:text-d-neutral-1-900':isSelected,\r\n    'text-neutral-1-900 dark:text-d-neutral-1-400':!isSelected}\">\r\n            <div class=\"w-full mr-2\">\r\n                <a class=\"flex items-center justify-between\" (click)=\"onClickItem($event)\" [routerLink]=\"[item.link]\"\r\n                    *ngIf=\"hasLink\" [queryParams]=\"item.linkProps?.queryParams\" [fragment]=\"item.linkProps?.fragment\"\r\n                    [queryParamsHandling]=\"item.linkProps?.queryParamsHandling\"\r\n                    [preserveFragment]=\"item.linkProps?.preserveFragment!\"\r\n                    [skipLocationChange]=\"item.linkProps?.skipLocationChange!\" [replaceUrl]=\"item.linkProps?.replaceUrl!\"\r\n                    [state]=\"item.linkProps?.state\"> \r\n                    <span>{{item.name}}</span>  \r\n                    <tds-badge *ngIf=\"item.badge\" [standalone]=\"true\" [overflowCount]=\"item.badge.overflowCount!\" [count]=\"item.badge.count\" [tdsStyle]=\"item.badge.tdsStyle!\"></tds-badge>\r\n                    <tds-tag *ngIf=\"item.tag\" [status]='item.tag.status!' [rounded]=\"item.tag.rounded!\" [type]=\"item.tag.type!\">{{item.tag.text}}</tds-tag>\r\n                </a>\r\n                <span class=\"flex items-center justify-between\" *ngIf=\"!hasLink\">\r\n                    <span>{{item.name}}</span>  \r\n                    <tds-badge *ngIf=\"item.badge\" [standalone]=\"true\" [overflowCount]=\"item.badge.overflowCount\" [count]=\"item.badge.count\" [tdsStyle]=\"item.badge.tdsStyle!\"></tds-badge>\r\n                    <tds-tag *ngIf=\"item.tag\" [status]='item.tag.status!' [rounded]=\"item.tag.rounded!\" [type]=\"item.tag.type!\">{{item.tag.text}}</tds-tag>\r\n                </span>\r\n            </div>\r\n            <div class=\"flex justify-between\">\r\n                <span *ngIf=\"hasListChild && !hasAllHidden\" [ngClass]=\"{'rotate-90 ':item.isOpen,'rotate-0':!item.isOpen,\r\n                'dark:text-d-neutral-1-900 text-neutral-1-900':isSelected,\r\n                'dark:text-d-neutral-1-400 text-neutral-1-500':!isSelected}\"\r\n                    class=\"text-base leading-4 flex items-center justify-center tdsi-arrow-right-line transform delay-100 duration-300\"></span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div *ngIf=\"hasListChild\" class=\"w-full flex flex-col\"\r\n    [@menuCollapseMotion]=\"item.isOpen && !hasAllHidden ? 'expanded' : 'collapsed'\">\r\n    <div class=\"w-full flex flex-col\" [ngClass]=\"{'py-2':showIcon,\r\n    'py-1':!showIcon}\">\r\n        <ng-content></ng-content>\r\n    </div>\r\n</div>", styles: [""] }]
        }], function () {
        return [{ type: i0.ChangeDetectorRef }, { type: TDSMenuService }, { type: i2.RouterLink, decorators: [{
                        type: Optional
                    }] }, { type: i2.RouterLinkWithHref, decorators: [{
                        type: Optional
                    }] }, { type: i2.Router, decorators: [{
                        type: Optional
                    }] }];
    }, { showIcon: [{
                type: Input
            }], item: [{
                type: Input
            }], isSelected: [{
                type: Input
            }], options: [{
                type: Input
            }], listItem: [{
                type: ContentChildren,
                args: [TDSMenuItemComponent, { descendants: true }]
            }], cdkOverlayOrigin: [{
                type: ViewChild,
                args: [CdkOverlayOrigin, { static: true, read: ElementRef }]
            }], listOfRouterLink: [{
                type: ViewChildren,
                args: [RouterLink]
            }], listOfRouterLinkWithHref: [{
                type: ViewChildren,
                args: [RouterLinkWithHref]
            }] });
})();

function TDSMenuGroupPopupComponent_div_2_div_1_tds_badge_2_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "tds-badge", 11);
        i0.ɵɵelement(1, "span", 12);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const ctx_r5 = i0.ɵɵnextContext(3);
        i0.ɵɵproperty("status", ctx_r5.item.dot.status)("dot", true);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngClass", ctx_r5.item.icon);
    }
}
function TDSMenuGroupPopupComponent_div_2_div_1_span_3_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelement(0, "span", 12);
    }
    if (rf & 2) {
        const ctx_r6 = i0.ɵɵnextContext(3);
        i0.ɵɵproperty("ngClass", ctx_r6.item.icon);
    }
}
const _c0$1 = function (a0) { return [a0]; };
function TDSMenuGroupPopupComponent_div_2_div_1_Template(rf, ctx) {
    if (rf & 1) {
        const _r8 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 7)(1, "a", 8);
        i0.ɵɵlistener("click", function TDSMenuGroupPopupComponent_div_2_div_1_Template_a_click_1_listener($event) { i0.ɵɵrestoreView(_r8); const ctx_r7 = i0.ɵɵnextContext(2); return ctx_r7.onClickItem($event); });
        i0.ɵɵtemplate(2, TDSMenuGroupPopupComponent_div_2_div_1_tds_badge_2_Template, 2, 3, "tds-badge", 9);
        i0.ɵɵtemplate(3, TDSMenuGroupPopupComponent_div_2_div_1_span_3_Template, 1, 1, "span", 10);
        i0.ɵɵelementEnd()();
    }
    if (rf & 2) {
        const ctx_r4 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("routerLink", i0.ɵɵpureFunction1(10, _c0$1, ctx_r4.item.link))("queryParams", ctx_r4.item.linkProps == null ? null : ctx_r4.item.linkProps.queryParams)("fragment", ctx_r4.item.linkProps == null ? null : ctx_r4.item.linkProps.fragment)("queryParamsHandling", ctx_r4.item.linkProps == null ? null : ctx_r4.item.linkProps.queryParamsHandling)("preserveFragment", ctx_r4.item.linkProps == null ? null : ctx_r4.item.linkProps.preserveFragment)("skipLocationChange", ctx_r4.item.linkProps == null ? null : ctx_r4.item.linkProps.skipLocationChange)("replaceUrl", ctx_r4.item.linkProps == null ? null : ctx_r4.item.linkProps.replaceUrl)("state", ctx_r4.item.linkProps == null ? null : ctx_r4.item.linkProps.state);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r4.item.dot);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", !ctx_r4.item.dot);
    }
}
const _c1$1 = function (a0, a1, a2) { return { "bg-neutral-3-50 text-primary-1 dark:bg-d-neutral-3-300": a0, " text-neutral-1-300": a1, "cursor-pointer": a2 }; };
function TDSMenuGroupPopupComponent_div_2_Template(rf, ctx) {
    if (rf & 1) {
        const _r10 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 5);
        i0.ɵɵlistener("click", function TDSMenuGroupPopupComponent_div_2_Template_div_click_0_listener($event) { i0.ɵɵrestoreView(_r10); const ctx_r9 = i0.ɵɵnextContext(); return ctx_r9.onClickItem($event); });
        i0.ɵɵtemplate(1, TDSMenuGroupPopupComponent_div_2_div_1_Template, 4, 12, "div", 6);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const ctx_r1 = i0.ɵɵnextContext();
        i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction3(3, _c1$1, ctx_r1.isSelected, !ctx_r1.isSelected, !ctx_r1.item.disabled))("tooltipTitle", ctx_r1.item.name);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r1.hasIcon);
    }
}
function TDSMenuGroupPopupComponent_div_3_div_1_tds_badge_1_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "tds-badge", 11);
        i0.ɵɵelement(1, "span", 12);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const ctx_r12 = i0.ɵɵnextContext(3);
        i0.ɵɵproperty("status", ctx_r12.item.dot.status)("dot", true);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngClass", ctx_r12.item.icon);
    }
}
function TDSMenuGroupPopupComponent_div_3_div_1_span_2_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelement(0, "span", 12);
    }
    if (rf & 2) {
        const ctx_r13 = i0.ɵɵnextContext(3);
        i0.ɵɵproperty("ngClass", ctx_r13.item.icon);
    }
}
function TDSMenuGroupPopupComponent_div_3_div_1_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 7);
        i0.ɵɵtemplate(1, TDSMenuGroupPopupComponent_div_3_div_1_tds_badge_1_Template, 2, 3, "tds-badge", 9);
        i0.ɵɵtemplate(2, TDSMenuGroupPopupComponent_div_3_div_1_span_2_Template, 1, 1, "span", 10);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const ctx_r11 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r11.item.dot);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", !ctx_r11.item.dot);
    }
}
const _c2$1 = function (a0, a1, a2) { return { "bg-neutral-3-50   text-primary-1 dark:bg-d-neutral-3-300": a0, " text-neutral-1-300": a1, "cursor-pointer": a2 }; };
function TDSMenuGroupPopupComponent_div_3_Template(rf, ctx) {
    if (rf & 1) {
        const _r15 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 13);
        i0.ɵɵlistener("click", function TDSMenuGroupPopupComponent_div_3_Template_div_click_0_listener($event) { i0.ɵɵrestoreView(_r15); const ctx_r14 = i0.ɵɵnextContext(); return ctx_r14.onClickItem($event); });
        i0.ɵɵtemplate(1, TDSMenuGroupPopupComponent_div_3_div_1_Template, 3, 2, "div", 6);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const ctx_r2 = i0.ɵɵnextContext();
        i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction3(3, _c2$1, ctx_r2.isSelected, !ctx_r2.isSelected && !ctx_r2.item.isOpen, !ctx_r2.item.disabled))("tooltipTitle", ctx_r2.item.name);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r2.hasIcon);
    }
}
function TDSMenuGroupPopupComponent_ng_template_4_div_0_Template(rf, ctx) {
    if (rf & 1) {
        const _r18 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 15);
        i0.ɵɵlistener("mouseenter", function TDSMenuGroupPopupComponent_ng_template_4_div_0_Template_div_mouseenter_0_listener() { i0.ɵɵrestoreView(_r18); const ctx_r17 = i0.ɵɵnextContext(2); return ctx_r17.setMouseState(true); })("mouseleave", function TDSMenuGroupPopupComponent_ng_template_4_div_0_Template_div_mouseleave_0_listener() { i0.ɵɵrestoreView(_r18); const ctx_r19 = i0.ɵɵnextContext(2); return ctx_r19.setMouseState(false); });
        i0.ɵɵelementStart(1, "div", 16)(2, "div", 17)(3, "div", 18);
        i0.ɵɵprojection(4);
        i0.ɵɵelementEnd()()()();
    }
    if (rf & 2) {
        const ctx_r16 = i0.ɵɵnextContext(2);
        i0.ɵɵstyleProp("margin-top", ctx_r16.position == "rightTop" ? -5 : 0, "px");
        i0.ɵɵproperty("ngClass", ctx_r16.mode)("@slideMotion", undefined);
    }
}
function TDSMenuGroupPopupComponent_ng_template_4_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵtemplate(0, TDSMenuGroupPopupComponent_ng_template_4_div_0_Template, 5, 4, "div", 14);
    }
    if (rf & 2) {
        const ctx_r3 = i0.ɵɵnextContext();
        i0.ɵɵproperty("ngIf", ctx_r3.hasListChild);
    }
}
const _c3$1 = function (a0) { return { "hidden": a0 }; };
const _c4$1 = ["*"];
const listOfVerticalPositions = [
    POSITION_MAP.rightTop,
    POSITION_MAP.right,
    POSITION_MAP.rightBottom,
    // POSITION_MAP.leftTop,
    POSITION_MAP.left,
    // POSITION_MAP.leftBottom
];
class TDSMenuGroupPopupComponent {
    constructor(_cdr, tdsMenuService, routerLink, routerLinkWithHref, router) {
        this._cdr = _cdr;
        this.tdsMenuService = tdsMenuService;
        this.routerLink = routerLink;
        this.routerLinkWithHref = routerLinkWithHref;
        this.router = router;
        this.destroy$ = new Subject();
        this.isSelected = false;
        this.inlineCollapsed = false;
        this.options = {
            background: 'bg-white dark:bg-d-neutral-3-200',
            backgroundItem: 'bg-white dark:bg-d-neutral-3-200',
            backgroundItemSelected: 'bg-neutral-3-50 dark:bg-d-neutral-3-300',
            backgroundItemHover: 'dark:hover:bg-d-neutral-3-300  hover:bg-neutral-3-50'
        };
        this.open$ = new Subject();
        this.cdkOverlayOrigin = null;
        this.IsActiveMatchOptions = {
            paths: "subset",
            matrixParams: "ignored",
            queryParams: "ignored",
            fragment: "ignored",
        };
        this.position = 'rightTop';
        this.triggerWidth = null;
        this.overlayPositions = listOfVerticalPositions;
        this.mode = 'dark';
        if (router) {
            this.router.events.pipe(takeUntil(this.destroy$), filter(e => e instanceof NavigationEnd)).subscribe(() => {
                if (!this.hasListChild) {
                    this.updateRouterActive();
                }
            });
        }
    }
    get uid() {
        return this.item ? this.item.uid : "";
    }
    ngOnInit() {
        this.open$.pipe(debounceTime(100), distinctUntilChanged(), takeUntil(this.destroy$)).subscribe(res => {
            this.item.isOpen = res;
            this._cdr.markForCheck();
        });
        this.tdsMenuService.mode$.subscribe(mode => {
            if (TDSHelperObject.hasValue(mode) && this.mode !== mode) {
                this.mode = mode;
                this._cdr.markForCheck();
            }
        });
    }
    ngAfterContentInit() {
        this.listenItemChangeSelected();
    }
    ngAfterViewInit() {
        if (!this.hasListChild) {
            this.updateRouterActive();
        }
    }
    ngOnChanges(changes) {
        if (changes['item']) {
            this._cdr.markForCheck();
        }
    }
    onClickItem(e) {
        if (this.item.disabled) {
            e.stopPropagation();
            e.preventDefault();
        }
        if (!this.hasListChild || !this.hasAllHidden) {
            this.tdsMenuService.onDescendantMenuItemClick(this);
            if (this.hasLink)
                this.p_NavigateByUrl();
        }
    }
    get hasListChild() {
        return TDSHelperArray.hasListValue(this.item.listChild);
    }
    get hasAllHidden() {
        var _a;
        let childs = (_a = this.item.listChild) === null || _a === void 0 ? void 0 : _a.find(f => { return !f.hidden; });
        return childs == undefined;
    }
    ngOnDestroy() {
        this.destroy$.next();
        this.destroy$.complete();
    }
    setSelectedState(value) {
        this.isSelected = value;
        this.item.isSelected = value;
        this._cdr.markForCheck();
    }
    updateRouterActive() {
        if (this.hasListChild || !this.listOfRouterLink || !this.listOfRouterLinkWithHref || !this.router || !this.router.navigated) {
            return;
        }
        Promise.resolve().then(() => {
            const hasActiveLinks = this.hasActiveLinks();
            if (this.isSelected !== hasActiveLinks) {
                this.setSelectedState(hasActiveLinks);
            }
        });
    }
    hasActiveLinks() {
        const isActiveCheckFn = this.isLinkActive(this.router);
        return ((this.routerLink && isActiveCheckFn(this.routerLink)) ||
            (this.routerLinkWithHref && isActiveCheckFn(this.routerLinkWithHref)) ||
            this.listOfRouterLink.some(isActiveCheckFn) ||
            this.listOfRouterLinkWithHref.some(isActiveCheckFn));
    }
    isLinkActive(router) {
        return (link) => router.isActive(link.urlTree, this.IsActiveMatchOptions);
    }
    setSelectedStateListChildren(uid) {
        if (TDSHelperArray.hasListValue(this.listItem)) {
            this.listItem.forEach(f => {
                f.setSelectedStateListChildren(uid);
            });
        }
        else {
            this.setSelectedState(uid === this.uid);
        }
    }
    get hasLink() {
        return !this.item.disabled && (!this.hasListChild || this.hasAllHidden) && TDSHelperObject.hasValue(this.item.link);
    }
    get hasIcon() {
        return this.item && TDSHelperString.hasValueString(this.item.icon);
    }
    listenItemChangeSelected() {
        if (TDSHelperArray.hasListValue(this.listItem) && this.listItem.length > 0) {
            const listOfTDSMenuItemComponent = this.listItem;
            const changes = listOfTDSMenuItemComponent.changes;
            const mergedObservable = merge(...[changes, ...listOfTDSMenuItemComponent.map(menu => menu.selected$)]);
            changes
                .pipe(startWith(listOfTDSMenuItemComponent), switchMap(() => mergedObservable), startWith(true), map(() => listOfTDSMenuItemComponent.some(e => e.isSelected)), takeUntil(this.destroy$))
                .subscribe(selected => {
                if (selected != this.isSelected)
                    if (!this.hasAllHidden)
                        this.setSelectedState(selected);
                    else {
                        //lấy link hiện tại khi tất ẩn tất cả menu con
                        const hasActiveLinks = this.hasActiveLinks();
                        this.setSelectedState(hasActiveLinks || selected);
                    }
            });
        }
    }
    setTriggerWidth() {
        if (this.cdkOverlayOrigin) {
            /** TODO: fast dom **/
            this.triggerWidth = this.cdkOverlayOrigin.nativeElement.getBoundingClientRect().width;
        }
    }
    onPositionChange(position) {
        const placement = getPlacementName(position);
        this.position = placement;
        // console.log(placement)
        // if (placement === 'rightTop' || placement === 'rightBottom' ) {
        //   this.position = 'rightTop';
        // } 
        // else if (placement === 'leftTop' || placement === 'leftBottom' || placement === 'left') {
        //   this.position = 'left';
        // }
        this._cdr.markForCheck();
    }
    setOpenStateListChildren(value) {
        if (TDSHelperArray.hasListValue(this.listItem)) {
            this.listItem.forEach(f => {
                f.setOpenChildren(value);
            });
            this.item.isOpen = value;
            this._cdr.markForCheck();
        }
    }
    setMouseState(value) {
        this.open$.next(value);
    }
    p_NavigateByUrl() {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j;
        if (!TDSHelperObject.hasValue(this.item.linkProps)) {
            (_a = this.router) === null || _a === void 0 ? void 0 : _a.navigateByUrl(this.item.link);
        }
        else {
            (_b = this.router) === null || _b === void 0 ? void 0 : _b.navigate([this.item.link], {
                queryParams: (_c = this.item.linkProps) === null || _c === void 0 ? void 0 : _c.queryParams,
                fragment: (_d = this.item.linkProps) === null || _d === void 0 ? void 0 : _d.fragment,
                queryParamsHandling: (_e = this.item.linkProps) === null || _e === void 0 ? void 0 : _e.queryParamsHandling,
                preserveFragment: (_f = this.item.linkProps) === null || _f === void 0 ? void 0 : _f.preserveFragment,
                skipLocationChange: (_g = this.item.linkProps) === null || _g === void 0 ? void 0 : _g.skipLocationChange,
                replaceUrl: (_h = this.item.linkProps) === null || _h === void 0 ? void 0 : _h.replaceUrl,
                state: (_j = this.item.linkProps) === null || _j === void 0 ? void 0 : _j.state
            });
        }
    }
}
TDSMenuGroupPopupComponent.ɵfac = function TDSMenuGroupPopupComponent_Factory(t) { return new (t || TDSMenuGroupPopupComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(TDSMenuService), i0.ɵɵdirectiveInject(i2.RouterLink, 8), i0.ɵɵdirectiveInject(i2.RouterLinkWithHref, 8), i0.ɵɵdirectiveInject(i2.Router, 8)); };
TDSMenuGroupPopupComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TDSMenuGroupPopupComponent, selectors: [["tds-menu-group-popup"]], contentQueries: function TDSMenuGroupPopupComponent_ContentQueries(rf, ctx, dirIndex) {
        if (rf & 1) {
            i0.ɵɵcontentQuery(dirIndex, TDSMenuItemComponent, 5);
        }
        if (rf & 2) {
            let _t;
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listItem = _t);
        }
    }, viewQuery: function TDSMenuGroupPopupComponent_Query(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵviewQuery(CdkOverlayOrigin, 7, ElementRef);
            i0.ɵɵviewQuery(RouterLink, 5);
            i0.ɵɵviewQuery(RouterLinkWithHref, 5);
        }
        if (rf & 2) {
            let _t;
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cdkOverlayOrigin = _t.first);
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listOfRouterLink = _t);
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listOfRouterLinkWithHref = _t);
        }
    }, hostAttrs: ["clas", "w-full flex flex-col box-border relative"], hostBindings: function TDSMenuGroupPopupComponent_HostBindings(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵlistener("mouseenter", function TDSMenuGroupPopupComponent_mouseenter_HostBindingHandler() { return ctx.setMouseState(true); })("mouseleave", function TDSMenuGroupPopupComponent_mouseleave_HostBindingHandler() { return ctx.setMouseState(false); });
        }
    }, inputs: { item: "item", isSelected: "isSelected", inlineCollapsed: "inlineCollapsed", options: "options" }, features: [i0.ɵɵNgOnChangesFeature], ngContentSelectors: _c4$1, decls: 5, vars: 10, consts: [["cdkOverlayOrigin", "", 1, "w-full", "flex", 3, "ngClass"], ["origin", "cdkOverlayOrigin"], ["class", "w-full flex items-center py-2.5 pl-3 pr-2.5  rounded group hover:bg-neutral-3-50 dark:hover:bg-d-neutral-3-300", "tooltipPlacement", "right", "tds-button", "", "tds-tooltip", "", 3, "ngClass", "tooltipTitle", "click", 4, "ngIf"], ["class", "w-full flex items-center py-2.5 pl-3 pr-2.5 rounded group  hover:bg-neutral-3-50 dark:hover:bg-d-neutral-3-300", "tds-tooltip", "", 3, "ngClass", "tooltipTitle", "click", 4, "ngIf"], ["cdkConnectedOverlay", "", "cdkConnectedOverlayPanelClass", "bottom-2.5", 3, "cdkConnectedOverlayPositions", "cdkConnectedOverlayOrigin", "cdkConnectedOverlayWidth", "cdkConnectedOverlayOpen", "cdkConnectedOverlayTransformOriginOn", "positionChange"], ["tooltipPlacement", "right", "tds-button", "", "tds-tooltip", "", 1, "w-full", "flex", "items-center", "py-2.5", "pl-3", "pr-2.5", "rounded", "group", "hover:bg-neutral-3-50", "dark:hover:bg-d-neutral-3-300", 3, "ngClass", "tooltipTitle", "click"], ["class", "h-6 w-6 flex ", 4, "ngIf"], [1, "h-6", "w-6", "flex"], [1, "", 3, "routerLink", "queryParams", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", "click"], [3, "status", "dot", 4, "ngIf"], ["class", "text-2xl leading-6   dark:text-d-neutral-1-900 group-hover:text-primary-1 dark:group-hover:text-d-neutral-1-900 ", 3, "ngClass", 4, "ngIf"], [3, "status", "dot"], [1, "text-2xl", "leading-6", "dark:text-d-neutral-1-900", "group-hover:text-primary-1", "dark:group-hover:text-d-neutral-1-900", 3, "ngClass"], ["tds-tooltip", "", 1, "w-full", "flex", "items-center", "py-2.5", "pl-3", "pr-2.5", "rounded", "group", "hover:bg-neutral-3-50", "dark:hover:bg-d-neutral-3-300", 3, "ngClass", "tooltipTitle", "click"], ["class", "h-full", "style", "min-width: 244px;", 3, "ngClass", "margin-top", "mouseenter", "mouseleave", 4, "ngIf"], [1, "h-full", 2, "min-width", "244px", 3, "ngClass", "mouseenter", "mouseleave"], [1, "w-full", "h-full", "flex", "flex-col", "pl-1", "py-1.5", "relative"], [1, "absolute", "inset-0", "overflow-y-auto", "overflow-x-hidden", "no-scrollbar"], [1, "bg-white", "dark:bg-d-neutral-3-200", "w-full", "py-2", "rounded"]], template: function TDSMenuGroupPopupComponent_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵprojectionDef();
            i0.ɵɵelementStart(0, "div", 0, 1);
            i0.ɵɵtemplate(2, TDSMenuGroupPopupComponent_div_2_Template, 2, 7, "div", 2);
            i0.ɵɵtemplate(3, TDSMenuGroupPopupComponent_div_3_Template, 2, 7, "div", 3);
            i0.ɵɵelementEnd();
            i0.ɵɵtemplate(4, TDSMenuGroupPopupComponent_ng_template_4_Template, 1, 1, "ng-template", 4);
            i0.ɵɵlistener("positionChange", function TDSMenuGroupPopupComponent_Template_ng_template_positionChange_4_listener($event) { return ctx.onPositionChange($event); });
        }
        if (rf & 2) {
            const _r0 = i0.ɵɵreference(1);
            i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction1(8, _c3$1, ctx.item.hidden));
            i0.ɵɵadvance(2);
            i0.ɵɵproperty("ngIf", ctx.hasLink);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngIf", !ctx.hasLink);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("cdkConnectedOverlayPositions", ctx.overlayPositions)("cdkConnectedOverlayOrigin", _r0)("cdkConnectedOverlayWidth", ctx.triggerWidth)("cdkConnectedOverlayOpen", ctx.item.isOpen && !ctx.hasAllHidden)("cdkConnectedOverlayTransformOriginOn", ".tds-menu-submenu");
        }
    }, directives: [i3$1.CdkOverlayOrigin, i3.NgClass, i3.NgIf, i5$1.TDSTooltipDirective, i2.RouterLinkWithHref, i4.TDSBadgeComponent, i3$1.CdkConnectedOverlay], styles: [""], encapsulation: 2, data: { animation: [slideMotion] }, changeDetection: 0 });
__decorate([
    InputBoolean()
], TDSMenuGroupPopupComponent.prototype, "inlineCollapsed", void 0);
(function () {
    (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSMenuGroupPopupComponent, [{
            type: Component,
            args: [{ selector: 'tds-menu-group-popup', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: {
                        clas: "w-full flex flex-col box-border relative",
                        '(mouseenter)': 'setMouseState(true)',
                        '(mouseleave)': 'setMouseState(false)'
                    }, animations: [slideMotion], template: "<div class=\"w-full flex\" [ngClass]=\"{'hidden':item.hidden}\" cdkOverlayOrigin #origin=\"cdkOverlayOrigin\">\r\n    <div *ngIf=\"hasLink\"\r\n        class=\"w-full flex items-center py-2.5 pl-3 pr-2.5  rounded group hover:bg-neutral-3-50 dark:hover:bg-d-neutral-3-300\"\r\n        [ngClass]=\"{'bg-neutral-3-50 text-primary-1 dark:bg-d-neutral-3-300':isSelected,\r\n' text-neutral-1-300':!isSelected,\r\n'cursor-pointer':!item.disabled}\" (click)=\"onClickItem($event)\" [tooltipTitle]=\"item.name\" tooltipPlacement=\"right\"\r\n        tds-button tds-tooltip>\r\n        <div class=\"h-6 w-6 flex \" *ngIf=\"hasIcon\">\r\n            <a class=\"\" (click)=\"onClickItem($event)\" [routerLink]=\"[item.link]\"\r\n                [queryParams]=\"item.linkProps?.queryParams\" [fragment]=\"item.linkProps?.fragment\"\r\n                [queryParamsHandling]=\"item.linkProps?.queryParamsHandling\"\r\n                [preserveFragment]=\"item.linkProps?.preserveFragment!\"\r\n                [skipLocationChange]=\"item.linkProps?.skipLocationChange!\" [replaceUrl]=\"item.linkProps?.replaceUrl!\"\r\n                [state]=\"item.linkProps?.state\">\r\n                <tds-badge *ngIf=\"item.dot\" [status]=\"item.dot.status\" [dot]=\"true\">\r\n                    <span  [ngClass]=\"item.icon!\"\r\n                        class=\"text-2xl leading-6   dark:text-d-neutral-1-900 group-hover:text-primary-1 dark:group-hover:text-d-neutral-1-900 \">\r\n                    </span>\r\n                </tds-badge>\r\n                <span *ngIf=\"!item.dot\" [ngClass]=\"item.icon!\"\r\n                    class=\"text-2xl leading-6   dark:text-d-neutral-1-900 group-hover:text-primary-1 dark:group-hover:text-d-neutral-1-900 \">\r\n                </span>\r\n            </a>\r\n        </div>\r\n    </div>\r\n    <div *ngIf=\"!hasLink\"\r\n        class=\"w-full flex items-center py-2.5 pl-3 pr-2.5 rounded group  hover:bg-neutral-3-50 dark:hover:bg-d-neutral-3-300\"\r\n        [ngClass]=\"{'bg-neutral-3-50   text-primary-1 dark:bg-d-neutral-3-300':isSelected,\r\n' text-neutral-1-300':!isSelected  && !item.isOpen,\r\n'cursor-pointer':!item.disabled}\" (click)=\"onClickItem($event)\" tds-tooltip  [tooltipTitle]=\"item.name!\">\r\n\r\n        <div class=\"h-6 w-6 flex \" *ngIf=\"hasIcon\">\r\n            <tds-badge *ngIf=\"item.dot\" [status]=\"item.dot.status\" [dot]=\"true\">\r\n                <span  [ngClass]=\"item.icon!\"\r\n                    class=\"text-2xl leading-6   dark:text-d-neutral-1-900 group-hover:text-primary-1 dark:group-hover:text-d-neutral-1-900 \">\r\n                </span>\r\n            </tds-badge>\r\n            <span *ngIf=\"!item.dot\" [ngClass]=\"item.icon!\"\r\n                class=\"text-2xl leading-6   dark:text-d-neutral-1-900 group-hover:text-primary-1 dark:group-hover:text-d-neutral-1-900 \">\r\n            </span>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<ng-template cdkConnectedOverlay (positionChange)=\"onPositionChange($event)\" cdkConnectedOverlayPanelClass=\"bottom-2.5\"\r\n    [cdkConnectedOverlayPositions]=\"overlayPositions\" [cdkConnectedOverlayOrigin]=\"origin\"\r\n    [cdkConnectedOverlayWidth]=\"triggerWidth!\" [cdkConnectedOverlayOpen]=\"item.isOpen! && !hasAllHidden\"\r\n    [cdkConnectedOverlayTransformOriginOn]=\"'.tds-menu-submenu'\">\r\n    <div *ngIf=\"hasListChild\" [ngClass]=\"mode\" class=\"h-full\" @slideMotion style=\"min-width: 244px;\"\r\n        [style.margin-top.px]=\"position == 'rightTop'? -5 : 0\" (mouseenter)='setMouseState(true)'\r\n        (mouseleave)='setMouseState(false)'>\r\n        <div class=\"w-full h-full flex flex-col  pl-1 py-1.5 relative\">\r\n            <div class=\"absolute inset-0 overflow-y-auto overflow-x-hidden no-scrollbar\">\r\n                <div class=\"bg-white dark:bg-d-neutral-3-200 w-full py-2 rounded\">\r\n                    <ng-content></ng-content>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-template>", styles: [""] }]
        }], function () {
        return [{ type: i0.ChangeDetectorRef }, { type: TDSMenuService }, { type: i2.RouterLink, decorators: [{
                        type: Optional
                    }] }, { type: i2.RouterLinkWithHref, decorators: [{
                        type: Optional
                    }] }, { type: i2.Router, decorators: [{
                        type: Optional
                    }] }];
    }, { item: [{
                type: Input
            }], isSelected: [{
                type: Input
            }], inlineCollapsed: [{
                type: Input
            }], options: [{
                type: Input
            }], listItem: [{
                type: ContentChildren,
                args: [TDSMenuItemComponent, { descendants: true }]
            }], cdkOverlayOrigin: [{
                type: ViewChild,
                args: [CdkOverlayOrigin, { static: true, read: ElementRef }]
            }], listOfRouterLink: [{
                type: ViewChildren,
                args: [RouterLink]
            }], listOfRouterLinkWithHref: [{
                type: ViewChildren,
                args: [RouterLinkWithHref]
            }] });
})();

const _c0 = ["logo-text"];
function TDSMenuComponent_div_1_div_1_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 8);
        i0.ɵɵprojection(1);
        i0.ɵɵelementEnd();
    }
}
function TDSMenuComponent_div_1_div_2_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 8);
        i0.ɵɵprojection(1, 1);
        i0.ɵɵelementEnd();
    }
}
function TDSMenuComponent_div_1_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 5);
        i0.ɵɵtemplate(1, TDSMenuComponent_div_1_div_1_Template, 2, 0, "div", 6);
        i0.ɵɵtemplate(2, TDSMenuComponent_div_1_div_2_Template, 2, 0, "div", 7);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const ctx_r0 = i0.ɵɵnextContext();
        i0.ɵɵclassMap(ctx_r0.options.background);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", !ctx_r0.inlineCollapsed);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r0.inlineCollapsed);
    }
}
function TDSMenuComponent_ng_container_3_ng_template_1_tds_menu_group_popup_0_ng_template_1_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelement(0, "tds-menu-item", 12);
    }
    if (rf & 2) {
        const children_r10 = ctx.$implicit;
        const ctx_r9 = i0.ɵɵnextContext(4);
        i0.ɵɵproperty("options", ctx_r9.options)("item", children_r10)("isSelected", children_r10.isSelected)("parentIsGroup", true);
    }
}
function TDSMenuComponent_ng_container_3_ng_template_1_tds_menu_group_popup_0_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "tds-menu-group-popup", 11);
        i0.ɵɵtemplate(1, TDSMenuComponent_ng_container_3_ng_template_1_tds_menu_group_popup_0_ng_template_1_Template, 1, 4, "ng-template", 9);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const item_r7 = i0.ɵɵnextContext().$implicit;
        const ctx_r8 = i0.ɵɵnextContext(2);
        i0.ɵɵproperty("options", ctx_r8.options)("item", item_r7);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngForOf", item_r7.listChild);
    }
}
function TDSMenuComponent_ng_container_3_ng_template_1_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵtemplate(0, TDSMenuComponent_ng_container_3_ng_template_1_tds_menu_group_popup_0_Template, 2, 3, "tds-menu-group-popup", 10);
    }
    if (rf & 2) {
        const item_r7 = ctx.$implicit;
        i0.ɵɵproperty("ngIf", !item_r7.hidden);
    }
}
function TDSMenuComponent_ng_container_3_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵtemplate(1, TDSMenuComponent_ng_container_3_ng_template_1_Template, 1, 1, "ng-template", 9);
        i0.ɵɵelementContainerEnd();
    }
    if (rf & 2) {
        const ctx_r1 = i0.ɵɵnextContext();
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngForOf", ctx_r1.listMenu);
    }
}
function TDSMenuComponent_ng_container_4_ng_template_1_tds_menu_group_inline_0_ng_template_1_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelement(0, "tds-menu-item", 15);
    }
    if (rf & 2) {
        const children_r16 = ctx.$implicit;
        const ctx_r15 = i0.ɵɵnextContext(4);
        i0.ɵɵproperty("options", ctx_r15.options)("showIcon", ctx_r15.hasIcon)("item", children_r16)("isSelected", children_r16.isSelected)("parentIsGroup", true);
    }
}
function TDSMenuComponent_ng_container_4_ng_template_1_tds_menu_group_inline_0_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "tds-menu-group-inline", 14);
        i0.ɵɵtemplate(1, TDSMenuComponent_ng_container_4_ng_template_1_tds_menu_group_inline_0_ng_template_1_Template, 1, 5, "ng-template", 9);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const item_r13 = i0.ɵɵnextContext().$implicit;
        const ctx_r14 = i0.ɵɵnextContext(2);
        i0.ɵɵproperty("options", ctx_r14.options)("showIcon", ctx_r14.hasIcon)("item", item_r13);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngForOf", item_r13.listChild);
    }
}
function TDSMenuComponent_ng_container_4_ng_template_1_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵtemplate(0, TDSMenuComponent_ng_container_4_ng_template_1_tds_menu_group_inline_0_Template, 2, 4, "tds-menu-group-inline", 13);
    }
    if (rf & 2) {
        const item_r13 = ctx.$implicit;
        i0.ɵɵproperty("ngIf", !item_r13.hidden);
    }
}
function TDSMenuComponent_ng_container_4_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵtemplate(1, TDSMenuComponent_ng_container_4_ng_template_1_Template, 1, 1, "ng-template", 9);
        i0.ɵɵelementContainerEnd();
    }
    if (rf & 2) {
        const ctx_r2 = i0.ɵɵnextContext();
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngForOf", ctx_r2.listMenu);
    }
}
const _c1 = function (a0) { return { "flex-col": a0 }; };
const _c2 = function (a0) { return { "mt-6": a0 }; };
const _c3 = function (a0, a1) { return { "tdsi-arrow-right-line": a0, "tdsi-arrow-left-line": a1 }; };
function TDSMenuComponent_div_5_Template(rf, ctx) {
    if (rf & 1) {
        const _r19 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 5)(1, "div", 16)(2, "div");
        i0.ɵɵnamespaceSVG();
        i0.ɵɵelementStart(3, "svg", 17);
        i0.ɵɵelement(4, "path", 18)(5, "path", 19)(6, "path", 20)(7, "path", 21);
        i0.ɵɵelementEnd()();
        i0.ɵɵnamespaceHTML();
        i0.ɵɵelementStart(8, "div", 22);
        i0.ɵɵlistener("click", function TDSMenuComponent_div_5_Template_div_click_8_listener() { i0.ɵɵrestoreView(_r19); const ctx_r18 = i0.ɵɵnextContext(); return ctx_r18.onClickInlineCollapsed(); });
        i0.ɵɵelement(9, "span", 23);
        i0.ɵɵelementEnd()()();
    }
    if (rf & 2) {
        const ctx_r3 = i0.ɵɵnextContext();
        i0.ɵɵclassMap(ctx_r3.options.background);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction1(5, _c1, ctx_r3.inlineCollapsed));
        i0.ɵɵadvance(7);
        i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction1(7, _c2, ctx_r3.inlineCollapsed));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction2(9, _c3, ctx_r3.inlineCollapsed, !ctx_r3.inlineCollapsed));
    }
}
const _c4 = [[["", "logo-text", ""]], [["", "logo", ""]]];
const _c5 = function (a0) { return { " overflow-x-hidden": a0 }; };
const _c6 = ["[logo-text]", "[logo]"];
function TDSMenuServiceFactory(serviceInsideDropDown, serviceOutsideDropDown) {
    return serviceInsideDropDown ? serviceInsideDropDown : serviceOutsideDropDown;
}
class TDSMenuComponent {
    constructor(_cdr, tdsMenuService) {
        this._cdr = _cdr;
        this.tdsMenuService = tdsMenuService;
        this.destroy$ = new Subject();
        this.listMenu = [];
        this.showLogo = false;
        this.data = [];
        this.mode = 'dark';
        this.showIcon = true;
        this.inlineCollapsed = false;
        this.options = {
            background: 'bg-white dark:bg-d-neutral-3-200',
            backgroundItem: 'bg-white dark:bg-d-neutral-3-200',
            backgroundItemSelected: 'bg-neutral-3-50 dark:bg-d-neutral-3-300',
            backgroundItemHover: 'dark:hover:bg-d-neutral-3-300  hover:bg-neutral-3-50'
        };
        this.onClickItem = new EventEmitter();
        this.onOpenChange = new EventEmitter();
        this.inlineCollapsed$ = new BehaviorSubject(this.inlineCollapsed);
    }
    ngOnInit() {
        this.tdsMenuService.descendantMenuItemClick$.pipe(takeUntil(this.destroy$)).subscribe(menu => {
            this.onClickItem.emit(menu.item);
            if (TDSHelperArray.hasListValue(this.listOfTDSMenuGroupInlineComponent)) {
                this.listOfTDSMenuGroupInlineComponent.forEach(group => {
                    group.setSelectedStateListChildren(menu.uid);
                });
            }
            if (TDSHelperArray.hasListValue(this.listOfTDSMenuGroupPopupComponent)) {
                this.listOfTDSMenuGroupPopupComponent.forEach(group => {
                    group.setSelectedStateListChildren(menu.uid);
                });
            }
        });
        this.tdsMenuService.groupMenuOpen$.pipe(takeUntil(this.destroy$)).subscribe(menu => {
            if (TDSHelperArray.hasListValue(this.listOfTDSMenuGroupInlineComponent)) {
                this.listOfTDSMenuGroupInlineComponent.forEach(group => {
                    if (group.hasListChild)
                        group.setOpenStateListChildren(group == menu && !group.item.isOpen);
                });
            }
        });
    }
    ngOnChanges(changes) {
        const { data, inlineCollapsed, mode } = changes;
        if (data) {
            this.p_mapData(this.data);
        }
        if (inlineCollapsed) {
            this.inlineCollapsed$.next(this.inlineCollapsed);
        }
        if (mode) {
            this.tdsMenuService.onModeChange(this.mode);
        }
        this._cdr.markForCheck();
    }
    p_mapData(data) {
        if (!TDSHelperArray.hasListValue(data)) {
            this.listMenu = [];
        }
        else {
            this.listMenu = data.map(item => {
                return this.p_mapItem(item);
            });
        }
    }
    p_mapItem(data) {
        let listChild = [];
        if (TDSHelperArray.hasListValue(data.listChild)) {
            listChild = data.listChild.map((item) => {
                return this.p_mapItem(item);
            });
        }
        return {
            name: data.name,
            icon: data.icon,
            disabled: data.disabled,
            isSelected: data.isSelected,
            isOpen: data.isOpen,
            link: data.link,
            listChild: listChild,
            uid: TDSHelperString.genid(),
            hidden: data.hidden,
            groupTitle: data.groupTitle,
            htmlIcon: data.htmlIcon,
            linkProps: data.linkProps,
            badge: data.badge,
            tag: data.tag,
            dot: data.dot,
        };
    }
    ngAfterViewInit() {
        this.inlineCollapsed$.pipe(takeUntil(this.destroy$)).subscribe(() => {
            this.updateInlineCollapse();
            this._cdr.markForCheck();
        });
    }
    updateInlineCollapse() {
        if (this.inlineCollapsed) {
            if (this.listOfTDSMenuGroupInlineComponent.length) {
                this.listOfTDSMenuGroupInlineComponent.forEach(group => {
                    group.setOpenStateListChildren(false);
                });
            }
        }
        else {
            if (this.listOfTDSMenuGroupPopupComponent.length) {
                this.listOfTDSMenuGroupPopupComponent.forEach(group => {
                    group.setOpenStateListChildren(false);
                });
            }
        }
    }
    setInlineCollapsed(inlineCollapsed) {
        this.inlineCollapsed = inlineCollapsed;
        this.inlineCollapsed$.next(inlineCollapsed);
    }
    ngOnDestroy() {
        this.destroy$.next();
        this.destroy$.complete();
    }
    onClickInlineCollapsed() {
        this.inlineCollapsed = !this.inlineCollapsed;
        this.onOpenChange.emit(this.inlineCollapsed);
        this.inlineCollapsed$.next(this.inlineCollapsed);
    }
    get hasIcon() {
        if (!this.showIcon) {
            return false;
        }
        const lstIcon = this.listMenu.filter(f => TDSHelperString.hasValueString(f.icon));
        return lstIcon.length > 0;
    }
}
TDSMenuComponent.ɵfac = function TDSMenuComponent_Factory(t) { return new (t || TDSMenuComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(TDSMenuService)); };
TDSMenuComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TDSMenuComponent, selectors: [["tds-menu"]], contentQueries: function TDSMenuComponent_ContentQueries(rf, ctx, dirIndex) {
        if (rf & 1) {
            i0.ɵɵcontentQuery(dirIndex, _c0, 5);
        }
        if (rf & 2) {
            let _t;
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.logoText = _t.first);
        }
    }, viewQuery: function TDSMenuComponent_Query(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵviewQuery(TDSMenuGroupInlineComponent, 5);
            i0.ɵɵviewQuery(TDSMenuGroupPopupComponent, 5);
        }
        if (rf & 2) {
            let _t;
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listOfTDSMenuGroupInlineComponent = _t);
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listOfTDSMenuGroupPopupComponent = _t);
        }
    }, hostAttrs: [1, "h-full", "flex", "flex-col", "box-border"], hostVars: 4, hostBindings: function TDSMenuComponent_HostBindings(rf, ctx) {
        if (rf & 2) {
            i0.ɵɵclassProp("w-full", !ctx.inlineCollapsed)("w-16", ctx.inlineCollapsed);
        }
    }, inputs: { showLogo: "showLogo", data: "data", mode: "mode", showIcon: "showIcon", inlineCollapsed: "inlineCollapsed", options: "options" }, outputs: { onClickItem: "onClickItem", onOpenChange: "onOpenChange" }, features: [i0.ɵɵProvidersFeature([
            /** use the top level service **/
            TDSMenuService
        ]), i0.ɵɵNgOnChangesFeature], ngContentSelectors: _c6, decls: 6, vars: 10, consts: [[1, "h-full", "w-full", "flex", "flex-col", 3, "ngClass"], ["class", "w-full", 3, "class", 4, "ngIf"], ["cdkScrollable", "", 1, "w-full", "flex-auto", "p-2", "overflow-y-hidden", "no-scrollbar", "hover:overflow-y-auto", 3, "ngClass"], [4, "ngIf"], ["class", "w-full ", 3, "class", 4, "ngIf"], [1, "w-full"], ["class", "w-full flex items-center justify-center  py-2", 4, "ngIf"], ["class", "w-full flex items-center justify-center py-2", 4, "ngIf"], [1, "w-full", "flex", "items-center", "justify-center", "py-2"], ["ngFor", "", 3, "ngForOf"], [3, "options", "item", 4, "ngIf"], [3, "options", "item"], [3, "options", "item", "isSelected", "parentIsGroup"], [3, "options", "showIcon", "item", 4, "ngIf"], [3, "options", "showIcon", "item"], [3, "options", "showIcon", "item", "isSelected", "parentIsGroup"], [1, "w-full", "flex", "justify-between", "items-center", "p-4", 3, "ngClass"], ["width", "45", "height", "45", "viewBox", "0 0 45 45", "fill", "none", "xmlns", "http://www.w3.org/2000/svg"], ["d", "M22.5 45C34.9264 45 45 34.9264 45 22.5C45 10.0736 34.9264 0 22.5 0C10.0736 0 3.60916e-05 10.0736 3.60916e-05 22.5L0 40C0 43 2 45 4.99999 45H22.5Z", 1, "fill-current", "text-primary-1"], ["d", "M37.3261 15.5724C37.1526 14.4349 36.6617 13.3653 35.9067 12.4797C35.1518 11.594 34.1615 10.9262 33.0435 10.5488C31.9255 10.1713 30.7224 10.0986 29.5649 10.3386C28.4073 10.5785 27.3395 11.1219 26.4774 11.9098C25.8672 12.4396 25.3735 13.0838 25.0261 13.8037C24.6787 14.5236 24.4848 15.3043 24.4559 16.0989C24.3652 18.9134 24.364 21.7302 24.3381 24.5458C24.3359 24.6257 24.3517 24.705 24.3842 24.7783C24.4168 24.8516 24.4653 24.9172 24.5266 24.9705C24.6052 24.9896 24.6872 24.9918 24.7668 24.9767C24.8464 24.9617 24.9217 24.9299 24.9872 24.8835C26.1362 24.1121 27.2789 23.3326 28.4153 22.5451C28.4806 22.4941 28.5589 22.4613 28.6418 22.45C28.7248 22.4387 28.8093 22.4494 28.8865 22.481C29.9008 22.8233 30.9895 22.9022 32.0449 22.71C33.2011 22.5252 34.2814 22.0311 35.1648 21.283C36.0481 20.535 36.6994 19.5627 37.0457 18.4751C37.1952 17.9712 37.3132 17.459 37.3991 16.9413V16.0371C37.3779 15.8838 37.3567 15.7258 37.3261 15.5724ZM31.4358 19.0599C31.4218 19.1922 31.3545 19.3137 31.2485 19.3978C31.1425 19.4819 31.0065 19.5217 30.8704 19.5086C30.7981 19.5079 30.7267 19.4933 30.6603 19.4657C30.5938 19.4382 30.5336 19.3982 30.4831 19.348C30.4325 19.2979 30.3927 19.2385 30.3657 19.1734C30.3388 19.1082 30.3253 19.0386 30.3261 18.9684C30.3323 18.8268 30.3923 18.6924 30.4946 18.5913C30.5969 18.4902 30.7341 18.4297 30.8798 18.4213H30.921C30.9924 18.4245 31.0625 18.4414 31.1271 18.4709C31.1918 18.5004 31.2499 18.542 31.298 18.5934C31.3462 18.6447 31.3834 18.7048 31.4077 18.7701C31.4319 18.8354 31.4427 18.9047 31.4394 18.9741C31.4431 19.0014 31.4451 19.0289 31.4453 19.0565L31.4358 19.0599ZM32.456 15.7579C32.2568 15.9773 32.041 16.182 31.8104 16.3702C31.6478 16.4831 31.5205 16.6374 31.4423 16.8161C31.3641 16.9949 31.3383 17.1911 31.3675 17.3831C31.4028 17.6304 31.3004 17.7265 31.0424 17.7059C30.8327 17.6922 30.6206 17.7059 30.3968 17.7059C30.299 17.3587 30.3155 16.9905 30.444 16.6529C30.5724 16.3152 30.8064 16.0251 31.113 15.8231C31.3544 15.6555 31.541 15.4238 31.6502 15.1558C31.6967 15.0338 31.6922 14.899 31.6379 14.7802C31.5835 14.6613 31.4835 14.5678 31.3593 14.5194C31.2063 14.4263 31.0273 14.3816 30.847 14.3917C30.6668 14.4017 30.4942 14.466 30.3532 14.5755C30.2202 14.6968 30.1153 14.8443 30.0457 15.0082C29.9868 15.149 29.9279 15.2085 29.7736 15.189L28.9737 15.0826C28.9931 14.851 29.0655 14.6265 29.1858 14.4257C29.3061 14.2249 29.4711 14.0528 29.6688 13.922C30.078 13.6473 30.5702 13.5138 31.0667 13.5428C31.5632 13.5719 32.0354 13.7618 32.4077 14.0822C32.4502 14.1171 32.4896 14.1554 32.5255 14.1967C32.7293 14.4114 32.8374 14.6957 32.8261 14.9876C32.8149 15.2795 32.6852 15.5551 32.4654 15.7544L32.456 15.7579Z", "fill", "white"], ["d", "M25.7737 30.532C25.6559 29.9849 25.5063 29.4836 24.8678 29.273C23.751 28.9102 22.6436 28.5176 21.5351 28.1284C21.4628 28.096 21.3814 28.0881 21.304 28.1062C21.2266 28.1243 21.1578 28.1672 21.1086 28.228C20.1944 29.1299 19.2661 30.0193 18.3496 30.92C18.1576 31.1123 17.9856 31.3309 17.8042 31.5381L17.6616 31.5324C17.5981 31.425 17.5252 31.3232 17.4437 31.2279C16.4282 30.2287 15.401 29.2352 14.3808 28.2349C14.3329 28.1735 14.2652 28.1295 14.1885 28.1099C14.1118 28.0904 14.0306 28.0965 13.9579 28.1273C12.8332 28.5256 11.7054 28.9182 10.5745 29.3051C10.3839 29.3615 10.2135 29.4689 10.0829 29.6151C9.95224 29.7612 9.86663 29.9402 9.83587 30.1314C9.55785 31.4271 9.26569 32.7204 8.98179 34.015C8.85338 34.601 8.73086 35.1881 8.6001 35.8005L26.8999 35.7913C26.8787 35.6769 26.8622 35.5853 26.8433 35.496C26.4868 33.841 26.1302 32.1863 25.7737 30.532Z", "fill", "white"], ["d", "M14.2763 24.0218C14.377 24.8267 14.7715 25.5697 15.3881 26.116C16.0046 26.6624 16.8024 26.9758 17.6365 26.9993C18.4707 27.0229 19.2858 26.755 19.934 26.2444C20.5822 25.7337 21.0204 25.0142 21.1691 24.2164C21.2975 23.4564 21.46 22.7021 21.612 21.9467C21.7537 21.3605 21.7358 20.7486 21.56 20.1711C21.3842 19.5937 21.0566 19.0708 20.6095 18.6538C20.2307 18.2975 19.7812 18.0199 19.2885 17.8377C18.7958 17.6555 18.27 17.5725 17.7433 17.5939C17.3498 17.6431 16.9493 17.6638 16.5652 17.7462C15.6713 17.9579 14.8937 18.4923 14.3905 19.2408C13.8873 19.9892 13.6961 20.8957 13.8557 21.7762C14.0053 22.5224 14.1585 23.2698 14.2763 24.0218Z", "fill", "white"], [1, "p-2", "bg-neutral-3-50", "dark:bg-d-neutral-3-300", "border", "border-transparent", "rounded-full", "flex", 3, "ngClass", "click"], [1, "text-neutral-1-300", "dark:text-d-neutral-1-500", "text-base", "leading-4", "cursor-pointer", 3, "ngClass"]], template: function TDSMenuComponent_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵprojectionDef(_c4);
            i0.ɵɵelementStart(0, "div", 0);
            i0.ɵɵtemplate(1, TDSMenuComponent_div_1_Template, 3, 4, "div", 1);
            i0.ɵɵelementStart(2, "div", 2);
            i0.ɵɵtemplate(3, TDSMenuComponent_ng_container_3_Template, 2, 1, "ng-container", 3);
            i0.ɵɵtemplate(4, TDSMenuComponent_ng_container_4_Template, 2, 1, "ng-container", 3);
            i0.ɵɵelementEnd();
            i0.ɵɵtemplate(5, TDSMenuComponent_div_5_Template, 10, 12, "div", 4);
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            i0.ɵɵproperty("ngClass", ctx.mode);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngIf", ctx.showLogo);
            i0.ɵɵadvance(1);
            i0.ɵɵclassMap(ctx.options.background);
            i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction1(8, _c5, ctx.inlineCollapsed));
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngIf", ctx.inlineCollapsed);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngIf", !ctx.inlineCollapsed);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngIf", ctx.hasIcon);
        }
    }, directives: [i3.NgClass, i3.NgIf, i3$2.CdkScrollable, i3.NgForOf, TDSMenuGroupPopupComponent, TDSMenuItemComponent, TDSMenuGroupInlineComponent], styles: [""], encapsulation: 2, changeDetection: 0 });
__decorate([
    InputBoolean()
], TDSMenuComponent.prototype, "showLogo", void 0);
__decorate([
    InputBoolean()
], TDSMenuComponent.prototype, "inlineCollapsed", void 0);
(function () {
    (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSMenuComponent, [{
            type: Component,
            args: [{ selector: 'tds-menu', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: {
                        class: "h-full flex flex-col box-border",
                        '[class.w-full]': `!inlineCollapsed`,
                        '[class.w-16]': `inlineCollapsed`,
                    }, providers: [
                        /** use the top level service **/
                        TDSMenuService
                    ], template: "<div class=\"h-full w-full flex flex-col\" [ngClass]=\"mode\">\r\n    <!-- header -->\r\n    <div class=\"w-full\" [class]=\"options.background\" *ngIf=\"showLogo\">\r\n        <div *ngIf=\"!inlineCollapsed\" class=\"w-full flex items-center justify-center  py-2\">\r\n            <ng-content select=\"[logo-text]\">\r\n            </ng-content>\r\n        </div>\r\n        <div *ngIf=\"inlineCollapsed\" class=\"w-full flex items-center justify-center py-2\">\r\n            <ng-content select=\"[logo]\">\r\n            </ng-content>\r\n        </div>\r\n    </div>\r\n    <!-- body -->\r\n    <div class=\"w-full flex-auto p-2 overflow-y-hidden no-scrollbar hover:overflow-y-auto\" [class]=\"options.background\"\r\n        [ngClass]=\"{' overflow-x-hidden':inlineCollapsed}\" cdkScrollable>\r\n        <!-- menu item  -->\r\n        <ng-container *ngIf=\"inlineCollapsed\">\r\n            <ng-template ngFor let-item [ngForOf]=\"listMenu\">\r\n                <tds-menu-group-popup [options]=\"options\"  [item]=\"item\" *ngIf=\"!item.hidden\">\r\n                    <ng-template ngFor let-children [ngForOf]=\"item.listChild\">\r\n                        <tds-menu-item  [options]=\"options\" [item]=\"children\" [isSelected]=\"children.isSelected!\" [parentIsGroup]=\"true\">\r\n                        </tds-menu-item>\r\n                    </ng-template>\r\n                </tds-menu-group-popup>\r\n            </ng-template>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"!inlineCollapsed\">\r\n            <ng-template ngFor let-item [ngForOf]=\"listMenu\">\r\n                <tds-menu-group-inline [options]=\"options\" [showIcon]=\"hasIcon\" [item]=\"item\" *ngIf=\"!item.hidden\">\r\n                    <ng-template ngFor let-children [ngForOf]=\"item.listChild\">\r\n                        <tds-menu-item [options]=\"options\"  [showIcon]=\"hasIcon\" [item]=\"children\" [isSelected]=\"children.isSelected!\"\r\n                            [parentIsGroup]=\"true\">\r\n                        </tds-menu-item>\r\n                    </ng-template>\r\n                </tds-menu-group-inline>\r\n            </ng-template>\r\n        </ng-container>\r\n    </div>\r\n    <!-- footer -->\r\n    <div class=\"w-full \" [class]=\"options.background\" *ngIf='hasIcon'>\r\n        <div class=\"w-full flex justify-between items-center p-4\" [ngClass]=\"{'flex-col':inlineCollapsed}\">\r\n            <div>\r\n                <svg width=\"45\" height=\"45\" viewBox=\"0 0 45 45\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path\r\n                        d=\"M22.5 45C34.9264 45 45 34.9264 45 22.5C45 10.0736 34.9264 0 22.5 0C10.0736 0 3.60916e-05 10.0736 3.60916e-05 22.5L0 40C0 43 2 45 4.99999 45H22.5Z\"\r\n                        class=\"fill-current text-primary-1\" />\r\n                    <path\r\n                        d=\"M37.3261 15.5724C37.1526 14.4349 36.6617 13.3653 35.9067 12.4797C35.1518 11.594 34.1615 10.9262 33.0435 10.5488C31.9255 10.1713 30.7224 10.0986 29.5649 10.3386C28.4073 10.5785 27.3395 11.1219 26.4774 11.9098C25.8672 12.4396 25.3735 13.0838 25.0261 13.8037C24.6787 14.5236 24.4848 15.3043 24.4559 16.0989C24.3652 18.9134 24.364 21.7302 24.3381 24.5458C24.3359 24.6257 24.3517 24.705 24.3842 24.7783C24.4168 24.8516 24.4653 24.9172 24.5266 24.9705C24.6052 24.9896 24.6872 24.9918 24.7668 24.9767C24.8464 24.9617 24.9217 24.9299 24.9872 24.8835C26.1362 24.1121 27.2789 23.3326 28.4153 22.5451C28.4806 22.4941 28.5589 22.4613 28.6418 22.45C28.7248 22.4387 28.8093 22.4494 28.8865 22.481C29.9008 22.8233 30.9895 22.9022 32.0449 22.71C33.2011 22.5252 34.2814 22.0311 35.1648 21.283C36.0481 20.535 36.6994 19.5627 37.0457 18.4751C37.1952 17.9712 37.3132 17.459 37.3991 16.9413V16.0371C37.3779 15.8838 37.3567 15.7258 37.3261 15.5724ZM31.4358 19.0599C31.4218 19.1922 31.3545 19.3137 31.2485 19.3978C31.1425 19.4819 31.0065 19.5217 30.8704 19.5086C30.7981 19.5079 30.7267 19.4933 30.6603 19.4657C30.5938 19.4382 30.5336 19.3982 30.4831 19.348C30.4325 19.2979 30.3927 19.2385 30.3657 19.1734C30.3388 19.1082 30.3253 19.0386 30.3261 18.9684C30.3323 18.8268 30.3923 18.6924 30.4946 18.5913C30.5969 18.4902 30.7341 18.4297 30.8798 18.4213H30.921C30.9924 18.4245 31.0625 18.4414 31.1271 18.4709C31.1918 18.5004 31.2499 18.542 31.298 18.5934C31.3462 18.6447 31.3834 18.7048 31.4077 18.7701C31.4319 18.8354 31.4427 18.9047 31.4394 18.9741C31.4431 19.0014 31.4451 19.0289 31.4453 19.0565L31.4358 19.0599ZM32.456 15.7579C32.2568 15.9773 32.041 16.182 31.8104 16.3702C31.6478 16.4831 31.5205 16.6374 31.4423 16.8161C31.3641 16.9949 31.3383 17.1911 31.3675 17.3831C31.4028 17.6304 31.3004 17.7265 31.0424 17.7059C30.8327 17.6922 30.6206 17.7059 30.3968 17.7059C30.299 17.3587 30.3155 16.9905 30.444 16.6529C30.5724 16.3152 30.8064 16.0251 31.113 15.8231C31.3544 15.6555 31.541 15.4238 31.6502 15.1558C31.6967 15.0338 31.6922 14.899 31.6379 14.7802C31.5835 14.6613 31.4835 14.5678 31.3593 14.5194C31.2063 14.4263 31.0273 14.3816 30.847 14.3917C30.6668 14.4017 30.4942 14.466 30.3532 14.5755C30.2202 14.6968 30.1153 14.8443 30.0457 15.0082C29.9868 15.149 29.9279 15.2085 29.7736 15.189L28.9737 15.0826C28.9931 14.851 29.0655 14.6265 29.1858 14.4257C29.3061 14.2249 29.4711 14.0528 29.6688 13.922C30.078 13.6473 30.5702 13.5138 31.0667 13.5428C31.5632 13.5719 32.0354 13.7618 32.4077 14.0822C32.4502 14.1171 32.4896 14.1554 32.5255 14.1967C32.7293 14.4114 32.8374 14.6957 32.8261 14.9876C32.8149 15.2795 32.6852 15.5551 32.4654 15.7544L32.456 15.7579Z\"\r\n                        fill=\"white\" />\r\n                    <path\r\n                        d=\"M25.7737 30.532C25.6559 29.9849 25.5063 29.4836 24.8678 29.273C23.751 28.9102 22.6436 28.5176 21.5351 28.1284C21.4628 28.096 21.3814 28.0881 21.304 28.1062C21.2266 28.1243 21.1578 28.1672 21.1086 28.228C20.1944 29.1299 19.2661 30.0193 18.3496 30.92C18.1576 31.1123 17.9856 31.3309 17.8042 31.5381L17.6616 31.5324C17.5981 31.425 17.5252 31.3232 17.4437 31.2279C16.4282 30.2287 15.401 29.2352 14.3808 28.2349C14.3329 28.1735 14.2652 28.1295 14.1885 28.1099C14.1118 28.0904 14.0306 28.0965 13.9579 28.1273C12.8332 28.5256 11.7054 28.9182 10.5745 29.3051C10.3839 29.3615 10.2135 29.4689 10.0829 29.6151C9.95224 29.7612 9.86663 29.9402 9.83587 30.1314C9.55785 31.4271 9.26569 32.7204 8.98179 34.015C8.85338 34.601 8.73086 35.1881 8.6001 35.8005L26.8999 35.7913C26.8787 35.6769 26.8622 35.5853 26.8433 35.496C26.4868 33.841 26.1302 32.1863 25.7737 30.532Z\"\r\n                        fill=\"white\" />\r\n                    <path\r\n                        d=\"M14.2763 24.0218C14.377 24.8267 14.7715 25.5697 15.3881 26.116C16.0046 26.6624 16.8024 26.9758 17.6365 26.9993C18.4707 27.0229 19.2858 26.755 19.934 26.2444C20.5822 25.7337 21.0204 25.0142 21.1691 24.2164C21.2975 23.4564 21.46 22.7021 21.612 21.9467C21.7537 21.3605 21.7358 20.7486 21.56 20.1711C21.3842 19.5937 21.0566 19.0708 20.6095 18.6538C20.2307 18.2975 19.7812 18.0199 19.2885 17.8377C18.7958 17.6555 18.27 17.5725 17.7433 17.5939C17.3498 17.6431 16.9493 17.6638 16.5652 17.7462C15.6713 17.9579 14.8937 18.4923 14.3905 19.2408C13.8873 19.9892 13.6961 20.8957 13.8557 21.7762C14.0053 22.5224 14.1585 23.2698 14.2763 24.0218Z\"\r\n                        fill=\"white\" />\r\n                </svg>\r\n\r\n            </div>\r\n            <div class=\"p-2 bg-neutral-3-50 dark:bg-d-neutral-3-300 border border-transparent rounded-full flex \"\r\n                [ngClass]=\"{'mt-6':inlineCollapsed}\" (click)=\"onClickInlineCollapsed()\">\r\n                <span [ngClass]=\"{'tdsi-arrow-right-line':inlineCollapsed, 'tdsi-arrow-left-line':!inlineCollapsed }\"\r\n                    class=\"text-neutral-1-300 dark:text-d-neutral-1-500 text-base leading-4 cursor-pointer\"></span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>", styles: [""] }]
        }], function () { return [{ type: i0.ChangeDetectorRef }, { type: TDSMenuService }]; }, { showLogo: [{
                type: Input
            }], data: [{
                type: Input
            }], mode: [{
                type: Input
            }], showIcon: [{
                type: Input
            }], inlineCollapsed: [{
                type: Input
            }], options: [{
                type: Input
            }], onClickItem: [{
                type: Output
            }], onOpenChange: [{
                type: Output
            }], listOfTDSMenuGroupInlineComponent: [{
                type: ViewChildren,
                args: [TDSMenuGroupInlineComponent]
            }], listOfTDSMenuGroupPopupComponent: [{
                type: ViewChildren,
                args: [TDSMenuGroupPopupComponent]
            }], logoText: [{
                type: ContentChild,
                args: ['logo-text']
            }] });
})();

class TDSMenuModule {
}
TDSMenuModule.ɵfac = function TDSMenuModule_Factory(t) { return new (t || TDSMenuModule)(); };
TDSMenuModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: TDSMenuModule });
TDSMenuModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [[
            BidiModule,
            CommonModule,
            PlatformModule,
            OverlayModule,
            RouterModule,
            TDSOutletModule,
            TDSBadgeModule,
            TDSToolTipModule,
            TDSTagModule
        ]] });
(function () {
    (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSMenuModule, [{
            type: NgModule,
            args: [{
                    imports: [
                        BidiModule,
                        CommonModule,
                        PlatformModule,
                        OverlayModule,
                        RouterModule,
                        TDSOutletModule,
                        TDSBadgeModule,
                        TDSToolTipModule,
                        TDSTagModule
                    ],
                    declarations: [
                        TDSMenuComponent,
                        TDSMenuItemComponent,
                        TDSMenuGroupInlineComponent,
                        TDSMenuGroupPopupComponent,
                    ],
                    exports: [
                        TDSMenuComponent,
                        TDSMenuItemComponent,
                    ]
                }]
        }], null, null);
})();
(function () {
    (typeof ngJitMode === "undefined" || ngJitMode) && i0.ɵɵsetNgModuleScope(TDSMenuModule, { declarations: [TDSMenuComponent,
            TDSMenuItemComponent,
            TDSMenuGroupInlineComponent,
            TDSMenuGroupPopupComponent], imports: [BidiModule,
            CommonModule,
            PlatformModule,
            OverlayModule,
            RouterModule,
            TDSOutletModule,
            TDSBadgeModule,
            TDSToolTipModule,
            TDSTagModule], exports: [TDSMenuComponent,
            TDSMenuItemComponent] });
})();

/**
 * Generated bundle index. Do not edit.
 */

export { TDSMenuComponent, TDSMenuGroupInlineComponent, TDSMenuGroupPopupComponent, TDSMenuItemComponent, TDSMenuModule, TDSMenuService, TDSMenuServiceFactory };
//# sourceMappingURL=tds-ui-menu.mjs.map
