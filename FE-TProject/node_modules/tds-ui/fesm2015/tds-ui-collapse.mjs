import { __decorate } from 'tslib';
import * as i0 from '@angular/core';
import { Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, Input, EventEmitter, Host, Output, NgModule } from '@angular/core';
import { Subject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import { collapseMotion } from 'tds-ui/core/animation';
import * as i1 from 'tds-ui/core/config';
import { WithConfig } from 'tds-ui/core/config';
import { InputBoolean, TDSHelperObject } from 'tds-ui/shared/utility';
import * as i2 from '@angular/cdk/bidi';
import { BidiModule } from '@angular/cdk/bidi';
import * as i3 from 'tds-ui/core/no-animation';
import { TDSNoAnimationModule } from 'tds-ui/core/no-animation';
import * as i4 from '@angular/common';
import { CommonModule } from '@angular/common';
import * as i5 from 'tds-ui/core/outlet';
import { TDSOutletModule } from 'tds-ui/core/outlet';

const _c0$1 = ["*"];
const TDS_CONFIG_MODULE_NAME$1 = 'collapse';
class TDSCollapseComponent {
    constructor(tdsConfigService, cdr, elementRef, directionality) {
        this.tdsConfigService = tdsConfigService;
        this.cdr = cdr;
        this.elementRef = elementRef;
        this.directionality = directionality;
        this._tdsModuleName = TDS_CONFIG_MODULE_NAME$1;
        this.accordion = false;
        this.bordered = true;
        this.ghost = false;
        this.expandIconPosition = 'left';
        this.dir = 'ltr';
        this.listOfTDSCollapsePanelComponent = [];
        this.destroy$ = new Subject();
        // TODO: move to host after View Engine deprecation
        this.elementRef.nativeElement.classList.add('tds-collapse');
        this.tdsConfigService
            .getConfigChangeEventForComponent(TDS_CONFIG_MODULE_NAME$1)
            .pipe(takeUntil(this.destroy$))
            .subscribe(() => {
            this.cdr.markForCheck();
        });
    }
    ngOnInit() {
        var _a;
        (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe((direction) => {
            this.dir = direction;
            this.cdr.detectChanges();
        });
        this.dir = this.directionality.value;
    }
    addPanel(value) {
        this.listOfTDSCollapsePanelComponent.push(value);
    }
    removePanel(value) {
        this.listOfTDSCollapsePanelComponent.splice(this.listOfTDSCollapsePanelComponent.indexOf(value), 1);
    }
    click(collapse) {
        if (this.accordion && !collapse.active) {
            this.listOfTDSCollapsePanelComponent
                .filter(item => item !== collapse)
                .forEach(item => {
                if (item.active) {
                    item.active = false;
                    item.activeChange.emit(item.active);
                    item.markForCheck();
                }
            });
        }
        collapse.active = !collapse.active;
        collapse.activeChange.emit(collapse.active);
    }
    ngOnDestroy() {
        this.destroy$.next();
        this.destroy$.complete();
    }
}
TDSCollapseComponent.ɵfac = function TDSCollapseComponent_Factory(t) { return new (t || TDSCollapseComponent)(i0.ɵɵdirectiveInject(i1.TDSConfigService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2.Directionality, 8)); };
TDSCollapseComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TDSCollapseComponent, selectors: [["tds-collapse"]], hostAttrs: [1, "block", "box-border", "m-0", "p-0", "rounded"], hostVars: 18, hostBindings: function TDSCollapseComponent_HostBindings(rf, ctx) {
        if (rf & 2) {
            i0.ɵɵclassProp("tds-collapse-icon-position-left", ctx.expandIconPosition === "left")("tds-collapse-icon-position-right", ctx.expandIconPosition === "right")("tds-collapse-ghost", ctx.ghost)("tds-collapse-borderless", !ctx.bordered)("tds-collapse-rtl", ctx.dir === "rtl")("border", ctx.bordered)("border-neutral-2-200", ctx.bordered)("dark:border-d-neutral-2-200", ctx.bordered)("border-b-0", ctx.bordered);
        }
    }, inputs: { accordion: "accordion", bordered: "bordered", ghost: "ghost", expandIconPosition: "expandIconPosition" }, exportAs: ["tdsCollapse"], ngContentSelectors: _c0$1, decls: 1, vars: 0, template: function TDSCollapseComponent_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵprojectionDef();
            i0.ɵɵprojection(0);
        }
    }, encapsulation: 2, changeDetection: 0 });
__decorate([
    WithConfig(),
    InputBoolean()
], TDSCollapseComponent.prototype, "accordion", void 0);
__decorate([
    WithConfig(),
    InputBoolean()
], TDSCollapseComponent.prototype, "bordered", void 0);
__decorate([
    WithConfig(),
    InputBoolean()
], TDSCollapseComponent.prototype, "ghost", void 0);
(function () {
    (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSCollapseComponent, [{
            type: Component,
            args: [{
                    selector: 'tds-collapse',
                    exportAs: 'tdsCollapse',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    encapsulation: ViewEncapsulation.None,
                    template: `
    <ng-content></ng-content>
  `,
                    host: {
                        "class": "block box-border m-0 p-0 rounded",
                        '[class.tds-collapse-icon-position-left]': `expandIconPosition === 'left'`,
                        '[class.tds-collapse-icon-position-right]': `expandIconPosition === 'right'`,
                        '[class.tds-collapse-ghost]': `ghost`,
                        '[class.tds-collapse-borderless]': '!bordered',
                        '[class.tds-collapse-rtl]': "dir === 'rtl'",
                        '[class.border]': 'bordered',
                        '[class.border-neutral-2-200]': 'bordered',
                        '[class.dark:border-d-neutral-2-200]': 'bordered',
                        '[class.border-b-0]': 'bordered',
                    }
                }]
        }], function () {
        return [{ type: i1.TDSConfigService }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i2.Directionality, decorators: [{
                        type: Optional
                    }] }];
    }, { accordion: [{
                type: Input
            }], bordered: [{
                type: Input
            }], ghost: [{
                type: Input
            }], expandIconPosition: [{
                type: Input
            }] });
})();

const _c0 = function (a0, a1) { return { "tdsi-arrow-right-line": a0, "tdsi-arrow-down-line": a1 }; };
function TDSCollapsePanelComponent_ng_container_2_ng_container_1_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵelement(1, "span", 7);
        i0.ɵɵelementContainerEnd();
    }
    if (rf & 2) {
        const ctx_r3 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction2(1, _c0, !ctx_r3.active, ctx_r3.active));
    }
}
function TDSCollapsePanelComponent_ng_container_2_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵtemplate(1, TDSCollapsePanelComponent_ng_container_2_ng_container_1_Template, 2, 4, "ng-container", 3);
        i0.ɵɵelementContainerEnd();
    }
    if (rf & 2) {
        const ctx_r0 = i0.ɵɵnextContext();
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("tdsStringTemplateOutlet", ctx_r0.expandedIcon);
    }
}
function TDSCollapsePanelComponent_ng_container_3_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵelementStart(1, "span", 8);
        i0.ɵɵtext(2);
        i0.ɵɵelementEnd();
        i0.ɵɵelementContainerEnd();
    }
    if (rf & 2) {
        const ctx_r1 = i0.ɵɵnextContext();
        i0.ɵɵadvance(2);
        i0.ɵɵtextInterpolate(ctx_r1.header);
    }
}
function TDSCollapsePanelComponent_div_4_div_1_ng_container_1_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵtext(1);
        i0.ɵɵelementContainerEnd();
    }
    if (rf & 2) {
        const ctx_r7 = i0.ɵɵnextContext(3);
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate(ctx_r7.extra);
    }
}
function TDSCollapsePanelComponent_div_4_div_1_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 11);
        i0.ɵɵtemplate(1, TDSCollapsePanelComponent_div_4_div_1_ng_container_1_Template, 2, 1, "ng-container", 3);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const ctx_r5 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("tdsStringTemplateOutlet", ctx_r5.extra);
    }
}
const _c1 = function (a0, a1) { return { "tdsi-arrow-down-line": a0, "tdsi-arrow-up-line": a1 }; };
function TDSCollapsePanelComponent_div_4_ng_container_2_ng_container_1_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵelement(1, "span", 12);
        i0.ɵɵelementContainerEnd();
    }
    if (rf & 2) {
        const ctx_r8 = i0.ɵɵnextContext(3);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction2(1, _c1, !ctx_r8.active, ctx_r8.active));
    }
}
function TDSCollapsePanelComponent_div_4_ng_container_2_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵtemplate(1, TDSCollapsePanelComponent_div_4_ng_container_2_ng_container_1_Template, 2, 4, "ng-container", 3);
        i0.ɵɵelementContainerEnd();
    }
    if (rf & 2) {
        const ctx_r6 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("tdsStringTemplateOutlet", ctx_r6.expandedIcon);
    }
}
function TDSCollapsePanelComponent_div_4_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 9);
        i0.ɵɵtemplate(1, TDSCollapsePanelComponent_div_4_div_1_Template, 2, 1, "div", 10);
        i0.ɵɵtemplate(2, TDSCollapsePanelComponent_div_4_ng_container_2_Template, 2, 1, "ng-container", 2);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const ctx_r2 = i0.ɵɵnextContext();
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r2.extra);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r2.showArrow && ctx_r2.positionArrow == "right");
    }
}
const _c2 = function (a0) { return { "w-full": a0 }; };
const _c3 = function (a0) { return { "border-t border-neutral-2-200 dark:border-d-neutral-2-200": a0 }; };
const _c4 = ["*"];
const TDS_CONFIG_MODULE_NAME = 'collapsePanel';
class TDSCollapsePanelComponent {
    constructor(tdsConfigService, cdr, tdsCollapseComponent, elementRef, noAnimation) {
        this.tdsConfigService = tdsConfigService;
        this.cdr = cdr;
        this.tdsCollapseComponent = tdsCollapseComponent;
        this.elementRef = elementRef;
        this.noAnimation = noAnimation;
        this._tdsModuleName = TDS_CONFIG_MODULE_NAME;
        this.active = false;
        this.disabled = false;
        this.showArrow = true;
        this.expandedIcon = 'tdsi-arrow-right-line';
        this.tdsClass = "p-4";
        this.tdsHeaderClass = "px-4 py-3";
        this.activeChange = new EventEmitter();
        this.destroy$ = new Subject();
        // TODO: move to host after View Engine deprecation
        this.elementRef.nativeElement.classList.add('tds-collapse-item');
        this.tdsConfigService
            .getConfigChangeEventForComponent(TDS_CONFIG_MODULE_NAME)
            .pipe(takeUntil(this.destroy$))
            .subscribe(() => {
            this.cdr.markForCheck();
        });
    }
    clickHeader() {
        if (!this.disabled) {
            this.tdsCollapseComponent.click(this);
        }
    }
    markForCheck() {
        this.cdr.markForCheck();
    }
    ngOnInit() {
        this.tdsCollapseComponent.addPanel(this);
    }
    ngOnDestroy() {
        this.destroy$.next();
        this.destroy$.complete();
        this.tdsCollapseComponent.removePanel(this);
    }
    get positionArrow() {
        if (TDSHelperObject.hasValue(this.tdsCollapseComponent)) {
            return this.tdsCollapseComponent.expandIconPosition;
        }
        return 'left';
    }
    get bordered() {
        if (TDSHelperObject.hasValue(this.tdsCollapseComponent)) {
            return this.tdsCollapseComponent.bordered;
        }
        return true;
    }
}
TDSCollapsePanelComponent.ɵfac = function TDSCollapsePanelComponent_Factory(t) { return new (t || TDSCollapsePanelComponent)(i0.ɵɵdirectiveInject(i1.TDSConfigService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(TDSCollapseComponent, 1), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i3.TDSNoAnimationDirective, 8)); };
TDSCollapsePanelComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TDSCollapsePanelComponent, selectors: [["tds-collapse-panel"]], hostAttrs: [1, "block"], hostVars: 12, hostBindings: function TDSCollapsePanelComponent_HostBindings(rf, ctx) {
        if (rf & 2) {
            i0.ɵɵclassProp("tds-collapse-no-arrow", !ctx.showArrow)("tds-collapse-item-active", ctx.active)("tds-collapse-item-disabled", ctx.disabled)("border-b", ctx.bordered)("border-neutral-2-200", ctx.bordered)("dark:border-d-neutral-2-200", ctx.bordered);
        }
    }, inputs: { active: "active", disabled: "disabled", showArrow: "showArrow", extra: "extra", header: "header", expandedIcon: "expandedIcon", tdsClass: "tdsClass", tdsHeaderClass: "tdsHeaderClass" }, outputs: { activeChange: "activeChange" }, exportAs: ["tdsCollapsePanel"], ngContentSelectors: _c4, decls: 8, vars: 17, consts: [["role", "tab", 1, "tds-collapse-header", "w-full", "flex", "items-center", "cursor-pointer", "justify-between", 3, "ngClass", "click"], [1, "flex", "items-center", "flex-auto", 3, "ngClass"], [4, "ngIf"], [4, "tdsStringTemplateOutlet"], ["class", "flex items-center", 4, "ngIf"], [1, "tds-collapse-content", "w-full"], [1, "tds-collapse-content-box", "text-body-2", "font-regular", "w-full", "text-neutral-1-900", "dark:text-d-neutral-1-900", 3, "ngClass"], [1, "text-neutral-1-500", "dark:text-d-neutral-1-500", "text-xl", "leading-none", "mr-3", 3, "ngClass"], [1, "text-neutral-1-900", "dark:text-d-neutral-1-900", "text-header-2", "font-semibold"], [1, "flex", "items-center"], ["class", "tds-collapse-extra", 4, "ngIf"], [1, "tds-collapse-extra"], [1, "text-neutral-1-500", "dark:text-d-neutral-1-500", "text-xl", "leading-none", "ml-3", 3, "ngClass"]], template: function TDSCollapsePanelComponent_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵprojectionDef();
            i0.ɵɵelementStart(0, "div", 0);
            i0.ɵɵlistener("click", function TDSCollapsePanelComponent_Template_div_click_0_listener() { return ctx.clickHeader(); });
            i0.ɵɵelementStart(1, "div", 1);
            i0.ɵɵtemplate(2, TDSCollapsePanelComponent_ng_container_2_Template, 2, 1, "ng-container", 2);
            i0.ɵɵtemplate(3, TDSCollapsePanelComponent_ng_container_3_Template, 3, 1, "ng-container", 3);
            i0.ɵɵelementEnd();
            i0.ɵɵtemplate(4, TDSCollapsePanelComponent_div_4_Template, 3, 2, "div", 4);
            i0.ɵɵelementEnd();
            i0.ɵɵelementStart(5, "div", 5)(6, "div", 6);
            i0.ɵɵprojection(7);
            i0.ɵɵelementEnd()();
        }
        if (rf & 2) {
            i0.ɵɵproperty("ngClass", ctx.tdsHeaderClass);
            i0.ɵɵattribute("aria-expanded", ctx.active);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction1(13, _c2, !ctx.showArrow && !ctx.extra));
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngIf", ctx.showArrow && ctx.positionArrow == "left");
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("tdsStringTemplateOutlet", ctx.header);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngIf", ctx.showArrow && ctx.positionArrow == "right" || ctx.extra);
            i0.ɵɵadvance(1);
            i0.ɵɵclassProp("tds-collapse-content-active", ctx.active);
            i0.ɵɵproperty("@.disabled", ctx.noAnimation == null ? null : ctx.noAnimation.noAnimation)("@collapseMotion", ctx.active ? "expanded" : "hidden");
            i0.ɵɵadvance(1);
            i0.ɵɵclassMap(ctx.tdsClass);
            i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction1(15, _c3, ctx.bordered));
        }
    }, directives: [i4.NgClass, i4.NgIf, i5.TDSStringTemplateOutletDirective], encapsulation: 2, data: { animation: [collapseMotion] }, changeDetection: 0 });
__decorate([
    InputBoolean()
], TDSCollapsePanelComponent.prototype, "active", void 0);
__decorate([
    InputBoolean()
], TDSCollapsePanelComponent.prototype, "disabled", void 0);
__decorate([
    WithConfig(),
    InputBoolean()
], TDSCollapsePanelComponent.prototype, "showArrow", void 0);
(function () {
    (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSCollapsePanelComponent, [{
            type: Component,
            args: [{
                    selector: 'tds-collapse-panel',
                    exportAs: 'tdsCollapsePanel',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    encapsulation: ViewEncapsulation.None,
                    animations: [collapseMotion],
                    template: `
  <div role="tab" [attr.aria-expanded]="active"
  class="tds-collapse-header w-full flex items-center  cursor-pointer justify-between" [ngClass]="tdsHeaderClass" (click)="clickHeader()">
  <div class="flex items-center flex-auto" [ngClass]="{'w-full':!showArrow && !extra}">
    <ng-container *ngIf="showArrow && positionArrow == 'left'">
      <ng-container *tdsStringTemplateOutlet="expandedIcon; let expandedIcon">
          <span [ngClass]="{'tdsi-arrow-right-line':!active,'tdsi-arrow-down-line':active}" class="text-neutral-1-500 dark:text-d-neutral-1-500 text-xl leading-none mr-3"></span>       
      </ng-container>
    </ng-container>
    <ng-container *tdsStringTemplateOutlet="header">
      <span class="text-neutral-1-900 dark:text-d-neutral-1-900 text-header-2 font-semibold">{{ header }}</span>
    </ng-container>
  </div> 
  <div class="flex items-center" *ngIf="(showArrow && positionArrow == 'right') || extra">
    <div class="tds-collapse-extra" *ngIf="extra">
      <ng-container *tdsStringTemplateOutlet="extra">{{ extra }}</ng-container>
    </div>
    <ng-container *ngIf="showArrow && positionArrow == 'right'">
      <ng-container *tdsStringTemplateOutlet="expandedIcon; let expandedIcon">
      <span [ngClass]="{'tdsi-arrow-down-line':!active,'tdsi-arrow-up-line':active}" class="text-neutral-1-500 dark:text-d-neutral-1-500 text-xl leading-none ml-3"></span>
        <!-- <span *ngIf="!active" [ngClass]="expandedIcon" class="text-neutral-1-500 dark:text-d-neutral-1-500 text-xl leading-none ml-3"></span>
        <span *ngIf="active" [ngClass]="collapsedIcon || 'tdsi-arrow-down-line'" class="dsads text-neutral-1-500 dark:text-d-neutral-1-500 text-xl leading-none ml-3"></span> -->
      </ng-container>
    </ng-container>
  </div>
</div>
<div class="tds-collapse-content w-full " [class.tds-collapse-content-active]="active"
  [@.disabled]="noAnimation?.noAnimation" [@collapseMotion]="active ? 'expanded' : 'hidden'">
  <div
  [ngClass]="{'border-t border-neutral-2-200 dark:border-d-neutral-2-200':bordered}"
    class="tds-collapse-content-box  text-body-2 font-regular w-full  text-neutral-1-900 dark:text-d-neutral-1-900"
    [class]="tdsClass"
    >
    <ng-content></ng-content>
  </div>
</div>
  `,
                    host: {
                        'class': "block ",
                        '[class.tds-collapse-no-arrow]': '!showArrow',
                        '[class.tds-collapse-item-active]': 'active',
                        '[class.tds-collapse-item-disabled]': 'disabled',
                        '[class.border-b]': "bordered",
                        '[class.border-neutral-2-200]': "bordered",
                        '[class.dark:border-d-neutral-2-200]': "bordered"
                    }
                }]
        }], function () {
        return [{ type: i1.TDSConfigService }, { type: i0.ChangeDetectorRef }, { type: TDSCollapseComponent, decorators: [{
                        type: Host
                    }] }, { type: i0.ElementRef }, { type: i3.TDSNoAnimationDirective, decorators: [{
                        type: Optional
                    }] }];
    }, { active: [{
                type: Input
            }], disabled: [{
                type: Input
            }], showArrow: [{
                type: Input
            }], extra: [{
                type: Input
            }], header: [{
                type: Input
            }], expandedIcon: [{
                type: Input
            }], tdsClass: [{
                type: Input
            }], tdsHeaderClass: [{
                type: Input
            }], activeChange: [{
                type: Output
            }] });
})();

class TDSCollapseModule {
}
TDSCollapseModule.ɵfac = function TDSCollapseModule_Factory(t) { return new (t || TDSCollapseModule)(); };
TDSCollapseModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: TDSCollapseModule });
TDSCollapseModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [[BidiModule, CommonModule, TDSOutletModule, TDSNoAnimationModule]] });
(function () {
    (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSCollapseModule, [{
            type: NgModule,
            args: [{
                    declarations: [TDSCollapsePanelComponent, TDSCollapseComponent],
                    exports: [TDSCollapsePanelComponent, TDSCollapseComponent],
                    imports: [BidiModule, CommonModule, TDSOutletModule, TDSNoAnimationModule]
                }]
        }], null, null);
})();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0.ɵɵsetNgModuleScope(TDSCollapseModule, { declarations: [TDSCollapsePanelComponent, TDSCollapseComponent], imports: [BidiModule, CommonModule, TDSOutletModule, TDSNoAnimationModule], exports: [TDSCollapsePanelComponent, TDSCollapseComponent] }); })();

/**
 * Generated bundle index. Do not edit.
 */

export { TDSCollapseComponent, TDSCollapseModule, TDSCollapsePanelComponent };
//# sourceMappingURL=tds-ui-collapse.mjs.map
