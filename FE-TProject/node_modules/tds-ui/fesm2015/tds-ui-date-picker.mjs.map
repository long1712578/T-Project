{"version":3,"file":"tds-ui-date-picker.mjs","sources":["../../../projects/tds-ui/date-picker/util.ts","../../../projects/tds-ui/date-picker/lib/util.ts","../../../projects/tds-ui/date-picker/date-picker.service.ts","../../../projects/tds-ui/date-picker/calendar-footer.component.html","../../../projects/tds-ui/date-picker/calendar-footer.component.ts","../../../projects/tds-ui/date-picker/lib/abstract-panel-header.ts","../../../projects/tds-ui/date-picker/lib/abstract-panel-header.html","../../../projects/tds-ui/date-picker/lib/decade-header.component.ts","../../../projects/tds-ui/date-picker/lib/abstract-table.ts","../../../projects/tds-ui/date-picker/lib/abstract-table.html","../../../projects/tds-ui/date-picker/lib/decade-table.component.ts","../../../projects/tds-ui/date-picker/lib/year-header.component.ts","../../../projects/tds-ui/date-picker/lib/year-table.component.ts","../../../projects/tds-ui/date-picker/lib/month-header.component.ts","../../../projects/tds-ui/date-picker/lib/month-table.component.ts","../../../projects/tds-ui/date-picker/lib/date-header.component.ts","../../../projects/tds-ui/date-picker/lib/date-table.component.ts","../../../projects/tds-ui/date-picker/inner-popup.component.ts","../../../projects/tds-ui/date-picker/date-range-popup.component.html","../../../projects/tds-ui/date-picker/date-range-popup.component.ts","../../../projects/tds-ui/date-picker/date-picker.component.html","../../../projects/tds-ui/date-picker/date-picker.component.ts","../../../projects/tds-ui/date-picker/lib/lib-packer.module.ts","../../../projects/tds-ui/date-picker/month-picker.component.ts","../../../projects/tds-ui/date-picker/range-picker.component.ts","../../../projects/tds-ui/date-picker/week-picker.component.ts","../../../projects/tds-ui/date-picker/year-picker.component.ts","../../../projects/tds-ui/date-picker/date-picker.module.ts","../../../projects/tds-ui/date-picker/tds-ui-date-picker.ts"],"sourcesContent":["\r\n\r\nimport { CandyDate } from 'tds-ui/core/time';\r\nimport { DisabledDateFn, DisabledTimeConfig, DisabledTimeFn } from './standard-types';\r\n\r\nexport const PREFIX_CLASS = 'tds-picker';\r\n\r\nconst defaultDisabledTime: DisabledTimeConfig = {\r\n  disabledHours(): number[] {\r\n    return [];\r\n  },\r\n  disabledMinutes(): number[] {\r\n    return [];\r\n  },\r\n  disabledSeconds(): number[] {\r\n    return [];\r\n  }\r\n};\r\n\r\nexport function getTimeConfig(value: CandyDate, disabledTime?: DisabledTimeFn): DisabledTimeConfig {\r\n  let disabledTimeConfig = disabledTime ? disabledTime(value && value.nativeDate) : ({} as DisabledTimeConfig);\r\n  disabledTimeConfig = {\r\n    ...defaultDisabledTime,\r\n    ...disabledTimeConfig\r\n  };\r\n  return disabledTimeConfig;\r\n}\r\n\r\nexport function isTimeValidByConfig(value: CandyDate, disabledTimeConfig: DisabledTimeConfig): boolean {\r\n  let invalidTime = false;\r\n  if (value) {\r\n    const hour = value.getHours();\r\n    const minutes = value.getMinutes();\r\n    const seconds = value.getSeconds();\r\n    const disabledHours = disabledTimeConfig.disabledHours();\r\n    if (disabledHours.indexOf(hour) === -1) {\r\n      const disabledMinutes = disabledTimeConfig.disabledMinutes(hour);\r\n      if (disabledMinutes.indexOf(minutes) === -1) {\r\n        const disabledSeconds = disabledTimeConfig.disabledSeconds(hour, minutes);\r\n        invalidTime = disabledSeconds.indexOf(seconds) !== -1;\r\n      } else {\r\n        invalidTime = true;\r\n      }\r\n    } else {\r\n      invalidTime = true;\r\n    }\r\n  }\r\n  return !invalidTime;\r\n}\r\n\r\nexport function isTimeValid(value: CandyDate, disabledTime: DisabledTimeFn): boolean {\r\n  const disabledTimeConfig = getTimeConfig(value, disabledTime);\r\n  return isTimeValidByConfig(value, disabledTimeConfig);\r\n}\r\n\r\nexport function isAllowedDate(value: CandyDate, disabledDate?: DisabledDateFn, disabledTime?: DisabledTimeFn): boolean {\r\n  if (!value) {\r\n    return false;\r\n  }\r\n  if (disabledDate) {\r\n    if (disabledDate(value.nativeDate)) {\r\n      return false;\r\n    }\r\n  }\r\n  if (disabledTime) {\r\n    if (!isTimeValid(value, disabledTime)) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n","\r\n\r\n/**\r\n * Compatible translate the moment-like format pattern to angular's pattern\r\n * Why? For now, we need to support the existing language formats in AntD, and AntD uses the default temporal syntax.\r\n *\r\n * TODO: compare and complete all format patterns\r\n * Each format docs as below:\r\n * @link https://momentjs.com/docs/#/displaying/format/\r\n * @link https://angular.io/api/common/DatePipe#description\r\n * @param format input format pattern\r\n */\r\nexport function transCompatFormat(format: string): string {\r\n  return (\r\n    format &&\r\n    format\r\n      .replace(/Y/g, 'y') // only support y, yy, yyy, yyyy\r\n      .replace(/D/g, 'd')\r\n  ); // d, dd represent of D, DD for momentjs, others are not support\r\n}\r\n","\r\n\r\nimport { Injectable, OnDestroy } from '@angular/core';\r\nimport { ReplaySubject, Subject } from 'rxjs';\r\nimport { CandyDate, cloneDate, CompatibleValue, NormalizedMode, normalizeRangeValue } from 'tds-ui/core/time';\r\nimport { CompatibleDate, TDSDateMode, RangePartType } from './standard-types';\r\n\r\n@Injectable()\r\nexport class DatePickerService implements OnDestroy {\r\n  initialValue!: CompatibleValue;\r\n  value!: CompatibleValue;\r\n  activeDate?: CompatibleValue;\r\n  activeInput: RangePartType = 'left';\r\n  arrowLeft: number = 0;\r\n  isRange = false;\r\n\r\n  valueChange$ = new ReplaySubject<CompatibleValue>(1);\r\n  emitValue$ = new Subject<void>();\r\n  inputPartChange$ = new Subject<RangePartType>();\r\n\r\n  initValue(reset: boolean = false): void {\r\n    if (reset) {\r\n      this.initialValue = this.isRange ? [] : null;\r\n    }\r\n\r\n    this.setValue(this.initialValue);\r\n  }\r\n\r\n  hasValue(value: CompatibleValue = this.value): boolean {\r\n    if (Array.isArray(value)) {\r\n      return !!value[0] || !!value[1];\r\n    } else {\r\n      return !!value;\r\n    }\r\n  }\r\n\r\n  makeValue(value?: CompatibleDate): CompatibleValue {\r\n    if (this.isRange) {\r\n      return value ? (value as Date[]).map(val => new CandyDate(val)) : [];\r\n    } else {\r\n      return value ? new CandyDate(value as Date) : null;\r\n    }\r\n  }\r\n\r\n  setActiveDate(value: CompatibleValue, hasTimePicker: boolean = false, mode: NormalizedMode = 'month'): void {\r\n    const parentPanels: { [key in TDSDateMode]?: NormalizedMode } = {\r\n      date: 'month',\r\n      month: 'year',\r\n      year: 'decade'\r\n    };\r\n    if (this.isRange) {\r\n      this.activeDate = normalizeRangeValue(value as CandyDate[], hasTimePicker, parentPanels[mode], this.activeInput);\r\n    } else {\r\n      this.activeDate = cloneDate(value);\r\n    }\r\n  }\r\n\r\n  setValue(value: CompatibleValue): void {\r\n    this.value = value;\r\n    this.valueChange$.next(this.value);\r\n  }\r\n\r\n  getActiveIndex(part: RangePartType = this.activeInput): number {\r\n    return { left: 0, right: 1 }[part];\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.valueChange$.complete();\r\n    this.emitValue$.complete();\r\n    this.inputPartChange$.complete();\r\n  }\r\n}\r\n","<div class=\"{{ prefixCls }}-footer w-full  border-0 border-t  border-neutral-2-200 dark:border-d-neutral-2-200\">\r\n    <div *ngIf=\"extraFooter\" class=\"{{ prefixCls }}-footer-extra\">\r\n        <ng-container [ngSwitch]=\"true\">\r\n            <ng-container *ngSwitchCase=\"isTemplateRef(extraFooter)\">\r\n                <ng-container *ngTemplateOutlet=\"$any(extraFooter)\"></ng-container>\r\n            </ng-container>\r\n            <ng-container *ngSwitchCase=\"isNonEmptyString(extraFooter)\">\r\n                <span [innerHTML]=\"extraFooter\"></span>\r\n            </ng-container>\r\n        </ng-container>\r\n    </div>\r\n    <div class=\"flex justify-center px-4 py-2 w-full\" *ngIf=\"!isRange\">\r\n        <a class=\"{{ prefixCls }}-today-btn {{ isTodayDisabled ? prefixCls + '-today-btn-disabled' : 'text-primary-1' }} text-body-2 font-semibold uppercase\"\r\n            role=\"button\" (click)=\"isTodayDisabled ? null : onClickToday()\" title=\"{{ todayTitle }}\">\r\n            {{ locale.today }}\r\n        </a>\r\n    </div>\r\n    <div class=\"flex justify-end items-center px-4 py-2 w-full\" *ngIf=\"isRange\">\r\n        <div *ngIf=\"!hasTimePicker && (startDate || endDate)\" class=\"px-4\">\r\n            <div class=\"flex items-center text-neutral-1-400\">\r\n                <div class=\"flex\">\r\n                    <span class=\"text-lg leading-5  tdsi-calendar-fill\"></span>\r\n                </div>\r\n                <div class=\"px-2 text-body-2 font-regular text-center\">\r\n                  {{startDate}}\r\n                </div>\r\n                <div class=\"text-body-2 font-regular\">\r\n                    -\r\n                </div>\r\n                <div class=\"px-2  text-body-2 font-regular text-center\">\r\n                    {{endDate}}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"ml-2\">\r\n            <button tds-button color=\"secondary\" class=\"mr-2\" (click)=\"onClickCancel()\">Cancel</button>\r\n            <button tds-button color=\"primary\"   [disabled]=\"okDisabled\"\r\n            (click)=\"okDisabled ? null : clickOk.emit()\">Apply</button>\r\n        </div>\r\n    </div>\r\n</div>","\r\n\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { TDSHelperObject, TDSSafeAny } from 'tds-ui/shared/utility';\r\nimport { CandyDate } from 'tds-ui/core/time';\r\nimport { isNonEmptyString, isTemplateRef } from 'tds-ui/core/util';\r\nimport { DateHelperService, TDSCalendarI18nInterface } from 'tds-ui/i18n';\r\nimport { DatePickerService } from './date-picker.service';\r\nimport { transCompatFormat } from './lib/util';\r\nimport { CompatibleDate } from './standard-types';\r\nimport { PREFIX_CLASS } from './util';\r\n\r\n@Component({\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'calendar-footer',\r\n  exportAs: 'calendarFooter',\r\n  templateUrl:'./calendar-footer.component.html', \r\n})\r\nexport class CalendarFooterComponent implements OnChanges,  OnDestroy {\r\n  @Input() locale!: TDSCalendarI18nInterface;\r\n  @Input() showToday: boolean = false;\r\n  @Input() showNow: boolean = false;\r\n  @Input() hasTimePicker: boolean = false;\r\n  @Input() isRange: boolean = false;\r\n  @Input() listDate!: CompatibleDate | TDSSafeAny;\r\n\r\n  @Input() okDisabled: boolean = false;\r\n  @Input() disabledDate?: (d: Date) => boolean;\r\n  @Input() extraFooter?: TemplateRef<void> | string;\r\n  @Input() rangeQuickSelector: TemplateRef<any> | null = null;\r\n\r\n  @Output() readonly clickOk = new EventEmitter<void>();\r\n  @Output() readonly clickCancel = new EventEmitter<void>();\r\n  @Output() readonly clickToday = new EventEmitter<CandyDate>();\r\n\r\n  prefixCls: string = PREFIX_CLASS;\r\n  isTemplateRef = isTemplateRef;\r\n  isNonEmptyString = isNonEmptyString;\r\n  isTodayDisabled: boolean = false;\r\n  todayTitle: string = '';\r\n  private destroy$ = new Subject<void>();\r\n  startDate:string =\"\";\r\n  endDate:string=\"\";\r\n  constructor(private dateHelper: DateHelperService,\r\n    public datePickerService: DatePickerService,    \r\n    ) {}\r\n    \r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const now: Date = new Date();\r\n    if (changes.disabledDate) {\r\n      this.isTodayDisabled = !!(this.disabledDate && this.disabledDate(now));\r\n    }\r\n    if (changes.locale) {\r\n      // NOTE: Compat for DatePipe formatting rules\r\n      const dateFormat: string = transCompatFormat(this.locale.dateFormat);\r\n      this.todayTitle = this.dateHelper.format(now, dateFormat);\r\n    }\r\n    if(changes.listDate)\r\n    {\r\n      if(this.isRange)\r\n      {\r\n        const dateFormat: string = transCompatFormat(this.locale.dateFormat);\r\n       \r\n        if(TDSHelperObject.hasValue(this.listDate))\r\n        {\r\n          let startDate = this.listDate[0];\r\n          let endDate = this.listDate[1];\r\n          if(TDSHelperObject.hasValue(startDate))\r\n          {\r\n            this.startDate =  this.dateHelper.format(startDate.nativeDate, dateFormat);\r\n          }else{\r\n            this.startDate =\"\";\r\n          }\r\n          if(TDSHelperObject.hasValue(endDate))\r\n          {\r\n            this.endDate =  this.dateHelper.format(endDate.nativeDate, dateFormat);\r\n          }else{\r\n            this.endDate =\"\";\r\n          }\r\n        }else{\r\n          this.startDate =\"\";\r\n          this.endDate =\"\";\r\n        }\r\n         \r\n       \r\n       \r\n      }\r\n    }\r\n  }\r\n\r\n  onClickToday(): void {\r\n    const now: CandyDate = new CandyDate();\r\n    this.clickToday.emit(now.clone()); // To prevent the \"now\" being modified from outside, we use clone\r\n  }\r\n  onClickCancel(): void {\r\n    this.clickCancel.emit(); // To prevent the \"now\" being modified from outside, we use clone\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n \r\n}\r\n","\r\n\r\nimport { Directive, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\r\nimport { CandyDate } from 'tds-ui/core/time';\r\nimport { TDSCalendarI18nInterface } from 'tds-ui/i18n';\r\n\r\n\r\nimport { TDSDateMode } from '../standard-types';\r\nimport { PanelSelector } from './interface';\r\n\r\n@Directive()\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport abstract class AbstractPanelHeader implements OnInit, OnChanges {\r\n  prefixCls: string = `tds-picker-header`;\r\n  selectors: PanelSelector[] = [];\r\n\r\n  @Input() value!: CandyDate;\r\n  @Input() locale!: TDSCalendarI18nInterface;\r\n  @Input() showSuperPreBtn: boolean = false;\r\n  @Input() showSuperNextBtn: boolean = false;\r\n  @Input() showPreBtn: boolean = true;\r\n  @Input() showNextBtn: boolean = true;\r\n\r\n  @Output() readonly panelModeChange = new EventEmitter<TDSDateMode>();\r\n  @Output() readonly valueChange = new EventEmitter<CandyDate>();\r\n\r\n  abstract getSelectors(): PanelSelector[];\r\n\r\n  superPreviousTitle(): string {\r\n    return this.locale.previousYear;\r\n  }\r\n\r\n  previousTitle(): string {\r\n    return this.locale.previousMonth;\r\n  }\r\n\r\n  superNextTitle(): string {\r\n    return this.locale.nextYear;\r\n  }\r\n\r\n  nextTitle(): string {\r\n    return this.locale.nextMonth;\r\n  }\r\n\r\n  superPrevious(): void {\r\n    this.changeValue(this.value.addYears(-1));\r\n  }\r\n\r\n  superNext(): void {\r\n    this.changeValue(this.value.addYears(1));\r\n  }\r\n\r\n  previous(): void {\r\n    this.changeValue(this.value.addMonths(-1));\r\n  }\r\n\r\n  next(): void {\r\n    this.changeValue(this.value.addMonths(1));\r\n  }\r\n\r\n  changeValue(value: CandyDate): void {\r\n    if (this.value !== value) {\r\n      this.value = value;\r\n      this.valueChange.emit(this.value);\r\n      this.render();\r\n    }\r\n  }\r\n\r\n  changeMode(mode: TDSDateMode): void {\r\n    this.panelModeChange.emit(mode);\r\n  }\r\n\r\n  private render(): void {\r\n    if (this.value) {\r\n      this.selectors = this.getSelectors();\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (!this.value) {\r\n      this.value = new CandyDate(); // Show today by default\r\n    }\r\n    this.selectors = this.getSelectors();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.value || changes.locale) {\r\n      this.render();\r\n    }\r\n  }\r\n  \r\n}\r\n","<div class=\"flex py-2 px-0.5 w-full\" [ngClass]=\"prefixCls\">\r\n  <button *ngIf=\"showSuperPreBtn\" [style.visibility]=\"showSuperPreBtn ? 'visible' : 'hidden'\"\r\n    class=\"{{ prefixCls }}-super-prev-btn text-xl text-neutral-1-500 dark:text-d-neutral-1-500 p-1.5 flex items-center justify-center border border-transparent\"\r\n    role=\"button\" tabindex=\"-1\" title=\"{{ superPreviousTitle() }}\" (click)=\"superPrevious()\">\r\n    <span class=\"tdsi-arrow-previous-fill\"></span>\r\n  </button>\r\n  <button [style.visibility]=\"showPreBtn ? 'visible' : 'hidden'\"\r\n    class=\"{{ prefixCls }}-prev-btn p-1.5 text-xl text-neutral-1-500 dark:text-d-neutral-1-500 flex items-center justify-center border border-transparent\"\r\n    role=\"button\" title=\"{{ previousTitle() }}\" tabindex=\"-1\" (click)=\"previous()\">\r\n    <span class=\"tdsi-arrow-left-line\"></span>\r\n  </button>\r\n\r\n  <div\r\n    class=\"{{ prefixCls }}-view flex-auto flex items-center justify-center font-semibold text-title-1 text-neutral-1-900 dark:text-d-neutral-1-900\">\r\n    <ng-container *ngFor=\"let selector of selectors; let indx= index\">\r\n      <button *ngIf=\"!selector.data\" class=\"{{ selector.className }}\" role=\"button\" type=\"button\"\r\n        title=\"{{ selector.title || null }}\" (click)=\"selector.onClick($event)\">\r\n        {{ selector.label }} &nbsp;\r\n      </button>\r\n      <div *ngIf=\"selector.data\" class=\"px-0.5\"\r\n        [class]=\"{'w-[85px]':selectors.length == 1,'flex-auto':selectors.length > 1 && indx == 0}\">\r\n        <tds-select valueField=\"id\" textField=\"name\" [placeholder]='selector.title!' [ngModel]=\"selector.value\"\r\n          (ngModelChange)=\"selector.onClick($event)\" [data]=\"selector.data\" [allowSearch]=\"false\" >\r\n          <ng-template tds-option-tmp let-label='label' let-item=\"item\" let-value='value' let-selected=\"selected\">\r\n            {{item.name}}\r\n          </ng-template>\r\n        </tds-select>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <button [style.visibility]=\"showNextBtn ? 'visible' : 'hidden'\"\r\n    class=\"{{ prefixCls }}-next-btn text-xl text-neutral-1-500 dark:text-d-neutral-1-500 p-1.5 flex items-center justify-center border border-transparent\"\r\n    role=\"button\" tabindex=\"-1\" title=\"{{ nextTitle() }}\" (click)=\"next()\">\r\n    <span class=\"tdsi-arrow-right-line\"></span>\r\n  </button>\r\n  <button *ngIf=\"showSuperNextBtn\" [style.visibility]=\"showSuperNextBtn ? 'visible' : 'hidden'\"\r\n    class=\"{{ prefixCls }}-super-next-btn text-xl text-neutral-1-500 dark:text-d-neutral-1-500 p-1.5 flex items-center justify-center border border-transparent\"\r\n    role=\"button\" tabindex=\"-1\" title=\"{{ superNextTitle() }}\" (click)=\"superNext()\">\r\n    <span class=\"tdsi-arrow-next-fill\"></span>\r\n  </button>\r\n</div>","\r\n\r\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\r\nimport { AbstractPanelHeader } from './abstract-panel-header';\r\nimport { PanelSelector } from './interface';\r\n\r\n@Component({\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  selector: 'decade-header', // tslint:disable-line:component-selector\r\n  exportAs: 'decadeHeader',\r\n  templateUrl: './abstract-panel-header.html'\r\n})\r\nexport class DecadeHeaderComponent extends AbstractPanelHeader {\r\n  previous(): void {}\r\n  next(): void {}\r\n\r\n  get startYear(): number {\r\n    return parseInt(`${this.value.getYear() / 100}`, 10) * 100;\r\n  }\r\n\r\n  get endYear(): number {\r\n    return this.startYear + 99;\r\n  }\r\n\r\n  superPrevious(): void {\r\n    this.changeValue(this.value.addYears(-100));\r\n  }\r\n\r\n  superNext(): void {\r\n    this.changeValue(this.value.addYears(100));\r\n  }\r\n\r\n  getSelectors(): PanelSelector[] {\r\n    return [\r\n      {\r\n        className: `${this.prefixCls}-decade-btn`,\r\n        title: '',\r\n        onClick: () => {\r\n          // noop\r\n        },\r\n        label: `${this.startYear}-${this.endYear}`\r\n      }\r\n    ];\r\n  }\r\n}\r\n","\r\n\r\nimport { Directive, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChange, SimpleChanges, TemplateRef } from '@angular/core';\r\nimport { CandyDate } from 'tds-ui/core/time';\r\nimport { isNonEmptyString, isTemplateRef } from 'tds-ui/core/util';\r\nimport { TDSCalendarI18nInterface } from 'tds-ui/i18n';\r\nimport { FunctionProp } from 'tds-ui/shared/utility';\r\nimport { DateBodyRow, DateCell } from './interface';\r\n\r\n@Directive()\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport abstract class AbstractTable implements OnInit, OnChanges {\r\n  isTemplateRef = isTemplateRef;\r\n  isNonEmptyString = isNonEmptyString;\r\n  headRow: DateCell[] = [];\r\n  bodyRows: DateBodyRow[] = [];\r\n  MAX_ROW = 6;\r\n  MAX_COL = 7;\r\n\r\n  @Input() prefixCls: string = 'tds-picker';\r\n  @Input() value!: CandyDate;\r\n  @Input() locale!: TDSCalendarI18nInterface;\r\n  @Input() activeDate: CandyDate = new CandyDate();\r\n  @Input() showWeek: boolean = false;\r\n  @Input() selectedValue: CandyDate[] = []; // Range ONLY\r\n  @Input() hoverValue: CandyDate[] = []; // Range ONLY\r\n  @Input() disabledDate?: (d: Date) => boolean;\r\n  @Input() cellRender?: string | TemplateRef<Date> | FunctionProp<TemplateRef<Date> | string>;\r\n  @Input() fullCellRender?: string | TemplateRef<Date> | FunctionProp<TemplateRef<Date> | string>;\r\n\r\n  @Output() readonly valueChange = new EventEmitter<CandyDate>();\r\n  @Output() readonly cellHover = new EventEmitter<CandyDate>(); // Emitted when hover on a day by mouse enter\r\n\r\n  protected render(): void {\r\n    if (this.activeDate) {\r\n      this.headRow = this.makeHeadRow();\r\n      this.bodyRows = this.makeBodyRows();\r\n    }\r\n  }\r\n\r\n  trackByBodyRow(_index: number, item: DateBodyRow): any {\r\n    return item.trackByIndex;\r\n  }\r\n\r\n  trackByBodyColumn(_index: number, item: DateCell): any {\r\n    return item.trackByIndex;\r\n  }\r\n\r\n  hasRangeValue(): boolean {\r\n    return this.selectedValue?.length > 0 || this.hoverValue?.length > 0;\r\n  }\r\n\r\n  getClassMap(cell: DateCell): { [key: string]: boolean } {\r\n    return {\r\n      [`tds-picker-cell `]: true,\r\n      [`tds-picker-cell-in-view`]: true,    \r\n      [`tds-picker-cell-selected`]: cell.isSelected,\r\n      [`tds-picker-cell-disabled`]: cell.isDisabled,\r\n      [`tds-picker-cell-in-range`]: !!cell.isInSelectedRange,\r\n      [`tds-picker-cell-range-start`]: !!cell.isSelectedStart,\r\n      [`tds-picker-cell-range-end`]: !!cell.isSelectedEnd,\r\n      [`tds-picker-cell-range-start-single`]: !!cell.isStartSingle,\r\n      [`tds-picker-cell-range-end-single`]: !!cell.isEndSingle,\r\n      [`tds-picker-cell-range-hover`]: !!cell.isInHoverRange,\r\n      [`tds-picker-cell-range-hover-start`]: !!cell.isHoverStart,\r\n      [`tds-picker-cell-range-hover-end`]: !!cell.isHoverEnd,\r\n      [`tds-picker-cell-range-hover-edge-start`]: !!cell.isFirstCellInPanel,\r\n      [`tds-picker-cell-range-hover-edge-end`]: !!cell.isLastCellInPanel,\r\n      [`tds-picker-cell-range-start-near-hover`]: !!cell.isRangeStartNearHover,\r\n      [`tds-picker-cell-range-end-near-hover`]: !!cell.isRangeEndNearHover,  \r\n     \r\n    };\r\n  }\r\n\r\n  abstract makeHeadRow(): DateCell[];\r\n  abstract makeBodyRows(): DateBodyRow[];\r\n\r\n  ngOnInit(): void {\r\n    this.render();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.activeDate && !changes.activeDate.currentValue) {\r\n      this.activeDate = new CandyDate();\r\n    }\r\n\r\n    if (\r\n      changes.disabledDate ||\r\n      changes.locale ||\r\n      changes.showWeek ||\r\n      this.isDateRealChange(changes.activeDate) ||\r\n      this.isDateRealChange(changes.value) ||\r\n      this.isDateRealChange(changes.selectedValue) ||\r\n      this.isDateRealChange(changes.hoverValue)\r\n    ) {\r\n      this.render();\r\n    }\r\n  }\r\n\r\n  private isDateRealChange(change: SimpleChange): boolean {\r\n    if (change) {\r\n      const previousValue: CandyDate | CandyDate[] = change.previousValue;\r\n      const currentValue: CandyDate | CandyDate[] = change.currentValue;\r\n      if (Array.isArray(currentValue)) {\r\n        return (\r\n          !Array.isArray(previousValue) ||\r\n          currentValue.length !== previousValue.length ||\r\n          currentValue.some((value, index) => {\r\n            const previousCandyDate = previousValue[index];\r\n            return previousCandyDate instanceof CandyDate ? previousCandyDate.isSameDay(value) : previousCandyDate !== value;\r\n          })\r\n        );\r\n      } else {\r\n        return !this.isSameDate(previousValue as CandyDate, currentValue);\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private isSameDate(left: CandyDate, right: CandyDate): boolean {\r\n    return (!left && !right) || (left && right && right.isSameDay(left));\r\n  }\r\n}\r\n","<table class=\"tds-picker-content min-w-[238px] w-full\" cellspacing=\"0\" role=\"grid\">\r\n  <thead *ngIf=\"headRow && headRow.length > 0\">\r\n    <tr role=\"row\">\r\n      <th *ngIf=\"showWeek\" role=\"columnheader\"\r\n        class=\"px-3 text-caption-1 font-semibold text-neutral-1-900 dark:text-d-neutral-1-900 text-center\">\r\n      </th>\r\n      <th *ngFor=\"let cell of headRow\" role=\"columnheader\" title=\"{{ cell.title }}\"\r\n        class=\"text-caption-1 font-semibold text-neutral-1-900 dark:text-d-neutral-1-900 text-center\">\r\n        {{ cell.content }}\r\n      </th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let row of bodyRows; trackBy: trackByBodyRow\" [ngClass]=\"row.classMap!\"  role=\"row\">\r\n      <td *ngIf=\"row.weekNum\" role=\"gridcell\"\r\n        class=\"{{ prefixCls }}-cell-week text-center text-caption-1 font-regular relative w-[34px] h-[34px] min-w-[34px] min-h-[34px] max-w-[34px] max-h-[34px] text-neutral-1-900 dark:text-d-neutral-1-900\">\r\n        <div class=\" absolute inset-0\">\r\n          <div class=\"w-full flex items-center justify-center h-[34px] \">\r\n            {{ row.weekNum }}\r\n          </div>\r\n        </div>\r\n      </td>\r\n      <td *ngFor=\"let cell of row.dateCells; trackBy: trackByBodyColumn\" title=\"{{ cell.title }}\" role=\"gridcell\"\r\n        (click)=\"cell.isDisabled ? null : cell.onClick()\" (mouseenter)=\"cell.onMouseEnter()\"\r\n        class=\"text-center text-caption-1 font-regular relative w-[34px] h-[36px] min-w-[34px] min-h-[36px] max-w-[34px] max-h-[36px] py-px\">\r\n        <ng-container [ngSwitch]=\"prefixCls\">\r\n          <ng-container *ngSwitchCase=\"'tds-picker'\">\r\n            <ng-container [ngSwitch]=\"true\">\r\n              <ng-container *ngSwitchCase=\"isTemplateRef(cell.cellRender)\">\r\n                <!--           *ngSwitchCase not has type assertion support, the cellRender type here is TemplateRef -->\r\n                <ng-container *ngTemplateOutlet=\"$any(cell.cellRender); context: { $implicit: cell.value }\">\r\n                </ng-container>\r\n              </ng-container>\r\n              <ng-container *ngSwitchCase=\"isNonEmptyString(cell.cellRender)\">\r\n                <span [innerHTML]=\"cell.cellRender\"></span>\r\n              </ng-container>\r\n              <ng-container *ngSwitchDefault>\r\n                <div class=\"{{ prefixCls }}-cell-inner absolute inset-0\" [attr.aria-selected]=\"cell.isSelected\"\r\n                  [attr.aria-disabled]=\"cell.isDisabled\">\r\n\r\n                  <div class=\"flex items-center justify-center h-[34px] m-auto \" [ngClass]=\"cell.classMap!\">\r\n                    {{ cell.content }}\r\n                  </div>\r\n\r\n                </div>\r\n              </ng-container>\r\n            </ng-container>\r\n          </ng-container>\r\n          <ng-container *ngSwitchCase=\"'tds-picker-calendar'\">\r\n            <div class=\"{{ prefixCls }}-date tds-picker-cell-inner\"\r\n              [class.tds-picker-calendar-date-today]=\"cell.isToday\">\r\n              <ng-container *ngIf=\"cell.fullCellRender; else defaultCell\">\r\n                <ng-container *ngTemplateOutlet=\"$any(cell.fullCellRender); context: { $implicit: cell.value }\">\r\n                </ng-container>\r\n              </ng-container>\r\n              <ng-template #defaultCell>\r\n                <div class=\"{{ prefixCls }}-date-value\">{{ cell.content }}</div>\r\n                <div class=\"{{ prefixCls }}-date-content\">\r\n                  <ng-container *ngTemplateOutlet=\"$any(cell.cellRender); context: { $implicit: cell.value }\">\r\n                  </ng-container>\r\n                </div>\r\n              </ng-template>\r\n            </div>\r\n          </ng-container>\r\n        </ng-container>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>","\r\n\r\nimport { ChangeDetectionStrategy, Component, OnChanges, ViewEncapsulation } from '@angular/core';\r\nimport { AbstractTable } from './abstract-table';\r\nimport { DateBodyRow, DateCell, DecadeCell } from './interface';\r\n\r\nconst MAX_ROW = 4;\r\nconst MAX_COL = 3;\r\n\r\n@Component({\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'decade-table',\r\n  exportAs: 'decadeTable',\r\n  templateUrl: 'abstract-table.html',\r\n  host:{\r\n    class:\"box-border w-full p-3 flex\"\r\n  } \r\n})\r\nexport class DecadeTableComponent extends AbstractTable implements OnChanges {\r\n  get startYear(): number {\r\n    return parseInt(`${this.activeDate.getYear() / 100}`, 10) * 100;\r\n  }\r\n\r\n  get endYear(): number {\r\n    return this.startYear + 99;\r\n  }\r\n\r\n  makeHeadRow(): DateCell[] {\r\n    return [];\r\n  }\r\n\r\n  makeBodyRows(): DateBodyRow[] {\r\n    const decades: DateBodyRow[] = [];\r\n    const currentYear = this.value && this.value.getYear();\r\n    const startYear = this.startYear;\r\n    const endYear = this.endYear;\r\n    const previousYear = startYear - 10;\r\n\r\n    let index = 0;\r\n    for (let rowIndex = 0; rowIndex < MAX_ROW; rowIndex++) {\r\n      const row: DateBodyRow = {\r\n        dateCells: [],\r\n        trackByIndex: rowIndex\r\n      };\r\n\r\n      for (let colIndex = 0; colIndex < MAX_COL; colIndex++) {\r\n        const start = previousYear + index * 10;\r\n        const end = previousYear + index * 10 + 9;\r\n        const content = `${start}-${end}`;\r\n\r\n        const cell: DecadeCell = {\r\n          trackByIndex: colIndex,\r\n          value: this.activeDate.setYear(start).nativeDate,\r\n          content,\r\n          title: content,\r\n          isDisabled: false,\r\n          isSelected: currentYear >= start && currentYear <= end,\r\n          isLowerThanStart: end < startYear,\r\n          isBiggerThanEnd: start > endYear,\r\n          classMap: {},\r\n          onClick(): void {},\r\n          onMouseEnter(): void {}\r\n        };\r\n\r\n        cell.classMap = this.getClassMap(cell);\r\n        cell.onClick = () => this.chooseDecade(start);\r\n        index++;\r\n        row.dateCells.push(cell);\r\n      }\r\n\r\n      decades.push(row);\r\n    }\r\n    return decades;\r\n  }\r\n\r\n  getClassMap(cell: DecadeCell): { [key: string]: boolean } {\r\n    return {\r\n      [`${this.prefixCls}-cell`]: true,\r\n      [`${this.prefixCls}-cell-in-view`]: !cell.isBiggerThanEnd && !cell.isLowerThanStart,\r\n      [`${this.prefixCls}-cell-selected`]: cell.isSelected,\r\n      [`${this.prefixCls}-cell-disabled`]: cell.isDisabled,\r\n      [`text-neutral-1-900 dark:text-d-neutral-1-900 cursor-pointer text-caption-1 font-regular`]:!cell.isDisabled,\r\n      \r\n    };\r\n  }\r\n\r\n  private chooseDecade(year: number): void {\r\n    this.value = this.activeDate.setYear(year);\r\n    this.valueChange.emit(this.value);\r\n  }\r\n}\r\n","\r\n\r\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\r\nimport { AbstractPanelHeader } from './abstract-panel-header';\r\nimport { PanelSelector } from './interface';\r\n\r\n@Component({\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  selector: 'year-header', // tslint:disable-line:component-selector\r\n  exportAs: 'yearHeader',\r\n  templateUrl: './abstract-panel-header.html'\r\n})\r\nexport class YearHeaderComponent extends AbstractPanelHeader {\r\n  get startYear(): number {\r\n    return parseInt(`${this.value.getYear() / 10}`, 10) * 10;\r\n  }\r\n\r\n  get endYear(): number {\r\n    return this.startYear + 9;\r\n  }\r\n\r\n  superPrevious(): void {\r\n    this.changeValue(this.value.addYears(-10));\r\n  }\r\n\r\n  superNext(): void {\r\n    this.changeValue(this.value.addYears(10));\r\n  }\r\n\r\n  getSelectors(): PanelSelector[] {\r\n    return [\r\n      {\r\n        className: `${this.prefixCls}-year-btn`,\r\n        title: '',\r\n        onClick: () => this.changeMode('decade'),\r\n        label: `${this.startYear}-${this.endYear}`\r\n      }\r\n    ];\r\n  }\r\n}\r\n","\r\n\r\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\r\nimport { CandyDate } from 'tds-ui/core/time';\r\nimport { DateHelperService } from 'tds-ui/i18n';\r\nimport { valueFunctionProp } from 'tds-ui/shared/utility';\r\n\r\n\r\nimport { AbstractTable } from './abstract-table';\r\nimport { DateBodyRow, DateCell, YearCell } from './interface';\r\n\r\n@Component({\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'year-table',\r\n  exportAs: 'yearTable',\r\n  templateUrl: 'abstract-table.html',\r\n  host:{\r\n    class:\"box-border w-full p-3 flex\"\r\n  }  \r\n})\r\nexport class YearTableComponent extends AbstractTable {\r\n  MAX_ROW = 4;\r\n  MAX_COL = 3;\r\n\r\n  constructor(private dateHelper: DateHelperService) {\r\n    super();\r\n  }\r\n\r\n  makeHeadRow(): DateCell[] {\r\n    return [];\r\n  }\r\n\r\n  makeBodyRows(): DateBodyRow[] {\r\n    const currentYear = this.activeDate && this.activeDate.getYear();\r\n    const startYear = parseInt(`${currentYear / 10}`, 10) * 10;\r\n    const endYear = startYear + 9;\r\n    const previousYear = startYear - 1;\r\n    const years: DateBodyRow[] = [];\r\n    let yearValue = 0;\r\n\r\n    for (let rowIndex = 0; rowIndex < this.MAX_ROW; rowIndex++) {\r\n      const row: DateBodyRow = {\r\n        dateCells: [],\r\n        trackByIndex: rowIndex\r\n      };\r\n      for (let colIndex = 0; colIndex < this.MAX_COL; colIndex++) {\r\n        const yearNum = previousYear + yearValue;\r\n        const year = this.activeDate.setYear(yearNum);\r\n        const content = this.dateHelper.format(year.nativeDate, 'yyyy');\r\n        const isDisabled = this.isDisabledYear(year);\r\n        const cell: YearCell = {\r\n          trackByIndex: colIndex,\r\n          value: year.nativeDate,\r\n          isDisabled,\r\n          isSameDecade: yearNum >= startYear && yearNum <= endYear,\r\n          isSelected: yearNum === (this.value && this.value.getYear()),\r\n          content,\r\n          title: content,\r\n          classMap: {},\r\n          isLastCellInPanel: year.getYear() === endYear,\r\n          isFirstCellInPanel: year.getYear() === startYear,\r\n          cellRender: valueFunctionProp(this.cellRender!, year), // Customized content\r\n          fullCellRender: valueFunctionProp(this.fullCellRender!, year),\r\n          onClick: () => this.chooseYear(cell.value.getFullYear()), // don't use yearValue here,\r\n          onMouseEnter: () => this.cellHover.emit(year)\r\n        };\r\n\r\n        this.addCellProperty(cell, year);\r\n        row.dateCells.push(cell);\r\n        yearValue++;\r\n      }\r\n      years.push(row);\r\n    }\r\n    return years;\r\n  }\r\n\r\n  getClassMap(cell: YearCell): { [key: string]: boolean } {\r\n    return {\r\n      ...super.getClassMap(cell),\r\n      [`tds-picker-cell-in-view`]: !!cell.isSameDecade,\r\n      [`p-3 text-neutral-1-900 dark:text-d-neutral-1-900 cursor-pointer text-caption-1 font-regular`]:true,\r\n    };\r\n  }\r\n\r\n  private isDisabledYear(year: CandyDate): boolean {\r\n    if (!this.disabledDate) {\r\n      return false;\r\n    }\r\n\r\n    const firstOfMonth = year.setMonth(0).setDate(1);\r\n\r\n    for (let date = firstOfMonth; date.getYear() === year.getYear(); date = date.addDays(1)) {\r\n      if (!this.disabledDate(date.nativeDate)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private addCellProperty(cell: DateCell, year: CandyDate): void {\r\n    if (this.hasRangeValue()) {\r\n      const [startHover, endHover] = this.hoverValue;\r\n      const [startSelected, endSelected] = this.selectedValue;\r\n      // Selected\r\n      if (startSelected?.isSameYear(year)) {\r\n        cell.isSelectedStart = true;\r\n        cell.isSelected = true;\r\n      }\r\n\r\n      if (endSelected?.isSameYear(year)) {\r\n        cell.isSelectedEnd = true;\r\n        cell.isSelected = true;\r\n      }\r\n\r\n      if (startHover && endHover) {\r\n        cell.isHoverStart = startHover.isSameYear(year);\r\n        cell.isHoverEnd = endHover.isSameYear(year);\r\n        cell.isInHoverRange = startHover.isBeforeYear(year) && year.isBeforeYear(endHover);\r\n      }\r\n      cell.isStartSingle = startSelected && !endSelected;\r\n      cell.isEndSingle = (!startSelected && endSelected) ? true : false;\r\n      cell.isInSelectedRange = startSelected?.isBeforeYear(year) && year?.isBeforeYear(endSelected);\r\n      cell.isRangeStartNearHover = startSelected && cell.isInHoverRange;\r\n      cell.isRangeEndNearHover = endSelected && cell.isInHoverRange;\r\n    } else if (year.isSameYear(this.value)) {\r\n      cell.isSelected = true;\r\n    }\r\n    cell.classMap = this.getClassMap(cell);\r\n  }\r\n\r\n  private chooseYear(year: number): void {\r\n    this.value = this.activeDate.setYear(year);\r\n    this.valueChange.emit(this.value);\r\n    this.render();\r\n  }\r\n}\r\n","\r\n\r\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\r\nimport { CandyDate } from 'tds-ui/core/time';\r\nimport { DateHelperService } from 'tds-ui/i18n';\r\nimport { TDSSafeAny } from 'tds-ui/shared/utility';\r\n\r\nimport { AbstractPanelHeader } from './abstract-panel-header';\r\nimport { PanelSelector } from './interface';\r\nimport { transCompatFormat } from './util';\r\n\r\n@Component({\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  selector: 'month-header', // tslint:disable-line:component-selector\r\n  exportAs: 'monthHeader',\r\n  templateUrl: './abstract-panel-header.html'\r\n})\r\nexport class MonthHeaderComponent extends AbstractPanelHeader {\r\n  constructor(private dateHelper: DateHelperService) {\r\n    super();\r\n  }\r\n\r\n  getSelectors(): PanelSelector[] {\r\n\r\n\r\n    let that = this;\r\n    let year = this.getYears();\r\n    const labelyear = this.dateHelper.format(this.value.nativeDate, transCompatFormat(this.locale.yearFormat));\r\n    const valueYear = year.find(f => { return f.name === labelyear })?.id;\r\n    return [\r\n      {\r\n        className: `${this.prefixCls}-year-btn`,\r\n        title: this.locale.yearSelect,\r\n        onClick: (data: TDSSafeAny) => {\r\n          that.changeValue(that.value.setYear(data));// this.changeMode('year')\r\n        },\r\n        label: labelyear,\r\n        value: valueYear,\r\n        data: year,\r\n      },\r\n\r\n    ];\r\n  }\r\n  private getYears() {\r\n    let result = [];\r\n    const activeDate = new CandyDate(this.value.nativeDate);\r\n    for (let year = 50; year > 0; year--) {\r\n      result.push({ id: activeDate.getYear() - year, name: `${activeDate.getYear() - year}` });\r\n    }\r\n    result.push({ id: activeDate.getYear(), name: `${activeDate.getYear()}` });\r\n    for (let year = 1; year <= 50; year++) {\r\n      result.push({ id: activeDate.getYear() + year, name: `${activeDate.getYear() + year}` });\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","\r\n\r\nimport { ChangeDetectionStrategy, Component, OnChanges, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { CandyDate } from 'tds-ui/core/time';\r\nimport { DateHelperService } from 'tds-ui/i18n';\r\nimport { valueFunctionProp } from 'tds-ui/shared/utility';\r\n\r\n\r\nimport { AbstractTable } from './abstract-table';\r\nimport { DateBodyRow, DateCell } from './interface';\r\n\r\n@Component({\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'month-table',\r\n  exportAs: 'monthTable',\r\n  templateUrl: 'abstract-table.html',\r\n  host:{\r\n    class:\"box-border w-full p-3 flex items-center justify-center\"\r\n  }  \r\n})\r\nexport class MonthTableComponent extends AbstractTable implements OnChanges, OnInit {\r\n  MAX_ROW = 4;\r\n  MAX_COL = 3;\r\n\r\n  constructor(private dateHelper: DateHelperService) {\r\n    super();\r\n  }\r\n\r\n  makeHeadRow(): DateCell[] {\r\n    return [];\r\n  }\r\n\r\n  makeBodyRows(): DateBodyRow[] {\r\n    const months: DateBodyRow[] = [];\r\n    let monthValue = 0;\r\n\r\n    for (let rowIndex = 0; rowIndex < this.MAX_ROW; rowIndex++) {\r\n      const row: DateBodyRow = {\r\n        dateCells: [],\r\n        trackByIndex: rowIndex\r\n      };\r\n\r\n      for (let colIndex = 0; colIndex < this.MAX_COL; colIndex++) {\r\n        const month = this.activeDate.setMonth(monthValue);\r\n        const isDisabled = this.isDisabledMonth(month);\r\n        const content = this.dateHelper.format(month.nativeDate, 'MMMM');\r\n        const cell: DateCell = {\r\n          trackByIndex: colIndex,\r\n          value: month.nativeDate,\r\n          isDisabled,\r\n          isSelected: month.isSameMonth(this.value),\r\n          content,\r\n          title: content,\r\n          classMap: {},\r\n          cellRender: valueFunctionProp(this.cellRender!, month), // Customized content\r\n          fullCellRender: valueFunctionProp(this.fullCellRender!, month),\r\n          onClick: () => this.chooseMonth(cell.value.getMonth()), // don't use monthValue here,\r\n          onMouseEnter: () => this.cellHover.emit(month)\r\n        };\r\n\r\n        this.addCellProperty(cell, month);\r\n        row.dateCells.push(cell);\r\n        monthValue++;\r\n      }\r\n      months.push(row);\r\n    }\r\n    return months;\r\n  }\r\n\r\n  private isDisabledMonth(month: CandyDate): boolean {\r\n    if (!this.disabledDate) {\r\n      return false;\r\n    }\r\n\r\n    const firstOfMonth = month.setDate(1);\r\n\r\n    for (let date = firstOfMonth; date.getMonth() === month.getMonth(); date = date.addDays(1)) {\r\n      if (!this.disabledDate(date.nativeDate)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private addCellProperty(cell: DateCell, month: CandyDate): void {\r\n    if (this.hasRangeValue()) {\r\n      const [startHover, endHover] = this.hoverValue;\r\n      const [startSelected, endSelected] = this.selectedValue;\r\n      // Selected\r\n      if (startSelected?.isSameMonth(month)) {\r\n        cell.isSelectedStart = true;\r\n        cell.isSelected = true;\r\n      }\r\n\r\n      if (endSelected?.isSameMonth(month)) {\r\n        cell.isSelectedEnd = true;\r\n        cell.isSelected = true;\r\n      }\r\n\r\n      if (startHover && endHover) {\r\n        cell.isHoverStart = startHover.isSameMonth(month);\r\n        cell.isHoverEnd = endHover.isSameMonth(month);\r\n        cell.isLastCellInPanel = month.getMonth() === 11;\r\n        cell.isFirstCellInPanel = month.getMonth() === 0;\r\n        cell.isInHoverRange = startHover.isBeforeMonth(month) && month.isBeforeMonth(endHover);\r\n      }\r\n      cell.isStartSingle = startSelected && !endSelected;\r\n      cell.isEndSingle = (!startSelected && endSelected) ? true : false;\r\n      cell.isInSelectedRange = startSelected?.isBeforeMonth(month) && month?.isBeforeMonth(endSelected);\r\n      cell.isRangeStartNearHover = startSelected && cell.isInHoverRange;\r\n      cell.isRangeEndNearHover = endSelected && cell.isInHoverRange;\r\n    } else if (month.isSameMonth(this.value)) {\r\n      cell.isSelected = true;\r\n    }\r\n    cell.classMap = this.getClassMap(cell);\r\n  }\r\n\r\n  private chooseMonth(month: number): void {\r\n    this.value = this.activeDate.setMonth(month);\r\n    this.valueChange.emit(this.value);\r\n  }\r\n  getClassMap(cell: DateCell): { [key: string]: boolean } {\r\n    const date = new CandyDate(cell.value);\r\n    return {\r\n      ...super.getClassMap(cell),\r\n      [`p-3  cursor-pointer text-caption-1 font-regular`]:true,\r\n      [`text-neutral-1-900 dark:text-d-neutral-1-900`]: !cell.isSelected,\r\n      [`text-primary-1`]: cell.isSelected,\r\n    };\r\n  }\r\n}\r\n","\r\n\r\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\r\nimport { CandyDate } from 'tds-ui/core/time';\r\nimport { DateHelperService } from 'tds-ui/i18n';\r\nimport { TDSSafeAny } from 'tds-ui/shared/utility';\r\n\r\nimport { AbstractPanelHeader } from './abstract-panel-header';\r\nimport { PanelSelector } from './interface';\r\nimport { transCompatFormat } from './util';\r\n\r\n@Component({\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  selector: 'date-header', // tslint:disable-line:component-selector\r\n  exportAs: 'dateHeader',\r\n  templateUrl: './abstract-panel-header.html',\r\n  host: {\r\n    class: \"block\"\r\n  }\r\n})\r\nexport class DateHeaderComponent extends AbstractPanelHeader {\r\n  constructor(private dateHelper: DateHelperService) {\r\n    super();\r\n  }\r\n\r\n  getSelectors(): PanelSelector[] {\r\n    let lstMonth = this.getMonths();\r\n    const label = this.dateHelper.format(this.value.nativeDate, this.locale.monthFormat || 'MMMM');\r\n    const value = lstMonth.find(f => { return f.name === label })?.id;\r\n    let that = this;\r\n    let year = this.getYears();\r\n    const labelyear = this.dateHelper.format(this.value.nativeDate, transCompatFormat(this.locale.yearFormat));\r\n    const valueYear = year.find(f => { return f.name === labelyear })?.id;\r\n    return [\r\n      {\r\n        className: `${this.prefixCls}-month-btn`,\r\n        title: this.locale.monthSelect,\r\n        onClick: (data: TDSSafeAny) => {\r\n          that.changeValue(that.value.setMonth(data));\r\n        },\r\n        label: label,\r\n        value: value,\r\n        data: lstMonth,\r\n\r\n      },\r\n      {\r\n        className: `${this.prefixCls}-year-btn`,\r\n        title: this.locale.yearSelect,\r\n        onClick: (data: TDSSafeAny) => {\r\n          that.changeValue(that.value.setYear(data));// this.changeMode('year')\r\n        },\r\n        label: labelyear,\r\n        value: valueYear,\r\n        data: year,\r\n      },\r\n\r\n    ];\r\n  }\r\n  private getMonths() {\r\n    let result = [];\r\n    const activeDate = new CandyDate(this.value.nativeDate);\r\n    for (let monthValue = 0; monthValue < 12; monthValue++) {\r\n      const month = activeDate.setMonth(monthValue);\r\n      const content = this.dateHelper.format(month.nativeDate, 'MMMM');\r\n      result.push({ id: monthValue, name: content });\r\n    }\r\n    return result;\r\n  }\r\n  private getYears() {\r\n    let result = [];\r\n    const activeDate = new CandyDate(this.value.nativeDate);    \r\n    for (let year = 50; year > 0; year--) {\r\n      if(activeDate.getYear() - year > 0)\r\n      result.push({ id: activeDate.getYear() - year, name: `${activeDate.getYear() - year}` });\r\n    }\r\n    result.push({ id: activeDate.getYear(), name: `${activeDate.getYear()}` });\r\n    for (let year = 1; year <= 50; year++) {\r\n      result.push({ id: activeDate.getYear() + year, name: `${activeDate.getYear() + year}` });\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","\r\n\r\nimport { ChangeDetectionStrategy, Component, Input, OnChanges, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { CandyDate } from 'tds-ui/core/time';\r\nimport { DateHelperService, TDSCalendarI18nInterface, TDSI18nService } from 'tds-ui/i18n';\r\nimport { valueFunctionProp } from 'tds-ui/shared/utility';\r\n\r\n\r\nimport { AbstractTable } from './abstract-table';\r\nimport { DateBodyRow, DateCell } from './interface';\r\nimport { transCompatFormat } from './util';\r\n\r\n@Component({\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'date-table',\r\n  exportAs: 'dateTable',\r\n  templateUrl: './abstract-table.html',\r\n  host:{\r\n    class:\"box-border w-full p-3 flex\"\r\n  }  \r\n})\r\nexport class DateTableComponent extends AbstractTable implements OnChanges, OnInit {\r\n  @Input() locale!: TDSCalendarI18nInterface;\r\n\r\n  constructor(private i18n: TDSI18nService, private dateHelper: DateHelperService) {\r\n    super();\r\n  }\r\n\r\n  private changeValueFromInside(value: CandyDate): void {\r\n    // Only change date not change time\r\n    this.activeDate = this.activeDate.setYear(value.getYear()).setMonth(value.getMonth()).setDate(value.getDate());\r\n    this.valueChange.emit(this.activeDate);\r\n\r\n    if (!this.activeDate.isSameMonth(this.value)) {\r\n      this.render();\r\n    }\r\n  }\r\n\r\n  makeHeadRow(): DateCell[] {\r\n    const weekDays: DateCell[] = [];\r\n    const start = this.activeDate.calendarStart({ weekStartsOn: this.dateHelper.getFirstDayOfWeek() });\r\n    for (let colIndex = 0; colIndex < this.MAX_COL; colIndex++) {      \r\n      const day = start.addDays(colIndex);     \r\n      weekDays.push({\r\n        trackByIndex: null,\r\n        value: day.nativeDate,\r\n        title: this.dateHelper.format(day.nativeDate, 'E'), // eg. Tue\r\n        content: this.dateHelper.format(day.nativeDate, this.getVeryShortWeekFormat()), // eg. Tu,\r\n        isSelected: false,\r\n        isDisabled: false,\r\n        onClick(): void {},\r\n        onMouseEnter(): void {}\r\n      });\r\n    }\r\n    return weekDays;\r\n  }\r\n\r\n  private getVeryShortWeekFormat(): string {\r\n    return this.i18n.getLocaleId().toLowerCase().indexOf('zh') === 0 ? 'EEEEE' : 'EEEEEE'; // Use extreme short for chinese\r\n  }\r\n\r\n  makeBodyRows(): DateBodyRow[] {\r\n    const weekRows: DateBodyRow[] = [];\r\n    const firstDayOfMonth = this.activeDate.calendarStart({ weekStartsOn: this.dateHelper.getFirstDayOfWeek() });\r\n\r\n    for (let week = 0; week < this.MAX_ROW; week++) {\r\n      const weekStart = firstDayOfMonth.addDays(week * 7);\r\n      const row: DateBodyRow = {\r\n        isActive: false,\r\n        dateCells: [],\r\n        trackByIndex: week\r\n      };\r\n\r\n      for (let day = 0; day < 7; day++) {\r\n        const date = weekStart.addDays(day);\r\n        const dateFormat = transCompatFormat(this.i18n.getLocaleData('DatePicker.lang.dateFormat', 'YYYY-MM-DD'));\r\n        const title = this.dateHelper.format(date.nativeDate, dateFormat);\r\n        const label = this.dateHelper.format(date.nativeDate, 'dd');\r\n        const cell: DateCell = {\r\n          trackByIndex: day,\r\n          value: date.nativeDate,\r\n          label: label,\r\n          isSelected: false,\r\n          isDisabled: false,\r\n          isToday: false,\r\n          title: title,\r\n          cellRender: valueFunctionProp(this.cellRender!, date), // Customized content\r\n          fullCellRender: valueFunctionProp(this.fullCellRender!, date),\r\n          content: `${date.getDate()}`,\r\n          onClick: () => this.changeValueFromInside(date),\r\n          onMouseEnter: () => this.cellHover.emit(date)\r\n        };\r\n\r\n        this.addCellProperty(cell, date);\r\n\r\n        if (this.showWeek && !row.weekNum) {\r\n          row.weekNum = this.dateHelper.getISOWeek(date.nativeDate);\r\n        }\r\n        if (date.isSameDay(this.value)) {\r\n          row.isActive = date.isSameDay(this.value);\r\n        }\r\n        row.dateCells.push(cell);\r\n      }\r\n      row.classMap = {\r\n        [`tds-picker-week-panel-row`]: this.showWeek,\r\n        [`tds-picker-week-panel-row-selected`]: this.showWeek && row.isActive\r\n      };\r\n      weekRows.push(row);\r\n    }\r\n    return weekRows;\r\n  }\r\n\r\n  addCellProperty(cell: DateCell, date: CandyDate): void {\r\n    if (this.hasRangeValue() && !this.showWeek) {\r\n      const [startHover, endHover] = this.hoverValue;\r\n      const [startSelected, endSelected] = this.selectedValue || [null,null];\r\n      // Selected\r\n      if (startSelected?.isSameDay(date)) {\r\n        cell.isSelectedStart = true;\r\n        cell.isSelected = true;\r\n      }\r\n\r\n      if (endSelected?.isSameDay(date)) {\r\n        cell.isSelectedEnd = true;\r\n        cell.isSelected = true;\r\n      }\r\n\r\n      if (startHover && endHover) {\r\n        cell.isHoverStart = startHover.isSameDay(date);\r\n        cell.isHoverEnd = endHover.isSameDay(date);\r\n        cell.isLastCellInPanel = date.isLastDayOfMonth();\r\n        cell.isFirstCellInPanel = date.isFirstDayOfMonth();\r\n        cell.isInHoverRange = startHover.isBeforeDay(date) && date.isBeforeDay(endHover);\r\n      }\r\n      cell.isStartSingle = startSelected && !endSelected;\r\n      cell.isEndSingle = (!startSelected && endSelected) ? true : false;\r\n      cell.isInSelectedRange = startSelected?.isBeforeDay(date) && date.isBeforeDay(endSelected);\r\n      cell.isRangeStartNearHover = startSelected && cell.isInHoverRange;\r\n      cell.isRangeEndNearHover = endSelected && cell.isInHoverRange;\r\n    }\r\n\r\n    cell.isToday = date.isToday();\r\n    cell.isSelected = date.isSameDay(this.value);\r\n    cell.isDisabled = !!this.disabledDate?.(date.nativeDate);\r\n    cell.classMap = this.getClassMap(cell);\r\n  }\r\n\r\n  getClassMap(cell: DateCell): { [key: string]: boolean } {\r\n    const date = new CandyDate(cell.value);\r\n    \r\n    return {\r\n      ...super.getClassMap(cell),\r\n      [`tds-picker-cell-today`]: !!cell.isToday && date.isSameMonth(this.activeDate),\r\n      [`border border-primary-1`]: !!cell.isToday && date.isSameMonth(this.activeDate),\r\n      [`tds-picker-cell-in-view`]: date.isSameMonth(this.activeDate),\r\n      ['text-neutral-1-900 dark:text-d-neutral-1-900']: date.isSameMonth(this.activeDate) && !cell.isSelected && !cell.isSelectedEnd  && !cell.isSelectedStart,\r\n      ['text-white']:(cell.isSelected || !!cell.isSelectedEnd || !!cell.isSelectedStart) && date.isSameMonth(this.activeDate),      \r\n      [`bg-primary-1`]:(cell.isSelected || !!cell.isSelectedEnd || !!cell.isInSelectedRange || !!cell.isSelectedStart) && date.isSameMonth(this.activeDate),\r\n      [`rounded-md`]:(cell.isSelected || !!cell.isToday) && !(!!cell.isSelectedStart || !!cell.isSelectedEnd) && date.isSameMonth(this.activeDate),\r\n      [`text-neutral-1-300 dark:text-d-neutral-1-300`]: !date.isSameMonth(this.activeDate),     \r\n      [`cursor-pointer`]: !cell.isDisabled,\r\n      [`cursor-not-allowed`]: cell.isDisabled,\r\n      [`bg-opacity-10`]:!!cell.isInSelectedRange,\r\n      [`rounded-l-md`]: !!cell.isSelectedStart,\r\n      [`rounded-r-md`]: !!cell.isSelectedEnd, \r\n      [`hover:bg-neutral-3-50 dark:hover:bg-d-neutral-3-400`]: !cell.isSelected && !cell.isDisabled && !cell.isInSelectedRange,\r\n      [`w-[34px]`]:true   \r\n    };\r\n  }\r\n}\r\n","\r\n\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  Output,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { CandyDate } from 'tds-ui/core/time';\r\nimport { TDSCalendarI18nInterface } from 'tds-ui/i18n';\r\nimport { FunctionProp } from 'tds-ui/shared/utility';\r\n\r\nimport { DisabledDateFn, TDSDateMode, RangePartType, SupportTimeOptions } from './standard-types';\r\nimport { PREFIX_CLASS } from './util';\r\n\r\n@Component({\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'inner-popup',\r\n  exportAs: 'innerPopup',\r\n  template: `\r\n    <div [ngClass]=\"{'tds-picker-datetime-panel w-full flex flex-col':showTimePicker}\">\r\n      <div class=\"{{ prefixCls }}-{{ panelMode }}-panel\">\r\n        <ng-container [ngSwitch]=\"panelMode\">\r\n          <ng-container *ngSwitchCase=\"'decade'\">\r\n            <decade-header\r\n              [(value)]=\"activeDate\"\r\n              [locale]=\"locale\"\r\n              [showSuperPreBtn]=\"enablePrevNext('prev', 'decade')\"\r\n              [showSuperNextBtn]=\"enablePrevNext('next', 'decade')\"\r\n              [showNextBtn]=\"false\"\r\n              [showPreBtn]=\"false\"\r\n              (panelModeChange)=\"panelModeChange.emit($event)\"\r\n              (valueChange)=\"headerChange.emit($event)\"\r\n            ></decade-header>\r\n            <div class=\"{{ prefixCls }}-body\">\r\n              <decade-table\r\n                [activeDate]=\"activeDate\"\r\n                [value]=\"value\"\r\n                [locale]=\"locale\"\r\n                (valueChange)=\"onChooseDecade($event)\"\r\n                [disabledDate]=\"disabledDate\"\r\n              ></decade-table>\r\n            </div>\r\n          </ng-container>\r\n          <ng-container *ngSwitchCase=\"'year'\">\r\n            <year-header\r\n              [(value)]=\"activeDate\"\r\n              [locale]=\"locale\"\r\n              [showSuperPreBtn]=\"enablePrevNext('prev', 'year')\"\r\n              [showSuperNextBtn]=\"enablePrevNext('next', 'year')\"\r\n              [showNextBtn]=\"false\"\r\n              [showPreBtn]=\"false\"\r\n              (panelModeChange)=\"panelModeChange.emit($event)\"\r\n              (valueChange)=\"headerChange.emit($event)\"\r\n            ></year-header>\r\n            <div class=\"{{ prefixCls }}-body\">\r\n              <year-table\r\n                [activeDate]=\"activeDate\"\r\n                [value]=\"value\"\r\n                [locale]=\"locale\"\r\n                [disabledDate]=\"disabledDate\"\r\n                [selectedValue]=\"selectedValue\"\r\n                [hoverValue]=\"hoverValue\"\r\n                (valueChange)=\"onChooseYear($event)\"\r\n                (cellHover)=\"cellHover.emit($event)\"\r\n              ></year-table>\r\n            </div>\r\n          </ng-container>\r\n          <ng-container *ngSwitchCase=\"'month'\">\r\n            <month-header\r\n              [(value)]=\"activeDate\"\r\n              [locale]=\"locale\"\r\n              [showSuperPreBtn]=\"enablePrevNext('prev', 'month')\"\r\n              [showSuperNextBtn]=\"enablePrevNext('next', 'month')\"\r\n              [showNextBtn]=\"false\"\r\n              [showPreBtn]=\"false\"\r\n              (panelModeChange)=\"panelModeChange.emit($event)\"\r\n              (valueChange)=\"headerChange.emit($event)\"\r\n            ></month-header>\r\n            <div class=\"{{ prefixCls }}-body\">\r\n              <month-table\r\n                [value]=\"value\"\r\n                [activeDate]=\"activeDate\"\r\n                [locale]=\"locale\"\r\n                [disabledDate]=\"disabledDate\"\r\n                [selectedValue]=\"selectedValue\"\r\n                [hoverValue]=\"hoverValue\"\r\n                (valueChange)=\"onChooseMonth($event)\"\r\n                (cellHover)=\"cellHover.emit($event)\"\r\n              ></month-table>\r\n            </div>\r\n          </ng-container>\r\n\r\n          <ng-container *ngSwitchDefault>\r\n            <date-header\r\n              [(value)]=\"activeDate\"\r\n              [locale]=\"locale\"\r\n             \r\n              [showPreBtn]=\"showWeek ? enablePrevNext('prev', 'week') : enablePrevNext('prev', 'date')\"\r\n              [showNextBtn]=\"showWeek ? enablePrevNext('next', 'week') : enablePrevNext('next', 'date')\"\r\n              (panelModeChange)=\"panelModeChange.emit($event)\"\r\n              (valueChange)=\"headerChange.emit($event)\"\r\n            ></date-header>\r\n            <div class=\"{{ prefixCls }}-body flex flex-col\">           \r\n              <div  class=\"w-full\">\r\n                <date-table\r\n                  [locale]=\"locale\"\r\n                  [showWeek]=\"showWeek\"\r\n                  [value]=\"value\"\r\n                  [activeDate]=\"activeDate\"\r\n                  [disabledDate]=\"disabledDate\"\r\n                  [cellRender]=\"dateRender\"\r\n                  [selectedValue]=\"selectedValue\"\r\n                  [hoverValue]=\"hoverValue\"\r\n                  (valueChange)=\"onSelectDate($event)\"\r\n                  (cellHover)=\"cellHover.emit($event)\"                  \r\n                ></date-table>\r\n              </div>\r\n\r\n             <div class=\"w-full pb-3 px-4\" *ngIf=\"showTimePicker && timeOptions\">\r\n             <ng-container *ngTemplateOutlet=\"tplshowTimePicker\"></ng-container></div>\r\n            </div>\r\n          </ng-container>\r\n        </ng-container>\r\n      </div>\r\n      \r\n      <ng-template #tplshowTimePicker>\r\n      <tds-time-picker-panel class=\"w-full\"\r\n          [inDatePicker]=\"true\"\r\n          [ngModel]=\"value.nativeDate!\"\r\n          (ngModelChange)=\"onSelectTime($event)\"\r\n          [format]=\"$any(timeOptions?.format)\"\r\n          [hourStep]=\"$any(timeOptions?.hourStep)\"\r\n          [minuteStep]=\"$any(timeOptions?.minuteStep)\"\r\n          [secondStep]=\"$any(timeOptions?.secondStep)\"\r\n          [disabledHours]=\"$any(timeOptions?.disabledHours)\"\r\n          [disabledMinutes]=\"$any(timeOptions?.disabledMinutes)\"\r\n          [disabledSeconds]=\"$any(timeOptions?.disabledSeconds)\"\r\n          [hideDisabledOptions]=\"!!timeOptions?.hideDisabledOptions\"\r\n          [defaultOpenValue]=\"$any(timeOptions?.defaultOpenValue)\"\r\n          [use12Hours]=\"!!timeOptions?.use12Hours\"\r\n          [addOn]=\"$any(timeOptions?.addOn)\"\r\n        ></tds-time-picker-panel>\r\n        <!-- use [opened] to trigger time panel \\`initPosition()\\` -->\r\n      </ng-template>\r\n    </div>\r\n  `,\r\n  host: {\r\n    class: \"box-border\"\r\n  }\r\n})\r\nexport class InnerPopupComponent implements OnChanges {\r\n  @Input() activeDate!: CandyDate;\r\n  @Input() endPanelMode!: TDSDateMode;\r\n  @Input() panelMode!: TDSDateMode;\r\n  @Input() showWeek!: boolean;\r\n  @Input() locale!: TDSCalendarI18nInterface;\r\n  @Input() showTimePicker!: boolean;\r\n  @Input() timeOptions!: SupportTimeOptions | null;\r\n  @Input() disabledDate?: DisabledDateFn;\r\n  @Input() dateRender?: string | TemplateRef<Date> | FunctionProp<TemplateRef<Date> | string>;\r\n  @Input() selectedValue!: CandyDate[]; // Range ONLY\r\n  @Input() hoverValue!: CandyDate[]; // Range ONLY\r\n  @Input() value!: CandyDate;\r\n  @Input() partType!: RangePartType;\r\n\r\n  @Output() readonly panelModeChange = new EventEmitter<TDSDateMode>();\r\n  // TODO: name is not proper\r\n  @Output() readonly headerChange = new EventEmitter<CandyDate>(); // Emitted when user changed the header's value\r\n  @Output() readonly selectDate = new EventEmitter<CandyDate>(); // Emitted when the date is selected by click the date panel\r\n  @Output() readonly selectTime = new EventEmitter<CandyDate>();\r\n  @Output() readonly cellHover = new EventEmitter<CandyDate>(); // Emitted when hover on a day by mouse enter\r\n\r\n  prefixCls: string = PREFIX_CLASS;\r\n\r\n  /**\r\n   * Hide \"next\" arrow in left panel,\r\n   * hide \"prev\" arrow in right panel\r\n   * @param direction\r\n   * @param panelMode\r\n   */\r\n  enablePrevNext(direction: 'prev' | 'next', panelMode: TDSDateMode): boolean {\r\n    if (\r\n      !this.showTimePicker &&\r\n      panelMode === this.endPanelMode &&\r\n      ((this.partType === 'left' && direction === 'next') || (this.partType === 'right' && direction === 'prev'))\r\n    ) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  onSelectTime(date: Date): void {\r\n    this.selectTime.emit(new CandyDate(date));\r\n  }\r\n\r\n  // The value real changed to outside\r\n  onSelectDate(date: CandyDate | Date): void {\r\n    const value = date instanceof CandyDate ? date : new CandyDate(date);\r\n    const timeValue = this.timeOptions && this.timeOptions.defaultOpenValue;\r\n\r\n    // Display timeValue when value is null\r\n    if (!this.value && timeValue) {\r\n      value.setHms(timeValue.getHours(), timeValue.getMinutes(), timeValue.getSeconds());\r\n    }\r\n\r\n    this.selectDate.emit(value);\r\n  }\r\n\r\n  onChooseMonth(value: CandyDate): void {\r\n    this.activeDate = this.activeDate.setMonth(value.getMonth());\r\n    if (this.endPanelMode === 'month') {\r\n      this.value = value;\r\n      this.selectDate.emit(value);\r\n    } else {\r\n      this.headerChange.emit(value);\r\n      this.panelModeChange.emit(this.endPanelMode);\r\n    }\r\n  }\r\n\r\n  onChooseYear(value: CandyDate): void {\r\n    this.activeDate = this.activeDate.setYear(value.getYear());\r\n    if (this.endPanelMode === 'year') {\r\n      this.value = value;\r\n      this.selectDate.emit(value);\r\n    } else {\r\n      this.headerChange.emit(value);\r\n      this.panelModeChange.emit(this.endPanelMode);\r\n    }\r\n  }\r\n\r\n  onChooseDecade(value: CandyDate): void {\r\n    this.activeDate = this.activeDate.setYear(value.getYear());\r\n    if (this.endPanelMode === 'decade') {\r\n      this.value = value;\r\n      this.selectDate.emit(value);\r\n    } else {\r\n      this.headerChange.emit(value);\r\n      this.panelModeChange.emit('year');\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.activeDate && !changes.activeDate.currentValue) {\r\n      this.activeDate = new CandyDate();\r\n    }\r\n    // New Antd vesion has merged 'date' tds 'time' to one panel,\r\n    // So there is not 'time' panel\r\n    if (changes.panelMode && changes.panelMode.currentValue === 'time') {\r\n      this.panelMode = 'date';\r\n    }\r\n  }\r\n}\r\n","<ng-container *ngIf=\"isRange; else singlePanel\">\r\n    <div class=\"{{ prefixCls }}-range-wrapper {{ prefixCls }}-date-range-wrapper\">\r\n        <div class=\"{{ prefixCls }}-range-arrow\" [style.left.px]=\"datePickerService.arrowLeft\"></div>\r\n        <div class=\"{{ prefixCls }}-panel-container w-full flex  items-stretch justify-center\">\r\n            <div class=\"flex-auto border-0 border-r border-neutral-2-200 dark:border-d-neutral-2-200 \"\r\n                *ngIf=\"!hasTimePicker\">\r\n\r\n                <div *ngFor=\"let name of getObjectKeys(menuLeft!)\" (click)=\"onClickPresetRange(menuLeft![name])\"\r\n                    (mouseenter)=\"onHoverPresetRange(menuLeft![name])\" (mouseleave)=\"onPresetRangeMouseLeave()\"\r\n                    class=\"w-full px-4 py-2.5 text-caption-1 font-regular text-neutral-1-900 dark:text-d-neutral-1-900 dark:border-d-neutral-2-200 cursor-pointer hover:bg-primary-1 hover:text-white\">\r\n                    {{ name }}\r\n                </div>\r\n\r\n            </div>\r\n            <div class=\"{{ prefixCls }}-panels flex \" [ngClass]=\"{'w-full':hasTimePicker}\">\r\n                <ng-container *ngIf=\"hasTimePicker; else noTimePicker\">\r\n                    <ng-container\r\n                        *ngTemplateOutlet=\"tplInnerPopup; context: { partType: datePickerService.activeInput }\">\r\n                    </ng-container>\r\n                </ng-container>\r\n                <ng-template #noTimePicker>\r\n                    <ng-container *ngTemplateOutlet=\"tplInnerPopup; context: { partType: 'left' }\"></ng-container>\r\n                    <ng-container *ngTemplateOutlet=\"tplInnerPopup; context: { partType: 'right' }\"></ng-container>\r\n                </ng-template>\r\n            </div>\r\n        </div>\r\n        <ng-container *ngTemplateOutlet=\"tplFooter\"></ng-container>\r\n    </div>\r\n</ng-container>\r\n<ng-template #singlePanel>\r\n    <div class=\"{{ prefixCls }}-panel-container {{ showWeek ? prefixCls + '-week-number' : '' }} {{\r\n        hasTimePicker ? prefixCls + '-time' : ''\r\n      }} {{ isRange ? prefixCls + '-range' : '' }}\">\r\n        <div class=\"{{ prefixCls }}-panel\" [class.tds-picker-panel-rtl]=\"dir === 'rtl'\" tabindex=\"-1\">\r\n            <!-- Single ONLY -->\r\n            <ng-container *ngTemplateOutlet=\"tplInnerPopup\"></ng-container>\r\n            <ng-container *ngTemplateOutlet=\"tplFooter\"></ng-container>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #tplInnerPopup let-partType=\"partType\">\r\n    <div class=\"{{ prefixCls }}-panel w-full\" [class.tds-picker-panel-rtl]=\"dir === 'rtl'\">\r\n        <!-- TODO(@wenqi73) [selectedValue] [hoverValue] types-->\r\n        <inner-popup [showWeek]=\"showWeek\" [endPanelMode]=\"getPanelMode(endPanelMode, partType)\" [partType]=\"partType\"\r\n            [locale]=\"locale!\" [showTimePicker]=\"hasTimePicker\" [timeOptions]=\"getTimeOptions(partType)\"\r\n            [panelMode]=\"getPanelMode(panelMode, partType)\" (panelModeChange)=\"onPanelModeChange($event, partType)\"\r\n            [activeDate]=\"getActiveDate(partType)\" [value]=\"getValue(partType)\" [disabledDate]=\"disabledDate\"\r\n            [dateRender]=\"dateRender\" [selectedValue]=\"$any(datePickerService.value)\" [hoverValue]=\"$any(hoverValue)\"\r\n            (cellHover)=\"onCellHover($event)\" (selectDate)=\"changeValueFromSelect($event,!showTime)\"\r\n            (selectTime)=\"onSelectTime($event, partType)\" (headerChange)=\"onActiveDateChange($event, partType)\">\r\n        </inner-popup>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #tplFooter>\r\n\r\n    <calendar-footer *ngIf=\"hasFooter\" [locale]=\"locale!\" [isRange]=\"isRange\" [showToday]=\"showToday\"\r\n        [showNow]=\"showNow\" [hasTimePicker]=\"hasTimePicker\" [okDisabled]=\"!isAllowed($any(datePickerService.value))\"\r\n        [extraFooter]=\"extraFooter\" [rangeQuickSelector]=\"ranges ? tplRangeQuickSelector : null\" (clickOk)=\"onClickOk()\"\r\n        (clickToday)=\"onClickToday($event)\" [listDate]=\"$any(datePickerService.value)\" (clickCancel)=\"onclickCancel()\">\r\n    </calendar-footer>\r\n</ng-template>\r\n\r\n<!-- Range ONLY: Range Quick Selector -->\r\n<ng-template #tplRangeQuickSelector>\r\n    <li *ngFor=\"let name of getObjectKeys(ranges)\" class=\"{{ prefixCls }}-preset\"\r\n        (click)=\"onClickPresetRange(ranges![name])\" (mouseenter)=\"onHoverPresetRange(ranges![name])\"\r\n        (mouseleave)=\"onPresetRangeMouseLeave()\">\r\n        <span class=\"tds-tag tds-tag-blue\">{{ name }}</span>\r\n    </li>\r\n</ng-template>","\r\n\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\n\r\nimport { Direction } from '@angular/cdk/bidi';\r\n\r\nimport { merge, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { DatePickerService } from './date-picker.service';\r\nimport {\r\n  CompatibleDate,\r\n  DisabledDateFn,\r\n  DisabledTimeFn,\r\n  DisabledTimePartial,\r\n  TDSDateMode,\r\n  PresetRanges,\r\n  RangePartType,\r\n  SupportTimeOptions\r\n} from './standard-types';\r\nimport { getTimeConfig, isAllowedDate, PREFIX_CLASS } from './util';\r\nimport { addDays, endOfMonth, startOfMonth } from 'date-fns';\r\nimport { TDSCalendarI18nInterface } from 'tds-ui/i18n';\r\nimport { FunctionProp, TDSHelperObject } from 'tds-ui/shared/utility';\r\nimport { CandyDate, cloneDate, CompatibleValue, NormalizedMode, SingleValue, wrongSortOrder } from 'tds-ui/core/time';\r\n\r\n@Component({\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'date-range-popup',\r\n  exportAs: 'dateRangePopup',\r\n  templateUrl: './date-range-popup.component.html',\r\n  host: {\r\n    '(mousedown)': 'onMousedown($event)'\r\n  }\r\n})\r\nexport class DateRangePopupComponent implements OnInit, OnChanges, OnDestroy {\r\n  @Input() isRange!: boolean;\r\n  @Input() inline: boolean = false;\r\n  @Input() showWeek!: boolean;\r\n  @Input() locale!: TDSCalendarI18nInterface | undefined;\r\n  @Input() disabledDate?: DisabledDateFn;\r\n  @Input() disabledTime?: DisabledTimeFn; // This will lead to rebuild time options\r\n  @Input() showToday!: boolean;\r\n  @Input() showNow!: boolean;\r\n  @Input() showTime!: SupportTimeOptions | boolean;\r\n  @Input() extraFooter?: TemplateRef<void> | string;\r\n  @Input() ranges?: PresetRanges;\r\n  @Input() dateRender?: string | TemplateRef<Date> | FunctionProp<TemplateRef<Date> | string>;\r\n  @Input() panelMode!: TDSDateMode | TDSDateMode[];\r\n  @Input() defaultPickerValue!: CompatibleDate | undefined | null;\r\n  @Input() dir: Direction = 'ltr';\r\n\r\n  @Output() readonly panelModeChange = new EventEmitter<TDSDateMode | TDSDateMode[]>();\r\n  @Output() readonly calendarChange = new EventEmitter<CompatibleValue>();\r\n  @Output() readonly resultOk = new EventEmitter<void>(); // Emitted when done with date selecting\r\n  @Output() readonly resultCancel = new EventEmitter<void>();\r\n  menuLeft: PresetRanges | null = null;\r\n  prefixCls: string = PREFIX_CLASS;\r\n  endPanelMode: TDSDateMode | TDSDateMode[] = 'date';\r\n  timeOptions: SupportTimeOptions | SupportTimeOptions[] | null = null;\r\n  hoverValue: SingleValue[] = []; // Range ONLY\r\n  checkedPartArr: boolean[] = [false, false];\r\n  private destroy$ = new Subject<void>();\r\n\r\n  get hasTimePicker(): boolean {\r\n    return !!this.showTime;\r\n  }\r\n\r\n  get hasFooter(): boolean {\r\n    return this.showToday || this.hasTimePicker || !!this.extraFooter || !!this.ranges || !!this.isRange;\r\n  }\r\n\r\n  constructor(\r\n    public datePickerService: DatePickerService,\r\n    public cdr: ChangeDetectorRef\r\n\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.buildMenuLeft();\r\n    merge(this.datePickerService.valueChange$, this.datePickerService.inputPartChange$)\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(() => {\r\n        this.updateActiveDate();\r\n        this.cdr.markForCheck();\r\n      });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    // Parse showTime options\r\n    if (changes.showTime || changes.disabledTime) {\r\n      if (this.showTime) {\r\n        this.buildTimeOptions();\r\n      }\r\n    }\r\n    if (changes.panelMode) {\r\n      this.endPanelMode = this.panelMode;\r\n    }\r\n    if (changes.defaultPickerValue) {\r\n      this.updateActiveDate();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  updateActiveDate(): void {\r\n    const activeDate = this.datePickerService.hasValue()\r\n      ? this.datePickerService.value\r\n      : this.datePickerService.makeValue(this.defaultPickerValue!);\r\n    this.datePickerService.setActiveDate(activeDate, this.hasTimePicker, this.getPanelMode(this.endPanelMode) as NormalizedMode);\r\n  }\r\n\r\n  /**\r\n   * Prevent input losing focus when click panel\r\n   * @param event\r\n   */\r\n  onMousedown(event: MouseEvent): void {\r\n    event.preventDefault();\r\n  }\r\n\r\n  onClickOk(): void {\r\n    const inputIndex = { left: 0, right: 1 }[this.datePickerService.activeInput];\r\n    const value: CandyDate = this.isRange\r\n      ? (this.datePickerService.value as CandyDate[])[inputIndex]\r\n      : (this.datePickerService.value as CandyDate);\r\n    this.changeValueFromSelect(value, true, true);\r\n    this.resultOk.emit();\r\n  }\r\n\r\n  onClickToday(value: CandyDate): void {\r\n    this.changeValueFromSelect(value, !this.showTime, true);\r\n  }\r\n\r\n  onCellHover(value: CandyDate): void {\r\n    if (!this.isRange) {\r\n      return;\r\n    }\r\n    const otherInputIndex = { left: 1, right: 0 }[this.datePickerService.activeInput];\r\n    const base = (this.datePickerService.value as CandyDate[] || [])[otherInputIndex]!;\r\n    if (base) {\r\n      if (base.isBeforeDay(value)) {\r\n        this.hoverValue = [base, value];\r\n      } else {\r\n        this.hoverValue = [value, base];\r\n      }\r\n    }\r\n  }\r\n\r\n  onPanelModeChange(mode: TDSDateMode, partType?: RangePartType): void {\r\n    if (this.isRange) {\r\n      const index = this.datePickerService.getActiveIndex(partType);\r\n      if (index === 0) {\r\n        this.panelMode = [mode, this.panelMode[1]] as TDSDateMode[];\r\n      } else {\r\n        this.panelMode = [this.panelMode[0], mode] as TDSDateMode[];\r\n      }\r\n    } else {\r\n      this.panelMode = mode;\r\n    }\r\n    this.panelModeChange.emit(this.panelMode);\r\n  }\r\n\r\n  onActiveDateChange(value: CandyDate, partType: RangePartType): void {\r\n    if (this.isRange) {\r\n      const activeDate: SingleValue[] = [];\r\n      activeDate[this.datePickerService.getActiveIndex(partType)] = value;\r\n      this.datePickerService.setActiveDate(\r\n        activeDate,\r\n        this.hasTimePicker,\r\n        this.getPanelMode(this.endPanelMode, partType) as NormalizedMode\r\n      );\r\n    } else {\r\n      this.datePickerService.setActiveDate(value);\r\n    }\r\n  }\r\n\r\n  onSelectTime(value: CandyDate, partType?: RangePartType): void {\r\n    if (this.isRange) {\r\n      const newValue = cloneDate(this.datePickerService.value) as SingleValue[];\r\n      const index = this.datePickerService.getActiveIndex(partType);\r\n      newValue[index] = this.overrideHms(value, newValue[index]);\r\n      this.datePickerService.setValue(newValue);\r\n    } else {\r\n      const newValue = this.overrideHms(value, this.datePickerService.value as CandyDate);\r\n      this.datePickerService.setValue(newValue); // If not select a date currently, use today\r\n    }\r\n    this.datePickerService.inputPartChange$.next();\r\n    this.buildTimeOptions();\r\n  }\r\n\r\n  changeValueFromSelect(value: CandyDate, emitValue: boolean = true, submit: boolean = false): void {\r\n    if (this.isRange) {\r\n      const selectedValue: SingleValue[] = cloneDate(this.datePickerService.value) as CandyDate[] || [];\r\n      const checkedPart: RangePartType = this.datePickerService.activeInput;\r\n      let nextPart: RangePartType = checkedPart;\r\n\r\n      selectedValue[this.datePickerService.getActiveIndex(checkedPart)] = value;\r\n      this.checkedPartArr[this.datePickerService.getActiveIndex(checkedPart)] = true;\r\n      this.hoverValue = selectedValue;\r\n      if (emitValue) {\r\n        if (this.inline) {\r\n          // For UE, Should always be reversed, and clear vaue when next part is right\r\n          nextPart = this.reversedPart(checkedPart);\r\n          if (nextPart === 'right') {\r\n            selectedValue[this.datePickerService.getActiveIndex(nextPart)] = null;\r\n            this.checkedPartArr[this.datePickerService.getActiveIndex(nextPart)] = false;\r\n          }\r\n          this.datePickerService.setValue(selectedValue);\r\n          this.calendarChange.emit(selectedValue);\r\n          if (this.isBothAllowed(selectedValue) && this.checkedPartArr[0] && this.checkedPartArr[1]) {\r\n            this.clearHoverValue();\r\n            this.datePickerService.emitValue$.next();\r\n          }\r\n        } else {\r\n          /**\r\n           * if sort order is wrong, clear the other part's value\r\n           */\r\n          if (wrongSortOrder(selectedValue)) {\r\n            nextPart = this.reversedPart(checkedPart);\r\n            selectedValue[this.datePickerService.getActiveIndex(nextPart)] = null;\r\n            this.checkedPartArr[this.datePickerService.getActiveIndex(nextPart)] = false;\r\n          }\r\n\r\n          this.datePickerService.setValue(selectedValue);\r\n          /**\r\n           * range date usually selected paired,\r\n           * so we emit the date value only both date is allowed and both part are checked\r\n           */\r\n          if (this.isBothAllowed(selectedValue)) {\r\n            if (this.checkedPartArr[0] && this.checkedPartArr[1]) {\r\n              this.calendarChange.emit(selectedValue);\r\n              this.clearHoverValue();\r\n            }\r\n            if (submit)\r\n              this.datePickerService.emitValue$.next();\r\n          } else if (this.isAllowed(selectedValue)) {\r\n            nextPart = this.reversedPart(checkedPart);\r\n            if (submit)\r\n              this.calendarChange.emit([value.clone()]);\r\n          }\r\n\r\n\r\n        }\r\n      } else {\r\n        this.datePickerService.setValue(selectedValue);\r\n      }\r\n      this.datePickerService.inputPartChange$.next(nextPart);\r\n    } else {\r\n      this.datePickerService.setValue(value);\r\n      this.datePickerService.inputPartChange$.next();\r\n\r\n      if (emitValue && this.isAllowed(value)) {\r\n        this.datePickerService.emitValue$.next();\r\n      }\r\n    }\r\n  }\r\n\r\n  reversedPart(part: RangePartType): RangePartType {\r\n    return part === 'left' ? 'right' : 'left';\r\n  }\r\n\r\n  getPanelMode(panelMode: TDSDateMode | TDSDateMode[], partType?: RangePartType): TDSDateMode {\r\n    if (this.isRange) {\r\n      return panelMode[this.datePickerService.getActiveIndex(partType)] as TDSDateMode;\r\n    } else {\r\n      return panelMode as TDSDateMode;\r\n    }\r\n  }\r\n\r\n  // Get single value or part value of a range\r\n  getValue(partType?: RangePartType): CandyDate {\r\n    if (this.isRange) {\r\n      return ((this.datePickerService.value as CandyDate[]) || [])[this.datePickerService.getActiveIndex(partType)];\r\n    } else {\r\n      return this.datePickerService.value as CandyDate;\r\n    }\r\n  }\r\n\r\n  getActiveDate(partType?: RangePartType): CandyDate {\r\n    if (this.isRange) {\r\n      return (this.datePickerService.activeDate as CandyDate[])[this.datePickerService.getActiveIndex(partType)];\r\n    } else {\r\n      return this.datePickerService.activeDate as CandyDate;\r\n    }\r\n  }\r\n\r\n  disabledStartTime: DisabledTimeFn = (value: Date | Date[]) => {\r\n    return this.disabledTime && this.disabledTime(value, 'start');\r\n  };\r\n\r\n  disabledEndTime: DisabledTimeFn = (value: Date | Date[]) => {\r\n    return this.disabledTime && this.disabledTime(value, 'end');\r\n  };\r\n\r\n  isOneAllowed(selectedValue: SingleValue[]): boolean {\r\n    if (!TDSHelperObject.hasValue(selectedValue)) {\r\n      return false;\r\n    }\r\n    const index = this.datePickerService.getActiveIndex();\r\n    const disabledTimeArr = [this.disabledStartTime, this.disabledEndTime];\r\n    return isAllowedDate(selectedValue[index]!, this.disabledDate, disabledTimeArr[index]);\r\n  }\r\n\r\n  isBothAllowed(selectedValue: SingleValue[]): boolean {\r\n    return (\r\n      isAllowedDate(selectedValue[0]!, this.disabledDate, this.disabledStartTime) &&\r\n      isAllowedDate(selectedValue[1]!, this.disabledDate, this.disabledEndTime)\r\n    );\r\n  }\r\n\r\n  isAllowed(value: CompatibleValue, isBoth: boolean = false): boolean {\r\n    if (this.isRange) {\r\n      return isBoth ? this.isBothAllowed(value as CandyDate[]) : this.isOneAllowed(value as CandyDate[]);\r\n    } else {\r\n      return isAllowedDate(value as CandyDate, this.disabledDate, this.disabledTime);\r\n    }\r\n  }\r\n\r\n  getTimeOptions(partType?: RangePartType): SupportTimeOptions | null {\r\n    if (this.showTime && this.timeOptions) {\r\n      return this.timeOptions instanceof Array ? this.timeOptions[this.datePickerService.getActiveIndex(partType)] : this.timeOptions;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  onClickPresetRange(val: PresetRanges[keyof PresetRanges]): void {\r\n    const value = typeof val === 'function' ? val() : val;\r\n    if (value) {\r\n      this.datePickerService.setValue([new CandyDate(value[0]), new CandyDate(value[1])]);\r\n      //khi submit mới change data\r\n      // console.log('onClickPresetRange')\r\n      // this.datePickerService.emitValue$.next();\r\n      // this.calendarChange.emit([new CandyDate(value[0]), new CandyDate(value[1])]);\r\n    }\r\n  }\r\n\r\n  onPresetRangeMouseLeave(): void {\r\n    this.clearHoverValue();\r\n  }\r\n\r\n  onHoverPresetRange(val: PresetRanges[keyof PresetRanges]): void {\r\n    if (typeof val !== 'function') {\r\n      this.hoverValue = [new CandyDate(val[0]), new CandyDate(val[1])];\r\n    }\r\n  }\r\n\r\n  getObjectKeys(obj?: PresetRanges): string[] {\r\n    return obj ? Object.keys(obj) : [];\r\n  }\r\n\r\n  show(partType: RangePartType): boolean {\r\n    const hide = this.showTime && this.isRange && this.datePickerService.activeInput !== partType;\r\n    return !hide;\r\n  }\r\n\r\n  private clearHoverValue(): void {\r\n    this.hoverValue = [];\r\n  }\r\n\r\n  private buildTimeOptions(): void {\r\n    if (this.showTime) {\r\n      const showTime = typeof this.showTime === 'object' ? this.showTime : { use12Hours: true };\r\n      if (this.isRange) {\r\n        const value = (this.datePickerService.value || []) as CandyDate[];\r\n        this.timeOptions = [this.overrideTimeOptions(showTime, value[0], 'start'), this.overrideTimeOptions(showTime, value[1], 'end')];\r\n      } else {\r\n        this.timeOptions = this.overrideTimeOptions(showTime, this.datePickerService.value as CandyDate);\r\n      }\r\n    } else {\r\n      this.timeOptions = null;\r\n    }\r\n  }\r\n\r\n  private overrideTimeOptions(origin: SupportTimeOptions, value: CandyDate, partial?: DisabledTimePartial): SupportTimeOptions {\r\n    let disabledTimeFn;\r\n    if (partial) {\r\n      disabledTimeFn = partial === 'start' ? this.disabledStartTime : this.disabledEndTime;\r\n    } else {\r\n      disabledTimeFn = this.disabledTime;\r\n    }\r\n    return { ...origin, ...getTimeConfig(value, disabledTimeFn) };\r\n  }\r\n\r\n  private overrideHms(newValue: CandyDate | null, oldValue: CandyDate | null): CandyDate {\r\n    // tslint:disable-next-line:no-parameter-reassignment\r\n    newValue = newValue || new CandyDate();\r\n    // tslint:disable-next-line:no-parameter-reassignment\r\n    oldValue = oldValue || new CandyDate();\r\n    return oldValue.setHms(newValue.getHours(), newValue.getMinutes(), newValue.getSeconds());\r\n  }\r\n  buildMenuLeft() {\r\n    let today = new Date();\r\n    let lastMonth = new Date(today.getFullYear(),today.getMonth() - 1,1);   \r\n    this.menuLeft = this.ranges ? this.ranges : {\r\n      'Today': [today, today],\r\n      'Yesterday': [addDays(today, -1), today],\r\n      'Last 7 Days': [addDays(today, -7), today],\r\n      'Last 30 Days': [addDays(today, -30), today],\r\n      'This Month': [startOfMonth(today), endOfMonth(today)],\r\n      'Last Month': [startOfMonth(lastMonth), endOfMonth(lastMonth)],\r\n      // 'Custom Range': [new Date(), endOfMonth(new Date())],\r\n    };\r\n  }\r\n  onclickCancel() {\r\n    this.resultCancel.emit();\r\n  }\r\n}\r\n","<ng-container *ngIf=\"!inline; else inlineMode\">\r\n    <!-- Content of single picker -->\r\n    <div *ngIf=\"!isRange\" class=\"flex items-stretch w-full group \" [class]=\"tdsCssContainer\">\r\n        <div class=\"flex-auto flex items-center\" [ngClass]=\"{\r\n      'pl-2.5 py-1':size ==='sm', \r\n      'pl-3 py-1.5':size ==='md' ,                                              \r\n      'pl-4 py-2':size ==='lg'        \r\n  }\">\r\n            <input #pickerInput\r\n                class=\"text-body-2 font-regular text-neutral-1-40 focus:outline-none focus:border-transparent shadow-none border-0 bg-transparent text-current pl-0 pb-0 pt-0 m-0 w-full outline-none  box-border placeholder:text-neutral-1-400 dark:placeholder:text-d-neutral-1-400\"\r\n                [attr.id]=\"id\" [class.tds-input-disabled]=\"disabled\" [disabled]=\"disabled\" [readOnly]=\"inputReadOnly\"\r\n                [(ngModel)]=\"inputValue\" placeholder=\"{{ getPlaceholder() }}\" (focus)=\"onFocus($event)\"\r\n                (focusout)=\"onFocusout($event)\" (ngModelChange)=\"onInputChange($event)\"\r\n                (keyup.enter)=\"onKeyupEnter($event)\" />\r\n        </div>\r\n        <ng-container *ngTemplateOutlet=\"tplRightRest\"></ng-container>\r\n    </div>\r\n    <!-- Content of range picker -->\r\n    <ng-container *ngIf=\"isRange\">\r\n        <div class=\"flex items-stretch w-full group\"\r\n        [class]=\"tdsCssContainer\">\r\n            <div class=\"flex-auto flex items-center\" [ngClass]=\"{\r\n      'pl-2.5 py-1':size ==='sm', \r\n      'pl-3 py-1.5':size ==='md' ,                                              \r\n      'pl-4 py-2':size ==='lg'        \r\n  }\">\r\n                <div class=\"{{ prefixCls }}-input\">\r\n                    <ng-container *ngTemplateOutlet=\"tplRangeInput; context: { partType: 'left' }\"></ng-container>\r\n                </div>\r\n                <div #separatorElement class=\"{{ prefixCls }}-range-separator\">\r\n                    <span class=\"{{ prefixCls }}-separator\">\r\n                        <ng-container *ngIf=\"deparator; else defaultSeparator\">{{ deparator }}</ng-container>\r\n                    </span>\r\n                    <ng-template #defaultSeparator>\r\n                        <span> - </span>\r\n                    </ng-template>\r\n                </div>\r\n                <div class=\"{{ prefixCls }}-input pl-2\">\r\n                    <ng-container *ngTemplateOutlet=\"tplRangeInput; context: { partType: 'right' }\"></ng-container>\r\n                </div>\r\n            </div>\r\n            <ng-container *ngTemplateOutlet=\"tplRightRest\"></ng-container>\r\n        </div>\r\n\r\n\r\n    </ng-container>\r\n</ng-container>\r\n<!-- Input for Range ONLY -->\r\n<ng-template #tplRangeInput let-partType=\"partType\">\r\n    <input #rangePickerInput\r\n        class=\"text-body-2 font-regular text-neutral-1-40 border-b border-transparent focus:outline-none focus:border-b focus:border-primary-1 dark:focus:border-d-primary-1 shadow-none  bg-transparent text-current pl-0 pb-0 pt-0 m-0 w-full outline-none  box-border placeholder:text-neutral-1-400 dark:placeholder:text-d-neutral-1-400\"\r\n        [disabled]=\"disabled\" [readOnly]=\"inputReadOnly\" [size]=\"inputSize\" (click)=\"onClickInputBox($event)\"\r\n        (focusout)=\"onFocusout($event)\" (focus)=\"onFocus($event, partType)\" (keyup.enter)=\"onKeyupEnter($event)\"\r\n        [(ngModel)]=\"inputValue[datePickerService.getActiveIndex(partType)]\" (ngModelChange)=\"onInputChange($event)\"\r\n        [placeholder]=\"getPlaceholder(partType)\" />\r\n</ng-template>\r\n\r\n<!-- Right operator icons -->\r\n<ng-template #tplRightRest>\r\n\r\n    <div *ngIf=\"showClear()\" class=\"{{ prefixCls }}-clear flex items-center cursor-pointer\"\r\n        (click)=\"onClickClear($event)\" [ngClass]=\"{\r\n      'px-1':size ==='sm',\r\n      'px-1.5':size ==='md',                                          \r\n      'px-2':size ==='lg'\r\n  }\">\r\n        <span class=\"tdsi-close-fill text-base leading-4 text-neutral-1-500\"></span>\r\n    </div>\r\n    <div class=\"{{ prefixCls }}-suffix text-neutral-1-900 dark:text-d-neutral-1-900  group-hover:bg-neutral-3-50 dark:group-hover:bg-d-neutral-3-200 flex items-center  group-hover:border-transparent\"\r\n        style=\"border-top-right-radius: 0.2rem;border-bottom-right-radius: 0.2rem;\" [ngClass]=\"{\r\n        'px-1':size ==='sm',\r\n        'px-1.5':size ==='md',                                          \r\n        'px-2':size ==='lg'\r\n    }\">\r\n        <ng-container *tdsStringTemplateOutlet=\"suffixIcon; let suffixIcon\">\r\n            <span [ngClass]=\"suffixIcon\" class=\"text-lg leading-5 text-neutral-1-900 dark:text-d-neutral-1-900\"></span>\r\n        </ng-container>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #inlineMode>\r\n    <ng-container *ngIf=\"!inline\">\r\n        <div class=\"tds-picker-wrapper  shadow-1-xl overflow-auto bg-white dark:bg-d-neutral-3-300 box-border  rounded w-full\"\r\n             [@slideMotion]=\"'enter'\" style=\"position: relative;\">\r\n            <ng-container *ngTemplateOutlet=\"inlineModeContent\"></ng-container>\r\n        </div>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"inline\">\r\n        <div class=\"tds-picker-wrapper pt-3 overflow-auto bg-white dark:bg-d-neutral-3-300 box-border  rounded min-w-[266px]\"\r\n            [style.width]=\"(isRange && !showTime) ? '700px': '100%'\" style=\"position: relative;\">\r\n            <ng-container *ngTemplateOutlet=\"inlineModeContent\"></ng-container>\r\n        </div>\r\n    </ng-container>\r\n</ng-template>\r\n<ng-template #inlineModeContent>\r\n    <div class=\"{{ prefixCls }}-dropdown {{ dropdownClassName }}\" [class.tds-picker-dropdown-rtl]=\"dir === 'rtl'\"\r\n        [class.tds-picker-dropdown-placement-bottomLeft]=\"currentPositionY === 'bottom' && currentPositionX === 'start'\"\r\n        [class.tds-picker-dropdown-placement-topLeft]=\"currentPositionY === 'top' && currentPositionX === 'start'\"\r\n        [class.tds-picker-dropdown-placement-bottomRight]=\"currentPositionY === 'bottom' && currentPositionX === 'end'\"\r\n        [class.tds-picker-dropdown-placement-topRight]=\"currentPositionY === 'top' && currentPositionX === 'end'\"\r\n        [class.tds-picker-dropdown-range]=\"isRange\"\r\n        [class.tds-picker-active-left]=\"datePickerService.activeInput === 'left'\"\r\n        [class.tds-picker-active-right]=\"datePickerService.activeInput === 'right'\" [ngStyle]=\"popupStyle\">\r\n        <date-range-popup [isRange]=\"isRange\" [inline]=\"inline\" [defaultPickerValue]=\"defaultPickerValue\"\r\n            [showWeek]=\"mode === 'week'\" [panelMode]=\"panelMode\" (panelModeChange)=\"onPanelModeChange($event)\"\r\n            (calendarChange)=\"_calendarChange($event)\" [locale]=\"locale.lang!\"\r\n            [showToday]=\"mode === 'date' && showToday && !isRange && !showTime\"\r\n            [showNow]=\"mode === 'date' && showNow && !isRange && !!showTime\" [showTime]=\"showTime\"\r\n            [dateRender]=\"dateRender\" [disabledDate]=\"disabledDate\" [disabledTime]=\"disabledTime\"\r\n            [extraFooter]=\"extraFooter\" [ranges]=\"ranges\" [dir]=\"dir\" (resultOk)=\"onResultOk()\"\r\n            (resultCancel)=\"onResultCancel()\"></date-range-popup>\r\n    </div>\r\n</ng-template>\r\n<!-- Overlay -->\r\n<ng-template cdkConnectedOverlay [cdkConnectedOverlayHasBackdrop]=\"backdrop\" [cdkConnectedOverlayOrigin]=\"origin\"\r\n    [cdkConnectedOverlayOpen]=\"realOpenState\" [cdkConnectedOverlayPositions]=\"overlayPositions\"\r\n    [cdkConnectedOverlayTransformOriginOn]=\"'.tds-picker-wrapper'\" (positionChange)=\"onPositionChange($event)\"\r\n    (detach)=\"close()\" (overlayKeydown)=\"onOverlayKeydown($event)\" (overlayOutsideClick)=\"onClickOutside($event)\">\r\n    <ng-container *ngTemplateOutlet=\"inlineMode\"></ng-container>\r\n</ng-template>","\r\n\r\nimport {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  DoCheck,\r\n  ElementRef,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Host,\r\n  Inject,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  Output,\r\n  QueryList,\r\n  Renderer2,\r\n  Self,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ViewChildren,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, FormControl, FormGroupDirective, NgControl, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { DatePickerService } from './date-picker.service';\r\nimport { DateRangePopupComponent } from './date-range-popup.component';\r\nimport { PREFIX_CLASS } from './util';\r\n\r\nimport { Direction, Directionality } from '@angular/cdk/bidi';\r\nimport { ESCAPE } from '@angular/cdk/keycodes';\r\nimport {\r\n  CdkConnectedOverlay,\r\n  CdkOverlayOrigin,\r\n  ConnectedOverlayPositionChange,\r\n  ConnectionPositionPair,\r\n  HorizontalConnectionPos,\r\n  VerticalConnectionPos\r\n} from '@angular/cdk/overlay';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { CompatibleDate, DisabledTimeFn, TDSDateMode, PresetRanges, RangePartType, SupportTimeOptions } from './standard-types';\r\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport { ButtonSize, TDSConfigService } from \"tds-ui/core/config\";\r\nimport { TDSFormField, TDSFormFieldControl, TDS_FORM_FIELD } from 'tds-ui/form-field';\r\nimport { slideMotion } from 'tds-ui/core/animation';\r\nimport { FunctionProp, InputBoolean, OnChangeType, OnTouchedType, TDSHelperArray, TDSHelperObject, toBoolean, valueFunctionProp } from 'tds-ui/shared/utility';\r\nimport { DateHelperService, TDSDatePickerI18nInterface, TDSDatePickerLangI18nInterface, TDSI18nService } from 'tds-ui/i18n';\r\nimport { CandyDate, cloneDate, CompatibleValue, wrongSortOrder } from 'tds-ui/core/time';\r\nimport { TDSResizeObserver } from 'tds-ui/core/resize-observers';\r\nimport { TDSIsErrorState } from 'tds-ui/shared/common';\r\n\r\nconst POPUP_STYLE_PATCH = { position: 'relative' }; // Aim to override antd's style to support overlay's position strategy (position:absolute will cause it not working because the overlay can't get the height/width of it's content)\r\n\r\nexport type TDSDatePickerSizeType = 'large' | 'default' | 'small';\r\n\r\n/**\r\n * The base picker for all common APIs\r\n */\r\n@Component({\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  selector: 'tds-date-picker,tds-week-picker,tds-month-picker,tds-year-picker,tds-range-picker',\r\n  exportAs: 'tdsDatePicker',\r\n  templateUrl: './date-picker.component.html',\r\n  host: {\r\n    '[class.tds-picker]': `true`,\r\n    '[class.tds-picker-range]': `isRange`,\r\n    '[class.tds-picker-disabled]': `disabled`,\r\n    '[class.tds-picker-rtl]': `dir === 'rtl'`,\r\n    '[class.tds-picker-borderless]': `borderless`,\r\n    '[class.tds-picker-inline]': `inline`,\r\n    'class': 'w-full block relative box-border m-0 p-0',\r\n    '(click)': 'onClickInputBox($event)',\r\n\r\n  },\r\n  providers: [\r\n    DatePickerService,\r\n    {\r\n      provide: TDSFormFieldControl,\r\n      useExisting: forwardRef(() => TDSDatePickerComponent)\r\n    }\r\n  ],\r\n  animations: [slideMotion]\r\n})\r\nexport class TDSDatePickerComponent implements TDSFormFieldControl<any>, OnInit, OnChanges, OnDestroy, DoCheck, AfterViewInit, ControlValueAccessor {\r\n  static ngAcceptInputType_allowClear: BooleanInput;\r\n  static ngAcceptInputType_autoFocus: BooleanInput;\r\n  static ngAcceptInputType_disabled: BooleanInput;\r\n  static ngAcceptInputType_borderless: BooleanInput;\r\n  static ngAcceptInputType_inputReadOnly: BooleanInput;\r\n  static ngAcceptInputType_inline: BooleanInput;\r\n  static ngAcceptInputType_isOpen: BooleanInput;\r\n  static ngAcceptInputType_showToday: BooleanInput;\r\n  static ngAcceptInputType_showNow: BooleanInput;\r\n  static ngAcceptInputType_mode: TDSDateMode | TDSDateMode[] | string | string[] | null | undefined;\r\n  static ngAcceptInputType_showTime: BooleanInput | SupportTimeOptions | null | undefined;\r\n\r\n  isRange: boolean = false; // Indicate whether the value is a range value\r\n  extraFooter?: TemplateRef<any> | string;\r\n  dir: Direction = 'ltr';\r\n\r\n  public panelMode: TDSDateMode | TDSDateMode[] = 'date';\r\n  private destroyed$: Subject<void> = new Subject();\r\n  private isCustomPlaceHolder: boolean = false;\r\n  private isCustomFormat: boolean = false;\r\n  private _showTime: SupportTimeOptions | boolean = false;\r\n\r\n  // --- Common API\r\n  @Input() @InputBoolean() allowClear: boolean = true;\r\n  @Input() @InputBoolean() autoFocus: boolean = false;\r\n  @Input() @InputBoolean() disabled: boolean = false;\r\n  @Input() @InputBoolean() borderless: boolean = false;\r\n  @Input() @InputBoolean() inputReadOnly: boolean = false;\r\n  @Input() @InputBoolean() inline: boolean = false;\r\n  @Input() @InputBoolean() isOpen?: boolean;\r\n  @Input() disabledDate?: (d: Date) => boolean;\r\n  @Input() locale!: TDSDatePickerI18nInterface;\r\n  @Input() placeholder: string | string[] = '';\r\n  @Input() popupStyle: object = POPUP_STYLE_PATCH;\r\n  @Input() dropdownClassName?: string;\r\n  @Input() format!: string;\r\n  @Input() dateRender?: TemplateRef<any> | string | FunctionProp<TemplateRef<Date> | string>;\r\n  @Input() disabledTime?: DisabledTimeFn;\r\n  @Input() renderExtraFooter?: TemplateRef<any> | string | FunctionProp<TemplateRef<any> | string>;\r\n  @Input() @InputBoolean() showToday: boolean = true;\r\n  @Input() mode: TDSDateMode = 'date';\r\n  @Input() @InputBoolean() showNow: boolean = true;\r\n  @Input() ranges?: PresetRanges;\r\n  @Input() defaultPickerValue: CompatibleDate | null = null;\r\n  @Input() deparator?: string = undefined;\r\n  @Input() suffixIcon: string | TemplateRef<any> = 'tdsi-calendar-fill';\r\n  @Input() backdrop = false;\r\n  @Input() id: string | null = null;\r\n  @Input() tdsClass: string = \"\";\r\n  @Input()\r\n  get size(): ButtonSize {\r\n    return this._size;\r\n  }\r\n  set size(value: ButtonSize) {\r\n    if (this._size != value) {\r\n      this._size = value;\r\n      this.stateChanges.next();\r\n    }\r\n\r\n  }\r\n  private _size: ButtonSize = \"md\";\r\n  // TODO(@wenqi73) The PanelMode need named for each pickers and export\r\n  @Output() readonly panelChange = new EventEmitter<TDSDateMode | TDSDateMode[] | string | string[]>();\r\n  @Output() readonly calendarChange = new EventEmitter<Array<Date | null>>();\r\n  @Output() readonly ok = new EventEmitter<CompatibleDate | null>();\r\n  @Output() readonly openChange = new EventEmitter<boolean>();\r\n\r\n  @Input() get showTime(): SupportTimeOptions | boolean {\r\n    return this._showTime;\r\n  }\r\n\r\n  set showTime(value: SupportTimeOptions | boolean) {\r\n    this._showTime = typeof value === 'object' ? value : toBoolean(value);\r\n  }\r\n\r\n  // ------------------------------------------------------------------------\r\n  // Input API Start\r\n  // ------------------------------------------------------------------------\r\n  @ViewChild(CdkConnectedOverlay, { static: false }) cdkConnectedOverlay?: CdkConnectedOverlay;\r\n  @ViewChild(DateRangePopupComponent, { static: false }) panel!: DateRangePopupComponent;\r\n  @ViewChild('separatorElement', { static: false }) separatorElement?: ElementRef;\r\n  @ViewChild('pickerInput', { static: false }) pickerInput?: ElementRef<HTMLInputElement>;\r\n  @ViewChildren('rangePickerInput') rangePickerInputs?: QueryList<ElementRef<HTMLInputElement>>;\r\n  stateChanges = new Subject<void>();\r\n  value: any;\r\n  focused: boolean = false;\r\n  get empty() {\r\n    return false;\r\n  }\r\n  @Input()\r\n  get required(): boolean {\r\n    return this._required;\r\n  }\r\n  set required(value: boolean) {\r\n    this._required = coerceBooleanProperty(value);\r\n    this.stateChanges.next();\r\n  }\r\n  private _required = false;\r\n  parentIsFormField: boolean = false;\r\n  origin: CdkOverlayOrigin;\r\n  document: Document;\r\n  inputSize: number = 12;\r\n  inputWidth?: number;\r\n  private destroy$ = new Subject<void>();\r\n  prefixCls = PREFIX_CLASS;\r\n  inputValue!: any;\r\n  activeBarStyle: object = {};\r\n  overlayOpen: boolean = false; // Available when \"isOpen\" = undefined\r\n  overlayPositions: ConnectionPositionPair[] = [\r\n    {\r\n      offsetY: 2,\r\n      originX: 'start',\r\n      originY: 'bottom',\r\n      overlayX: 'start',\r\n      overlayY: 'top'\r\n    },\r\n    {\r\n      offsetY: -2,\r\n      originX: 'start',\r\n      originY: 'top',\r\n      overlayX: 'start',\r\n      overlayY: 'bottom'\r\n    },\r\n    {\r\n      offsetY: 2,\r\n      originX: 'end',\r\n      originY: 'bottom',\r\n      overlayX: 'end',\r\n      overlayY: 'top'\r\n    },\r\n    {\r\n      offsetY: -2,\r\n      originX: 'end',\r\n      originY: 'top',\r\n      overlayX: 'end',\r\n      overlayY: 'bottom'\r\n    }\r\n  ] as ConnectionPositionPair[];\r\n  currentPositionX: HorizontalConnectionPos = 'start';\r\n  currentPositionY: VerticalConnectionPos = 'bottom';\r\n  currentPickerValue: CompatibleValue | null = null;\r\n  tdsCssContainer: string = \"\";\r\n  get realOpenState(): boolean {\r\n    // The value that really decide the open state of overlay\r\n\r\n    return this.isOpenHandledByUser() ? !!this.isOpen : this.overlayOpen;\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.autoFocus) {\r\n      this.focus();\r\n    }\r\n\r\n    if (this.isRange && this.platform.isBrowser) {\r\n      this.resizeObserver\r\n        .observe(this.elementRef)\r\n        .pipe(takeUntil(this.destroy$))\r\n        .subscribe(() => {\r\n          this.updateInputWidthAndArrowLeft();\r\n        });\r\n    }\r\n\r\n    this.datePickerService.inputPartChange$.pipe(takeUntil(this.destroy$)).subscribe(partType => {\r\n      if (partType) {\r\n        this.datePickerService.activeInput = partType;\r\n      }\r\n      this.focus();\r\n      this.updateInputWidthAndArrowLeft();\r\n    });\r\n  }\r\n\r\n  updateInputWidthAndArrowLeft(): void {\r\n    this.inputWidth = this.rangePickerInputs?.first?.nativeElement.offsetWidth || 0;\r\n\r\n    const baseStyle = { position: 'absolute', width: `${this.inputWidth}px` };\r\n    this.datePickerService.arrowLeft = this.datePickerService.activeInput === 'left' ? 0 : this.inputWidth + this.separatorElement?.nativeElement.offsetWidth || 0;\r\n\r\n    if (this.dir === 'rtl') {\r\n      this.activeBarStyle = { ...baseStyle, right: `${this.datePickerService.arrowLeft}px` };\r\n    } else {\r\n      this.activeBarStyle = { ...baseStyle, left: `${this.datePickerService.arrowLeft}px` };\r\n    }\r\n\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  getInput(partType?: RangePartType): HTMLInputElement | undefined {\r\n    if (this.inline) {\r\n      return undefined;\r\n    }\r\n    return this.isRange\r\n      ? partType === 'left'\r\n        ? this.rangePickerInputs?.first.nativeElement\r\n        : this.rangePickerInputs?.last.nativeElement\r\n      : this.pickerInput!.nativeElement;\r\n  }\r\n\r\n  focus(): void {\r\n    const activeInputElement = this.getInput(this.datePickerService.activeInput);\r\n    if (this.document.activeElement !== activeInputElement) {\r\n      activeInputElement?.focus();\r\n    }\r\n    if (!this.focused && !this.disabled) {\r\n      this.focused = true;\r\n      this.stateChanges.next();\r\n    }\r\n  }\r\n\r\n  onFocus(event: FocusEvent, partType?: RangePartType): void {\r\n    event.preventDefault();\r\n    if (partType) {\r\n      this.datePickerService.inputPartChange$.next(partType);\r\n    }\r\n    this.renderClass(true);\r\n\r\n  }\r\n\r\n  // blur event has not the relatedTarget in IE11, use focusout instead.\r\n  onFocusout(event: FocusEvent): void {\r\n    event.preventDefault();\r\n    this.renderClass(false);\r\n  }\r\n\r\n  // Show overlay content\r\n  open(): void {\r\n    if (this.isRange) {\r\n      this.currentPickerValue = this.datePickerService.hasValue() ? this.datePickerService.value : null;\r\n    }\r\n    if (this.inline) {\r\n      return;\r\n    }\r\n    if (!this.realOpenState && !this.disabled) {\r\n\r\n      this.updateInputWidthAndArrowLeft();\r\n      this.overlayOpen = true;\r\n      this.openChange.emit(true);\r\n      this.updateCssContainer();\r\n      this.cdr.markForCheck();\r\n    }\r\n  }\r\n\r\n  close(): void {\r\n    if (this.inline || this.isRange) {\r\n      return;\r\n    } else {\r\n      this.p_Close();\r\n    }\r\n\r\n  }\r\n  private p_Close() {\r\n    if (this.realOpenState) {\r\n      this.overlayOpen = false;\r\n      this.focused = false;\r\n      this.stateChanges.next();\r\n      this.openChange.emit(false);\r\n      this.onTouchedFn();\r\n      this.updateCssContainer();\r\n    }\r\n  }\r\n  showClear(): boolean {\r\n    return !this.disabled && !this.isEmptyValue(this.datePickerService.value) && this.allowClear;\r\n  }\r\n\r\n  checkAndClose(): void {\r\n\r\n    if (!this.realOpenState) {\r\n      return;\r\n    }\r\n\r\n    if (this.panel.isAllowed(this.datePickerService.value!, true)) {\r\n      if (Array.isArray(this.datePickerService.value) && wrongSortOrder(this.datePickerService.value)) {\r\n        const index = this.datePickerService.getActiveIndex();\r\n        const value = this.datePickerService.value[index];\r\n        this.panel.changeValueFromSelect(value!, true);\r\n        return;\r\n      }\r\n\r\n      if (!this.isRange) {\r\n        //cập nhật modelchange khi đóng popup\r\n        if (this.showTime) {\r\n          this.updateInputValue();\r\n          this.datePickerService.emitValue$.next();\r\n        }\r\n        else\r\n          this.close();\r\n      }\r\n\r\n    } else {\r\n      this.datePickerService.setValue(this.datePickerService.initialValue!);\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  onClickInputBox(event: MouseEvent): void {\r\n    event.stopPropagation();\r\n    this.focus();\r\n    if (!this.isOpenHandledByUser()) {\r\n      this.open();\r\n    }\r\n  }\r\n\r\n  onOverlayKeydown(event: KeyboardEvent): void {\r\n    if (event.keyCode === ESCAPE) {\r\n      this.datePickerService.initValue();\r\n    }\r\n  }\r\n\r\n  // NOTE: A issue here, the first time position change, the animation will not be triggered.\r\n  // Because the overlay's \"positionChange\" event is emitted after the content's full shown up.\r\n  // All other components like \"tds-dropdown\" which depends on overlay also has the same issue.\r\n  // See: https://github.com/NG-ZORRO/ng-zorro-antd/issues/1429\r\n  onPositionChange(position: ConnectedOverlayPositionChange): void {\r\n    this.currentPositionX = position.connectionPair.originX;\r\n    this.currentPositionY = position.connectionPair.originY;\r\n    this.cdr.detectChanges(); // Take side-effects to position styles\r\n  }\r\n\r\n  onClickClear(event: MouseEvent): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    this.datePickerService.initValue(true);\r\n    this.datePickerService.emitValue$.next();\r\n  }\r\n\r\n  updateInputValue(): void {\r\n    const newValue = this.datePickerService.value;\r\n    if (this.isRange) {\r\n      this.inputValue = newValue ? (newValue as CandyDate[]).map(v => this.formatValue(v)) : ['', ''];\r\n    } else {\r\n      this.inputValue = this.formatValue(newValue as CandyDate);\r\n    }\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  formatValue(value: CandyDate): string {\r\n\r\n    return this.dateHelper.format(value && (value as CandyDate).nativeDate, this.format);\r\n  }\r\n\r\n  onInputChange(value: string, isEnter: boolean = false): void {\r\n    /**\r\n     * in IE11 focus/blur will trigger ngModelChange if placeholder changes,\r\n     * so we forbidden IE11 to open panel through input change\r\n     */\r\n    if (\r\n      !this.platform.TRIDENT &&\r\n      this.document.activeElement === this.getInput(this.datePickerService.activeInput) &&\r\n      !this.realOpenState\r\n    ) {\r\n      this.open();\r\n      return;\r\n    }\r\n\r\n    const date = this.checkValidDate(value);\r\n    // Can only change date when it's open\r\n    if (date && this.realOpenState) {\r\n      this.panel.changeValueFromSelect(date, isEnter);\r\n    }\r\n  }\r\n\r\n  onKeyupEnter(event: Event): void {\r\n    this.onInputChange((event.target as HTMLInputElement).value, true);\r\n  }\r\n\r\n  private checkValidDate(value: string): CandyDate | null {\r\n    const date = new CandyDate(this.dateHelper.parseDate(value, this.format));\r\n\r\n    if (!date.isValid() || value !== this.dateHelper.format(date.nativeDate, this.format)) {\r\n      return null;\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  getPlaceholder(partType?: RangePartType): string {\r\n    return this.isRange ? this.placeholder[this.datePickerService.getActiveIndex(partType!)] : (this.placeholder as string);\r\n  }\r\n\r\n  isEmptyValue(value: CompatibleValue): boolean {\r\n    if (value === null) {\r\n      return true;\r\n    } else if (this.isRange) {\r\n      return !value || !Array.isArray(value) || value.every(val => !val);\r\n    } else {\r\n      return !value;\r\n    }\r\n  }\r\n\r\n  // Whether open state is permanently controlled by user himself\r\n  isOpenHandledByUser(): boolean {\r\n    return this.isOpen !== undefined;\r\n  }\r\n\r\n  // ------------------------------------------------------------------------\r\n  // Input API End\r\n  // ------------------------------------------------------------------------\r\n\r\n  constructor(\r\n    public tdsConfigService: TDSConfigService,\r\n    public datePickerService: DatePickerService,\r\n    protected i18n: TDSI18nService,\r\n    protected cdr: ChangeDetectorRef,\r\n    private renderer: Renderer2,\r\n    private elementRef: ElementRef,\r\n    private dateHelper: DateHelperService,\r\n    private resizeObserver: TDSResizeObserver,\r\n    private platform: Platform,\r\n    @Inject(DOCUMENT) doc: any,\r\n    @Optional() private directionality: Directionality,\r\n    @Optional() @Inject(TDS_FORM_FIELD) @Host() public _formField: TDSFormField,\r\n    @Optional() @Self() public ngControl: NgControl,\r\n    @Optional() public _parentForm: NgForm,\r\n    @Optional() public _parentFormGroup: FormGroupDirective,\r\n    // @Host() @Optional() public noAnimation?: false\r\n  ) {\r\n    this.document = doc;\r\n    this.origin = new CdkOverlayOrigin(this.elementRef);\r\n    if (this.ngControl != null) {\r\n      this.ngControl.valueAccessor = this;\r\n    }\r\n    if (this._formField) {\r\n      // this.size = this._formField.size;\r\n      this.parentIsFormField = true;\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.updateCssContainer();\r\n    // Subscribe the every locale change if the locale is not handled by user\r\n    if (!this.locale) {\r\n      this.i18n.localeChange.pipe(takeUntil(this.destroyed$)).subscribe(() => this.setLocale());\r\n    }\r\n    // Default value\r\n    this.datePickerService.isRange = this.isRange;\r\n    this.datePickerService.initValue(true);\r\n    this.datePickerService.emitValue$.pipe(takeUntil(this.destroyed$)).subscribe(_ => {\r\n\r\n      const value = this.datePickerService.value;\r\n      this.datePickerService.initialValue = cloneDate(value);\r\n      if (this.isRange) {\r\n        const vAsRange = value as CandyDate[];\r\n        if (TDSHelperArray.hasListValue(vAsRange)) {\r\n          this.onChangeFn([vAsRange[0]?.nativeDate ?? null, vAsRange[1]?.nativeDate ?? null]);\r\n        } else {\r\n          this.onChangeFn([]);\r\n        }\r\n      } else {\r\n        if (value) {\r\n          this.onChangeFn((value as CandyDate).nativeDate);\r\n        } else {\r\n          this.onChangeFn(null);\r\n        }\r\n      }\r\n      this.onTouchedFn();\r\n      // When value emitted, overlay will be closed\r\n      this.close();\r\n    });\r\n\r\n    this.directionality.change?.pipe(takeUntil(this.destroyed$)).subscribe((direction: Direction) => {\r\n      this.dir = direction;\r\n      this.cdr.detectChanges();\r\n    });\r\n    this.dir = this.directionality.value;\r\n    this.inputValue = this.isRange ? ['', ''] : '';\r\n    this.setModeAndFormat();\r\n\r\n    this.datePickerService.valueChange$.pipe(takeUntil(this.destroy$)).subscribe(() => {\r\n      this.updateInputValue();\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.popupStyle) {\r\n      // Always assign the popup style patch\r\n      this.popupStyle = this.popupStyle ? { ...this.popupStyle, ...POPUP_STYLE_PATCH } : POPUP_STYLE_PATCH;\r\n    }\r\n\r\n    // Mark as customized placeholder by user once placeholder assigned at the first time\r\n    if (changes.placeholder?.currentValue) {\r\n      this.isCustomPlaceHolder = true;\r\n    }\r\n\r\n    if (changes.format?.currentValue) {\r\n      this.isCustomFormat = true;\r\n    }\r\n\r\n    if (changes.locale) {\r\n      // The locale is currently handled by user\r\n      this.setDefaultPlaceHolder();\r\n    }\r\n\r\n    if (changes.renderExtraFooter) {\r\n      this.extraFooter = valueFunctionProp(this.renderExtraFooter!);\r\n    }\r\n\r\n    if (changes.mode) {\r\n      this.setDefaultPlaceHolder();\r\n      this.setModeAndFormat();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroyed$.next();\r\n    this.destroyed$.complete();\r\n  }\r\n\r\n  setModeAndFormat(): void {\r\n    const local = this.i18n.getLocale();\r\n    let inputFormats: { [key in TDSDateMode]?: string } = {\r\n      year: 'yyyy',\r\n      month: 'yyyy/MM',\r\n      week: this.i18n.getDateLocale() ? 'RRRR/II' : 'yyyy/ww', // Format for week\r\n      date: this.showTime ? 'yyyy/MM/dd HH:mm:ss' : 'yyyy/MM/dd'\r\n    };\r\n    if (TDSHelperObject.hasValue(local)) {\r\n      inputFormats = {\r\n        year: local.DatePicker.lang.yearFormat ? local.DatePicker.lang.yearFormat : 'yyyy',\r\n        month: local.DatePicker.lang.monthFormat ? local.DatePicker.lang.monthFormat : 'yyyy/MM',\r\n        week: this.i18n.getDateLocale() ? 'RRRR/II' : 'ww', // Format for week\r\n        date: this.showTime ? local.DatePicker.lang.dateTimeFormat : local.DatePicker.lang.dateFormat\r\n      };\r\n    }\r\n\r\n    if (!this.mode) {\r\n      this.mode = 'date';\r\n    }\r\n\r\n    this.panelMode = this.isRange ? [this.mode, this.mode] : this.mode;\r\n\r\n    // Default format when it's empty\r\n    if (!this.isCustomFormat) {\r\n      this.format = inputFormats[this.mode as TDSDateMode]!;\r\n    }\r\n    this.inputSize = Math.max(10, this.format.length) + 2;\r\n    this.updateInputValue();\r\n  }\r\n\r\n  /**\r\n   * Triggered when overlayOpen changes (different with realOpenState)\r\n   * @param open The overlayOpen in picker component\r\n   */\r\n  onOpenChange(open: boolean): void {\r\n    this.openChange.emit(open);\r\n  }\r\n\r\n  // ------------------------------------------------------------------------\r\n  // | Control value accessor implements\r\n  // ------------------------------------------------------------------------\r\n\r\n  // NOTE: onChangeFn/onTouchedFn will not be assigned if user not use as ngModel\r\n  onChangeFn: OnChangeType = () => void 0;\r\n  onTouchedFn: OnTouchedType = () => void 0;\r\n\r\n  writeValue(value: CompatibleDate): void {\r\n    //  lỗi không binding dc data khi dùng formcontrol, do gọi writevalue trước ngOnInit\r\n    setTimeout(() => {\r\n      this.setValue(value);\r\n      this.cdr.markForCheck();\r\n    }, 0);\r\n  }\r\n\r\n  registerOnChange(fn: OnChangeType): void {\r\n    this.onChangeFn = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: OnTouchedType): void {\r\n    this.onTouchedFn = fn;\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  // ------------------------------------------------------------------------\r\n  // | Internal methods\r\n  // ------------------------------------------------------------------------\r\n\r\n  // Reload locale from i18n with side effects\r\n  private setLocale(): void {\r\n    this.locale = this.i18n.getLocaleData('DatePicker', {});\r\n    this.setDefaultPlaceHolder();\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  private setDefaultPlaceHolder(): void {\r\n    if (!this.isCustomPlaceHolder && this.locale) {\r\n      const defaultPlaceholder: { [key in TDSDateMode]?: string } = {\r\n        year: this.getPropertyOfLocale('yearPlaceholder'),\r\n        month: this.getPropertyOfLocale('monthPlaceholder'),\r\n        week: this.getPropertyOfLocale('weekPlaceholder'),\r\n        date: this.getPropertyOfLocale('placeholder')\r\n      };\r\n\r\n      const defaultRangePlaceholder: { [key in TDSDateMode]?: string[] } = {\r\n        year: this.getPropertyOfLocale('rangeYearPlaceholder'),\r\n        month: this.getPropertyOfLocale('rangeMonthPlaceholder'),\r\n        week: this.getPropertyOfLocale('rangeWeekPlaceholder'),\r\n        date: this.getPropertyOfLocale('rangePlaceholder')\r\n      };\r\n\r\n      this.placeholder = this.isRange\r\n        ? defaultRangePlaceholder[this.mode as TDSDateMode]!\r\n        : defaultPlaceholder[this.mode as TDSDateMode]!;\r\n    }\r\n  }\r\n\r\n  private getPropertyOfLocale<T extends keyof TDSDatePickerLangI18nInterface>(type: T): TDSDatePickerLangI18nInterface[T] {\r\n\r\n    return this.locale.lang[type] || this.i18n.getLocaleData(`DatePicker.lang.${type}`);\r\n  }\r\n\r\n  // Safe way of setting value with default\r\n  private setValue(value: CompatibleDate): void {\r\n    const newValue: CompatibleValue = this.datePickerService.makeValue(value);\r\n    this.datePickerService.setValue(newValue);\r\n    this.datePickerService.initialValue = newValue;\r\n  }\r\n\r\n  renderClass(value: boolean): void {\r\n    // TODO: avoid autoFocus cause change after checked error\r\n    if (value) {\r\n      this.renderer.addClass(this.elementRef.nativeElement, 'tds-picker-focused');\r\n    } else {\r\n      this.renderer.removeClass(this.elementRef.nativeElement, 'tds-picker-focused');\r\n    }\r\n\r\n  }\r\n\r\n  onPanelModeChange(panelMode: TDSDateMode | TDSDateMode[]): void {\r\n    this.panelChange.emit(panelMode);\r\n  }\r\n\r\n  // Emit calendarChange when select date by tds-range-picker\r\n  _calendarChange(value: CompatibleValue): void {\r\n    if (this.isRange && Array.isArray(value)) {\r\n      const rangeValue = value.filter(x => x instanceof CandyDate).map(x => x!.nativeDate);\r\n      this.calendarChange.emit(rangeValue);\r\n    }\r\n  }\r\n\r\n  onResultOk(): void {\r\n    if (this.isRange) {\r\n      const value = this.datePickerService.value as CandyDate[];\r\n      if (value.length) {\r\n        this.ok.emit([value[0]?.nativeDate || null, value[1]?.nativeDate || null]);\r\n      } else {\r\n        this.ok.emit([]);\r\n      }\r\n      if (!this.showTime || this.panel.isAllowed(this.datePickerService.value!, true))\r\n        this.p_Close();\r\n    } else {\r\n      if (this.datePickerService.value) {\r\n        this.ok.emit((this.datePickerService.value as CandyDate).nativeDate);\r\n      } else {\r\n        this.ok.emit(null);\r\n      }\r\n    }\r\n  }\r\n  onResultCancel(): void {\r\n    this.datePickerService.setValue(this.currentPickerValue);\r\n    this.datePickerService.emitValue$.next();\r\n    this.p_Close();\r\n  }\r\n  ngDoCheck() {\r\n\r\n    if (this.ngControl) {\r\n      this.updateErrorState();\r\n    }\r\n  }\r\n  errorState: boolean = false;\r\n  updateErrorState() {\r\n    const oldState = this.errorState;\r\n    const parent = this._parentFormGroup || this._parentForm;\r\n    // const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\r\n    const control = this.ngControl ? this.ngControl.control as FormControl : null;\r\n    const newState = this._isErrorState(control, parent);\r\n    if (newState !== oldState) {\r\n      this.errorState = newState;\r\n      this.stateChanges.next();\r\n      this.cdr.markForCheck();\r\n    }\r\n  }\r\n  private _isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n\r\n    return TDSIsErrorState(control, form);\r\n  }\r\n  // get errorState(): boolean {\r\n  //   return this.ngControl && this.ngControl.errors !== null && !!this.ngControl.touched;\r\n  // }\r\n  setDescribedByIds(ids: string[]) {\r\n    // if (ids.length) {\r\n    //   this._elementRef.nativeElement.setAttribute('aria-describedby', ids.join(' '));\r\n    // } else {\r\n    //   this._elementRef.nativeElement.removeAttribute('aria-describedby');\r\n    // }\r\n  }\r\n  onContainerClick(e: MouseEvent) {\r\n    // e.preventDefault();\r\n    // e.stopPropagation();\r\n\r\n  }\r\n  onClickOutside(e: MouseEvent) {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    this.checkAndClose();\r\n  }\r\n\r\n  updateCssContainer() {\r\n    this.tdsCssContainer = '';\r\n    if (!this.parentIsFormField) {\r\n      this.tdsCssContainer += 'border  rounded bg-white dark:bg-d-neutral-3-50';\r\n      if (this.overlayOpen) {\r\n        this.tdsCssContainer += ' outline-none ring-opacity-20 ring ring-primary-1 border-primary-1';\r\n      } else {\r\n        this.tdsCssContainer += ' border-neutral-2-200 dark:border-d-neutral-2-200'\r\n      }\r\n    }\r\n\r\n    this.tdsCssContainer += ` ${this.tdsClass}`;\r\n  }\r\n}\r\n","\r\n\r\n/**\r\n * A collection module of standard output for all lib components\r\n */\r\n\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TDSOutletModule } from 'tds-ui/core/outlet';\r\nimport { TDSI18nModule } from 'tds-ui/i18n';\r\nimport { TDSSelectModule } from 'tds-ui/select';\r\nimport { TDSTimePickerModule } from 'tds-ui/time-picker';\r\nimport { DateHeaderComponent } from './date-header.component';\r\nimport { DateTableComponent } from './date-table.component';\r\nimport { DecadeHeaderComponent } from './decade-header.component';\r\nimport { DecadeTableComponent } from './decade-table.component';\r\nimport { MonthHeaderComponent } from './month-header.component';\r\nimport { MonthTableComponent } from './month-table.component';\r\nimport { YearHeaderComponent } from './year-header.component';\r\nimport { YearTableComponent } from './year-table.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    TDSI18nModule,\r\n    TDSTimePickerModule,\r\n    TDSOutletModule,\r\n    TDSSelectModule\r\n  ],\r\n  exports: [\r\n    DateHeaderComponent,\r\n    DateTableComponent,\r\n    DecadeHeaderComponent,\r\n    DecadeTableComponent,\r\n    MonthHeaderComponent,\r\n    MonthTableComponent,\r\n    YearHeaderComponent,\r\n    YearTableComponent\r\n  ],\r\n  declarations: [\r\n    DateHeaderComponent,\r\n    DateTableComponent,\r\n    DecadeHeaderComponent,\r\n    DecadeTableComponent,\r\n    MonthHeaderComponent,\r\n    MonthTableComponent,\r\n    YearHeaderComponent,\r\n    YearTableComponent\r\n  ]\r\n})\r\nexport class LibPackerModule { }\r\n","\r\n\r\nimport { Directive, Host, Optional } from '@angular/core';\r\nimport { TDSDatePickerComponent } from './date-picker.component';\r\n\r\n@Directive({\r\n  selector: 'tds-month-picker',\r\n  exportAs: 'tdsMonthPicker'\r\n})\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport class TDSMonthPickerComponent {\r\n  constructor(@Optional() @Host() public datePicker: TDSDatePickerComponent) {\r\n    this.datePicker.mode = 'month';\r\n  }\r\n}\r\n","\r\n\r\nimport { Directive, Host, Optional } from '@angular/core';\r\nimport { TDSDatePickerComponent } from './date-picker.component';\r\n\r\n@Directive({\r\n  selector: 'tds-range-picker',\r\n  exportAs: 'tdsRangePicker'\r\n})\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport class TDSRangePickerComponent {\r\n  constructor(@Optional() @Host() public datePicker: TDSDatePickerComponent) {\r\n    this.datePicker.isRange = true;\r\n  }\r\n}\r\n","\r\n\r\nimport { Directive, Host, Optional } from '@angular/core';\r\nimport { TDSDatePickerComponent } from './date-picker.component';\r\n\r\n@Directive({\r\n  selector: 'tds-week-picker',\r\n  exportAs: 'tdsWeekPicker',\r\n})\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport class TDSWeekPickerComponent {\r\n  constructor(@Optional() @Host() public datePicker: TDSDatePickerComponent) {\r\n    this.datePicker.mode = 'week';\r\n  }\r\n}\r\n","\r\n\r\nimport { Directive, Host, Optional } from '@angular/core';\r\nimport { TDSDatePickerComponent } from './date-picker.component';\r\n\r\n@Directive({\r\n  selector: 'tds-year-picker',\r\n  exportAs: 'tdsYearPicker'\r\n})\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport class TDSYearPickerComponent {\r\n  constructor(@Optional() @Host() public datePicker: TDSDatePickerComponent) {\r\n    this.datePicker.mode = 'year';\r\n  }\r\n}\r\n","\r\n\r\nimport { BidiModule } from '@angular/cdk/bidi';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TDSButtonModule } from 'tds-ui/button';\r\nimport { TDSOutletModule } from 'tds-ui/core/outlet';\r\nimport { TDSTimePickerModule } from 'tds-ui/time-picker';\r\nimport { CalendarFooterComponent } from './calendar-footer.component';\r\nimport { TDSDatePickerComponent } from './date-picker.component';\r\nimport { DateRangePopupComponent } from './date-range-popup.component';\r\nimport { InnerPopupComponent } from './inner-popup.component';\r\nimport { LibPackerModule } from './lib/lib-packer.module';\r\nimport { TDSMonthPickerComponent } from './month-picker.component';\r\nimport { TDSRangePickerComponent } from './range-picker.component';\r\nimport { TDSWeekPickerComponent } from './week-picker.component';\r\nimport { TDSYearPickerComponent } from './year-picker.component';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    BidiModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    OverlayModule,\r\n    LibPackerModule,  \r\n    TDSOutletModule,\r\n    TDSTimePickerModule,\r\n    TDSButtonModule,\r\n  ],\r\n  exports: [TDSDatePickerComponent,\r\n     TDSRangePickerComponent,\r\n      TDSMonthPickerComponent,\r\n       TDSYearPickerComponent,\r\n        TDSWeekPickerComponent],\r\n  declarations: [\r\n    TDSDatePickerComponent,\r\n    TDSMonthPickerComponent,\r\n    TDSYearPickerComponent,\r\n    TDSWeekPickerComponent,\r\n    TDSRangePickerComponent,\r\n    CalendarFooterComponent,\r\n    InnerPopupComponent,\r\n    DateRangePopupComponent\r\n  ]\r\n})\r\nexport class TDSDatePickerModule {}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i2.DatePickerService","_c0","_c1","_c2","_c3","i1.DatePickerService","i1","i3","i4","i8","i10.DateRangePopupComponent","i1.TDSDatePickerComponent"],"mappings":"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"}