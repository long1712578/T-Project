{"version":3,"file":"tds-ui-button-menu.mjs","sources":["../../../projects/tds-ui/button-menu/menu-animations.ts","../../../projects/tds-ui/button-menu/menu-content.ts","../../../projects/tds-ui/button-menu/menu-errors.ts","../../../projects/tds-ui/button-menu/menu-panel.ts","../../../projects/tds-ui/button-menu/menu-item.ts","../../../projects/tds-ui/button-menu/menu-item.html","../../../projects/tds-ui/button-menu/menu.ts","../../../projects/tds-ui/button-menu/menu.html","../../../projects/tds-ui/button-menu/menu-trigger.ts","../../../projects/tds-ui/button-menu/menu-module.ts","../../../projects/tds-ui/button-menu/tds-ui-button-menu.ts"],"sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport{\r\n  trigger,\r\n  state,\r\n  style,\r\n  animate,\r\n  transition,\r\n  AnimationTriggerMetadata,\r\n} from '@angular/animations';\r\n\r\n/**\r\n * Animations used by the tbutton-menu component.\r\n * Animation duration and timing values are based on:\r\n * https://material.io/guidelines/components/menus.html#menus-usage\r\n * @docs-private\r\n */\r\nexport const TDSbuttonMenuAnimations: {\r\n  readonly transformMenu: AnimationTriggerMetadata;\r\n  readonly fadeInItems: AnimationTriggerMetadata;\r\n} = {\r\n  /**\r\n   * This animation controls the menu panel's entry and exit from the page.\r\n   *\r\n   * When the menu panel is added to the DOM, it scales in and fades in its border.\r\n   *\r\n   * When the menu panel is removed from the DOM, it simply fades out after a brief\r\n   * delay to display the ripple.\r\n   */\r\n  transformMenu: trigger('transformMenu', [\r\n    state('void', style({\r\n      opacity: 0,\r\n      transform: 'scale(0.8)'\r\n    })),\r\n    transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\r\n      opacity: 1,\r\n      transform: 'scale(1)'\r\n    }))),\r\n    transition('* => void', animate('100ms 25ms linear', style({opacity: 0})))\r\n  ]),\r\n\r\n\r\n  /**\r\n   * This animation fades in the background color and content of the menu panel\r\n   * after its containing element is scaled in.\r\n   */\r\n  fadeInItems: trigger('fadeInItems', [\r\n    // TODO(crisbeto): this is inside the `transformMenu`\r\n    // now. Remove next time we do breaking changes.\r\n    state('showing', style({opacity: 1})),\r\n    transition('void => *', [\r\n      style({opacity: 0}),\r\n      animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\r\n    ])\r\n  ])\r\n};\r\n\r\n/**\r\n * @deprecated\r\n * @breaking-change 8.0.0\r\n * @docs-private\r\n */\r\nexport const fadeInItems = TDSbuttonMenuAnimations.fadeInItems;\r\n\r\n/**\r\n * @deprecated\r\n * @breaking-change 8.0.0\r\n * @docs-private\r\n */\r\nexport const transformMenu = TDSbuttonMenuAnimations.transformMenu;\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {DomPortalOutlet, TemplatePortal} from '@angular/cdk/portal';\r\nimport {DOCUMENT} from '@angular/common';\r\nimport {\r\n  ApplicationRef,\r\n  ChangeDetectorRef,\r\n  ComponentFactoryResolver,\r\n  Directive,\r\n  Inject,\r\n  InjectionToken,\r\n  Injector,\r\n  OnDestroy,\r\n  TemplateRef,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport {Subject} from 'rxjs';\r\n\r\n/**\r\n * Injection token that can be used to reference instances of `TDSButtonMenuContent`. It serves\r\n * as alternative token to the actual `TDSButtonMenuContent` class which could cause unnecessary\r\n * retention of the class and its directive metadata.\r\n */\r\nexport const TDSBUTTON_MENU_CONTENT = new InjectionToken<TDSButtonMenuContent>('TDSButtonMenuContent');\r\n\r\n/**\r\n * Menu content that will be rendered lazily once the menu is opened.\r\n */\r\n@Directive({\r\n  selector: 'ng-template[TDSButtonMenuContent]',\r\n  providers: [{provide: TDSBUTTON_MENU_CONTENT, useExisting: TDSButtonMenuContent}],\r\n})\r\nexport class TDSButtonMenuContent implements OnDestroy {\r\n  private _portal!: TemplatePortal<any>;\r\n  private _outlet!: DomPortalOutlet;\r\n\r\n  /** Emits when the menu content has been attached. */\r\n  readonly _attached = new Subject<void>();\r\n\r\n  constructor(\r\n    private _template: TemplateRef<any>,\r\n    private _componentFactoryResolver: ComponentFactoryResolver,\r\n    private _appRef: ApplicationRef,\r\n    private _injector: Injector,\r\n    private _viewContainerRef: ViewContainerRef,\r\n    @Inject(DOCUMENT) private _document: any,\r\n    private _changeDetectorRef?: ChangeDetectorRef) {}\r\n\r\n  /**\r\n   * Attaches the content with a particular context.\r\n   * @docs-private\r\n   */\r\n  attach(context: any = {}) {\r\n    if (!this._portal) {\r\n      this._portal = new TemplatePortal(this._template, this._viewContainerRef);\r\n    }\r\n\r\n    this.detach();\r\n\r\n    if (!this._outlet) {\r\n      this._outlet = new DomPortalOutlet(this._document.createElement('div'),\r\n          this._componentFactoryResolver, this._appRef, this._injector);\r\n    }\r\n\r\n    const element: HTMLElement = this._template.elementRef.nativeElement;\r\n\r\n    // Because we support opening the same menu from different triggers (which in turn have their\r\n    // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\r\n    // risk it staying attached to a pane that's no longer in the DOM.\r\n    element.parentNode!.insertBefore(this._outlet.outletElement, element);\r\n\r\n    // When `TDSButtonMenuContent` is used in an `OnPush` component, the insertion of the menu\r\n    // content via `createEmbeddedView` does not cause the content to be seen as \"dirty\"\r\n    // by Angular. This causes the `@ContentChildren` for menu items within the menu to\r\n    // not be updated by Angular. By explicitly marking for check here, we tell Angular that\r\n    // it needs to check for new menu items and update the `@ContentChild` in `TDSButtonMenu`.\r\n    // @breaking-change 9.0.0 Make change detector ref required\r\n    if (this._changeDetectorRef) {\r\n      this._changeDetectorRef.markForCheck();\r\n    }\r\n\r\n    this._portal.attach(this._outlet, context);\r\n    this._attached.next();\r\n  }\r\n\r\n  /**\r\n   * Detaches the content.\r\n   * @docs-private\r\n   */\r\n  detach() {\r\n    if (this._portal.isAttached) {\r\n      this._portal.detach();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this._outlet) {\r\n      this._outlet.dispose();\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * Throws an exception for the case when menu trigger doesn't have a valid tbutton-menu instance\r\n * @docs-private\r\n */\r\nexport function throwTDSMenuMissingError() {\r\n  throw Error(`tdsbuttonMenuTriggerFor: must pass in an tbutton-menu instance.\r\n\r\n    Example:\r\n      <tbutton-menu #menu=\"TDSButtonMenu\"></tbutton-menu>\r\n      <button [tdsbuttonMenuTriggerFor]=\"menu\"></button>`);\r\n}\r\n\r\n/**\r\n * Throws an exception for the case when menu's x-position value isn't valid.\r\n * In other words, it doesn't match 'before' or 'after'.\r\n * @docs-private\r\n */\r\nexport function throwTDSButtonMenuInvalidPositionX() {\r\n  throw Error(`xPosition value must be either 'before' or after'.\r\n      Example: <tbutton-menu xPosition=\"before\" #menu=\"TDSButtonMenu\"></tbutton-menu>`);\r\n}\r\n\r\n/**\r\n * Throws an exception for the case when menu's y-position value isn't valid.\r\n * In other words, it doesn't match 'above' or 'below'.\r\n * @docs-private\r\n */\r\nexport function throwTDSMenuInvalidPositionY() {\r\n  throw Error(`yPosition value must be either 'above' or below'.\r\n      Example: <tbutton-menu yPosition=\"above\" #menu=\"TDSButtonMenu\"></tbutton-menu>`);\r\n}\r\n\r\n\r\n/**\r\n * Throws an exception for the case when a menu is assigned\r\n * to a trigger that is placed inside the same menu.\r\n * @docs-private\r\n */\r\nexport function throwTDSMenuRecursiveError() {\r\n  throw Error(`tdsbuttonMenuTriggerFor: menu cannot contain its own trigger. Assign a menu that is ` +\r\n              `not a parent of the trigger or move the trigger outside of the menu.`);\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {EventEmitter, TemplateRef, InjectionToken} from '@angular/core';\r\nimport {MenuPositionX, MenuPositionY} from './menu-positions';\r\nimport {Direction} from '@angular/cdk/bidi';\r\nimport {FocusOrigin} from '@angular/cdk/a11y';\r\nimport {TDSButtonMenuContent} from './menu-content';\r\n\r\n/**\r\n * Injection token used to provide the parent menu to menu-specific components.\r\n * @docs-private\r\n */\r\nexport const TDSBUTTON_MENU_PANEL = new InjectionToken<TDSButtonMenuPanel>('TDSBUTTON_MENU_PANEL');\r\n\r\n/**\r\n * Interface for a custom menu panel that can be used with `tdsbuttonMenuTriggerFor`.\r\n * @docs-private\r\n */\r\nexport interface TDSButtonMenuPanel<T = any> {\r\n  xPosition: MenuPositionX;\r\n  yPosition: MenuPositionY;\r\n  overlapTrigger: boolean;\r\n  templateRef: TemplateRef<any>;\r\n  readonly close: EventEmitter<void|'click'|'keydown'|'tab'>;\r\n  parentMenu?: TDSButtonMenuPanel | undefined;\r\n  direction?: Direction;\r\n  focusFirstItem: (origin?: FocusOrigin) => void;\r\n  resetActiveItem: () => void;\r\n  setPositionClasses?: (x: MenuPositionX, y: MenuPositionY) => void;\r\n  setElevation?(depth: number): void;\r\n  lazyContent?: TDSButtonMenuContent;\r\n  backdropClass?: string;\r\n  overlayPanelClass?: string|string[];\r\n  hasBackdrop?: boolean;\r\n  readonly panelId?: string;\r\n\r\n  /**\r\n   * @deprecated To be removed.\r\n   * @breaking-change 8.0.0\r\n   */\r\n  addItem?: (item: T) => void;\r\n\r\n  /**\r\n   * @deprecated To be removed.\r\n   * @breaking-change 8.0.0\r\n   */\r\n  removeItem?: (item: T) => void;\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {FocusableOption, FocusMonitor, FocusOrigin} from '@angular/cdk/a11y';\r\nimport {BooleanInput} from '@angular/cdk/coercion';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  OnDestroy,\r\n  ViewEncapsulation,\r\n  Inject,\r\n  Optional,\r\n  Input,\r\n  HostListener,\r\n  AfterViewInit,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  ChangeDetectorRef,\r\n} from '@angular/core';\r\n\r\nimport {Subject} from 'rxjs';\r\nimport {DOCUMENT} from '@angular/common';\r\nimport {TDSBUTTON_MENU_PANEL, TDSButtonMenuPanel} from './menu-panel';\r\nimport { CanDisable, CanDisableCtor, mixinDisabled } from 'tds-ui/shared/common';\r\nimport { ButtonSize, NgClassInterface } from 'tds-ui/core/config';\r\n\r\n// Boilerplate for applying mixins to TDSButtonMenuItem.\r\n/** @docs-private */\r\nclass TDSButtonMenuItemBase {}\r\nconst _TDSButtonMenuItemMixinBase:  CanDisableCtor & typeof TDSButtonMenuItemBase =\r\n   mixinDisabled(TDSButtonMenuItemBase);\r\n\r\n/**\r\n * Single item inside of a `tbutton-menu`. Provides the menu item styling and accessibility treatment.\r\n */\r\n@Component({\r\n  selector: '[tds-button-menu-item]',\r\n  exportAs: 'TDSButtonMenuItem',\r\n  inputs: ['disabled', 'disableRipple'],\r\n  host: {\r\n    '[attr.role]': 'role',\r\n    '[class.tds-button-menu-item]': 'true',   \r\n    '[class.tds-button-menu-item-highlighted]': '_highlighted',\r\n    '[class.tds-button-menu-item-submenu-trigger]': '_triggersSubmenu',\r\n   \r\n    '[attr.tabindex]': '_getTabIndex()',    \r\n    '[attr.aria-disabled]': 'disabled.toString()',\r\n    '[attr.disabled]': 'disabled || null',\r\n    'class': 'flex  flex-col justify-center w-full text-body-2 font-regular  hover:bg-neutral-3-50 focus:outline-none px-3 dark:hover:bg-d-neutral-3-300',\r\n    '[class.px-3]' :\"true\",\r\n    \"[class.py-2]\": \"size == 'md'\",\r\n    \"[class.py-1.5]\": \"size == 'sm'\",     \r\n    '[class.py-3]': \"size == 'lg'\",\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  templateUrl: 'menu-item.html',\r\n})\r\nexport class TDSButtonMenuItem extends _TDSButtonMenuItemMixinBase\r\n    implements FocusableOption, CanDisable,  AfterViewInit, OnDestroy,OnChanges {\r\n  @Input() size:ButtonSize = 'md';\r\n  /** ARIA role for the menu item. */\r\n  @Input() role: 'menuitem' | 'menuitemradio' | 'menuitemcheckbox' = 'menuitem';\r\n\r\n  /** Stream that emits when the menu item is hovered. */\r\n  readonly _hovered: Subject<TDSButtonMenuItem> = new Subject<TDSButtonMenuItem>();\r\n\r\n  /** Stream that emits when the menu item is focused. */\r\n  readonly _focused = new Subject<TDSButtonMenuItem>();\r\n\r\n  /** Whether the menu item is highlighted. */\r\n  _highlighted: boolean = false;\r\n\r\n  /** Whether the menu item acts as a trigger for a sub-menu. */\r\n  _triggersSubmenu: boolean = false;\r\n\r\n  ngcls! :NgClassInterface;\r\n  constructor(\r\n    private _cdr: ChangeDetectorRef,\r\n    private _elementRef: ElementRef<HTMLElement>,   \r\n  \r\n    @Inject(DOCUMENT) _document?: any,\r\n    private _focusMonitor?: FocusMonitor,\r\n   \r\n    @Inject(TDSBUTTON_MENU_PANEL) @Optional() public _parentMenu?: TDSButtonMenuPanel<TDSButtonMenuItem>,\r\n   ) {\r\n\r\n    // @breaking-change 8.0.0 make `_focusMonitor` and `document` required params.\r\n    super();\r\n\r\n    if (_parentMenu && _parentMenu.addItem) {\r\n      _parentMenu.addItem(this);\r\n    }\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const  {size}=changes\r\n    if(size)\r\n    {\r\n     this._cdr.markForCheck();\r\n    }\r\n  }\r\n\r\n  /** Focuses the menu item. */\r\n  focus(origin?: FocusOrigin, options?: FocusOptions): void {\r\n    if (this._focusMonitor && origin) {\r\n      this._focusMonitor.focusVia(this._getHostElement(), origin, options);\r\n    } else {\r\n      this._getHostElement().focus(options);\r\n    }\r\n\r\n    this._focused.next(this);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this._focusMonitor) {\r\n      // Start monitoring the element so it gets the appropriate focused classes. We want\r\n      // to show the focus style for menu items only when the focus was not caused by a\r\n      // mouse or touch interaction.\r\n      this._focusMonitor.monitor(this._elementRef, false);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this._focusMonitor) {\r\n      this._focusMonitor.stopMonitoring(this._elementRef);\r\n    }\r\n\r\n    if (this._parentMenu && this._parentMenu.removeItem) {\r\n      this._parentMenu.removeItem(this);\r\n    }\r\n\r\n    this._hovered.complete();\r\n    this._focused.complete();\r\n  }\r\n\r\n  /** Used to set the `tabindex`. */\r\n  _getTabIndex(): string {\r\n    return this.disabled ? '-1' : '0';\r\n  }\r\n\r\n  /** Returns the host DOM element. */\r\n  _getHostElement(): HTMLElement {\r\n    return this._elementRef.nativeElement;\r\n  }\r\n\r\n  /** Prevents the default element actions if it is disabled. */\r\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\r\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\r\n  // ViewEngine they're overwritten.\r\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\r\n  // tslint:disable-next-line:no-host-decorator-in-concrete\r\n  @HostListener('click', ['$event'])\r\n  _checkDisabled(event: Event): void {\r\n    if (this.disabled) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  /** Emits to the hover stream. */\r\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\r\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\r\n  // ViewEngine they're overwritten.\r\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\r\n  // tslint:disable-next-line:no-host-decorator-in-concrete\r\n  @HostListener('mouseenter')\r\n  _handleMouseEnter() {\r\n    this._hovered.next(this);\r\n  }\r\n\r\n  /** Gets the label to be used when determining whether the option should be focused. */\r\n  getLabel(): string {\r\n    const clone = this._elementRef.nativeElement.cloneNode(true) as HTMLElement;\r\n    const icons = clone.querySelectorAll('tds-icon, .tds-icons');\r\n\r\n    // Strip away icons so they don't show up in the text.\r\n    for (let i = 0; i < icons.length; i++) {\r\n      const icon = icons[i];\r\n      icon.parentNode?.removeChild(icon);\r\n    }\r\n\r\n    return clone.textContent?.trim() || '';\r\n  }\r\n  private p_updateClsSize()\r\n  {\r\n    this.ngcls = {\r\n      \r\n     \r\n    }\r\n  }\r\n\r\n  static ngAcceptInputType_disabled: BooleanInput;\r\n  static ngAcceptInputType_disableRipple: BooleanInput;\r\n}\r\n","<ng-content></ng-content>\r\n\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {FocusKeyManager, FocusOrigin} from '@angular/cdk/a11y';\r\nimport {Direction} from '@angular/cdk/bidi';\r\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {\r\n  ESCAPE,\r\n  LEFT_ARROW,\r\n  RIGHT_ARROW,\r\n  DOWN_ARROW,\r\n  UP_ARROW,\r\n  hasModifierKey,\r\n} from '@angular/cdk/keycodes';\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ContentChild,\r\n  ContentChildren,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  InjectionToken,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  Output,\r\n  TemplateRef,\r\n  QueryList,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport {merge, Observable, Subject, Subscription} from 'rxjs';\r\nimport {startWith, switchMap, take} from 'rxjs/operators';\r\nimport {TDSbuttonMenuAnimations} from './menu-animations';\r\nimport {TDSBUTTON_MENU_CONTENT, TDSButtonMenuContent} from './menu-content';\r\nimport {MenuPositionX, MenuPositionY} from './menu-positions';\r\nimport {throwTDSButtonMenuInvalidPositionX, throwTDSMenuInvalidPositionY} from './menu-errors';\r\nimport {TDSButtonMenuItem} from './menu-item';\r\nimport {TDSBUTTON_MENU_PANEL, TDSButtonMenuPanel} from './menu-panel';\r\nimport {AnimationEvent} from '@angular/animations';\r\n\r\n/** Default `tbutton-menu` options that can be overridden. */\r\nexport interface TDSButtonMenuDefaultOptions {\r\n  /** The x-axis position of the menu. */\r\n  xPosition: MenuPositionX;\r\n\r\n  /** The y-axis position of the menu. */\r\n  yPosition: MenuPositionY;\r\n\r\n  /** Whether the menu should overlap the menu trigger. */\r\n  overlapTrigger: boolean;\r\n\r\n  /** Class to be applied to the menu's backdrop. */\r\n  backdropClass: string;\r\n\r\n  /** Class or list of classes to be applied to the menu's overlay panel. */\r\n  overlayPanelClass?: string | string[];\r\n\r\n  /** Whether the menu has a backdrop. */\r\n  hasBackdrop?: boolean;\r\n}\r\n\r\n/** Injection token to be used to override the default options for `tbutton-menu`. */\r\nexport const TDSBUTTON_MENU_DEFAULT_OPTIONS =\r\n    new InjectionToken<TDSButtonMenuDefaultOptions>('tbutton-menu-default-options', {\r\n      providedIn: 'root',\r\n      factory: TDSBUTTON_MENU_DEFAULT_OPTIONS_FACTORY\r\n    });\r\n\r\n/** @docs-private */\r\nexport function TDSBUTTON_MENU_DEFAULT_OPTIONS_FACTORY(): TDSButtonMenuDefaultOptions {\r\n  return {\r\n    overlapTrigger: false,\r\n    xPosition: 'before',\r\n    yPosition: 'below',\r\n    backdropClass: 'cdk-overlay-transparent-backdrop',\r\n  };\r\n}\r\n/**\r\n * Start elevation for the menu panel.\r\n * @docs-private\r\n */\r\nconst TDSBUTTON_MENU_BASE_ELEVATION = 4;\r\n\r\nlet menuPanelUid = 0;\r\n\r\n\r\n/** Reason why the menu was closed. */\r\nexport type MenuCloseReason = void | 'click' | 'keydown' | 'tab';\r\n\r\n\r\n/** Base class with all of the `TDSButtonMenu` functionality. */\r\n@Directive()\r\nexport class _TDSButtonMenuBase implements AfterContentInit, TDSButtonMenuPanel<TDSButtonMenuItem>, OnInit,\r\n  OnDestroy {\r\n  private _keyManager!: FocusKeyManager<TDSButtonMenuItem>;\r\n  private _xPosition: MenuPositionX = this._defaultOptions.xPosition;\r\n  private _yPosition: MenuPositionY = this._defaultOptions.yPosition;\r\n  private _previousElevation!: string;\r\n\r\n  /** All items inside the menu. Includes items nested inside another menu. */\r\n  @ContentChildren(TDSButtonMenuItem, {descendants: true}) _allItems!: QueryList<TDSButtonMenuItem>;\r\n\r\n  /** Only the direct descendant menu items. */\r\n  private _directDescendantItems = new QueryList<TDSButtonMenuItem>();\r\n\r\n  /** Subscription to tab events on the menu panel */\r\n  private _tabSubscription = Subscription.EMPTY;\r\n\r\n  /** Config object to be passed into the menu's ngClass */\r\n  _classList: {[key: string]: boolean} = {};\r\n\r\n  /** Current state of the panel animation. */\r\n  _panelAnimationState: 'void' | 'enter' = 'void';\r\n\r\n  /** Emits whenever an animation on the menu completes. */\r\n  readonly _animationDone = new Subject<AnimationEvent>();\r\n\r\n  /** Whether the menu is animating. */\r\n  _isAnimating!: boolean;\r\n\r\n  /** Parent menu of the current menu panel. */\r\n  parentMenu: TDSButtonMenuPanel | undefined;\r\n\r\n  /** Layout direction of the menu. */\r\n  direction!: Direction;\r\n\r\n  /** Class or list of classes to be added to the overlay panel. */\r\n  overlayPanelClass: string|string[] = this._defaultOptions.overlayPanelClass || '';\r\n\r\n  /** Class to be added to the backdrop element. */\r\n  @Input() backdropClass: string = this._defaultOptions.backdropClass;\r\n\r\n  /** aria-label for the menu panel. */\r\n  @Input('aria-label') ariaLabel!: string;\r\n\r\n  /** aria-labelledby for the menu panel. */\r\n  @Input('aria-labelledby') ariaLabelledby!: string;\r\n\r\n  /** aria-describedby for the menu panel. */\r\n  @Input('aria-describedby') ariaDescribedby!: string;\r\n\r\n  /** Position of the menu in the X axis. */\r\n  @Input()\r\n  get xPosition(): MenuPositionX { return this._xPosition; }\r\n  set xPosition(value: MenuPositionX) {\r\n    if (value !== 'before' && value !== 'after' ) {\r\n      throwTDSButtonMenuInvalidPositionX();\r\n    }\r\n    this._xPosition = value;\r\n    this.setPositionClasses();\r\n  }\r\n\r\n  /** Position of the menu in the Y axis. */\r\n  @Input()\r\n  get yPosition(): MenuPositionY { return this._yPosition; }\r\n  set yPosition(value: MenuPositionY) {\r\n    if (value !== 'above' && value !== 'below' ) {\r\n      throwTDSMenuInvalidPositionY();\r\n    }\r\n    this._yPosition = value;\r\n    this.setPositionClasses();\r\n  }\r\n\r\n  /** @docs-private */\r\n  @ViewChild(TemplateRef) templateRef!: TemplateRef<any>;\r\n\r\n  /**\r\n   * List of the items inside of a menu.\r\n   * @deprecated\r\n   * @breaking-change 8.0.0\r\n   */\r\n  @ContentChildren(TDSButtonMenuItem, {descendants: false}) items!: QueryList<TDSButtonMenuItem>;\r\n\r\n  /**\r\n   * Menu content that will be rendered lazily.\r\n   * @docs-private\r\n   */\r\n  @ContentChild(TDSBUTTON_MENU_CONTENT) lazyContent!: TDSButtonMenuContent;\r\n\r\n  /** Whether the menu should overlap its trigger. */\r\n  @Input()\r\n  get overlapTrigger(): boolean { return this._overlapTrigger; }\r\n  set overlapTrigger(value: boolean) {\r\n    this._overlapTrigger = coerceBooleanProperty(value);\r\n  }\r\n  private _overlapTrigger: boolean = this._defaultOptions.overlapTrigger;\r\n\r\n  /** Whether the menu has a backdrop. */\r\n  @Input()\r\n  get hasBackdrop(): boolean | undefined { return this._hasBackdrop; }\r\n  set hasBackdrop(value: boolean | undefined) {\r\n    this._hasBackdrop = coerceBooleanProperty(value);\r\n  }\r\n  private _hasBackdrop: boolean | undefined = this._defaultOptions.hasBackdrop;\r\n\r\n  /**\r\n   * This method takes classes set on the host tbutton-menu element and applies them on the\r\n   * menu template that displays in the overlay container.  Otherwise, it's difficult\r\n   * to style the containing menu from outside the component.\r\n   * @param classes list of class names\r\n   */\r\n  @Input('class')\r\n  set panelClass(classes: string) {\r\n    const previousPanelClass = this._previousPanelClass;\r\n\r\n    if (previousPanelClass && previousPanelClass.length) {\r\n      previousPanelClass.split(' ').forEach((className: string) => {\r\n        this._classList[className] = false;\r\n      });\r\n    }\r\n\r\n    this._previousPanelClass = classes;\r\n\r\n    if (classes && classes.length) {\r\n      classes.split(' ').forEach((className: string) => {\r\n        this._classList[className] = true;\r\n      });\r\n\r\n      this._elementRef.nativeElement.className = '';\r\n    }\r\n  }\r\n  private _previousPanelClass!: string;\r\n\r\n  /**\r\n   * This method takes classes set on the host tbutton-menu element and applies them on the\r\n   * menu template that displays in the overlay container.  Otherwise, it's difficult\r\n   * to style the containing menu from outside the component.\r\n   * @deprecated Use `panelClass` instead.\r\n   * @breaking-change 8.0.0\r\n   */\r\n  @Input()\r\n  get classList(): string { return this.panelClass; }\r\n  set classList(classes: string) { this.panelClass = classes; }\r\n\r\n  /** Event emitted when the menu is closed. */\r\n  @Output() readonly closed: EventEmitter<MenuCloseReason> = new EventEmitter<MenuCloseReason>();\r\n\r\n  /**\r\n   * Event emitted when the menu is closed.\r\n   * @deprecated Switch to `closed` instead\r\n   * @breaking-change 8.0.0\r\n   */\r\n  @Output() readonly close: EventEmitter<MenuCloseReason> = this.closed;\r\n\r\n  readonly panelId = `tbutton-menu-panel-${menuPanelUid++}`;\r\n\r\n  constructor(\r\n    private _elementRef: ElementRef<HTMLElement>,\r\n    private _ngZone: NgZone,\r\n    @Inject(TDSBUTTON_MENU_DEFAULT_OPTIONS) private _defaultOptions: TDSButtonMenuDefaultOptions) { }\r\n\r\n  ngOnInit() {\r\n    this.setPositionClasses();\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._updateDirectDescendants();\r\n    this._keyManager = new FocusKeyManager(this._directDescendantItems)\r\n      .withWrap()\r\n      .withTypeAhead()\r\n      .withHomeAndEnd();\r\n    this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\r\n\r\n    // If a user manually (programmatically) focuses a menu item, we need to reflect that focus\r\n    // change back to the key manager. Note that we don't need to unsubscribe here because _focused\r\n    // is internal and we know that it gets completed on destroy.\r\n    this._directDescendantItems.changes.pipe(\r\n      startWith(this._directDescendantItems),\r\n      switchMap(items => merge<TDSButtonMenuItem>(...items.map((item: TDSButtonMenuItem) => item._focused)))\r\n    ).subscribe(focusedItem => this._keyManager.updateActiveItem(focusedItem));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._directDescendantItems.destroy();\r\n    this._tabSubscription.unsubscribe();\r\n    this.closed.complete();\r\n  }\r\n\r\n  /** Stream that emits whenever the hovered menu item changes. */\r\n  _hovered(): Observable<TDSButtonMenuItem> {\r\n    // Coerce the `changes` property because Angular types it as `Observable<any>`\r\n    const itemChanges = this._directDescendantItems.changes as Observable<QueryList<TDSButtonMenuItem>>;\r\n    return itemChanges.pipe(\r\n      startWith(this._directDescendantItems),\r\n      switchMap(items => merge(...items.map((item: TDSButtonMenuItem) => item._hovered)))\r\n    ) as Observable<TDSButtonMenuItem>;\r\n  }\r\n\r\n  /*\r\n   * Registers a menu item with the menu.\r\n   * @docs-private\r\n   * @deprecated No longer being used. To be removed.\r\n   * @breaking-change 9.0.0\r\n   */\r\n  addItem(_item: TDSButtonMenuItem) {}\r\n\r\n  /**\r\n   * Removes an item from the menu.\r\n   * @docs-private\r\n   * @deprecated No longer being used. To be removed.\r\n   * @breaking-change 9.0.0\r\n   */\r\n  removeItem(_item: TDSButtonMenuItem) {}\r\n\r\n  /** Handle a keyboard event from the menu, delegating to the appropriate action. */\r\n  _handleKeydown(event: KeyboardEvent) {\r\n    const keyCode = event.keyCode;\r\n    const manager = this._keyManager;\r\n\r\n    switch (keyCode) {\r\n      case ESCAPE:\r\n        if (!hasModifierKey(event)) {\r\n          event.preventDefault();\r\n          this.closed.emit('keydown');\r\n        }\r\n      break;\r\n      case LEFT_ARROW:\r\n        if (this.parentMenu && this.direction === 'ltr') {\r\n          this.closed.emit('keydown');\r\n        }\r\n      break;\r\n      case RIGHT_ARROW:\r\n        if (this.parentMenu && this.direction === 'rtl') {\r\n          this.closed.emit('keydown');\r\n        }\r\n      break;\r\n      default:\r\n        if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\r\n          manager.setFocusOrigin('keyboard');\r\n        }\r\n\r\n        manager.onKeydown(event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Focus the first item in the menu.\r\n   * @param origin Action from which the focus originated. Used to set the correct styling.\r\n   */\r\n  focusFirstItem(origin: FocusOrigin = 'program'): void {\r\n    // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\r\n    if (this.lazyContent) {\r\n      this._ngZone.onStable\r\n        .pipe(take(1))\r\n        .subscribe(() => this._focusFirstItem(origin));\r\n    } else {\r\n      this._focusFirstItem(origin);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Actual implementation that focuses the first item. Needs to be separated\r\n   * out so we don't repeat the same logic in the public `focusFirstItem` method.\r\n   */\r\n  private _focusFirstItem(origin: FocusOrigin) {\r\n    const manager = this._keyManager;\r\n\r\n    manager.setFocusOrigin(origin).setFirstItemActive();\r\n\r\n    // If there's no active item at this point, it means that all the items are disabled.\r\n    // Move focus to the menu panel so keyboard events like Escape still work. Also this will\r\n    // give _some_ feedback to screen readers.\r\n    if (!manager.activeItem && this._directDescendantItems.length) {\r\n      let element = this._directDescendantItems.first._getHostElement().parentElement;\r\n\r\n      // Because the `tbutton-menu` is at the DOM insertion point, not inside the overlay, we don't\r\n      // have a nice way of getting a hold of the menu panel. We can't use a `ViewChild` either\r\n      // because the panel is inside an `ng-template`. We work around it by starting from one of\r\n      // the items and walking up the DOM.\r\n      while (element) {\r\n        if (element.getAttribute('role') === 'menu') {\r\n          element.focus();\r\n          break;\r\n        } else {\r\n          element = element.parentElement;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Resets the active item in the menu. This is used when the menu is opened, allowing\r\n   * the user to start from the first option when pressing the down arrow.\r\n   */\r\n  resetActiveItem() {\r\n    this._keyManager.setActiveItem(-1);\r\n  }\r\n\r\n  /**\r\n   * Sets the menu panel elevation.\r\n   * @param depth Number of parent menus that come before the menu.\r\n   */\r\n  setElevation(depth: number): void {\r\n    // The elevation starts at the base and increases by one for each level.\r\n    // Capped at 24 because that's the maximum elevation defined in the Material design spec.\r\n    const elevation = Math.min(TDSBUTTON_MENU_BASE_ELEVATION + depth, 24);\r\n    const newElevation = `tbutton-elevation-z${elevation}`;\r\n    const customElevation = Object.keys(this._classList).find(c => c.startsWith('tbutton-elevation-z'));\r\n\r\n    if (!customElevation || customElevation === this._previousElevation) {\r\n      if (this._previousElevation) {\r\n        this._classList[this._previousElevation] = false;\r\n      }\r\n\r\n      this._classList[newElevation] = true;\r\n      this._previousElevation = newElevation;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adds classes to the menu panel based on its position. Can be used by\r\n   * consumers to add specific styling based on the position.\r\n   * @param posX Position of the menu along the x axis.\r\n   * @param posY Position of the menu along the y axis.\r\n   * @docs-private\r\n   */\r\n  setPositionClasses(posX: MenuPositionX = this.xPosition, posY: MenuPositionY = this.yPosition) {\r\n    const classes = this._classList;\r\n    classes['tbutton-menu-before'] = posX === 'before';\r\n    classes['tbutton-menu-after'] = posX === 'after';\r\n    classes['tbutton-menu-above'] = posY === 'above';\r\n    classes['tbutton-menu-below'] = posY === 'below';\r\n  }\r\n\r\n  /** Starts the enter animation. */\r\n  _startAnimation() {\r\n    // @breaking-change 8.0.0 Combine with _resetAnimation.\r\n    this._panelAnimationState = 'enter';\r\n  }\r\n\r\n  /** Resets the panel animation to its initial state. */\r\n  _resetAnimation() {\r\n    // @breaking-change 8.0.0 Combine with _startAnimation.\r\n    this._panelAnimationState = 'void';\r\n  }\r\n\r\n  /** Callback that is invoked when the panel animation completes. */\r\n  _onAnimationDone(event: AnimationEvent) {\r\n    this._animationDone.next(event);\r\n    this._isAnimating = false;\r\n  }\r\n\r\n  _onAnimationStart(event: AnimationEvent) {\r\n    this._isAnimating = true;\r\n\r\n    // Scroll the content element to the top as soon as the animation starts. This is necessary,\r\n    // because we move focus to the first item while it's still being animated, which can throw\r\n    // the browser off when it determines the scroll position. Alternatively we can move focus\r\n    // when the animation is done, however moving focus asynchronously will interrupt screen\r\n    // readers which are in the process of reading out the menu already. We take the `element`\r\n    // from the `event` since we can't use a `ViewChild` to access the pane.\r\n    if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\r\n      event.element.scrollTop = 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets up a stream that will keep track of any newly-added menu items and will update the list\r\n   * of direct descendants. We collect the descendants this way, because `_allItems` can include\r\n   * items that are part of child menus, and using a custom way of registering items is unreliable\r\n   * when it comes to maintaining the item order.\r\n   */\r\n  private _updateDirectDescendants() {\r\n    this._allItems.changes\r\n      .pipe(startWith(this._allItems))\r\n      .subscribe((items: QueryList<TDSButtonMenuItem>) => {\r\n        this._directDescendantItems.reset(items.filter(item => item._parentMenu === this));\r\n        this._directDescendantItems.notifyOnChanges();\r\n      });\r\n  }\r\n\r\n  static ngAcceptInputType_overlapTrigger: BooleanInput;\r\n  static ngAcceptInputType_hasBackdrop: BooleanInput;\r\n}\r\n\r\n/** @docs-public TDSButtonMenu */\r\n@Component({\r\n  selector: 'tbutton-menu',\r\n  templateUrl: 'menu.html',\r\n  // styleUrls: ['menu.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  exportAs: 'TDSButtonMenu',\r\n  host: {\r\n    '[attr.aria-label]': 'null',\r\n    '[attr.aria-labelledby]': 'null',\r\n    '[attr.aria-describedby]': 'null',\r\n  },\r\n  animations: [\r\n    TDSbuttonMenuAnimations.transformMenu,\r\n    TDSbuttonMenuAnimations.fadeInItems\r\n  ],\r\n  providers: [\r\n    {provide: TDSBUTTON_MENU_PANEL, useExisting: TDSButtonMenu},\r\n  ]\r\n})\r\nexport class TDSButtonMenu extends _TDSButtonMenuBase {\r\n  constructor(elementRef: ElementRef<HTMLElement>, ngZone: NgZone,\r\n      @Inject(TDSBUTTON_MENU_DEFAULT_OPTIONS) defaultOptions: TDSButtonMenuDefaultOptions) {\r\n    super(elementRef, ngZone, defaultOptions);\r\n  }\r\n}\r\n","<ng-template>\r\n  <div\r\n    class=\"tbutton-menu-panel  min-w-170 py-1\"\r\n    [id]=\"panelId\"\r\n    [ngClass]=\"_classList\"\r\n    (keydown)=\"_handleKeydown($event)\"\r\n    (click)=\"closed.emit('click')\"\r\n    [@transformMenu]=\"_panelAnimationState\"\r\n    (@transformMenu.start)=\"_onAnimationStart($event)\"\r\n    (@transformMenu.done)=\"_onAnimationDone($event)\"\r\n    tabindex=\"-1\"\r\n    role=\"menu\"\r\n    [attr.aria-label]=\"ariaLabel || null\"\r\n    [attr.aria-labelledby]=\"ariaLabelledby || null\"\r\n    [attr.aria-describedby]=\"ariaDescribedby || null\">\r\n    <div class=\"shadow-1-lg  bg-white dark:bg-d-neutral-3-200  rounded  w-full py-1 text-neutral-1-900 dark:text-d-neutral-1-900\">\r\n      <div class=\"tdsbutton-menu-content flex flex-col w-full\" >\r\n        <ng-content></ng-content>\r\n      </div>\r\n    </div>   \r\n  </div>\r\n</ng-template>\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  FocusMonitor,\r\n  FocusOrigin,\r\n  isFakeMousedownFromScreenReader,\r\n  isFakeTouchstartFromScreenReader,\r\n} from '@angular/cdk/a11y';\r\nimport {Direction, Directionality} from '@angular/cdk/bidi';\r\nimport {ENTER, LEFT_ARROW, RIGHT_ARROW, SPACE} from '@angular/cdk/keycodes';\r\nimport {\r\n  FlexibleConnectedPositionStrategy,\r\n  HorizontalConnectionPos,\r\n  Overlay,\r\n  OverlayConfig,\r\n  OverlayRef,\r\n  VerticalConnectionPos,\r\n  ScrollStrategy,\r\n} from '@angular/cdk/overlay';\r\nimport {TemplatePortal} from '@angular/cdk/portal';\r\nimport {\r\n  AfterContentInit,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  InjectionToken,\r\n  Input,\r\n  OnDestroy,\r\n  Optional,\r\n  Output,\r\n  Self,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport {normalizePassiveListenerOptions} from '@angular/cdk/platform';\r\nimport {asapScheduler, merge, of as observableOf, Subscription} from 'rxjs';\r\nimport {delay, filter, take, takeUntil} from 'rxjs/operators';\r\nimport {MenuCloseReason, _TDSButtonMenuBase} from './menu';\r\nimport {throwTDSMenuMissingError, throwTDSMenuRecursiveError} from './menu-errors';\r\nimport {TDSButtonMenuItem} from './menu-item';\r\nimport {TDSButtonMenuPanel, TDSBUTTON_MENU_PANEL} from './menu-panel';\r\nimport {MenuPositionX, MenuPositionY} from './menu-positions';\r\n\r\n/** Injection token that determines the scroll handling while the menu is open. */\r\nexport const TDSBUTTON_MENU_SCROLL_STRATEGY =\r\n    new InjectionToken<() => ScrollStrategy>('tbutton-menu-scroll-strategy');\r\n\r\n/** @docs-private */\r\nexport function TBUTTON_MENU_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => ScrollStrategy {\r\n  return () => overlay.scrollStrategies.reposition();\r\n}\r\n\r\n/** @docs-private */\r\nexport const TDSBUTTON_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\r\n  provide: TDSBUTTON_MENU_SCROLL_STRATEGY,\r\n  deps: [Overlay],\r\n  useFactory: TBUTTON_MENU_SCROLL_STRATEGY_FACTORY,\r\n};\r\n\r\n/** Default top padding of the menu panel. */\r\nexport const MENU_PANEL_TOP_PADDING = 8;\r\n\r\n/** Options for binding a passive event listener. */\r\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({passive: true});\r\n\r\n// TODO(andrewseguin): Remove the kebab versions in favor of camelCased attribute selectors\r\n\r\n/** Directive applied to an element that should trigger a `tbutton-menu`. */\r\n@Directive({\r\n  selector: `[tdsbutton-menu-trigger-for], [tdsbuttonMenuTriggerFor]`,\r\n  host: {\r\n    'class': 'tbutton-menu-trigger',\r\n    'aria-haspopup': 'true',\r\n    '[attr.aria-expanded]': 'menuOpen || null',\r\n    '[attr.aria-controls]': 'menuOpen ? menu.panelId : null',\r\n    '(mousedown)': '_handleMousedown($event)',\r\n    '(keydown)': '_handleKeydown($event)',\r\n    '(click)': '_handleClick($event)',\r\n  },\r\n  exportAs: 'TDSButtonMenuTrigger'\r\n})\r\nexport class TDSButtonMenuTrigger implements AfterContentInit, OnDestroy {\r\n  private _portal!: TemplatePortal;\r\n  private _overlayRef: OverlayRef | null = null;\r\n  private _menuOpen: boolean = false;\r\n  private _closingActionsSubscription = Subscription.EMPTY;\r\n  private _hoverSubscription = Subscription.EMPTY;\r\n  private _menuCloseSubscription = Subscription.EMPTY;\r\n  private _scrollStrategy: () => ScrollStrategy;\r\n\r\n  /**\r\n   * We're specifically looking for a `TDSButtonMenu` here since the generic `TDSButtonMenuPanel`\r\n   * interface lacks some functionality around nested menus and animations.\r\n   */\r\n  private _parentMaterialMenu: _TDSButtonMenuBase | undefined;\r\n\r\n  /**\r\n   * Handles touch start events on the trigger.\r\n   * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\r\n   */\r\n  private _handleTouchStart = (event: TouchEvent) => {\r\n    if (!isFakeTouchstartFromScreenReader(event)) {\r\n      this._openedBy = 'touch';\r\n    }\r\n  }\r\n\r\n  // Tracking input type is necessary so it's possible to only auto-focus\r\n  // the first item of the list when the menu is opened via the keyboard\r\n  _openedBy: Exclude<FocusOrigin, 'program' | null> | undefined = undefined;\r\n\r\n  /**\r\n   * @deprecated\r\n   * @breaking-change 8.0.0\r\n   */\r\n  @Input('tdsbutton-menu-trigger-for')\r\n  get _deprecatedMatMenuTriggerFor(): TDSButtonMenuPanel { return this.menu; }\r\n  set _deprecatedMatMenuTriggerFor(v: TDSButtonMenuPanel) {\r\n    this.menu = v;\r\n  }\r\n\r\n  /** References the menu instance that the trigger is associated with. */\r\n  @Input('tdsbuttonMenuTriggerFor')\r\n  get menu() { return this._menu; }\r\n  set menu(menu: TDSButtonMenuPanel) {\r\n    if (menu === this._menu) {\r\n      return;\r\n    }\r\n\r\n    this._menu = menu;\r\n    this._menuCloseSubscription.unsubscribe();\r\n\r\n    if (menu) {\r\n      if (menu === this._parentMaterialMenu ) {\r\n        throwTDSMenuRecursiveError();\r\n      }\r\n\r\n      this._menuCloseSubscription = menu.close.subscribe((reason: MenuCloseReason) => {\r\n        this._destroyMenu(reason);\r\n\r\n        // If a click closed the menu, we should close the entire chain of nested menus.\r\n        if ((reason === 'click' || reason === 'tab') && this._parentMaterialMenu) {\r\n          this._parentMaterialMenu.closed.emit(reason);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  private _menu!: TDSButtonMenuPanel;\r\n\r\n  /** Data to be passed along to any lazily-rendered content. */\r\n  @Input('tbuttonMenuTriggerData') menuData: any;\r\n\r\n  /**\r\n   * Whether focus should be restored when the menu is closed.\r\n   * Note that disabling this option can have accessibility implications\r\n   * and it's up to you to manage focus, if you decide to turn it off.\r\n   */\r\n  @Input('tbuttonMenuTriggerRestoreFocus') restoreFocus: boolean = true;\r\n\r\n  /** Event emitted when the associated menu is opened. */\r\n  @Output() readonly menuOpened: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /**\r\n   * Event emitted when the associated menu is opened.\r\n   * @deprecated Switch to `menuOpened` instead\r\n   * @breaking-change 8.0.0\r\n   */\r\n  // tslint:disable-next-line:no-output-on-prefix\r\n  @Output() readonly onMenuOpen: EventEmitter<void> = this.menuOpened;\r\n\r\n  /** Event emitted when the associated menu is closed. */\r\n  @Output() readonly menuClosed: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /**\r\n   * Event emitted when the associated menu is closed.\r\n   * @deprecated Switch to `menuClosed` instead\r\n   * @breaking-change 8.0.0\r\n   */\r\n  // tslint:disable-next-line:no-output-on-prefix\r\n  @Output() readonly onMenuClose: EventEmitter<void> = this.menuClosed;\r\n\r\n  constructor(private _overlay: Overlay,\r\n              private _element: ElementRef<HTMLElement>,\r\n              private _viewContainerRef: ViewContainerRef,\r\n              @Inject(TDSBUTTON_MENU_SCROLL_STRATEGY) scrollStrategy: any,\r\n              @Inject(TDSBUTTON_MENU_PANEL) @Optional() parentMenu: TDSButtonMenuPanel,\r\n              // `TDSButtonMenuTrigger` is commonly used in combination with a `TDSButtonMenuItem`.\r\n              // tslint:disable-next-line: lightweight-tokens\r\n              @Optional() @Self() private _menuItemInstance: TDSButtonMenuItem,\r\n              @Optional() private _dir: Directionality,\r\n              // TODO(crisbeto): make the _focusMonitor required when doing breaking changes.\r\n              // @breaking-change 8.0.0\r\n              private _focusMonitor?: FocusMonitor) {\r\n    this._scrollStrategy = scrollStrategy;\r\n    this._parentMaterialMenu = parentMenu instanceof _TDSButtonMenuBase ? parentMenu : undefined;\r\n\r\n    _element.nativeElement.addEventListener('touchstart', this._handleTouchStart,\r\n        passiveEventListenerOptions);\r\n\r\n    if (_menuItemInstance) {\r\n      _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\r\n    }\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._checkMenu();\r\n    this._handleHover();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this._overlayRef) {\r\n      this._overlayRef.dispose();\r\n      this._overlayRef = null;\r\n    }\r\n\r\n    this._element.nativeElement.removeEventListener('touchstart', this._handleTouchStart,\r\n        passiveEventListenerOptions);\r\n\r\n    this._menuCloseSubscription.unsubscribe();\r\n    this._closingActionsSubscription.unsubscribe();\r\n    this._hoverSubscription.unsubscribe();\r\n  }\r\n\r\n  /** Whether the menu is open. */\r\n  get menuOpen(): boolean {\r\n    return this._menuOpen;\r\n  }\r\n\r\n  /** The text direction of the containing app. */\r\n  get dir(): Direction {\r\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\r\n  }\r\n\r\n  /** Whether the menu triggers a sub-menu or a top-level one. */\r\n  triggersSubmenu(): boolean {\r\n    return !!(this._menuItemInstance && this._parentMaterialMenu);\r\n  }\r\n\r\n  /** Toggles the menu between the open and closed states. */\r\n  toggleMenu(): void {\r\n    return this._menuOpen ? this.closeMenu() : this.openMenu();\r\n  }\r\n\r\n  /** Opens the menu. */\r\n  openMenu(): void {\r\n    if (this._menuOpen) {\r\n      return;\r\n    }\r\n\r\n    this._checkMenu();\r\n\r\n    const overlayRef = this._createOverlay();\r\n    const overlayConfig = overlayRef.getConfig();\r\n\r\n    this._setPosition(overlayConfig.positionStrategy as FlexibleConnectedPositionStrategy);\r\n    overlayConfig.hasBackdrop = this.menu.hasBackdrop == null ? !this.triggersSubmenu() :\r\n        this.menu.hasBackdrop;\r\n    overlayRef.attach(this._getPortal());\r\n\r\n    if (this.menu.lazyContent) {\r\n      this.menu.lazyContent.attach(this.menuData);\r\n    }\r\n\r\n    this._closingActionsSubscription = this._menuClosingActions().subscribe(() => this.closeMenu());\r\n    this._initMenu();\r\n\r\n    if (this.menu instanceof _TDSButtonMenuBase) {\r\n      this.menu._startAnimation();\r\n    }\r\n    this.focus();\r\n  }\r\n\r\n  /** Closes the menu. */\r\n  closeMenu(): void {\r\n    this.menu.close.emit();\r\n  }\r\n\r\n  /**\r\n   * Focuses the menu trigger.\r\n   * @param origin Source of the menu trigger's focus.\r\n   */\r\n  focus(origin?: FocusOrigin, options?: FocusOptions) {\r\n    if (this._focusMonitor && origin) {\r\n      this._focusMonitor.focusVia(this._element, origin, options);\r\n    } else {\r\n      this._element.nativeElement.focus(options);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates the position of the menu to ensure that it fits all options within the viewport.\r\n   */\r\n  updatePosition(): void {\r\n    this._overlayRef?.updatePosition();\r\n  }\r\n\r\n  /** Closes the menu and does the necessary cleanup. */\r\n  private _destroyMenu(reason: MenuCloseReason) {\r\n    if (!this._overlayRef || !this.menuOpen) {\r\n      return;\r\n    }\r\n\r\n    const menu = this.menu;\r\n    this._closingActionsSubscription.unsubscribe();\r\n    this._overlayRef.detach();\r\n\r\n    // Always restore focus if the user is navigating using the keyboard or the menu was opened\r\n    // programmatically. We don't restore for non-root triggers, because it can prevent focus\r\n    // from making it back to the root trigger when closing a long chain of menus by clicking\r\n    // on the backdrop.\r\n    if (this.restoreFocus && (reason === 'keydown' || !this._openedBy || !this.triggersSubmenu())) {\r\n      \r\n      this.focus(this._openedBy);\r\n    }\r\n\r\n    this._openedBy = undefined;\r\n\r\n    if (menu instanceof _TDSButtonMenuBase) {\r\n      menu._resetAnimation();\r\n\r\n      if (menu.lazyContent) {\r\n        // Wait for the exit animation to finish before detaching the content.\r\n        menu._animationDone\r\n          .pipe(\r\n            filter(event => event.toState === 'void'),\r\n            take(1),\r\n            // Interrupt if the content got re-attached.\r\n            takeUntil(menu.lazyContent._attached)\r\n          )\r\n          .subscribe({\r\n            next: () => menu.lazyContent!.detach(),\r\n            // No matter whether the content got re-attached, reset the menu.\r\n            complete: () => this._setIsMenuOpen(false)\r\n          });\r\n      } else {\r\n        this._setIsMenuOpen(false);\r\n      }\r\n    } else {\r\n      this._setIsMenuOpen(false);\r\n\r\n      if (menu.lazyContent) {\r\n        menu.lazyContent.detach();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method sets the menu state to open and focuses the first item if\r\n   * the menu was opened via the keyboard.\r\n   */\r\n  private _initMenu(): void {\r\n    this.menu.parentMenu = this.triggersSubmenu() ? this._parentMaterialMenu : undefined;\r\n    this.menu.direction = this.dir;\r\n    this._setMenuElevation();\r\n    this.menu.focusFirstItem(this._openedBy || 'program');\r\n    this._setIsMenuOpen(true);\r\n  }\r\n\r\n  /** Updates the menu elevation based on the amount of parent menus that it has. */\r\n  private _setMenuElevation(): void {\r\n    if (this.menu.setElevation) {\r\n      let depth = 0;\r\n      let parentMenu = this.menu.parentMenu;\r\n\r\n      while (parentMenu) {\r\n        depth++;\r\n        parentMenu = parentMenu.parentMenu;\r\n      }\r\n\r\n      this.menu.setElevation(depth);\r\n    }\r\n  }\r\n\r\n  // set state rather than toggle to support triggers sharing a menu\r\n  private _setIsMenuOpen(isOpen: boolean): void {\r\n    this._menuOpen = isOpen;\r\n    this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\r\n\r\n    if (this.triggersSubmenu()) {\r\n      this._menuItemInstance._highlighted = isOpen;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method checks that a valid instance of TDSButtonMenu has been passed into\r\n   * tdsbuttonMenuTriggerFor. If not, an exception is thrown.\r\n   */\r\n  private _checkMenu() {\r\n    if (!this.menu) {\r\n      throwTDSMenuMissingError();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method creates the overlay from the provided menu's template and saves its\r\n   * OverlayRef so that it can be attached to the DOM when openMenu is called.\r\n   */\r\n  private _createOverlay(): OverlayRef {\r\n    if (!this._overlayRef) {\r\n      const config = this._getOverlayConfig();\r\n      this._subscribeToPositions(config.positionStrategy as FlexibleConnectedPositionStrategy);\r\n      this._overlayRef = this._overlay.create(config);\r\n\r\n      // Consume the `keydownEvents` in order to prevent them from going to another overlay.\r\n      // Ideally we'd also have our keyboard event logic in here, however doing so will\r\n      // break anybody that may have implemented the `TDSButtonMenuPanel` themselves.\r\n      this._overlayRef.keydownEvents().subscribe();\r\n    }\r\n\r\n    return this._overlayRef;\r\n  }\r\n\r\n  /**\r\n   * This method builds the configuration object needed to create the overlay, the OverlayState.\r\n   * @returns OverlayConfig\r\n   */\r\n  private _getOverlayConfig(): OverlayConfig {\r\n    return new OverlayConfig({\r\n      positionStrategy: this._overlay.position()\r\n          .flexibleConnectedTo(this._element)\r\n          .withLockedPosition()\r\n          .withGrowAfterOpen()\r\n          .withTransformOriginOn('.tdsbutton-menu-panel, .tds-mdc-menu-panel'),\r\n      backdropClass: this.menu.backdropClass || 'cdk-overlay-transparent-backdrop',\r\n      panelClass: this.menu.overlayPanelClass,\r\n      scrollStrategy: this._scrollStrategy(),\r\n      direction: this._dir\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Listens to changes in the position of the overlay and sets the correct classes\r\n   * on the menu based on the new position. This ensures the animation origin is always\r\n   * correct, even if a fallback position is used for the overlay.\r\n   */\r\n  private _subscribeToPositions(position: FlexibleConnectedPositionStrategy): void {\r\n    if (this.menu.setPositionClasses) {\r\n      position.positionChanges.subscribe(change => {\r\n        const posX: MenuPositionX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\r\n        const posY: MenuPositionY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\r\n\r\n        this.menu.setPositionClasses!(posX, posY);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets the appropriate positions on a position strategy\r\n   * so the overlay connects with the trigger correctly.\r\n   * @param positionStrategy Strategy whose position to update.\r\n   */\r\n  private _setPosition(positionStrategy: FlexibleConnectedPositionStrategy) {\r\n    let [originX, originFallbackX]: HorizontalConnectionPos[] =\r\n        this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\r\n\r\n    let [overlayY, overlayFallbackY]: VerticalConnectionPos[] =\r\n        this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\r\n\r\n    let [originY, originFallbackY] = [overlayY, overlayFallbackY];\r\n    let [overlayX, overlayFallbackX] = [originX, originFallbackX];\r\n    let offsetY = 0;\r\n\r\n    if (this.triggersSubmenu()) {\r\n      // When the menu is a sub-menu, it should always align itself\r\n      // to the edges of the trigger, instead of overlapping it.\r\n      overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\r\n      originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\r\n      offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\r\n    } else if (!this.menu.overlapTrigger) {\r\n      originY = overlayY === 'top' ? 'bottom' : 'top';\r\n      originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\r\n    }\r\n\r\n    positionStrategy.withPositions([\r\n      {originX, originY, overlayX, overlayY, offsetY},\r\n      {originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY},\r\n      {\r\n        originX,\r\n        originY: originFallbackY,\r\n        overlayX,\r\n        overlayY: overlayFallbackY,\r\n        offsetY: -offsetY\r\n      },\r\n      {\r\n        originX: originFallbackX,\r\n        originY: originFallbackY,\r\n        overlayX: overlayFallbackX,\r\n        overlayY: overlayFallbackY,\r\n        offsetY: -offsetY\r\n      }\r\n    ]);\r\n  }\r\n\r\n  /** Returns a stream that emits whenever an action that should close the menu occurs. */\r\n  private _menuClosingActions() {\r\n    const backdrop = this._overlayRef!.backdropClick();\r\n    const detachments = this._overlayRef!.detachments();\r\n    const parentClose = this._parentMaterialMenu ? this._parentMaterialMenu.closed : observableOf();\r\n    const hover = this._parentMaterialMenu ? this._parentMaterialMenu._hovered().pipe(\r\n      filter(active => active !== this._menuItemInstance),\r\n      filter(() => this._menuOpen)\r\n    ) : observableOf();\r\n\r\n    return merge(backdrop, parentClose, hover, detachments);\r\n  }\r\n\r\n  /** Handles mouse presses on the trigger. */\r\n  _handleMousedown(event: MouseEvent): void {\r\n    if (!isFakeMousedownFromScreenReader(event)) {\r\n      // Since right or middle button clicks won't trigger the `click` event,\r\n      // we shouldn't consider the menu as opened by mouse in those cases.\r\n      this._openedBy = event.button === 0 ? 'mouse' : undefined;\r\n\r\n      // Since clicking on the trigger won't close the menu if it opens a sub-menu,\r\n      // we should prevent focus from moving onto it via click to avoid the\r\n      // highlight from lingering on the menu item.\r\n      if (this.triggersSubmenu()) {\r\n        event.preventDefault();\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Handles key presses on the trigger. */\r\n  _handleKeydown(event: KeyboardEvent): void {\r\n    const keyCode = event.keyCode;\r\n\r\n    // Pressing enter on the trigger will trigger the click handler later.\r\n    if (keyCode === ENTER || keyCode === SPACE) {\r\n      this._openedBy = 'keyboard';\r\n    }\r\n\r\n    if (this.triggersSubmenu() && (\r\n            (keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\r\n            (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\r\n      this._openedBy = 'keyboard';\r\n      this.openMenu();\r\n    }\r\n  }\r\n\r\n  /** Handles click events on the trigger. */\r\n  _handleClick(event: MouseEvent): void {\r\n    if (this.triggersSubmenu()) {\r\n      // Stop event propagation to avoid closing the parent menu.\r\n      event.stopPropagation();\r\n      this.openMenu();\r\n    } else {\r\n      this.toggleMenu();\r\n    }\r\n  }\r\n\r\n  /** Handles the cases where the user hovers over the trigger. */\r\n  private _handleHover() {\r\n    // Subscribe to changes in the hovered item in order to toggle the panel.\r\n    if (!this.triggersSubmenu() || !this._parentMaterialMenu) {\r\n      return;\r\n    }\r\n\r\n    this._hoverSubscription = this._parentMaterialMenu._hovered()\r\n      // Since we might have multiple competing triggers for the same menu (e.g. a sub-menu\r\n      // with different data and triggers), we have to delay it by a tick to ensure that\r\n      // it won't be closed immediately after it is opened.\r\n      .pipe(\r\n        filter(active => active === this._menuItemInstance && !active.disabled),\r\n        delay(0, asapScheduler)\r\n      )\r\n      .subscribe(() => {\r\n        this._openedBy = 'mouse';\r\n\r\n        // If the same menu is used between multiple triggers, it might still be animating\r\n        // while the new trigger tries to re-open it. Wait for the animation to finish\r\n        // before doing so. Also interrupt if the user moves to another item.\r\n        if (this.menu instanceof _TDSButtonMenuBase && this.menu._isAnimating) {\r\n          // We need the `delay(0)` here in order to avoid\r\n          // 'changed after checked' errors in some cases. See #12194.\r\n          this.menu._animationDone\r\n            .pipe(take(1), delay(0, asapScheduler), takeUntil(this._parentMaterialMenu!._hovered()))\r\n            .subscribe(() => this.openMenu());\r\n        } else {\r\n          this.openMenu();\r\n        }\r\n      });\r\n  }\r\n\r\n  /** Gets the portal that should be attached to the overlay. */\r\n  private _getPortal(): TemplatePortal {\r\n    // Note that we can avoid this check by keeping the portal on the menu panel.\r\n    // While it would be cleaner, we'd have to introduce another required method on\r\n    // `TDSButtonMenuPanel`, making it harder to consume.\r\n    if (!this._portal || this._portal.templateRef !== this.menu.templateRef) {\r\n      this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\r\n    }\r\n\r\n    return this._portal;\r\n  }\r\n\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\r\nimport { TDSButtonMenu } from './menu';\r\nimport { TDSButtonMenuContent } from './menu-content';\r\nimport { TDSButtonMenuItem } from './menu-item';\r\nimport { TDSBUTTON_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER, TDSButtonMenuTrigger } from './menu-trigger';\r\n\r\n/**\r\n * Used by both the current `TDSButtonMenuModule` and the MDC `TDSButtonMenuModule`\r\n * to declare the menu-related directives.\r\n */\r\n@NgModule({\r\n  exports: [TDSButtonMenuTrigger, TDSButtonMenuContent],\r\n  declarations: [\r\n    TDSButtonMenuTrigger,\r\n    TDSButtonMenuContent,\r\n  ],\r\n  providers: [TDSBUTTON_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\r\n})\r\nexport class _TDSButtonMenuDirectivesModule { }\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    OverlayModule,\r\n    _TDSButtonMenuDirectivesModule,\r\n  ],\r\n  exports: [CdkScrollableModule, TDSButtonMenu, TDSButtonMenuItem, _TDSButtonMenuDirectivesModule],\r\n  declarations: [TDSButtonMenu, TDSButtonMenuItem],\r\n  providers: [TDSBUTTON_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\r\n})\r\nexport class TDSButtonMenuModule { }\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1","observableOf","i2.TDSButtonMenuItem","i4"],"mappings":"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"}