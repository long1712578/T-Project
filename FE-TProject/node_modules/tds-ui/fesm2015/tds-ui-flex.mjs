import * as i0 from '@angular/core';
import { Component, ChangeDetectionStrategy, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';

const _c0 = ["*"];
const DEFAULT_JUSTIFY_CONTENT = "start";
const DEFAULT_FLEX_DIRECTION = "row";
const DEFAULT_ALIGN_ITEMS = "stretch";
function mixinFlexDirection(base, defaultFlexDirection) {
    return class extends base {
        constructor(...args) {
            super(...args);
            this.defaultFlexDirection = defaultFlexDirection;
            this._flexDirection = null;
            this.flex = defaultFlexDirection;
        }
        set flex(val) {
            const flexDirection = val || this.defaultFlexDirection;
            if (flexDirection !== this._flexDirection) {
                if (this._flexDirection) {
                    this._elementRef.nativeElement.classList.remove("flex-" + this._flexDirection);
                }
                if (flexDirection) {
                    this._elementRef.nativeElement.classList.add("flex-" + val);
                }
                this._flexDirection = flexDirection;
            }
        }
        get flex() {
            return this._flexDirection;
        }
    };
}
function mixinJustifyContent(base, defaultJustifyContent) {
    return class extends base {
        constructor(...args) {
            super(...args);
            this.defaultJustifyContent = defaultJustifyContent;
            this._justifyContent = null;
            this.justifyContent = defaultJustifyContent;
        }
        set justifyContent(val) {
            const justifyContent = val || this.defaultJustifyContent;
            if (justifyContent !== this._justifyContent) {
                if (this._justifyContent) {
                    this._elementRef.nativeElement.classList.remove("justify-" + this._justifyContent);
                }
                if (justifyContent) {
                    this._elementRef.nativeElement.classList.add("justify-" + val);
                }
                this._justifyContent = justifyContent;
            }
        }
        get justifyContent() {
            return this._justifyContent;
        }
    };
}
function mixinAlignItems(base, defaultAlignItems) {
    return class extends base {
        constructor(...args) {
            super(...args);
            this.defaultAlignItems = defaultAlignItems;
            this._alignItems = null;
            this.alignItems = defaultAlignItems;
        }
        set alignItems(val) {
            const align_Items = val || this.defaultAlignItems;
            if (align_Items !== this._alignItems) {
                if (this._alignItems) {
                    this._elementRef.nativeElement.classList.remove("items-" + this._alignItems);
                }
                if (align_Items) {
                    this._elementRef.nativeElement.classList.add("items-" + val);
                }
                this._alignItems = align_Items;
            }
        }
        get alignItems() {
            return this._alignItems;
        }
    };
}
//#endregion 
class TFlexBase {
    constructor(_elementRef) {
        this._elementRef = _elementRef;
    }
}
const _TFlexMixinBase = mixinAlignItems(mixinJustifyContent(mixinFlexDirection(TFlexBase, DEFAULT_FLEX_DIRECTION), DEFAULT_JUSTIFY_CONTENT), DEFAULT_ALIGN_ITEMS);
class TDSFlexComponent extends _TFlexMixinBase {
    // flex: FLEX_DIRECTION
    //justifyContent: JUSTIFY_CONTENT
    //alignItems: ALIGN_ITEMS
    constructor(elementRef) {
        super(elementRef);
    }
}
TDSFlexComponent.ɵfac = function TDSFlexComponent_Factory(t) { return new (t || TDSFlexComponent)(i0.ɵɵdirectiveInject(i0.ElementRef)); };
TDSFlexComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TDSFlexComponent, selectors: [["tds-flex"]], hostAttrs: [1, "flex"], inputs: { flex: "flex", justifyContent: "justifyContent", alignItems: "alignItems" }, features: [i0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function TDSFlexComponent_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵprojectionDef();
            i0.ɵɵprojection(0);
        }
    }, encapsulation: 2, changeDetection: 0 });
(function () {
    (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSFlexComponent, [{
            type: Component,
            args: [{
                    selector: 'tds-flex',
                    template: `
        <ng-content></ng-content>
    `,
                    host: {
                        class: 'flex',
                    },
                    inputs: ['flex', "justifyContent", "alignItems"],
                    changeDetection: ChangeDetectionStrategy.OnPush
                }]
        }], function () { return [{ type: i0.ElementRef }]; }, null);
})();

class TDSFlexModule {
}
TDSFlexModule.ɵfac = function TDSFlexModule_Factory(t) { return new (t || TDSFlexModule)(); };
TDSFlexModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: TDSFlexModule });
TDSFlexModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [[
            CommonModule
        ]] });
(function () {
    (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSFlexModule, [{
            type: NgModule,
            args: [{
                    declarations: [TDSFlexComponent],
                    exports: [TDSFlexComponent],
                    imports: [
                        CommonModule
                    ]
                }]
        }], null, null);
})();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0.ɵɵsetNgModuleScope(TDSFlexModule, { declarations: [TDSFlexComponent], imports: [CommonModule], exports: [TDSFlexComponent] }); })();

/**
 * Generated bundle index. Do not edit.
 */

export { TDSFlexComponent, TDSFlexModule };
//# sourceMappingURL=tds-ui-flex.mjs.map
