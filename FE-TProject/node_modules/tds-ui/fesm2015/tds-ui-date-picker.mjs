import * as i6 from '@angular/cdk/bidi';
import { BidiModule } from '@angular/cdk/bidi';
import * as i11 from '@angular/cdk/overlay';
import { CdkOverlayOrigin, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';
import * as i2 from '@angular/common';
import { DOCUMENT, CommonModule } from '@angular/common';
import * as i0 from '@angular/core';
import { Injectable, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, Directive, forwardRef, Inject, Optional, Host, Self, ViewChild, ViewChildren, NgModule } from '@angular/core';
import * as i7 from '@angular/forms';
import { FormsModule } from '@angular/forms';
import * as i4 from 'tds-ui/button';
import { TDSButtonModule } from 'tds-ui/button';
import * as i9 from 'tds-ui/core/outlet';
import { TDSOutletModule } from 'tds-ui/core/outlet';
import * as i10 from 'tds-ui/time-picker';
import { TDSTimePickerModule } from 'tds-ui/time-picker';
import { ReplaySubject, Subject, merge } from 'rxjs';
import { TDSHelperObject, valueFunctionProp, toBoolean, TDSHelperArray, InputBoolean } from 'tds-ui/shared/utility';
import { CandyDate, normalizeRangeValue, cloneDate, wrongSortOrder } from 'tds-ui/core/time';
import { isTemplateRef, isNonEmptyString } from 'tds-ui/core/util';
import * as i1 from 'tds-ui/i18n';
import { TDSI18nModule } from 'tds-ui/i18n';
import { __decorate } from 'tslib';
import { takeUntil } from 'rxjs/operators';
import { addDays, startOfMonth, endOfMonth } from 'date-fns';
import * as i2$1 from 'tds-ui/select';
import { TDSSelectModule } from 'tds-ui/select';
import { ESCAPE } from '@angular/cdk/keycodes';
import { coerceBooleanProperty } from '@angular/cdk/coercion';
import * as i12 from 'tds-ui/form-field';
import { TDS_FORM_FIELD, TDSFormFieldControl } from 'tds-ui/form-field';
import { slideMotion } from 'tds-ui/core/animation';
import { TDSIsErrorState } from 'tds-ui/shared/common';
import * as i1$1 from 'tds-ui/core/config';
import * as i4$1 from 'tds-ui/core/resize-observers';
import * as i5 from '@angular/cdk/platform';

const PREFIX_CLASS = 'tds-picker';
const defaultDisabledTime = {
    disabledHours() {
        return [];
    },
    disabledMinutes() {
        return [];
    },
    disabledSeconds() {
        return [];
    }
};
function getTimeConfig(value, disabledTime) {
    let disabledTimeConfig = disabledTime ? disabledTime(value && value.nativeDate) : {};
    disabledTimeConfig = Object.assign(Object.assign({}, defaultDisabledTime), disabledTimeConfig);
    return disabledTimeConfig;
}
function isTimeValidByConfig(value, disabledTimeConfig) {
    let invalidTime = false;
    if (value) {
        const hour = value.getHours();
        const minutes = value.getMinutes();
        const seconds = value.getSeconds();
        const disabledHours = disabledTimeConfig.disabledHours();
        if (disabledHours.indexOf(hour) === -1) {
            const disabledMinutes = disabledTimeConfig.disabledMinutes(hour);
            if (disabledMinutes.indexOf(minutes) === -1) {
                const disabledSeconds = disabledTimeConfig.disabledSeconds(hour, minutes);
                invalidTime = disabledSeconds.indexOf(seconds) !== -1;
            }
            else {
                invalidTime = true;
            }
        }
        else {
            invalidTime = true;
        }
    }
    return !invalidTime;
}
function isTimeValid(value, disabledTime) {
    const disabledTimeConfig = getTimeConfig(value, disabledTime);
    return isTimeValidByConfig(value, disabledTimeConfig);
}
function isAllowedDate(value, disabledDate, disabledTime) {
    if (!value) {
        return false;
    }
    if (disabledDate) {
        if (disabledDate(value.nativeDate)) {
            return false;
        }
    }
    if (disabledTime) {
        if (!isTimeValid(value, disabledTime)) {
            return false;
        }
    }
    return true;
}

/**
 * Compatible translate the moment-like format pattern to angular's pattern
 * Why? For now, we need to support the existing language formats in AntD, and AntD uses the default temporal syntax.
 *
 * TODO: compare and complete all format patterns
 * Each format docs as below:
 * @link https://momentjs.com/docs/#/displaying/format/
 * @link https://angular.io/api/common/DatePipe#description
 * @param format input format pattern
 */
function transCompatFormat(format) {
    return (format &&
        format
            .replace(/Y/g, 'y') // only support y, yy, yyy, yyyy
            .replace(/D/g, 'd')); // d, dd represent of D, DD for momentjs, others are not support
}

class DatePickerService {
    constructor() {
        this.activeInput = 'left';
        this.arrowLeft = 0;
        this.isRange = false;
        this.valueChange$ = new ReplaySubject(1);
        this.emitValue$ = new Subject();
        this.inputPartChange$ = new Subject();
    }
    initValue(reset = false) {
        if (reset) {
            this.initialValue = this.isRange ? [] : null;
        }
        this.setValue(this.initialValue);
    }
    hasValue(value = this.value) {
        if (Array.isArray(value)) {
            return !!value[0] || !!value[1];
        }
        else {
            return !!value;
        }
    }
    makeValue(value) {
        if (this.isRange) {
            return value ? value.map(val => new CandyDate(val)) : [];
        }
        else {
            return value ? new CandyDate(value) : null;
        }
    }
    setActiveDate(value, hasTimePicker = false, mode = 'month') {
        const parentPanels = {
            date: 'month',
            month: 'year',
            year: 'decade'
        };
        if (this.isRange) {
            this.activeDate = normalizeRangeValue(value, hasTimePicker, parentPanels[mode], this.activeInput);
        }
        else {
            this.activeDate = cloneDate(value);
        }
    }
    setValue(value) {
        this.value = value;
        this.valueChange$.next(this.value);
    }
    getActiveIndex(part = this.activeInput) {
        return { left: 0, right: 1 }[part];
    }
    ngOnDestroy() {
        this.valueChange$.complete();
        this.emitValue$.complete();
        this.inputPartChange$.complete();
    }
}
DatePickerService.ɵfac = function DatePickerService_Factory(t) { return new (t || DatePickerService)(); };
DatePickerService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: DatePickerService, factory: DatePickerService.ɵfac });
(function () {
    (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(DatePickerService, [{
            type: Injectable
        }], null, null);
})();

function CalendarFooterComponent_div_1_ng_container_2_ng_container_1_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainer(0);
    }
}
function CalendarFooterComponent_div_1_ng_container_2_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵtemplate(1, CalendarFooterComponent_div_1_ng_container_2_ng_container_1_Template, 1, 0, "ng-container", 5);
        i0.ɵɵelementContainerEnd();
    }
    if (rf & 2) {
        const ctx_r3 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngTemplateOutlet", ctx_r3.extraFooter);
    }
}
function CalendarFooterComponent_div_1_ng_container_3_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵelement(1, "span", 6);
        i0.ɵɵelementContainerEnd();
    }
    if (rf & 2) {
        const ctx_r4 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("innerHTML", ctx_r4.extraFooter, i0.ɵɵsanitizeHtml);
    }
}
function CalendarFooterComponent_div_1_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "div");
        i0.ɵɵelementContainerStart(1, 3);
        i0.ɵɵtemplate(2, CalendarFooterComponent_div_1_ng_container_2_Template, 2, 1, "ng-container", 4);
        i0.ɵɵtemplate(3, CalendarFooterComponent_div_1_ng_container_3_Template, 2, 1, "ng-container", 4);
        i0.ɵɵelementContainerEnd();
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const ctx_r0 = i0.ɵɵnextContext();
        i0.ɵɵclassMapInterpolate1("", ctx_r0.prefixCls, "-footer-extra");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngSwitch", true);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngSwitchCase", ctx_r0.isTemplateRef(ctx_r0.extraFooter));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngSwitchCase", ctx_r0.isNonEmptyString(ctx_r0.extraFooter));
    }
}
function CalendarFooterComponent_div_2_Template(rf, ctx) {
    if (rf & 1) {
        const _r7 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 7)(1, "a", 8);
        i0.ɵɵlistener("click", function CalendarFooterComponent_div_2_Template_a_click_1_listener() { i0.ɵɵrestoreView(_r7); const ctx_r6 = i0.ɵɵnextContext(); return ctx_r6.isTodayDisabled ? null : ctx_r6.onClickToday(); });
        i0.ɵɵtext(2);
        i0.ɵɵelementEnd()();
    }
    if (rf & 2) {
        const ctx_r1 = i0.ɵɵnextContext();
        i0.ɵɵadvance(1);
        i0.ɵɵclassMapInterpolate2("", ctx_r1.prefixCls, "-today-btn ", ctx_r1.isTodayDisabled ? ctx_r1.prefixCls + "-today-btn-disabled" : "text-primary-1", " text-body-2 font-semibold uppercase");
        i0.ɵɵpropertyInterpolate("title", ctx_r1.todayTitle);
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", ctx_r1.locale.today, " ");
    }
}
function CalendarFooterComponent_div_3_div_1_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 14)(1, "div", 15)(2, "div", 16);
        i0.ɵɵelement(3, "span", 17);
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(4, "div", 18);
        i0.ɵɵtext(5);
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(6, "div", 19);
        i0.ɵɵtext(7, " - ");
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(8, "div", 18);
        i0.ɵɵtext(9);
        i0.ɵɵelementEnd()()();
    }
    if (rf & 2) {
        const ctx_r8 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(5);
        i0.ɵɵtextInterpolate1(" ", ctx_r8.startDate, " ");
        i0.ɵɵadvance(4);
        i0.ɵɵtextInterpolate1(" ", ctx_r8.endDate, " ");
    }
}
function CalendarFooterComponent_div_3_Template(rf, ctx) {
    if (rf & 1) {
        const _r10 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 9);
        i0.ɵɵtemplate(1, CalendarFooterComponent_div_3_div_1_Template, 10, 2, "div", 10);
        i0.ɵɵelementStart(2, "div", 11)(3, "button", 12);
        i0.ɵɵlistener("click", function CalendarFooterComponent_div_3_Template_button_click_3_listener() { i0.ɵɵrestoreView(_r10); const ctx_r9 = i0.ɵɵnextContext(); return ctx_r9.onClickCancel(); });
        i0.ɵɵtext(4, "Cancel");
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(5, "button", 13);
        i0.ɵɵlistener("click", function CalendarFooterComponent_div_3_Template_button_click_5_listener() { i0.ɵɵrestoreView(_r10); const ctx_r11 = i0.ɵɵnextContext(); return ctx_r11.okDisabled ? null : ctx_r11.clickOk.emit(); });
        i0.ɵɵtext(6, "Apply");
        i0.ɵɵelementEnd()()();
    }
    if (rf & 2) {
        const ctx_r2 = i0.ɵɵnextContext();
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", !ctx_r2.hasTimePicker && (ctx_r2.startDate || ctx_r2.endDate));
        i0.ɵɵadvance(4);
        i0.ɵɵproperty("disabled", ctx_r2.okDisabled);
    }
}
class CalendarFooterComponent {
    constructor(dateHelper, datePickerService) {
        this.dateHelper = dateHelper;
        this.datePickerService = datePickerService;
        this.showToday = false;
        this.showNow = false;
        this.hasTimePicker = false;
        this.isRange = false;
        this.okDisabled = false;
        this.rangeQuickSelector = null;
        this.clickOk = new EventEmitter();
        this.clickCancel = new EventEmitter();
        this.clickToday = new EventEmitter();
        this.prefixCls = PREFIX_CLASS;
        this.isTemplateRef = isTemplateRef;
        this.isNonEmptyString = isNonEmptyString;
        this.isTodayDisabled = false;
        this.todayTitle = '';
        this.destroy$ = new Subject();
        this.startDate = "";
        this.endDate = "";
    }
    ngOnChanges(changes) {
        const now = new Date();
        if (changes.disabledDate) {
            this.isTodayDisabled = !!(this.disabledDate && this.disabledDate(now));
        }
        if (changes.locale) {
            // NOTE: Compat for DatePipe formatting rules
            const dateFormat = transCompatFormat(this.locale.dateFormat);
            this.todayTitle = this.dateHelper.format(now, dateFormat);
        }
        if (changes.listDate) {
            if (this.isRange) {
                const dateFormat = transCompatFormat(this.locale.dateFormat);
                if (TDSHelperObject.hasValue(this.listDate)) {
                    let startDate = this.listDate[0];
                    let endDate = this.listDate[1];
                    if (TDSHelperObject.hasValue(startDate)) {
                        this.startDate = this.dateHelper.format(startDate.nativeDate, dateFormat);
                    }
                    else {
                        this.startDate = "";
                    }
                    if (TDSHelperObject.hasValue(endDate)) {
                        this.endDate = this.dateHelper.format(endDate.nativeDate, dateFormat);
                    }
                    else {
                        this.endDate = "";
                    }
                }
                else {
                    this.startDate = "";
                    this.endDate = "";
                }
            }
        }
    }
    onClickToday() {
        const now = new CandyDate();
        this.clickToday.emit(now.clone()); // To prevent the "now" being modified from outside, we use clone
    }
    onClickCancel() {
        this.clickCancel.emit(); // To prevent the "now" being modified from outside, we use clone
    }
    ngOnDestroy() {
        this.destroy$.next();
        this.destroy$.complete();
    }
}
CalendarFooterComponent.ɵfac = function CalendarFooterComponent_Factory(t) { return new (t || CalendarFooterComponent)(i0.ɵɵdirectiveInject(i1.DateHelperService), i0.ɵɵdirectiveInject(DatePickerService)); };
CalendarFooterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CalendarFooterComponent, selectors: [["calendar-footer"]], inputs: { locale: "locale", showToday: "showToday", showNow: "showNow", hasTimePicker: "hasTimePicker", isRange: "isRange", listDate: "listDate", okDisabled: "okDisabled", disabledDate: "disabledDate", extraFooter: "extraFooter", rangeQuickSelector: "rangeQuickSelector" }, outputs: { clickOk: "clickOk", clickCancel: "clickCancel", clickToday: "clickToday" }, exportAs: ["calendarFooter"], features: [i0.ɵɵNgOnChangesFeature], decls: 4, vars: 6, consts: [[3, "class", 4, "ngIf"], ["class", "flex justify-center px-4 py-2 w-full", 4, "ngIf"], ["class", "flex justify-end items-center px-4 py-2 w-full", 4, "ngIf"], [3, "ngSwitch"], [4, "ngSwitchCase"], [4, "ngTemplateOutlet"], [3, "innerHTML"], [1, "flex", "justify-center", "px-4", "py-2", "w-full"], ["role", "button", 3, "title", "click"], [1, "flex", "justify-end", "items-center", "px-4", "py-2", "w-full"], ["class", "px-4", 4, "ngIf"], [1, "ml-2"], ["tds-button", "", "color", "secondary", 1, "mr-2", 3, "click"], ["tds-button", "", "color", "primary", 3, "disabled", "click"], [1, "px-4"], [1, "flex", "items-center", "text-neutral-1-400"], [1, "flex"], [1, "text-lg", "leading-5", "tdsi-calendar-fill"], [1, "px-2", "text-body-2", "font-regular", "text-center"], [1, "text-body-2", "font-regular"]], template: function CalendarFooterComponent_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelementStart(0, "div");
            i0.ɵɵtemplate(1, CalendarFooterComponent_div_1_Template, 4, 6, "div", 0);
            i0.ɵɵtemplate(2, CalendarFooterComponent_div_2_Template, 3, 6, "div", 1);
            i0.ɵɵtemplate(3, CalendarFooterComponent_div_3_Template, 7, 2, "div", 2);
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            i0.ɵɵclassMapInterpolate1("", ctx.prefixCls, "-footer w-full  border-0 border-t  border-neutral-2-200 dark:border-d-neutral-2-200");
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngIf", ctx.extraFooter);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngIf", !ctx.isRange);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngIf", ctx.isRange);
        }
    }, directives: [i2.NgIf, i2.NgSwitch, i2.NgSwitchCase, i2.NgTemplateOutlet, i4.TDSButtonComponent], encapsulation: 2, changeDetection: 0 });
(function () {
    (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(CalendarFooterComponent, [{
            type: Component,
            args: [{ encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, selector: 'calendar-footer', exportAs: 'calendarFooter', template: "<div class=\"{{ prefixCls }}-footer w-full  border-0 border-t  border-neutral-2-200 dark:border-d-neutral-2-200\">\r\n    <div *ngIf=\"extraFooter\" class=\"{{ prefixCls }}-footer-extra\">\r\n        <ng-container [ngSwitch]=\"true\">\r\n            <ng-container *ngSwitchCase=\"isTemplateRef(extraFooter)\">\r\n                <ng-container *ngTemplateOutlet=\"$any(extraFooter)\"></ng-container>\r\n            </ng-container>\r\n            <ng-container *ngSwitchCase=\"isNonEmptyString(extraFooter)\">\r\n                <span [innerHTML]=\"extraFooter\"></span>\r\n            </ng-container>\r\n        </ng-container>\r\n    </div>\r\n    <div class=\"flex justify-center px-4 py-2 w-full\" *ngIf=\"!isRange\">\r\n        <a class=\"{{ prefixCls }}-today-btn {{ isTodayDisabled ? prefixCls + '-today-btn-disabled' : 'text-primary-1' }} text-body-2 font-semibold uppercase\"\r\n            role=\"button\" (click)=\"isTodayDisabled ? null : onClickToday()\" title=\"{{ todayTitle }}\">\r\n            {{ locale.today }}\r\n        </a>\r\n    </div>\r\n    <div class=\"flex justify-end items-center px-4 py-2 w-full\" *ngIf=\"isRange\">\r\n        <div *ngIf=\"!hasTimePicker && (startDate || endDate)\" class=\"px-4\">\r\n            <div class=\"flex items-center text-neutral-1-400\">\r\n                <div class=\"flex\">\r\n                    <span class=\"text-lg leading-5  tdsi-calendar-fill\"></span>\r\n                </div>\r\n                <div class=\"px-2 text-body-2 font-regular text-center\">\r\n                  {{startDate}}\r\n                </div>\r\n                <div class=\"text-body-2 font-regular\">\r\n                    -\r\n                </div>\r\n                <div class=\"px-2  text-body-2 font-regular text-center\">\r\n                    {{endDate}}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"ml-2\">\r\n            <button tds-button color=\"secondary\" class=\"mr-2\" (click)=\"onClickCancel()\">Cancel</button>\r\n            <button tds-button color=\"primary\"   [disabled]=\"okDisabled\"\r\n            (click)=\"okDisabled ? null : clickOk.emit()\">Apply</button>\r\n        </div>\r\n    </div>\r\n</div>" }]
        }], function () { return [{ type: i1.DateHelperService }, { type: DatePickerService }]; }, { locale: [{
                type: Input
            }], showToday: [{
                type: Input
            }], showNow: [{
                type: Input
            }], hasTimePicker: [{
                type: Input
            }], isRange: [{
                type: Input
            }], listDate: [{
                type: Input
            }], okDisabled: [{
                type: Input
            }], disabledDate: [{
                type: Input
            }], extraFooter: [{
                type: Input
            }], rangeQuickSelector: [{
                type: Input
            }], clickOk: [{
                type: Output
            }], clickCancel: [{
                type: Output
            }], clickToday: [{
                type: Output
            }] });
})();

// tslint:disable-next-line:directive-class-suffix
class AbstractPanelHeader {
    constructor() {
        this.prefixCls = `tds-picker-header`;
        this.selectors = [];
        this.showSuperPreBtn = false;
        this.showSuperNextBtn = false;
        this.showPreBtn = true;
        this.showNextBtn = true;
        this.panelModeChange = new EventEmitter();
        this.valueChange = new EventEmitter();
    }
    superPreviousTitle() {
        return this.locale.previousYear;
    }
    previousTitle() {
        return this.locale.previousMonth;
    }
    superNextTitle() {
        return this.locale.nextYear;
    }
    nextTitle() {
        return this.locale.nextMonth;
    }
    superPrevious() {
        this.changeValue(this.value.addYears(-1));
    }
    superNext() {
        this.changeValue(this.value.addYears(1));
    }
    previous() {
        this.changeValue(this.value.addMonths(-1));
    }
    next() {
        this.changeValue(this.value.addMonths(1));
    }
    changeValue(value) {
        if (this.value !== value) {
            this.value = value;
            this.valueChange.emit(this.value);
            this.render();
        }
    }
    changeMode(mode) {
        this.panelModeChange.emit(mode);
    }
    render() {
        if (this.value) {
            this.selectors = this.getSelectors();
        }
    }
    ngOnInit() {
        if (!this.value) {
            this.value = new CandyDate(); // Show today by default
        }
        this.selectors = this.getSelectors();
    }
    ngOnChanges(changes) {
        if (changes.value || changes.locale) {
            this.render();
        }
    }
}
AbstractPanelHeader.ɵfac = function AbstractPanelHeader_Factory(t) { return new (t || AbstractPanelHeader)(); };
AbstractPanelHeader.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: AbstractPanelHeader, inputs: { value: "value", locale: "locale", showSuperPreBtn: "showSuperPreBtn", showSuperNextBtn: "showSuperNextBtn", showPreBtn: "showPreBtn", showNextBtn: "showNextBtn" }, outputs: { panelModeChange: "panelModeChange", valueChange: "valueChange" }, features: [i0.ɵɵNgOnChangesFeature] });
(function () {
    (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AbstractPanelHeader, [{
            type: Directive
        }], null, { value: [{
                type: Input
            }], locale: [{
                type: Input
            }], showSuperPreBtn: [{
                type: Input
            }], showSuperNextBtn: [{
                type: Input
            }], showPreBtn: [{
                type: Input
            }], showNextBtn: [{
                type: Input
            }], panelModeChange: [{
                type: Output
            }], valueChange: [{
                type: Output
            }] });
})();

function DecadeHeaderComponent_button_1_Template(rf, ctx) {
    if (rf & 1) {
        const _r4 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "button", 2);
        i0.ɵɵlistener("click", function DecadeHeaderComponent_button_1_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r4); const ctx_r3 = i0.ɵɵnextContext(); return ctx_r3.superPrevious(); });
        i0.ɵɵelement(1, "span", 6);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const ctx_r0 = i0.ɵɵnextContext();
        i0.ɵɵclassMapInterpolate1("", ctx_r0.prefixCls, "-super-prev-btn text-xl text-neutral-1-500 dark:text-d-neutral-1-500 p-1.5 flex items-center justify-center border border-transparent");
        i0.ɵɵstyleProp("visibility", ctx_r0.showSuperPreBtn ? "visible" : "hidden");
        i0.ɵɵpropertyInterpolate("title", ctx_r0.superPreviousTitle());
    }
}
function DecadeHeaderComponent_ng_container_5_button_1_Template(rf, ctx) {
    if (rf & 1) {
        const _r11 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "button", 9);
        i0.ɵɵlistener("click", function DecadeHeaderComponent_ng_container_5_button_1_Template_button_click_0_listener($event) { i0.ɵɵrestoreView(_r11); const selector_r5 = i0.ɵɵnextContext().$implicit; return selector_r5.onClick($event); });
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const selector_r5 = i0.ɵɵnextContext().$implicit;
        i0.ɵɵclassMap(selector_r5.className);
        i0.ɵɵpropertyInterpolate("title", selector_r5.title || null);
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", selector_r5.label, " \u00A0 ");
    }
}
function DecadeHeaderComponent_ng_container_5_div_2_ng_template_2_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵtext(0);
    }
    if (rf & 2) {
        const item_r15 = ctx.item;
        i0.ɵɵtextInterpolate1(" ", item_r15.name, " ");
    }
}
const _c0$a = function (a0, a1) { return { "w-[85px]": a0, "flex-auto": a1 }; };
function DecadeHeaderComponent_ng_container_5_div_2_Template(rf, ctx) {
    if (rf & 1) {
        const _r20 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 10)(1, "tds-select", 11);
        i0.ɵɵlistener("ngModelChange", function DecadeHeaderComponent_ng_container_5_div_2_Template_tds_select_ngModelChange_1_listener($event) { i0.ɵɵrestoreView(_r20); const selector_r5 = i0.ɵɵnextContext().$implicit; return selector_r5.onClick($event); });
        i0.ɵɵtemplate(2, DecadeHeaderComponent_ng_container_5_div_2_ng_template_2_Template, 1, 1, "ng-template", 12);
        i0.ɵɵelementEnd()();
    }
    if (rf & 2) {
        const ctx_r21 = i0.ɵɵnextContext();
        const indx_r6 = ctx_r21.index;
        const selector_r5 = ctx_r21.$implicit;
        const ctx_r8 = i0.ɵɵnextContext();
        i0.ɵɵclassMap(i0.ɵɵpureFunction2(6, _c0$a, ctx_r8.selectors.length == 1, ctx_r8.selectors.length > 1 && indx_r6 == 0));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("placeholder", selector_r5.title)("ngModel", selector_r5.value)("data", selector_r5.data)("allowSearch", false);
    }
}
function DecadeHeaderComponent_ng_container_5_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵtemplate(1, DecadeHeaderComponent_ng_container_5_button_1_Template, 2, 5, "button", 7);
        i0.ɵɵtemplate(2, DecadeHeaderComponent_ng_container_5_div_2_Template, 3, 9, "div", 8);
        i0.ɵɵelementContainerEnd();
    }
    if (rf & 2) {
        const selector_r5 = ctx.$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", !selector_r5.data);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", selector_r5.data);
    }
}
function DecadeHeaderComponent_button_8_Template(rf, ctx) {
    if (rf & 1) {
        const _r23 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "button", 2);
        i0.ɵɵlistener("click", function DecadeHeaderComponent_button_8_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r23); const ctx_r22 = i0.ɵɵnextContext(); return ctx_r22.superNext(); });
        i0.ɵɵelement(1, "span", 13);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const ctx_r2 = i0.ɵɵnextContext();
        i0.ɵɵclassMapInterpolate1("", ctx_r2.prefixCls, "-super-next-btn text-xl text-neutral-1-500 dark:text-d-neutral-1-500 p-1.5 flex items-center justify-center border border-transparent");
        i0.ɵɵstyleProp("visibility", ctx_r2.showSuperNextBtn ? "visible" : "hidden");
        i0.ɵɵpropertyInterpolate("title", ctx_r2.superNextTitle());
    }
}
class DecadeHeaderComponent extends AbstractPanelHeader {
    previous() { }
    next() { }
    get startYear() {
        return parseInt(`${this.value.getYear() / 100}`, 10) * 100;
    }
    get endYear() {
        return this.startYear + 99;
    }
    superPrevious() {
        this.changeValue(this.value.addYears(-100));
    }
    superNext() {
        this.changeValue(this.value.addYears(100));
    }
    getSelectors() {
        return [
            {
                className: `${this.prefixCls}-decade-btn`,
                title: '',
                onClick: () => {
                    // noop
                },
                label: `${this.startYear}-${this.endYear}`
            }
        ];
    }
}
DecadeHeaderComponent.ɵfac = /*@__PURE__*/ function () { let ɵDecadeHeaderComponent_BaseFactory; return function DecadeHeaderComponent_Factory(t) { return (ɵDecadeHeaderComponent_BaseFactory || (ɵDecadeHeaderComponent_BaseFactory = i0.ɵɵgetInheritedFactory(DecadeHeaderComponent)))(t || DecadeHeaderComponent); }; }();
DecadeHeaderComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: DecadeHeaderComponent, selectors: [["decade-header"]], exportAs: ["decadeHeader"], features: [i0.ɵɵInheritDefinitionFeature], decls: 9, vars: 19, consts: [[1, "flex", "py-2", "px-0.5", "w-full", 3, "ngClass"], ["role", "button", "tabindex", "-1", 3, "visibility", "class", "title", "click", 4, "ngIf"], ["role", "button", "tabindex", "-1", 3, "title", "click"], [1, "tdsi-arrow-left-line"], [4, "ngFor", "ngForOf"], [1, "tdsi-arrow-right-line"], [1, "tdsi-arrow-previous-fill"], ["role", "button", "type", "button", 3, "class", "title", "click", 4, "ngIf"], ["class", "px-0.5", 3, "class", 4, "ngIf"], ["role", "button", "type", "button", 3, "title", "click"], [1, "px-0.5"], ["valueField", "id", "textField", "name", 3, "placeholder", "ngModel", "data", "allowSearch", "ngModelChange"], ["tds-option-tmp", ""], [1, "tdsi-arrow-next-fill"]], template: function DecadeHeaderComponent_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelementStart(0, "div", 0);
            i0.ɵɵtemplate(1, DecadeHeaderComponent_button_1_Template, 2, 6, "button", 1);
            i0.ɵɵelementStart(2, "button", 2);
            i0.ɵɵlistener("click", function DecadeHeaderComponent_Template_button_click_2_listener() { return ctx.previous(); });
            i0.ɵɵelement(3, "span", 3);
            i0.ɵɵelementEnd();
            i0.ɵɵelementStart(4, "div");
            i0.ɵɵtemplate(5, DecadeHeaderComponent_ng_container_5_Template, 3, 2, "ng-container", 4);
            i0.ɵɵelementEnd();
            i0.ɵɵelementStart(6, "button", 2);
            i0.ɵɵlistener("click", function DecadeHeaderComponent_Template_button_click_6_listener() { return ctx.next(); });
            i0.ɵɵelement(7, "span", 5);
            i0.ɵɵelementEnd();
            i0.ɵɵtemplate(8, DecadeHeaderComponent_button_8_Template, 2, 6, "button", 1);
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            i0.ɵɵproperty("ngClass", ctx.prefixCls);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngIf", ctx.showSuperPreBtn);
            i0.ɵɵadvance(1);
            i0.ɵɵclassMapInterpolate1("", ctx.prefixCls, "-prev-btn p-1.5 text-xl text-neutral-1-500 dark:text-d-neutral-1-500 flex items-center justify-center border border-transparent");
            i0.ɵɵstyleProp("visibility", ctx.showPreBtn ? "visible" : "hidden");
            i0.ɵɵpropertyInterpolate("title", ctx.previousTitle());
            i0.ɵɵadvance(2);
            i0.ɵɵclassMapInterpolate1("", ctx.prefixCls, "-view flex-auto flex items-center justify-center font-semibold text-title-1 text-neutral-1-900 dark:text-d-neutral-1-900");
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngForOf", ctx.selectors);
            i0.ɵɵadvance(1);
            i0.ɵɵclassMapInterpolate1("", ctx.prefixCls, "-next-btn text-xl text-neutral-1-500 dark:text-d-neutral-1-500 p-1.5 flex items-center justify-center border border-transparent");
            i0.ɵɵstyleProp("visibility", ctx.showNextBtn ? "visible" : "hidden");
            i0.ɵɵpropertyInterpolate("title", ctx.nextTitle());
            i0.ɵɵadvance(2);
            i0.ɵɵproperty("ngIf", ctx.showSuperNextBtn);
        }
    }, directives: [i2.NgClass, i2.NgIf, i2.NgForOf, i2$1.TDSSelect, i7.NgControlStatus, i7.NgModel, i2$1.TDSOptionTemplateDirective], encapsulation: 2, changeDetection: 0 });
(function () {
    (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(DecadeHeaderComponent, [{
            type: Component,
            args: [{ encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, selector: 'decade-header', exportAs: 'decadeHeader', template: "<div class=\"flex py-2 px-0.5 w-full\" [ngClass]=\"prefixCls\">\r\n  <button *ngIf=\"showSuperPreBtn\" [style.visibility]=\"showSuperPreBtn ? 'visible' : 'hidden'\"\r\n    class=\"{{ prefixCls }}-super-prev-btn text-xl text-neutral-1-500 dark:text-d-neutral-1-500 p-1.5 flex items-center justify-center border border-transparent\"\r\n    role=\"button\" tabindex=\"-1\" title=\"{{ superPreviousTitle() }}\" (click)=\"superPrevious()\">\r\n    <span class=\"tdsi-arrow-previous-fill\"></span>\r\n  </button>\r\n  <button [style.visibility]=\"showPreBtn ? 'visible' : 'hidden'\"\r\n    class=\"{{ prefixCls }}-prev-btn p-1.5 text-xl text-neutral-1-500 dark:text-d-neutral-1-500 flex items-center justify-center border border-transparent\"\r\n    role=\"button\" title=\"{{ previousTitle() }}\" tabindex=\"-1\" (click)=\"previous()\">\r\n    <span class=\"tdsi-arrow-left-line\"></span>\r\n  </button>\r\n\r\n  <div\r\n    class=\"{{ prefixCls }}-view flex-auto flex items-center justify-center font-semibold text-title-1 text-neutral-1-900 dark:text-d-neutral-1-900\">\r\n    <ng-container *ngFor=\"let selector of selectors; let indx= index\">\r\n      <button *ngIf=\"!selector.data\" class=\"{{ selector.className }}\" role=\"button\" type=\"button\"\r\n        title=\"{{ selector.title || null }}\" (click)=\"selector.onClick($event)\">\r\n        {{ selector.label }} &nbsp;\r\n      </button>\r\n      <div *ngIf=\"selector.data\" class=\"px-0.5\"\r\n        [class]=\"{'w-[85px]':selectors.length == 1,'flex-auto':selectors.length > 1 && indx == 0}\">\r\n        <tds-select valueField=\"id\" textField=\"name\" [placeholder]='selector.title!' [ngModel]=\"selector.value\"\r\n          (ngModelChange)=\"selector.onClick($event)\" [data]=\"selector.data\" [allowSearch]=\"false\" >\r\n          <ng-template tds-option-tmp let-label='label' let-item=\"item\" let-value='value' let-selected=\"selected\">\r\n            {{item.name}}\r\n          </ng-template>\r\n        </tds-select>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <button [style.visibility]=\"showNextBtn ? 'visible' : 'hidden'\"\r\n    class=\"{{ prefixCls }}-next-btn text-xl text-neutral-1-500 dark:text-d-neutral-1-500 p-1.5 flex items-center justify-center border border-transparent\"\r\n    role=\"button\" tabindex=\"-1\" title=\"{{ nextTitle() }}\" (click)=\"next()\">\r\n    <span class=\"tdsi-arrow-right-line\"></span>\r\n  </button>\r\n  <button *ngIf=\"showSuperNextBtn\" [style.visibility]=\"showSuperNextBtn ? 'visible' : 'hidden'\"\r\n    class=\"{{ prefixCls }}-super-next-btn text-xl text-neutral-1-500 dark:text-d-neutral-1-500 p-1.5 flex items-center justify-center border border-transparent\"\r\n    role=\"button\" tabindex=\"-1\" title=\"{{ superNextTitle() }}\" (click)=\"superNext()\">\r\n    <span class=\"tdsi-arrow-next-fill\"></span>\r\n  </button>\r\n</div>" }]
        }], null, null);
})();

// tslint:disable-next-line:directive-class-suffix
class AbstractTable {
    constructor() {
        this.isTemplateRef = isTemplateRef;
        this.isNonEmptyString = isNonEmptyString;
        this.headRow = [];
        this.bodyRows = [];
        this.MAX_ROW = 6;
        this.MAX_COL = 7;
        this.prefixCls = 'tds-picker';
        this.activeDate = new CandyDate();
        this.showWeek = false;
        this.selectedValue = []; // Range ONLY
        this.hoverValue = []; // Range ONLY
        this.valueChange = new EventEmitter();
        this.cellHover = new EventEmitter(); // Emitted when hover on a day by mouse enter
    }
    render() {
        if (this.activeDate) {
            this.headRow = this.makeHeadRow();
            this.bodyRows = this.makeBodyRows();
        }
    }
    trackByBodyRow(_index, item) {
        return item.trackByIndex;
    }
    trackByBodyColumn(_index, item) {
        return item.trackByIndex;
    }
    hasRangeValue() {
        var _a, _b;
        return ((_a = this.selectedValue) === null || _a === void 0 ? void 0 : _a.length) > 0 || ((_b = this.hoverValue) === null || _b === void 0 ? void 0 : _b.length) > 0;
    }
    getClassMap(cell) {
        return {
            [`tds-picker-cell `]: true,
            [`tds-picker-cell-in-view`]: true,
            [`tds-picker-cell-selected`]: cell.isSelected,
            [`tds-picker-cell-disabled`]: cell.isDisabled,
            [`tds-picker-cell-in-range`]: !!cell.isInSelectedRange,
            [`tds-picker-cell-range-start`]: !!cell.isSelectedStart,
            [`tds-picker-cell-range-end`]: !!cell.isSelectedEnd,
            [`tds-picker-cell-range-start-single`]: !!cell.isStartSingle,
            [`tds-picker-cell-range-end-single`]: !!cell.isEndSingle,
            [`tds-picker-cell-range-hover`]: !!cell.isInHoverRange,
            [`tds-picker-cell-range-hover-start`]: !!cell.isHoverStart,
            [`tds-picker-cell-range-hover-end`]: !!cell.isHoverEnd,
            [`tds-picker-cell-range-hover-edge-start`]: !!cell.isFirstCellInPanel,
            [`tds-picker-cell-range-hover-edge-end`]: !!cell.isLastCellInPanel,
            [`tds-picker-cell-range-start-near-hover`]: !!cell.isRangeStartNearHover,
            [`tds-picker-cell-range-end-near-hover`]: !!cell.isRangeEndNearHover,
        };
    }
    ngOnInit() {
        this.render();
    }
    ngOnChanges(changes) {
        if (changes.activeDate && !changes.activeDate.currentValue) {
            this.activeDate = new CandyDate();
        }
        if (changes.disabledDate ||
            changes.locale ||
            changes.showWeek ||
            this.isDateRealChange(changes.activeDate) ||
            this.isDateRealChange(changes.value) ||
            this.isDateRealChange(changes.selectedValue) ||
            this.isDateRealChange(changes.hoverValue)) {
            this.render();
        }
    }
    isDateRealChange(change) {
        if (change) {
            const previousValue = change.previousValue;
            const currentValue = change.currentValue;
            if (Array.isArray(currentValue)) {
                return (!Array.isArray(previousValue) ||
                    currentValue.length !== previousValue.length ||
                    currentValue.some((value, index) => {
                        const previousCandyDate = previousValue[index];
                        return previousCandyDate instanceof CandyDate ? previousCandyDate.isSameDay(value) : previousCandyDate !== value;
                    }));
            }
            else {
                return !this.isSameDate(previousValue, currentValue);
            }
        }
        return false;
    }
    isSameDate(left, right) {
        return (!left && !right) || (left && right && right.isSameDay(left));
    }
}
AbstractTable.ɵfac = function AbstractTable_Factory(t) { return new (t || AbstractTable)(); };
AbstractTable.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: AbstractTable, inputs: { prefixCls: "prefixCls", value: "value", locale: "locale", activeDate: "activeDate", showWeek: "showWeek", selectedValue: "selectedValue", hoverValue: "hoverValue", disabledDate: "disabledDate", cellRender: "cellRender", fullCellRender: "fullCellRender" }, outputs: { valueChange: "valueChange", cellHover: "cellHover" }, features: [i0.ɵɵNgOnChangesFeature] });
(function () {
    (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(AbstractTable, [{
            type: Directive
        }], null, { prefixCls: [{
                type: Input
            }], value: [{
                type: Input
            }], locale: [{
                type: Input
            }], activeDate: [{
                type: Input
            }], showWeek: [{
                type: Input
            }], selectedValue: [{
                type: Input
            }], hoverValue: [{
                type: Input
            }], disabledDate: [{
                type: Input
            }], cellRender: [{
                type: Input
            }], fullCellRender: [{
                type: Input
            }], valueChange: [{
                type: Output
            }], cellHover: [{
                type: Output
            }] });
})();

function DecadeTableComponent_thead_1_th_2_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelement(0, "th", 6);
    }
}
function DecadeTableComponent_thead_1_th_3_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 7);
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const cell_r4 = ctx.$implicit;
        i0.ɵɵpropertyInterpolate("title", cell_r4.title);
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", cell_r4.content, " ");
    }
}
function DecadeTableComponent_thead_1_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "thead")(1, "tr", 3);
        i0.ɵɵtemplate(2, DecadeTableComponent_thead_1_th_2_Template, 1, 0, "th", 4);
        i0.ɵɵtemplate(3, DecadeTableComponent_thead_1_th_3_Template, 2, 2, "th", 5);
        i0.ɵɵelementEnd()();
    }
    if (rf & 2) {
        const ctx_r0 = i0.ɵɵnextContext();
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", ctx_r0.showWeek);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngForOf", ctx_r0.headRow);
    }
}
function DecadeTableComponent_tr_3_td_1_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "td", 11)(1, "div", 12)(2, "div", 13);
        i0.ɵɵtext(3);
        i0.ɵɵelementEnd()()();
    }
    if (rf & 2) {
        const row_r5 = i0.ɵɵnextContext().$implicit;
        const ctx_r6 = i0.ɵɵnextContext();
        i0.ɵɵclassMapInterpolate1("", ctx_r6.prefixCls, "-cell-week text-center text-caption-1 font-regular relative w-[34px] h-[34px] min-w-[34px] min-h-[34px] max-w-[34px] max-h-[34px] text-neutral-1-900 dark:text-d-neutral-1-900");
        i0.ɵɵadvance(3);
        i0.ɵɵtextInterpolate1(" ", row_r5.weekNum, " ");
    }
}
function DecadeTableComponent_tr_3_td_2_ng_container_2_ng_container_2_ng_container_1_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainer(0);
    }
}
const _c0$9 = function (a0) { return { $implicit: a0 }; };
function DecadeTableComponent_tr_3_td_2_ng_container_2_ng_container_2_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵtemplate(1, DecadeTableComponent_tr_3_td_2_ng_container_2_ng_container_2_ng_container_1_Template, 1, 0, "ng-container", 18);
        i0.ɵɵelementContainerEnd();
    }
    if (rf & 2) {
        const cell_r9 = i0.ɵɵnextContext(2).$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngTemplateOutlet", cell_r9.cellRender)("ngTemplateOutletContext", i0.ɵɵpureFunction1(2, _c0$9, cell_r9.value));
    }
}
function DecadeTableComponent_tr_3_td_2_ng_container_2_ng_container_3_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵelement(1, "span", 19);
        i0.ɵɵelementContainerEnd();
    }
    if (rf & 2) {
        const cell_r9 = i0.ɵɵnextContext(2).$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("innerHTML", cell_r9.cellRender, i0.ɵɵsanitizeHtml);
    }
}
function DecadeTableComponent_tr_3_td_2_ng_container_2_ng_container_4_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵelementStart(1, "div")(2, "div", 20);
        i0.ɵɵtext(3);
        i0.ɵɵelementEnd()();
        i0.ɵɵelementContainerEnd();
    }
    if (rf & 2) {
        const cell_r9 = i0.ɵɵnextContext(2).$implicit;
        const ctx_r14 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(1);
        i0.ɵɵclassMapInterpolate1("", ctx_r14.prefixCls, "-cell-inner absolute inset-0");
        i0.ɵɵattribute("aria-selected", cell_r9.isSelected)("aria-disabled", cell_r9.isDisabled);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngClass", cell_r9.classMap);
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", cell_r9.content, " ");
    }
}
function DecadeTableComponent_tr_3_td_2_ng_container_2_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainerStart(0)(1, 15);
        i0.ɵɵtemplate(2, DecadeTableComponent_tr_3_td_2_ng_container_2_ng_container_2_Template, 2, 4, "ng-container", 16);
        i0.ɵɵtemplate(3, DecadeTableComponent_tr_3_td_2_ng_container_2_ng_container_3_Template, 2, 1, "ng-container", 16);
        i0.ɵɵtemplate(4, DecadeTableComponent_tr_3_td_2_ng_container_2_ng_container_4_Template, 4, 7, "ng-container", 17);
        i0.ɵɵelementContainerEnd()();
    }
    if (rf & 2) {
        const cell_r9 = i0.ɵɵnextContext().$implicit;
        const ctx_r10 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngSwitch", true);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngSwitchCase", ctx_r10.isTemplateRef(cell_r9.cellRender));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngSwitchCase", ctx_r10.isNonEmptyString(cell_r9.cellRender));
    }
}
function DecadeTableComponent_tr_3_td_2_ng_container_3_ng_container_2_ng_container_1_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainer(0);
    }
}
function DecadeTableComponent_tr_3_td_2_ng_container_3_ng_container_2_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵtemplate(1, DecadeTableComponent_tr_3_td_2_ng_container_3_ng_container_2_ng_container_1_Template, 1, 0, "ng-container", 18);
        i0.ɵɵelementContainerEnd();
    }
    if (rf & 2) {
        const cell_r9 = i0.ɵɵnextContext(2).$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngTemplateOutlet", cell_r9.fullCellRender)("ngTemplateOutletContext", i0.ɵɵpureFunction1(2, _c0$9, cell_r9.value));
    }
}
function DecadeTableComponent_tr_3_td_2_ng_container_3_ng_template_3_ng_container_3_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainer(0);
    }
}
function DecadeTableComponent_tr_3_td_2_ng_container_3_ng_template_3_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "div");
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(2, "div");
        i0.ɵɵtemplate(3, DecadeTableComponent_tr_3_td_2_ng_container_3_ng_template_3_ng_container_3_Template, 1, 0, "ng-container", 18);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const cell_r9 = i0.ɵɵnextContext(2).$implicit;
        const ctx_r22 = i0.ɵɵnextContext(2);
        i0.ɵɵclassMapInterpolate1("", ctx_r22.prefixCls, "-date-value");
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate(cell_r9.content);
        i0.ɵɵadvance(1);
        i0.ɵɵclassMapInterpolate1("", ctx_r22.prefixCls, "-date-content");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngTemplateOutlet", cell_r9.cellRender)("ngTemplateOutletContext", i0.ɵɵpureFunction1(9, _c0$9, cell_r9.value));
    }
}
function DecadeTableComponent_tr_3_td_2_ng_container_3_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵelementStart(1, "div");
        i0.ɵɵtemplate(2, DecadeTableComponent_tr_3_td_2_ng_container_3_ng_container_2_Template, 2, 4, "ng-container", 21);
        i0.ɵɵtemplate(3, DecadeTableComponent_tr_3_td_2_ng_container_3_ng_template_3_Template, 4, 11, "ng-template", null, 22, i0.ɵɵtemplateRefExtractor);
        i0.ɵɵelementEnd();
        i0.ɵɵelementContainerEnd();
    }
    if (rf & 2) {
        const _r21 = i0.ɵɵreference(4);
        const cell_r9 = i0.ɵɵnextContext().$implicit;
        const ctx_r11 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(1);
        i0.ɵɵclassMapInterpolate1("", ctx_r11.prefixCls, "-date tds-picker-cell-inner");
        i0.ɵɵclassProp("tds-picker-calendar-date-today", cell_r9.isToday);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", cell_r9.fullCellRender)("ngIfElse", _r21);
    }
}
function DecadeTableComponent_tr_3_td_2_Template(rf, ctx) {
    if (rf & 1) {
        const _r29 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "td", 14);
        i0.ɵɵlistener("click", function DecadeTableComponent_tr_3_td_2_Template_td_click_0_listener() { const restoredCtx = i0.ɵɵrestoreView(_r29); const cell_r9 = restoredCtx.$implicit; return cell_r9.isDisabled ? null : cell_r9.onClick(); })("mouseenter", function DecadeTableComponent_tr_3_td_2_Template_td_mouseenter_0_listener() { const restoredCtx = i0.ɵɵrestoreView(_r29); const cell_r9 = restoredCtx.$implicit; return cell_r9.onMouseEnter(); });
        i0.ɵɵelementContainerStart(1, 15);
        i0.ɵɵtemplate(2, DecadeTableComponent_tr_3_td_2_ng_container_2_Template, 5, 3, "ng-container", 16);
        i0.ɵɵtemplate(3, DecadeTableComponent_tr_3_td_2_ng_container_3_Template, 5, 7, "ng-container", 16);
        i0.ɵɵelementContainerEnd();
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const cell_r9 = ctx.$implicit;
        const ctx_r7 = i0.ɵɵnextContext(2);
        i0.ɵɵpropertyInterpolate("title", cell_r9.title);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngSwitch", ctx_r7.prefixCls);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngSwitchCase", "tds-picker");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngSwitchCase", "tds-picker-calendar");
    }
}
function DecadeTableComponent_tr_3_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "tr", 8);
        i0.ɵɵtemplate(1, DecadeTableComponent_tr_3_td_1_Template, 4, 4, "td", 9);
        i0.ɵɵtemplate(2, DecadeTableComponent_tr_3_td_2_Template, 4, 4, "td", 10);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const row_r5 = ctx.$implicit;
        const ctx_r1 = i0.ɵɵnextContext();
        i0.ɵɵproperty("ngClass", row_r5.classMap);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", row_r5.weekNum);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngForOf", row_r5.dateCells)("ngForTrackBy", ctx_r1.trackByBodyColumn);
    }
}
const MAX_ROW = 4;
const MAX_COL = 3;
class DecadeTableComponent extends AbstractTable {
    get startYear() {
        return parseInt(`${this.activeDate.getYear() / 100}`, 10) * 100;
    }
    get endYear() {
        return this.startYear + 99;
    }
    makeHeadRow() {
        return [];
    }
    makeBodyRows() {
        const decades = [];
        const currentYear = this.value && this.value.getYear();
        const startYear = this.startYear;
        const endYear = this.endYear;
        const previousYear = startYear - 10;
        let index = 0;
        for (let rowIndex = 0; rowIndex < MAX_ROW; rowIndex++) {
            const row = {
                dateCells: [],
                trackByIndex: rowIndex
            };
            for (let colIndex = 0; colIndex < MAX_COL; colIndex++) {
                const start = previousYear + index * 10;
                const end = previousYear + index * 10 + 9;
                const content = `${start}-${end}`;
                const cell = {
                    trackByIndex: colIndex,
                    value: this.activeDate.setYear(start).nativeDate,
                    content,
                    title: content,
                    isDisabled: false,
                    isSelected: currentYear >= start && currentYear <= end,
                    isLowerThanStart: end < startYear,
                    isBiggerThanEnd: start > endYear,
                    classMap: {},
                    onClick() { },
                    onMouseEnter() { }
                };
                cell.classMap = this.getClassMap(cell);
                cell.onClick = () => this.chooseDecade(start);
                index++;
                row.dateCells.push(cell);
            }
            decades.push(row);
        }
        return decades;
    }
    getClassMap(cell) {
        return {
            [`${this.prefixCls}-cell`]: true,
            [`${this.prefixCls}-cell-in-view`]: !cell.isBiggerThanEnd && !cell.isLowerThanStart,
            [`${this.prefixCls}-cell-selected`]: cell.isSelected,
            [`${this.prefixCls}-cell-disabled`]: cell.isDisabled,
            [`text-neutral-1-900 dark:text-d-neutral-1-900 cursor-pointer text-caption-1 font-regular`]: !cell.isDisabled,
        };
    }
    chooseDecade(year) {
        this.value = this.activeDate.setYear(year);
        this.valueChange.emit(this.value);
    }
}
DecadeTableComponent.ɵfac = /*@__PURE__*/ function () { let ɵDecadeTableComponent_BaseFactory; return function DecadeTableComponent_Factory(t) { return (ɵDecadeTableComponent_BaseFactory || (ɵDecadeTableComponent_BaseFactory = i0.ɵɵgetInheritedFactory(DecadeTableComponent)))(t || DecadeTableComponent); }; }();
DecadeTableComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: DecadeTableComponent, selectors: [["decade-table"]], hostAttrs: [1, "box-border", "w-full", "p-3", "flex"], exportAs: ["decadeTable"], features: [i0.ɵɵInheritDefinitionFeature], decls: 4, vars: 3, consts: [["cellspacing", "0", "role", "grid", 1, "tds-picker-content", "min-w-[238px]", "w-full"], [4, "ngIf"], ["role", "row", 3, "ngClass", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["role", "row"], ["role", "columnheader", "class", "px-3 text-caption-1 font-semibold text-neutral-1-900 dark:text-d-neutral-1-900 text-center", 4, "ngIf"], ["role", "columnheader", "class", "text-caption-1 font-semibold text-neutral-1-900 dark:text-d-neutral-1-900 text-center", 3, "title", 4, "ngFor", "ngForOf"], ["role", "columnheader", 1, "px-3", "text-caption-1", "font-semibold", "text-neutral-1-900", "dark:text-d-neutral-1-900", "text-center"], ["role", "columnheader", 1, "text-caption-1", "font-semibold", "text-neutral-1-900", "dark:text-d-neutral-1-900", "text-center", 3, "title"], ["role", "row", 3, "ngClass"], ["role", "gridcell", 3, "class", 4, "ngIf"], ["role", "gridcell", "class", "text-center text-caption-1 font-regular relative w-[34px] h-[36px] min-w-[34px] min-h-[36px] max-w-[34px] max-h-[36px] py-px", 3, "title", "click", "mouseenter", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["role", "gridcell"], [1, "absolute", "inset-0"], [1, "w-full", "flex", "items-center", "justify-center", "h-[34px]"], ["role", "gridcell", 1, "text-center", "text-caption-1", "font-regular", "relative", "w-[34px]", "h-[36px]", "min-w-[34px]", "min-h-[36px]", "max-w-[34px]", "max-h-[36px]", "py-px", 3, "title", "click", "mouseenter"], [3, "ngSwitch"], [4, "ngSwitchCase"], [4, "ngSwitchDefault"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], [3, "innerHTML"], [1, "flex", "items-center", "justify-center", "h-[34px]", "m-auto", 3, "ngClass"], [4, "ngIf", "ngIfElse"], ["defaultCell", ""]], template: function DecadeTableComponent_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelementStart(0, "table", 0);
            i0.ɵɵtemplate(1, DecadeTableComponent_thead_1_Template, 4, 2, "thead", 1);
            i0.ɵɵelementStart(2, "tbody");
            i0.ɵɵtemplate(3, DecadeTableComponent_tr_3_Template, 3, 4, "tr", 2);
            i0.ɵɵelementEnd()();
        }
        if (rf & 2) {
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngIf", ctx.headRow && ctx.headRow.length > 0);
            i0.ɵɵadvance(2);
            i0.ɵɵproperty("ngForOf", ctx.bodyRows)("ngForTrackBy", ctx.trackByBodyRow);
        }
    }, directives: [i2.NgIf, i2.NgForOf, i2.NgClass, i2.NgSwitch, i2.NgSwitchCase, i2.NgTemplateOutlet, i2.NgSwitchDefault], encapsulation: 2, changeDetection: 0 });
(function () {
    (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(DecadeTableComponent, [{
            type: Component,
            args: [{ encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, selector: 'decade-table', exportAs: 'decadeTable', host: {
                        class: "box-border w-full p-3 flex"
                    }, template: "<table class=\"tds-picker-content min-w-[238px] w-full\" cellspacing=\"0\" role=\"grid\">\r\n  <thead *ngIf=\"headRow && headRow.length > 0\">\r\n    <tr role=\"row\">\r\n      <th *ngIf=\"showWeek\" role=\"columnheader\"\r\n        class=\"px-3 text-caption-1 font-semibold text-neutral-1-900 dark:text-d-neutral-1-900 text-center\">\r\n      </th>\r\n      <th *ngFor=\"let cell of headRow\" role=\"columnheader\" title=\"{{ cell.title }}\"\r\n        class=\"text-caption-1 font-semibold text-neutral-1-900 dark:text-d-neutral-1-900 text-center\">\r\n        {{ cell.content }}\r\n      </th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let row of bodyRows; trackBy: trackByBodyRow\" [ngClass]=\"row.classMap!\"  role=\"row\">\r\n      <td *ngIf=\"row.weekNum\" role=\"gridcell\"\r\n        class=\"{{ prefixCls }}-cell-week text-center text-caption-1 font-regular relative w-[34px] h-[34px] min-w-[34px] min-h-[34px] max-w-[34px] max-h-[34px] text-neutral-1-900 dark:text-d-neutral-1-900\">\r\n        <div class=\" absolute inset-0\">\r\n          <div class=\"w-full flex items-center justify-center h-[34px] \">\r\n            {{ row.weekNum }}\r\n          </div>\r\n        </div>\r\n      </td>\r\n      <td *ngFor=\"let cell of row.dateCells; trackBy: trackByBodyColumn\" title=\"{{ cell.title }}\" role=\"gridcell\"\r\n        (click)=\"cell.isDisabled ? null : cell.onClick()\" (mouseenter)=\"cell.onMouseEnter()\"\r\n        class=\"text-center text-caption-1 font-regular relative w-[34px] h-[36px] min-w-[34px] min-h-[36px] max-w-[34px] max-h-[36px] py-px\">\r\n        <ng-container [ngSwitch]=\"prefixCls\">\r\n          <ng-container *ngSwitchCase=\"'tds-picker'\">\r\n            <ng-container [ngSwitch]=\"true\">\r\n              <ng-container *ngSwitchCase=\"isTemplateRef(cell.cellRender)\">\r\n                <!--           *ngSwitchCase not has type assertion support, the cellRender type here is TemplateRef -->\r\n                <ng-container *ngTemplateOutlet=\"$any(cell.cellRender); context: { $implicit: cell.value }\">\r\n                </ng-container>\r\n              </ng-container>\r\n              <ng-container *ngSwitchCase=\"isNonEmptyString(cell.cellRender)\">\r\n                <span [innerHTML]=\"cell.cellRender\"></span>\r\n              </ng-container>\r\n              <ng-container *ngSwitchDefault>\r\n                <div class=\"{{ prefixCls }}-cell-inner absolute inset-0\" [attr.aria-selected]=\"cell.isSelected\"\r\n                  [attr.aria-disabled]=\"cell.isDisabled\">\r\n\r\n                  <div class=\"flex items-center justify-center h-[34px] m-auto \" [ngClass]=\"cell.classMap!\">\r\n                    {{ cell.content }}\r\n                  </div>\r\n\r\n                </div>\r\n              </ng-container>\r\n            </ng-container>\r\n          </ng-container>\r\n          <ng-container *ngSwitchCase=\"'tds-picker-calendar'\">\r\n            <div class=\"{{ prefixCls }}-date tds-picker-cell-inner\"\r\n              [class.tds-picker-calendar-date-today]=\"cell.isToday\">\r\n              <ng-container *ngIf=\"cell.fullCellRender; else defaultCell\">\r\n                <ng-container *ngTemplateOutlet=\"$any(cell.fullCellRender); context: { $implicit: cell.value }\">\r\n                </ng-container>\r\n              </ng-container>\r\n              <ng-template #defaultCell>\r\n                <div class=\"{{ prefixCls }}-date-value\">{{ cell.content }}</div>\r\n                <div class=\"{{ prefixCls }}-date-content\">\r\n                  <ng-container *ngTemplateOutlet=\"$any(cell.cellRender); context: { $implicit: cell.value }\">\r\n                  </ng-container>\r\n                </div>\r\n              </ng-template>\r\n            </div>\r\n          </ng-container>\r\n        </ng-container>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>" }]
        }], null, null);
})();

function YearHeaderComponent_button_1_Template(rf, ctx) {
    if (rf & 1) {
        const _r4 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "button", 2);
        i0.ɵɵlistener("click", function YearHeaderComponent_button_1_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r4); const ctx_r3 = i0.ɵɵnextContext(); return ctx_r3.superPrevious(); });
        i0.ɵɵelement(1, "span", 6);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const ctx_r0 = i0.ɵɵnextContext();
        i0.ɵɵclassMapInterpolate1("", ctx_r0.prefixCls, "-super-prev-btn text-xl text-neutral-1-500 dark:text-d-neutral-1-500 p-1.5 flex items-center justify-center border border-transparent");
        i0.ɵɵstyleProp("visibility", ctx_r0.showSuperPreBtn ? "visible" : "hidden");
        i0.ɵɵpropertyInterpolate("title", ctx_r0.superPreviousTitle());
    }
}
function YearHeaderComponent_ng_container_5_button_1_Template(rf, ctx) {
    if (rf & 1) {
        const _r11 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "button", 9);
        i0.ɵɵlistener("click", function YearHeaderComponent_ng_container_5_button_1_Template_button_click_0_listener($event) { i0.ɵɵrestoreView(_r11); const selector_r5 = i0.ɵɵnextContext().$implicit; return selector_r5.onClick($event); });
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const selector_r5 = i0.ɵɵnextContext().$implicit;
        i0.ɵɵclassMap(selector_r5.className);
        i0.ɵɵpropertyInterpolate("title", selector_r5.title || null);
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", selector_r5.label, " \u00A0 ");
    }
}
function YearHeaderComponent_ng_container_5_div_2_ng_template_2_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵtext(0);
    }
    if (rf & 2) {
        const item_r15 = ctx.item;
        i0.ɵɵtextInterpolate1(" ", item_r15.name, " ");
    }
}
const _c0$8 = function (a0, a1) { return { "w-[85px]": a0, "flex-auto": a1 }; };
function YearHeaderComponent_ng_container_5_div_2_Template(rf, ctx) {
    if (rf & 1) {
        const _r20 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 10)(1, "tds-select", 11);
        i0.ɵɵlistener("ngModelChange", function YearHeaderComponent_ng_container_5_div_2_Template_tds_select_ngModelChange_1_listener($event) { i0.ɵɵrestoreView(_r20); const selector_r5 = i0.ɵɵnextContext().$implicit; return selector_r5.onClick($event); });
        i0.ɵɵtemplate(2, YearHeaderComponent_ng_container_5_div_2_ng_template_2_Template, 1, 1, "ng-template", 12);
        i0.ɵɵelementEnd()();
    }
    if (rf & 2) {
        const ctx_r21 = i0.ɵɵnextContext();
        const indx_r6 = ctx_r21.index;
        const selector_r5 = ctx_r21.$implicit;
        const ctx_r8 = i0.ɵɵnextContext();
        i0.ɵɵclassMap(i0.ɵɵpureFunction2(6, _c0$8, ctx_r8.selectors.length == 1, ctx_r8.selectors.length > 1 && indx_r6 == 0));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("placeholder", selector_r5.title)("ngModel", selector_r5.value)("data", selector_r5.data)("allowSearch", false);
    }
}
function YearHeaderComponent_ng_container_5_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵtemplate(1, YearHeaderComponent_ng_container_5_button_1_Template, 2, 5, "button", 7);
        i0.ɵɵtemplate(2, YearHeaderComponent_ng_container_5_div_2_Template, 3, 9, "div", 8);
        i0.ɵɵelementContainerEnd();
    }
    if (rf & 2) {
        const selector_r5 = ctx.$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", !selector_r5.data);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", selector_r5.data);
    }
}
function YearHeaderComponent_button_8_Template(rf, ctx) {
    if (rf & 1) {
        const _r23 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "button", 2);
        i0.ɵɵlistener("click", function YearHeaderComponent_button_8_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r23); const ctx_r22 = i0.ɵɵnextContext(); return ctx_r22.superNext(); });
        i0.ɵɵelement(1, "span", 13);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const ctx_r2 = i0.ɵɵnextContext();
        i0.ɵɵclassMapInterpolate1("", ctx_r2.prefixCls, "-super-next-btn text-xl text-neutral-1-500 dark:text-d-neutral-1-500 p-1.5 flex items-center justify-center border border-transparent");
        i0.ɵɵstyleProp("visibility", ctx_r2.showSuperNextBtn ? "visible" : "hidden");
        i0.ɵɵpropertyInterpolate("title", ctx_r2.superNextTitle());
    }
}
class YearHeaderComponent extends AbstractPanelHeader {
    get startYear() {
        return parseInt(`${this.value.getYear() / 10}`, 10) * 10;
    }
    get endYear() {
        return this.startYear + 9;
    }
    superPrevious() {
        this.changeValue(this.value.addYears(-10));
    }
    superNext() {
        this.changeValue(this.value.addYears(10));
    }
    getSelectors() {
        return [
            {
                className: `${this.prefixCls}-year-btn`,
                title: '',
                onClick: () => this.changeMode('decade'),
                label: `${this.startYear}-${this.endYear}`
            }
        ];
    }
}
YearHeaderComponent.ɵfac = /*@__PURE__*/ function () { let ɵYearHeaderComponent_BaseFactory; return function YearHeaderComponent_Factory(t) { return (ɵYearHeaderComponent_BaseFactory || (ɵYearHeaderComponent_BaseFactory = i0.ɵɵgetInheritedFactory(YearHeaderComponent)))(t || YearHeaderComponent); }; }();
YearHeaderComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: YearHeaderComponent, selectors: [["year-header"]], exportAs: ["yearHeader"], features: [i0.ɵɵInheritDefinitionFeature], decls: 9, vars: 19, consts: [[1, "flex", "py-2", "px-0.5", "w-full", 3, "ngClass"], ["role", "button", "tabindex", "-1", 3, "visibility", "class", "title", "click", 4, "ngIf"], ["role", "button", "tabindex", "-1", 3, "title", "click"], [1, "tdsi-arrow-left-line"], [4, "ngFor", "ngForOf"], [1, "tdsi-arrow-right-line"], [1, "tdsi-arrow-previous-fill"], ["role", "button", "type", "button", 3, "class", "title", "click", 4, "ngIf"], ["class", "px-0.5", 3, "class", 4, "ngIf"], ["role", "button", "type", "button", 3, "title", "click"], [1, "px-0.5"], ["valueField", "id", "textField", "name", 3, "placeholder", "ngModel", "data", "allowSearch", "ngModelChange"], ["tds-option-tmp", ""], [1, "tdsi-arrow-next-fill"]], template: function YearHeaderComponent_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelementStart(0, "div", 0);
            i0.ɵɵtemplate(1, YearHeaderComponent_button_1_Template, 2, 6, "button", 1);
            i0.ɵɵelementStart(2, "button", 2);
            i0.ɵɵlistener("click", function YearHeaderComponent_Template_button_click_2_listener() { return ctx.previous(); });
            i0.ɵɵelement(3, "span", 3);
            i0.ɵɵelementEnd();
            i0.ɵɵelementStart(4, "div");
            i0.ɵɵtemplate(5, YearHeaderComponent_ng_container_5_Template, 3, 2, "ng-container", 4);
            i0.ɵɵelementEnd();
            i0.ɵɵelementStart(6, "button", 2);
            i0.ɵɵlistener("click", function YearHeaderComponent_Template_button_click_6_listener() { return ctx.next(); });
            i0.ɵɵelement(7, "span", 5);
            i0.ɵɵelementEnd();
            i0.ɵɵtemplate(8, YearHeaderComponent_button_8_Template, 2, 6, "button", 1);
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            i0.ɵɵproperty("ngClass", ctx.prefixCls);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngIf", ctx.showSuperPreBtn);
            i0.ɵɵadvance(1);
            i0.ɵɵclassMapInterpolate1("", ctx.prefixCls, "-prev-btn p-1.5 text-xl text-neutral-1-500 dark:text-d-neutral-1-500 flex items-center justify-center border border-transparent");
            i0.ɵɵstyleProp("visibility", ctx.showPreBtn ? "visible" : "hidden");
            i0.ɵɵpropertyInterpolate("title", ctx.previousTitle());
            i0.ɵɵadvance(2);
            i0.ɵɵclassMapInterpolate1("", ctx.prefixCls, "-view flex-auto flex items-center justify-center font-semibold text-title-1 text-neutral-1-900 dark:text-d-neutral-1-900");
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngForOf", ctx.selectors);
            i0.ɵɵadvance(1);
            i0.ɵɵclassMapInterpolate1("", ctx.prefixCls, "-next-btn text-xl text-neutral-1-500 dark:text-d-neutral-1-500 p-1.5 flex items-center justify-center border border-transparent");
            i0.ɵɵstyleProp("visibility", ctx.showNextBtn ? "visible" : "hidden");
            i0.ɵɵpropertyInterpolate("title", ctx.nextTitle());
            i0.ɵɵadvance(2);
            i0.ɵɵproperty("ngIf", ctx.showSuperNextBtn);
        }
    }, directives: [i2.NgClass, i2.NgIf, i2.NgForOf, i2$1.TDSSelect, i7.NgControlStatus, i7.NgModel, i2$1.TDSOptionTemplateDirective], encapsulation: 2, changeDetection: 0 });
(function () {
    (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(YearHeaderComponent, [{
            type: Component,
            args: [{ encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, selector: 'year-header', exportAs: 'yearHeader', template: "<div class=\"flex py-2 px-0.5 w-full\" [ngClass]=\"prefixCls\">\r\n  <button *ngIf=\"showSuperPreBtn\" [style.visibility]=\"showSuperPreBtn ? 'visible' : 'hidden'\"\r\n    class=\"{{ prefixCls }}-super-prev-btn text-xl text-neutral-1-500 dark:text-d-neutral-1-500 p-1.5 flex items-center justify-center border border-transparent\"\r\n    role=\"button\" tabindex=\"-1\" title=\"{{ superPreviousTitle() }}\" (click)=\"superPrevious()\">\r\n    <span class=\"tdsi-arrow-previous-fill\"></span>\r\n  </button>\r\n  <button [style.visibility]=\"showPreBtn ? 'visible' : 'hidden'\"\r\n    class=\"{{ prefixCls }}-prev-btn p-1.5 text-xl text-neutral-1-500 dark:text-d-neutral-1-500 flex items-center justify-center border border-transparent\"\r\n    role=\"button\" title=\"{{ previousTitle() }}\" tabindex=\"-1\" (click)=\"previous()\">\r\n    <span class=\"tdsi-arrow-left-line\"></span>\r\n  </button>\r\n\r\n  <div\r\n    class=\"{{ prefixCls }}-view flex-auto flex items-center justify-center font-semibold text-title-1 text-neutral-1-900 dark:text-d-neutral-1-900\">\r\n    <ng-container *ngFor=\"let selector of selectors; let indx= index\">\r\n      <button *ngIf=\"!selector.data\" class=\"{{ selector.className }}\" role=\"button\" type=\"button\"\r\n        title=\"{{ selector.title || null }}\" (click)=\"selector.onClick($event)\">\r\n        {{ selector.label }} &nbsp;\r\n      </button>\r\n      <div *ngIf=\"selector.data\" class=\"px-0.5\"\r\n        [class]=\"{'w-[85px]':selectors.length == 1,'flex-auto':selectors.length > 1 && indx == 0}\">\r\n        <tds-select valueField=\"id\" textField=\"name\" [placeholder]='selector.title!' [ngModel]=\"selector.value\"\r\n          (ngModelChange)=\"selector.onClick($event)\" [data]=\"selector.data\" [allowSearch]=\"false\" >\r\n          <ng-template tds-option-tmp let-label='label' let-item=\"item\" let-value='value' let-selected=\"selected\">\r\n            {{item.name}}\r\n          </ng-template>\r\n        </tds-select>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <button [style.visibility]=\"showNextBtn ? 'visible' : 'hidden'\"\r\n    class=\"{{ prefixCls }}-next-btn text-xl text-neutral-1-500 dark:text-d-neutral-1-500 p-1.5 flex items-center justify-center border border-transparent\"\r\n    role=\"button\" tabindex=\"-1\" title=\"{{ nextTitle() }}\" (click)=\"next()\">\r\n    <span class=\"tdsi-arrow-right-line\"></span>\r\n  </button>\r\n  <button *ngIf=\"showSuperNextBtn\" [style.visibility]=\"showSuperNextBtn ? 'visible' : 'hidden'\"\r\n    class=\"{{ prefixCls }}-super-next-btn text-xl text-neutral-1-500 dark:text-d-neutral-1-500 p-1.5 flex items-center justify-center border border-transparent\"\r\n    role=\"button\" tabindex=\"-1\" title=\"{{ superNextTitle() }}\" (click)=\"superNext()\">\r\n    <span class=\"tdsi-arrow-next-fill\"></span>\r\n  </button>\r\n</div>" }]
        }], null, null);
})();

function YearTableComponent_thead_1_th_2_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelement(0, "th", 6);
    }
}
function YearTableComponent_thead_1_th_3_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 7);
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const cell_r4 = ctx.$implicit;
        i0.ɵɵpropertyInterpolate("title", cell_r4.title);
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", cell_r4.content, " ");
    }
}
function YearTableComponent_thead_1_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "thead")(1, "tr", 3);
        i0.ɵɵtemplate(2, YearTableComponent_thead_1_th_2_Template, 1, 0, "th", 4);
        i0.ɵɵtemplate(3, YearTableComponent_thead_1_th_3_Template, 2, 2, "th", 5);
        i0.ɵɵelementEnd()();
    }
    if (rf & 2) {
        const ctx_r0 = i0.ɵɵnextContext();
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", ctx_r0.showWeek);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngForOf", ctx_r0.headRow);
    }
}
function YearTableComponent_tr_3_td_1_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "td", 11)(1, "div", 12)(2, "div", 13);
        i0.ɵɵtext(3);
        i0.ɵɵelementEnd()()();
    }
    if (rf & 2) {
        const row_r5 = i0.ɵɵnextContext().$implicit;
        const ctx_r6 = i0.ɵɵnextContext();
        i0.ɵɵclassMapInterpolate1("", ctx_r6.prefixCls, "-cell-week text-center text-caption-1 font-regular relative w-[34px] h-[34px] min-w-[34px] min-h-[34px] max-w-[34px] max-h-[34px] text-neutral-1-900 dark:text-d-neutral-1-900");
        i0.ɵɵadvance(3);
        i0.ɵɵtextInterpolate1(" ", row_r5.weekNum, " ");
    }
}
function YearTableComponent_tr_3_td_2_ng_container_2_ng_container_2_ng_container_1_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainer(0);
    }
}
const _c0$7 = function (a0) { return { $implicit: a0 }; };
function YearTableComponent_tr_3_td_2_ng_container_2_ng_container_2_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵtemplate(1, YearTableComponent_tr_3_td_2_ng_container_2_ng_container_2_ng_container_1_Template, 1, 0, "ng-container", 18);
        i0.ɵɵelementContainerEnd();
    }
    if (rf & 2) {
        const cell_r9 = i0.ɵɵnextContext(2).$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngTemplateOutlet", cell_r9.cellRender)("ngTemplateOutletContext", i0.ɵɵpureFunction1(2, _c0$7, cell_r9.value));
    }
}
function YearTableComponent_tr_3_td_2_ng_container_2_ng_container_3_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵelement(1, "span", 19);
        i0.ɵɵelementContainerEnd();
    }
    if (rf & 2) {
        const cell_r9 = i0.ɵɵnextContext(2).$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("innerHTML", cell_r9.cellRender, i0.ɵɵsanitizeHtml);
    }
}
function YearTableComponent_tr_3_td_2_ng_container_2_ng_container_4_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵelementStart(1, "div")(2, "div", 20);
        i0.ɵɵtext(3);
        i0.ɵɵelementEnd()();
        i0.ɵɵelementContainerEnd();
    }
    if (rf & 2) {
        const cell_r9 = i0.ɵɵnextContext(2).$implicit;
        const ctx_r14 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(1);
        i0.ɵɵclassMapInterpolate1("", ctx_r14.prefixCls, "-cell-inner absolute inset-0");
        i0.ɵɵattribute("aria-selected", cell_r9.isSelected)("aria-disabled", cell_r9.isDisabled);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngClass", cell_r9.classMap);
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", cell_r9.content, " ");
    }
}
function YearTableComponent_tr_3_td_2_ng_container_2_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainerStart(0)(1, 15);
        i0.ɵɵtemplate(2, YearTableComponent_tr_3_td_2_ng_container_2_ng_container_2_Template, 2, 4, "ng-container", 16);
        i0.ɵɵtemplate(3, YearTableComponent_tr_3_td_2_ng_container_2_ng_container_3_Template, 2, 1, "ng-container", 16);
        i0.ɵɵtemplate(4, YearTableComponent_tr_3_td_2_ng_container_2_ng_container_4_Template, 4, 7, "ng-container", 17);
        i0.ɵɵelementContainerEnd()();
    }
    if (rf & 2) {
        const cell_r9 = i0.ɵɵnextContext().$implicit;
        const ctx_r10 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngSwitch", true);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngSwitchCase", ctx_r10.isTemplateRef(cell_r9.cellRender));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngSwitchCase", ctx_r10.isNonEmptyString(cell_r9.cellRender));
    }
}
function YearTableComponent_tr_3_td_2_ng_container_3_ng_container_2_ng_container_1_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainer(0);
    }
}
function YearTableComponent_tr_3_td_2_ng_container_3_ng_container_2_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵtemplate(1, YearTableComponent_tr_3_td_2_ng_container_3_ng_container_2_ng_container_1_Template, 1, 0, "ng-container", 18);
        i0.ɵɵelementContainerEnd();
    }
    if (rf & 2) {
        const cell_r9 = i0.ɵɵnextContext(2).$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngTemplateOutlet", cell_r9.fullCellRender)("ngTemplateOutletContext", i0.ɵɵpureFunction1(2, _c0$7, cell_r9.value));
    }
}
function YearTableComponent_tr_3_td_2_ng_container_3_ng_template_3_ng_container_3_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainer(0);
    }
}
function YearTableComponent_tr_3_td_2_ng_container_3_ng_template_3_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "div");
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(2, "div");
        i0.ɵɵtemplate(3, YearTableComponent_tr_3_td_2_ng_container_3_ng_template_3_ng_container_3_Template, 1, 0, "ng-container", 18);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const cell_r9 = i0.ɵɵnextContext(2).$implicit;
        const ctx_r22 = i0.ɵɵnextContext(2);
        i0.ɵɵclassMapInterpolate1("", ctx_r22.prefixCls, "-date-value");
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate(cell_r9.content);
        i0.ɵɵadvance(1);
        i0.ɵɵclassMapInterpolate1("", ctx_r22.prefixCls, "-date-content");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngTemplateOutlet", cell_r9.cellRender)("ngTemplateOutletContext", i0.ɵɵpureFunction1(9, _c0$7, cell_r9.value));
    }
}
function YearTableComponent_tr_3_td_2_ng_container_3_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵelementStart(1, "div");
        i0.ɵɵtemplate(2, YearTableComponent_tr_3_td_2_ng_container_3_ng_container_2_Template, 2, 4, "ng-container", 21);
        i0.ɵɵtemplate(3, YearTableComponent_tr_3_td_2_ng_container_3_ng_template_3_Template, 4, 11, "ng-template", null, 22, i0.ɵɵtemplateRefExtractor);
        i0.ɵɵelementEnd();
        i0.ɵɵelementContainerEnd();
    }
    if (rf & 2) {
        const _r21 = i0.ɵɵreference(4);
        const cell_r9 = i0.ɵɵnextContext().$implicit;
        const ctx_r11 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(1);
        i0.ɵɵclassMapInterpolate1("", ctx_r11.prefixCls, "-date tds-picker-cell-inner");
        i0.ɵɵclassProp("tds-picker-calendar-date-today", cell_r9.isToday);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", cell_r9.fullCellRender)("ngIfElse", _r21);
    }
}
function YearTableComponent_tr_3_td_2_Template(rf, ctx) {
    if (rf & 1) {
        const _r29 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "td", 14);
        i0.ɵɵlistener("click", function YearTableComponent_tr_3_td_2_Template_td_click_0_listener() { const restoredCtx = i0.ɵɵrestoreView(_r29); const cell_r9 = restoredCtx.$implicit; return cell_r9.isDisabled ? null : cell_r9.onClick(); })("mouseenter", function YearTableComponent_tr_3_td_2_Template_td_mouseenter_0_listener() { const restoredCtx = i0.ɵɵrestoreView(_r29); const cell_r9 = restoredCtx.$implicit; return cell_r9.onMouseEnter(); });
        i0.ɵɵelementContainerStart(1, 15);
        i0.ɵɵtemplate(2, YearTableComponent_tr_3_td_2_ng_container_2_Template, 5, 3, "ng-container", 16);
        i0.ɵɵtemplate(3, YearTableComponent_tr_3_td_2_ng_container_3_Template, 5, 7, "ng-container", 16);
        i0.ɵɵelementContainerEnd();
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const cell_r9 = ctx.$implicit;
        const ctx_r7 = i0.ɵɵnextContext(2);
        i0.ɵɵpropertyInterpolate("title", cell_r9.title);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngSwitch", ctx_r7.prefixCls);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngSwitchCase", "tds-picker");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngSwitchCase", "tds-picker-calendar");
    }
}
function YearTableComponent_tr_3_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "tr", 8);
        i0.ɵɵtemplate(1, YearTableComponent_tr_3_td_1_Template, 4, 4, "td", 9);
        i0.ɵɵtemplate(2, YearTableComponent_tr_3_td_2_Template, 4, 4, "td", 10);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const row_r5 = ctx.$implicit;
        const ctx_r1 = i0.ɵɵnextContext();
        i0.ɵɵproperty("ngClass", row_r5.classMap);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", row_r5.weekNum);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngForOf", row_r5.dateCells)("ngForTrackBy", ctx_r1.trackByBodyColumn);
    }
}
class YearTableComponent extends AbstractTable {
    constructor(dateHelper) {
        super();
        this.dateHelper = dateHelper;
        this.MAX_ROW = 4;
        this.MAX_COL = 3;
    }
    makeHeadRow() {
        return [];
    }
    makeBodyRows() {
        const currentYear = this.activeDate && this.activeDate.getYear();
        const startYear = parseInt(`${currentYear / 10}`, 10) * 10;
        const endYear = startYear + 9;
        const previousYear = startYear - 1;
        const years = [];
        let yearValue = 0;
        for (let rowIndex = 0; rowIndex < this.MAX_ROW; rowIndex++) {
            const row = {
                dateCells: [],
                trackByIndex: rowIndex
            };
            for (let colIndex = 0; colIndex < this.MAX_COL; colIndex++) {
                const yearNum = previousYear + yearValue;
                const year = this.activeDate.setYear(yearNum);
                const content = this.dateHelper.format(year.nativeDate, 'yyyy');
                const isDisabled = this.isDisabledYear(year);
                const cell = {
                    trackByIndex: colIndex,
                    value: year.nativeDate,
                    isDisabled,
                    isSameDecade: yearNum >= startYear && yearNum <= endYear,
                    isSelected: yearNum === (this.value && this.value.getYear()),
                    content,
                    title: content,
                    classMap: {},
                    isLastCellInPanel: year.getYear() === endYear,
                    isFirstCellInPanel: year.getYear() === startYear,
                    cellRender: valueFunctionProp(this.cellRender, year),
                    fullCellRender: valueFunctionProp(this.fullCellRender, year),
                    onClick: () => this.chooseYear(cell.value.getFullYear()),
                    onMouseEnter: () => this.cellHover.emit(year)
                };
                this.addCellProperty(cell, year);
                row.dateCells.push(cell);
                yearValue++;
            }
            years.push(row);
        }
        return years;
    }
    getClassMap(cell) {
        return Object.assign(Object.assign({}, super.getClassMap(cell)), { [`tds-picker-cell-in-view`]: !!cell.isSameDecade, [`p-3 text-neutral-1-900 dark:text-d-neutral-1-900 cursor-pointer text-caption-1 font-regular`]: true });
    }
    isDisabledYear(year) {
        if (!this.disabledDate) {
            return false;
        }
        const firstOfMonth = year.setMonth(0).setDate(1);
        for (let date = firstOfMonth; date.getYear() === year.getYear(); date = date.addDays(1)) {
            if (!this.disabledDate(date.nativeDate)) {
                return false;
            }
        }
        return true;
    }
    addCellProperty(cell, year) {
        if (this.hasRangeValue()) {
            const [startHover, endHover] = this.hoverValue;
            const [startSelected, endSelected] = this.selectedValue;
            // Selected
            if (startSelected === null || startSelected === void 0 ? void 0 : startSelected.isSameYear(year)) {
                cell.isSelectedStart = true;
                cell.isSelected = true;
            }
            if (endSelected === null || endSelected === void 0 ? void 0 : endSelected.isSameYear(year)) {
                cell.isSelectedEnd = true;
                cell.isSelected = true;
            }
            if (startHover && endHover) {
                cell.isHoverStart = startHover.isSameYear(year);
                cell.isHoverEnd = endHover.isSameYear(year);
                cell.isInHoverRange = startHover.isBeforeYear(year) && year.isBeforeYear(endHover);
            }
            cell.isStartSingle = startSelected && !endSelected;
            cell.isEndSingle = (!startSelected && endSelected) ? true : false;
            cell.isInSelectedRange = (startSelected === null || startSelected === void 0 ? void 0 : startSelected.isBeforeYear(year)) && (year === null || year === void 0 ? void 0 : year.isBeforeYear(endSelected));
            cell.isRangeStartNearHover = startSelected && cell.isInHoverRange;
            cell.isRangeEndNearHover = endSelected && cell.isInHoverRange;
        }
        else if (year.isSameYear(this.value)) {
            cell.isSelected = true;
        }
        cell.classMap = this.getClassMap(cell);
    }
    chooseYear(year) {
        this.value = this.activeDate.setYear(year);
        this.valueChange.emit(this.value);
        this.render();
    }
}
YearTableComponent.ɵfac = function YearTableComponent_Factory(t) { return new (t || YearTableComponent)(i0.ɵɵdirectiveInject(i1.DateHelperService)); };
YearTableComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: YearTableComponent, selectors: [["year-table"]], hostAttrs: [1, "box-border", "w-full", "p-3", "flex"], exportAs: ["yearTable"], features: [i0.ɵɵInheritDefinitionFeature], decls: 4, vars: 3, consts: [["cellspacing", "0", "role", "grid", 1, "tds-picker-content", "min-w-[238px]", "w-full"], [4, "ngIf"], ["role", "row", 3, "ngClass", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["role", "row"], ["role", "columnheader", "class", "px-3 text-caption-1 font-semibold text-neutral-1-900 dark:text-d-neutral-1-900 text-center", 4, "ngIf"], ["role", "columnheader", "class", "text-caption-1 font-semibold text-neutral-1-900 dark:text-d-neutral-1-900 text-center", 3, "title", 4, "ngFor", "ngForOf"], ["role", "columnheader", 1, "px-3", "text-caption-1", "font-semibold", "text-neutral-1-900", "dark:text-d-neutral-1-900", "text-center"], ["role", "columnheader", 1, "text-caption-1", "font-semibold", "text-neutral-1-900", "dark:text-d-neutral-1-900", "text-center", 3, "title"], ["role", "row", 3, "ngClass"], ["role", "gridcell", 3, "class", 4, "ngIf"], ["role", "gridcell", "class", "text-center text-caption-1 font-regular relative w-[34px] h-[36px] min-w-[34px] min-h-[36px] max-w-[34px] max-h-[36px] py-px", 3, "title", "click", "mouseenter", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["role", "gridcell"], [1, "absolute", "inset-0"], [1, "w-full", "flex", "items-center", "justify-center", "h-[34px]"], ["role", "gridcell", 1, "text-center", "text-caption-1", "font-regular", "relative", "w-[34px]", "h-[36px]", "min-w-[34px]", "min-h-[36px]", "max-w-[34px]", "max-h-[36px]", "py-px", 3, "title", "click", "mouseenter"], [3, "ngSwitch"], [4, "ngSwitchCase"], [4, "ngSwitchDefault"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], [3, "innerHTML"], [1, "flex", "items-center", "justify-center", "h-[34px]", "m-auto", 3, "ngClass"], [4, "ngIf", "ngIfElse"], ["defaultCell", ""]], template: function YearTableComponent_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelementStart(0, "table", 0);
            i0.ɵɵtemplate(1, YearTableComponent_thead_1_Template, 4, 2, "thead", 1);
            i0.ɵɵelementStart(2, "tbody");
            i0.ɵɵtemplate(3, YearTableComponent_tr_3_Template, 3, 4, "tr", 2);
            i0.ɵɵelementEnd()();
        }
        if (rf & 2) {
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngIf", ctx.headRow && ctx.headRow.length > 0);
            i0.ɵɵadvance(2);
            i0.ɵɵproperty("ngForOf", ctx.bodyRows)("ngForTrackBy", ctx.trackByBodyRow);
        }
    }, directives: [i2.NgIf, i2.NgForOf, i2.NgClass, i2.NgSwitch, i2.NgSwitchCase, i2.NgTemplateOutlet, i2.NgSwitchDefault], encapsulation: 2, changeDetection: 0 });
(function () {
    (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(YearTableComponent, [{
            type: Component,
            args: [{ encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, selector: 'year-table', exportAs: 'yearTable', host: {
                        class: "box-border w-full p-3 flex"
                    }, template: "<table class=\"tds-picker-content min-w-[238px] w-full\" cellspacing=\"0\" role=\"grid\">\r\n  <thead *ngIf=\"headRow && headRow.length > 0\">\r\n    <tr role=\"row\">\r\n      <th *ngIf=\"showWeek\" role=\"columnheader\"\r\n        class=\"px-3 text-caption-1 font-semibold text-neutral-1-900 dark:text-d-neutral-1-900 text-center\">\r\n      </th>\r\n      <th *ngFor=\"let cell of headRow\" role=\"columnheader\" title=\"{{ cell.title }}\"\r\n        class=\"text-caption-1 font-semibold text-neutral-1-900 dark:text-d-neutral-1-900 text-center\">\r\n        {{ cell.content }}\r\n      </th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let row of bodyRows; trackBy: trackByBodyRow\" [ngClass]=\"row.classMap!\"  role=\"row\">\r\n      <td *ngIf=\"row.weekNum\" role=\"gridcell\"\r\n        class=\"{{ prefixCls }}-cell-week text-center text-caption-1 font-regular relative w-[34px] h-[34px] min-w-[34px] min-h-[34px] max-w-[34px] max-h-[34px] text-neutral-1-900 dark:text-d-neutral-1-900\">\r\n        <div class=\" absolute inset-0\">\r\n          <div class=\"w-full flex items-center justify-center h-[34px] \">\r\n            {{ row.weekNum }}\r\n          </div>\r\n        </div>\r\n      </td>\r\n      <td *ngFor=\"let cell of row.dateCells; trackBy: trackByBodyColumn\" title=\"{{ cell.title }}\" role=\"gridcell\"\r\n        (click)=\"cell.isDisabled ? null : cell.onClick()\" (mouseenter)=\"cell.onMouseEnter()\"\r\n        class=\"text-center text-caption-1 font-regular relative w-[34px] h-[36px] min-w-[34px] min-h-[36px] max-w-[34px] max-h-[36px] py-px\">\r\n        <ng-container [ngSwitch]=\"prefixCls\">\r\n          <ng-container *ngSwitchCase=\"'tds-picker'\">\r\n            <ng-container [ngSwitch]=\"true\">\r\n              <ng-container *ngSwitchCase=\"isTemplateRef(cell.cellRender)\">\r\n                <!--           *ngSwitchCase not has type assertion support, the cellRender type here is TemplateRef -->\r\n                <ng-container *ngTemplateOutlet=\"$any(cell.cellRender); context: { $implicit: cell.value }\">\r\n                </ng-container>\r\n              </ng-container>\r\n              <ng-container *ngSwitchCase=\"isNonEmptyString(cell.cellRender)\">\r\n                <span [innerHTML]=\"cell.cellRender\"></span>\r\n              </ng-container>\r\n              <ng-container *ngSwitchDefault>\r\n                <div class=\"{{ prefixCls }}-cell-inner absolute inset-0\" [attr.aria-selected]=\"cell.isSelected\"\r\n                  [attr.aria-disabled]=\"cell.isDisabled\">\r\n\r\n                  <div class=\"flex items-center justify-center h-[34px] m-auto \" [ngClass]=\"cell.classMap!\">\r\n                    {{ cell.content }}\r\n                  </div>\r\n\r\n                </div>\r\n              </ng-container>\r\n            </ng-container>\r\n          </ng-container>\r\n          <ng-container *ngSwitchCase=\"'tds-picker-calendar'\">\r\n            <div class=\"{{ prefixCls }}-date tds-picker-cell-inner\"\r\n              [class.tds-picker-calendar-date-today]=\"cell.isToday\">\r\n              <ng-container *ngIf=\"cell.fullCellRender; else defaultCell\">\r\n                <ng-container *ngTemplateOutlet=\"$any(cell.fullCellRender); context: { $implicit: cell.value }\">\r\n                </ng-container>\r\n              </ng-container>\r\n              <ng-template #defaultCell>\r\n                <div class=\"{{ prefixCls }}-date-value\">{{ cell.content }}</div>\r\n                <div class=\"{{ prefixCls }}-date-content\">\r\n                  <ng-container *ngTemplateOutlet=\"$any(cell.cellRender); context: { $implicit: cell.value }\">\r\n                  </ng-container>\r\n                </div>\r\n              </ng-template>\r\n            </div>\r\n          </ng-container>\r\n        </ng-container>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>" }]
        }], function () { return [{ type: i1.DateHelperService }]; }, null);
})();

function MonthHeaderComponent_button_1_Template(rf, ctx) {
    if (rf & 1) {
        const _r4 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "button", 2);
        i0.ɵɵlistener("click", function MonthHeaderComponent_button_1_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r4); const ctx_r3 = i0.ɵɵnextContext(); return ctx_r3.superPrevious(); });
        i0.ɵɵelement(1, "span", 6);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const ctx_r0 = i0.ɵɵnextContext();
        i0.ɵɵclassMapInterpolate1("", ctx_r0.prefixCls, "-super-prev-btn text-xl text-neutral-1-500 dark:text-d-neutral-1-500 p-1.5 flex items-center justify-center border border-transparent");
        i0.ɵɵstyleProp("visibility", ctx_r0.showSuperPreBtn ? "visible" : "hidden");
        i0.ɵɵpropertyInterpolate("title", ctx_r0.superPreviousTitle());
    }
}
function MonthHeaderComponent_ng_container_5_button_1_Template(rf, ctx) {
    if (rf & 1) {
        const _r11 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "button", 9);
        i0.ɵɵlistener("click", function MonthHeaderComponent_ng_container_5_button_1_Template_button_click_0_listener($event) { i0.ɵɵrestoreView(_r11); const selector_r5 = i0.ɵɵnextContext().$implicit; return selector_r5.onClick($event); });
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const selector_r5 = i0.ɵɵnextContext().$implicit;
        i0.ɵɵclassMap(selector_r5.className);
        i0.ɵɵpropertyInterpolate("title", selector_r5.title || null);
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", selector_r5.label, " \u00A0 ");
    }
}
function MonthHeaderComponent_ng_container_5_div_2_ng_template_2_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵtext(0);
    }
    if (rf & 2) {
        const item_r15 = ctx.item;
        i0.ɵɵtextInterpolate1(" ", item_r15.name, " ");
    }
}
const _c0$6 = function (a0, a1) { return { "w-[85px]": a0, "flex-auto": a1 }; };
function MonthHeaderComponent_ng_container_5_div_2_Template(rf, ctx) {
    if (rf & 1) {
        const _r20 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 10)(1, "tds-select", 11);
        i0.ɵɵlistener("ngModelChange", function MonthHeaderComponent_ng_container_5_div_2_Template_tds_select_ngModelChange_1_listener($event) { i0.ɵɵrestoreView(_r20); const selector_r5 = i0.ɵɵnextContext().$implicit; return selector_r5.onClick($event); });
        i0.ɵɵtemplate(2, MonthHeaderComponent_ng_container_5_div_2_ng_template_2_Template, 1, 1, "ng-template", 12);
        i0.ɵɵelementEnd()();
    }
    if (rf & 2) {
        const ctx_r21 = i0.ɵɵnextContext();
        const indx_r6 = ctx_r21.index;
        const selector_r5 = ctx_r21.$implicit;
        const ctx_r8 = i0.ɵɵnextContext();
        i0.ɵɵclassMap(i0.ɵɵpureFunction2(6, _c0$6, ctx_r8.selectors.length == 1, ctx_r8.selectors.length > 1 && indx_r6 == 0));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("placeholder", selector_r5.title)("ngModel", selector_r5.value)("data", selector_r5.data)("allowSearch", false);
    }
}
function MonthHeaderComponent_ng_container_5_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵtemplate(1, MonthHeaderComponent_ng_container_5_button_1_Template, 2, 5, "button", 7);
        i0.ɵɵtemplate(2, MonthHeaderComponent_ng_container_5_div_2_Template, 3, 9, "div", 8);
        i0.ɵɵelementContainerEnd();
    }
    if (rf & 2) {
        const selector_r5 = ctx.$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", !selector_r5.data);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", selector_r5.data);
    }
}
function MonthHeaderComponent_button_8_Template(rf, ctx) {
    if (rf & 1) {
        const _r23 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "button", 2);
        i0.ɵɵlistener("click", function MonthHeaderComponent_button_8_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r23); const ctx_r22 = i0.ɵɵnextContext(); return ctx_r22.superNext(); });
        i0.ɵɵelement(1, "span", 13);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const ctx_r2 = i0.ɵɵnextContext();
        i0.ɵɵclassMapInterpolate1("", ctx_r2.prefixCls, "-super-next-btn text-xl text-neutral-1-500 dark:text-d-neutral-1-500 p-1.5 flex items-center justify-center border border-transparent");
        i0.ɵɵstyleProp("visibility", ctx_r2.showSuperNextBtn ? "visible" : "hidden");
        i0.ɵɵpropertyInterpolate("title", ctx_r2.superNextTitle());
    }
}
class MonthHeaderComponent extends AbstractPanelHeader {
    constructor(dateHelper) {
        super();
        this.dateHelper = dateHelper;
    }
    getSelectors() {
        var _a;
        let that = this;
        let year = this.getYears();
        const labelyear = this.dateHelper.format(this.value.nativeDate, transCompatFormat(this.locale.yearFormat));
        const valueYear = (_a = year.find(f => { return f.name === labelyear; })) === null || _a === void 0 ? void 0 : _a.id;
        return [
            {
                className: `${this.prefixCls}-year-btn`,
                title: this.locale.yearSelect,
                onClick: (data) => {
                    that.changeValue(that.value.setYear(data)); // this.changeMode('year')
                },
                label: labelyear,
                value: valueYear,
                data: year,
            },
        ];
    }
    getYears() {
        let result = [];
        const activeDate = new CandyDate(this.value.nativeDate);
        for (let year = 50; year > 0; year--) {
            result.push({ id: activeDate.getYear() - year, name: `${activeDate.getYear() - year}` });
        }
        result.push({ id: activeDate.getYear(), name: `${activeDate.getYear()}` });
        for (let year = 1; year <= 50; year++) {
            result.push({ id: activeDate.getYear() + year, name: `${activeDate.getYear() + year}` });
        }
        return result;
    }
}
MonthHeaderComponent.ɵfac = function MonthHeaderComponent_Factory(t) { return new (t || MonthHeaderComponent)(i0.ɵɵdirectiveInject(i1.DateHelperService)); };
MonthHeaderComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: MonthHeaderComponent, selectors: [["month-header"]], exportAs: ["monthHeader"], features: [i0.ɵɵInheritDefinitionFeature], decls: 9, vars: 19, consts: [[1, "flex", "py-2", "px-0.5", "w-full", 3, "ngClass"], ["role", "button", "tabindex", "-1", 3, "visibility", "class", "title", "click", 4, "ngIf"], ["role", "button", "tabindex", "-1", 3, "title", "click"], [1, "tdsi-arrow-left-line"], [4, "ngFor", "ngForOf"], [1, "tdsi-arrow-right-line"], [1, "tdsi-arrow-previous-fill"], ["role", "button", "type", "button", 3, "class", "title", "click", 4, "ngIf"], ["class", "px-0.5", 3, "class", 4, "ngIf"], ["role", "button", "type", "button", 3, "title", "click"], [1, "px-0.5"], ["valueField", "id", "textField", "name", 3, "placeholder", "ngModel", "data", "allowSearch", "ngModelChange"], ["tds-option-tmp", ""], [1, "tdsi-arrow-next-fill"]], template: function MonthHeaderComponent_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelementStart(0, "div", 0);
            i0.ɵɵtemplate(1, MonthHeaderComponent_button_1_Template, 2, 6, "button", 1);
            i0.ɵɵelementStart(2, "button", 2);
            i0.ɵɵlistener("click", function MonthHeaderComponent_Template_button_click_2_listener() { return ctx.previous(); });
            i0.ɵɵelement(3, "span", 3);
            i0.ɵɵelementEnd();
            i0.ɵɵelementStart(4, "div");
            i0.ɵɵtemplate(5, MonthHeaderComponent_ng_container_5_Template, 3, 2, "ng-container", 4);
            i0.ɵɵelementEnd();
            i0.ɵɵelementStart(6, "button", 2);
            i0.ɵɵlistener("click", function MonthHeaderComponent_Template_button_click_6_listener() { return ctx.next(); });
            i0.ɵɵelement(7, "span", 5);
            i0.ɵɵelementEnd();
            i0.ɵɵtemplate(8, MonthHeaderComponent_button_8_Template, 2, 6, "button", 1);
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            i0.ɵɵproperty("ngClass", ctx.prefixCls);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngIf", ctx.showSuperPreBtn);
            i0.ɵɵadvance(1);
            i0.ɵɵclassMapInterpolate1("", ctx.prefixCls, "-prev-btn p-1.5 text-xl text-neutral-1-500 dark:text-d-neutral-1-500 flex items-center justify-center border border-transparent");
            i0.ɵɵstyleProp("visibility", ctx.showPreBtn ? "visible" : "hidden");
            i0.ɵɵpropertyInterpolate("title", ctx.previousTitle());
            i0.ɵɵadvance(2);
            i0.ɵɵclassMapInterpolate1("", ctx.prefixCls, "-view flex-auto flex items-center justify-center font-semibold text-title-1 text-neutral-1-900 dark:text-d-neutral-1-900");
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngForOf", ctx.selectors);
            i0.ɵɵadvance(1);
            i0.ɵɵclassMapInterpolate1("", ctx.prefixCls, "-next-btn text-xl text-neutral-1-500 dark:text-d-neutral-1-500 p-1.5 flex items-center justify-center border border-transparent");
            i0.ɵɵstyleProp("visibility", ctx.showNextBtn ? "visible" : "hidden");
            i0.ɵɵpropertyInterpolate("title", ctx.nextTitle());
            i0.ɵɵadvance(2);
            i0.ɵɵproperty("ngIf", ctx.showSuperNextBtn);
        }
    }, directives: [i2.NgClass, i2.NgIf, i2.NgForOf, i2$1.TDSSelect, i7.NgControlStatus, i7.NgModel, i2$1.TDSOptionTemplateDirective], encapsulation: 2, changeDetection: 0 });
(function () {
    (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(MonthHeaderComponent, [{
            type: Component,
            args: [{ encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, selector: 'month-header', exportAs: 'monthHeader', template: "<div class=\"flex py-2 px-0.5 w-full\" [ngClass]=\"prefixCls\">\r\n  <button *ngIf=\"showSuperPreBtn\" [style.visibility]=\"showSuperPreBtn ? 'visible' : 'hidden'\"\r\n    class=\"{{ prefixCls }}-super-prev-btn text-xl text-neutral-1-500 dark:text-d-neutral-1-500 p-1.5 flex items-center justify-center border border-transparent\"\r\n    role=\"button\" tabindex=\"-1\" title=\"{{ superPreviousTitle() }}\" (click)=\"superPrevious()\">\r\n    <span class=\"tdsi-arrow-previous-fill\"></span>\r\n  </button>\r\n  <button [style.visibility]=\"showPreBtn ? 'visible' : 'hidden'\"\r\n    class=\"{{ prefixCls }}-prev-btn p-1.5 text-xl text-neutral-1-500 dark:text-d-neutral-1-500 flex items-center justify-center border border-transparent\"\r\n    role=\"button\" title=\"{{ previousTitle() }}\" tabindex=\"-1\" (click)=\"previous()\">\r\n    <span class=\"tdsi-arrow-left-line\"></span>\r\n  </button>\r\n\r\n  <div\r\n    class=\"{{ prefixCls }}-view flex-auto flex items-center justify-center font-semibold text-title-1 text-neutral-1-900 dark:text-d-neutral-1-900\">\r\n    <ng-container *ngFor=\"let selector of selectors; let indx= index\">\r\n      <button *ngIf=\"!selector.data\" class=\"{{ selector.className }}\" role=\"button\" type=\"button\"\r\n        title=\"{{ selector.title || null }}\" (click)=\"selector.onClick($event)\">\r\n        {{ selector.label }} &nbsp;\r\n      </button>\r\n      <div *ngIf=\"selector.data\" class=\"px-0.5\"\r\n        [class]=\"{'w-[85px]':selectors.length == 1,'flex-auto':selectors.length > 1 && indx == 0}\">\r\n        <tds-select valueField=\"id\" textField=\"name\" [placeholder]='selector.title!' [ngModel]=\"selector.value\"\r\n          (ngModelChange)=\"selector.onClick($event)\" [data]=\"selector.data\" [allowSearch]=\"false\" >\r\n          <ng-template tds-option-tmp let-label='label' let-item=\"item\" let-value='value' let-selected=\"selected\">\r\n            {{item.name}}\r\n          </ng-template>\r\n        </tds-select>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <button [style.visibility]=\"showNextBtn ? 'visible' : 'hidden'\"\r\n    class=\"{{ prefixCls }}-next-btn text-xl text-neutral-1-500 dark:text-d-neutral-1-500 p-1.5 flex items-center justify-center border border-transparent\"\r\n    role=\"button\" tabindex=\"-1\" title=\"{{ nextTitle() }}\" (click)=\"next()\">\r\n    <span class=\"tdsi-arrow-right-line\"></span>\r\n  </button>\r\n  <button *ngIf=\"showSuperNextBtn\" [style.visibility]=\"showSuperNextBtn ? 'visible' : 'hidden'\"\r\n    class=\"{{ prefixCls }}-super-next-btn text-xl text-neutral-1-500 dark:text-d-neutral-1-500 p-1.5 flex items-center justify-center border border-transparent\"\r\n    role=\"button\" tabindex=\"-1\" title=\"{{ superNextTitle() }}\" (click)=\"superNext()\">\r\n    <span class=\"tdsi-arrow-next-fill\"></span>\r\n  </button>\r\n</div>" }]
        }], function () { return [{ type: i1.DateHelperService }]; }, null);
})();

function MonthTableComponent_thead_1_th_2_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelement(0, "th", 6);
    }
}
function MonthTableComponent_thead_1_th_3_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 7);
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const cell_r4 = ctx.$implicit;
        i0.ɵɵpropertyInterpolate("title", cell_r4.title);
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", cell_r4.content, " ");
    }
}
function MonthTableComponent_thead_1_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "thead")(1, "tr", 3);
        i0.ɵɵtemplate(2, MonthTableComponent_thead_1_th_2_Template, 1, 0, "th", 4);
        i0.ɵɵtemplate(3, MonthTableComponent_thead_1_th_3_Template, 2, 2, "th", 5);
        i0.ɵɵelementEnd()();
    }
    if (rf & 2) {
        const ctx_r0 = i0.ɵɵnextContext();
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", ctx_r0.showWeek);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngForOf", ctx_r0.headRow);
    }
}
function MonthTableComponent_tr_3_td_1_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "td", 11)(1, "div", 12)(2, "div", 13);
        i0.ɵɵtext(3);
        i0.ɵɵelementEnd()()();
    }
    if (rf & 2) {
        const row_r5 = i0.ɵɵnextContext().$implicit;
        const ctx_r6 = i0.ɵɵnextContext();
        i0.ɵɵclassMapInterpolate1("", ctx_r6.prefixCls, "-cell-week text-center text-caption-1 font-regular relative w-[34px] h-[34px] min-w-[34px] min-h-[34px] max-w-[34px] max-h-[34px] text-neutral-1-900 dark:text-d-neutral-1-900");
        i0.ɵɵadvance(3);
        i0.ɵɵtextInterpolate1(" ", row_r5.weekNum, " ");
    }
}
function MonthTableComponent_tr_3_td_2_ng_container_2_ng_container_2_ng_container_1_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainer(0);
    }
}
const _c0$5 = function (a0) { return { $implicit: a0 }; };
function MonthTableComponent_tr_3_td_2_ng_container_2_ng_container_2_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵtemplate(1, MonthTableComponent_tr_3_td_2_ng_container_2_ng_container_2_ng_container_1_Template, 1, 0, "ng-container", 18);
        i0.ɵɵelementContainerEnd();
    }
    if (rf & 2) {
        const cell_r9 = i0.ɵɵnextContext(2).$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngTemplateOutlet", cell_r9.cellRender)("ngTemplateOutletContext", i0.ɵɵpureFunction1(2, _c0$5, cell_r9.value));
    }
}
function MonthTableComponent_tr_3_td_2_ng_container_2_ng_container_3_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵelement(1, "span", 19);
        i0.ɵɵelementContainerEnd();
    }
    if (rf & 2) {
        const cell_r9 = i0.ɵɵnextContext(2).$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("innerHTML", cell_r9.cellRender, i0.ɵɵsanitizeHtml);
    }
}
function MonthTableComponent_tr_3_td_2_ng_container_2_ng_container_4_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵelementStart(1, "div")(2, "div", 20);
        i0.ɵɵtext(3);
        i0.ɵɵelementEnd()();
        i0.ɵɵelementContainerEnd();
    }
    if (rf & 2) {
        const cell_r9 = i0.ɵɵnextContext(2).$implicit;
        const ctx_r14 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(1);
        i0.ɵɵclassMapInterpolate1("", ctx_r14.prefixCls, "-cell-inner absolute inset-0");
        i0.ɵɵattribute("aria-selected", cell_r9.isSelected)("aria-disabled", cell_r9.isDisabled);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngClass", cell_r9.classMap);
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", cell_r9.content, " ");
    }
}
function MonthTableComponent_tr_3_td_2_ng_container_2_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainerStart(0)(1, 15);
        i0.ɵɵtemplate(2, MonthTableComponent_tr_3_td_2_ng_container_2_ng_container_2_Template, 2, 4, "ng-container", 16);
        i0.ɵɵtemplate(3, MonthTableComponent_tr_3_td_2_ng_container_2_ng_container_3_Template, 2, 1, "ng-container", 16);
        i0.ɵɵtemplate(4, MonthTableComponent_tr_3_td_2_ng_container_2_ng_container_4_Template, 4, 7, "ng-container", 17);
        i0.ɵɵelementContainerEnd()();
    }
    if (rf & 2) {
        const cell_r9 = i0.ɵɵnextContext().$implicit;
        const ctx_r10 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngSwitch", true);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngSwitchCase", ctx_r10.isTemplateRef(cell_r9.cellRender));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngSwitchCase", ctx_r10.isNonEmptyString(cell_r9.cellRender));
    }
}
function MonthTableComponent_tr_3_td_2_ng_container_3_ng_container_2_ng_container_1_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainer(0);
    }
}
function MonthTableComponent_tr_3_td_2_ng_container_3_ng_container_2_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵtemplate(1, MonthTableComponent_tr_3_td_2_ng_container_3_ng_container_2_ng_container_1_Template, 1, 0, "ng-container", 18);
        i0.ɵɵelementContainerEnd();
    }
    if (rf & 2) {
        const cell_r9 = i0.ɵɵnextContext(2).$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngTemplateOutlet", cell_r9.fullCellRender)("ngTemplateOutletContext", i0.ɵɵpureFunction1(2, _c0$5, cell_r9.value));
    }
}
function MonthTableComponent_tr_3_td_2_ng_container_3_ng_template_3_ng_container_3_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainer(0);
    }
}
function MonthTableComponent_tr_3_td_2_ng_container_3_ng_template_3_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "div");
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(2, "div");
        i0.ɵɵtemplate(3, MonthTableComponent_tr_3_td_2_ng_container_3_ng_template_3_ng_container_3_Template, 1, 0, "ng-container", 18);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const cell_r9 = i0.ɵɵnextContext(2).$implicit;
        const ctx_r22 = i0.ɵɵnextContext(2);
        i0.ɵɵclassMapInterpolate1("", ctx_r22.prefixCls, "-date-value");
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate(cell_r9.content);
        i0.ɵɵadvance(1);
        i0.ɵɵclassMapInterpolate1("", ctx_r22.prefixCls, "-date-content");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngTemplateOutlet", cell_r9.cellRender)("ngTemplateOutletContext", i0.ɵɵpureFunction1(9, _c0$5, cell_r9.value));
    }
}
function MonthTableComponent_tr_3_td_2_ng_container_3_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵelementStart(1, "div");
        i0.ɵɵtemplate(2, MonthTableComponent_tr_3_td_2_ng_container_3_ng_container_2_Template, 2, 4, "ng-container", 21);
        i0.ɵɵtemplate(3, MonthTableComponent_tr_3_td_2_ng_container_3_ng_template_3_Template, 4, 11, "ng-template", null, 22, i0.ɵɵtemplateRefExtractor);
        i0.ɵɵelementEnd();
        i0.ɵɵelementContainerEnd();
    }
    if (rf & 2) {
        const _r21 = i0.ɵɵreference(4);
        const cell_r9 = i0.ɵɵnextContext().$implicit;
        const ctx_r11 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(1);
        i0.ɵɵclassMapInterpolate1("", ctx_r11.prefixCls, "-date tds-picker-cell-inner");
        i0.ɵɵclassProp("tds-picker-calendar-date-today", cell_r9.isToday);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", cell_r9.fullCellRender)("ngIfElse", _r21);
    }
}
function MonthTableComponent_tr_3_td_2_Template(rf, ctx) {
    if (rf & 1) {
        const _r29 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "td", 14);
        i0.ɵɵlistener("click", function MonthTableComponent_tr_3_td_2_Template_td_click_0_listener() { const restoredCtx = i0.ɵɵrestoreView(_r29); const cell_r9 = restoredCtx.$implicit; return cell_r9.isDisabled ? null : cell_r9.onClick(); })("mouseenter", function MonthTableComponent_tr_3_td_2_Template_td_mouseenter_0_listener() { const restoredCtx = i0.ɵɵrestoreView(_r29); const cell_r9 = restoredCtx.$implicit; return cell_r9.onMouseEnter(); });
        i0.ɵɵelementContainerStart(1, 15);
        i0.ɵɵtemplate(2, MonthTableComponent_tr_3_td_2_ng_container_2_Template, 5, 3, "ng-container", 16);
        i0.ɵɵtemplate(3, MonthTableComponent_tr_3_td_2_ng_container_3_Template, 5, 7, "ng-container", 16);
        i0.ɵɵelementContainerEnd();
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const cell_r9 = ctx.$implicit;
        const ctx_r7 = i0.ɵɵnextContext(2);
        i0.ɵɵpropertyInterpolate("title", cell_r9.title);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngSwitch", ctx_r7.prefixCls);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngSwitchCase", "tds-picker");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngSwitchCase", "tds-picker-calendar");
    }
}
function MonthTableComponent_tr_3_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "tr", 8);
        i0.ɵɵtemplate(1, MonthTableComponent_tr_3_td_1_Template, 4, 4, "td", 9);
        i0.ɵɵtemplate(2, MonthTableComponent_tr_3_td_2_Template, 4, 4, "td", 10);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const row_r5 = ctx.$implicit;
        const ctx_r1 = i0.ɵɵnextContext();
        i0.ɵɵproperty("ngClass", row_r5.classMap);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", row_r5.weekNum);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngForOf", row_r5.dateCells)("ngForTrackBy", ctx_r1.trackByBodyColumn);
    }
}
class MonthTableComponent extends AbstractTable {
    constructor(dateHelper) {
        super();
        this.dateHelper = dateHelper;
        this.MAX_ROW = 4;
        this.MAX_COL = 3;
    }
    makeHeadRow() {
        return [];
    }
    makeBodyRows() {
        const months = [];
        let monthValue = 0;
        for (let rowIndex = 0; rowIndex < this.MAX_ROW; rowIndex++) {
            const row = {
                dateCells: [],
                trackByIndex: rowIndex
            };
            for (let colIndex = 0; colIndex < this.MAX_COL; colIndex++) {
                const month = this.activeDate.setMonth(monthValue);
                const isDisabled = this.isDisabledMonth(month);
                const content = this.dateHelper.format(month.nativeDate, 'MMMM');
                const cell = {
                    trackByIndex: colIndex,
                    value: month.nativeDate,
                    isDisabled,
                    isSelected: month.isSameMonth(this.value),
                    content,
                    title: content,
                    classMap: {},
                    cellRender: valueFunctionProp(this.cellRender, month),
                    fullCellRender: valueFunctionProp(this.fullCellRender, month),
                    onClick: () => this.chooseMonth(cell.value.getMonth()),
                    onMouseEnter: () => this.cellHover.emit(month)
                };
                this.addCellProperty(cell, month);
                row.dateCells.push(cell);
                monthValue++;
            }
            months.push(row);
        }
        return months;
    }
    isDisabledMonth(month) {
        if (!this.disabledDate) {
            return false;
        }
        const firstOfMonth = month.setDate(1);
        for (let date = firstOfMonth; date.getMonth() === month.getMonth(); date = date.addDays(1)) {
            if (!this.disabledDate(date.nativeDate)) {
                return false;
            }
        }
        return true;
    }
    addCellProperty(cell, month) {
        if (this.hasRangeValue()) {
            const [startHover, endHover] = this.hoverValue;
            const [startSelected, endSelected] = this.selectedValue;
            // Selected
            if (startSelected === null || startSelected === void 0 ? void 0 : startSelected.isSameMonth(month)) {
                cell.isSelectedStart = true;
                cell.isSelected = true;
            }
            if (endSelected === null || endSelected === void 0 ? void 0 : endSelected.isSameMonth(month)) {
                cell.isSelectedEnd = true;
                cell.isSelected = true;
            }
            if (startHover && endHover) {
                cell.isHoverStart = startHover.isSameMonth(month);
                cell.isHoverEnd = endHover.isSameMonth(month);
                cell.isLastCellInPanel = month.getMonth() === 11;
                cell.isFirstCellInPanel = month.getMonth() === 0;
                cell.isInHoverRange = startHover.isBeforeMonth(month) && month.isBeforeMonth(endHover);
            }
            cell.isStartSingle = startSelected && !endSelected;
            cell.isEndSingle = (!startSelected && endSelected) ? true : false;
            cell.isInSelectedRange = (startSelected === null || startSelected === void 0 ? void 0 : startSelected.isBeforeMonth(month)) && (month === null || month === void 0 ? void 0 : month.isBeforeMonth(endSelected));
            cell.isRangeStartNearHover = startSelected && cell.isInHoverRange;
            cell.isRangeEndNearHover = endSelected && cell.isInHoverRange;
        }
        else if (month.isSameMonth(this.value)) {
            cell.isSelected = true;
        }
        cell.classMap = this.getClassMap(cell);
    }
    chooseMonth(month) {
        this.value = this.activeDate.setMonth(month);
        this.valueChange.emit(this.value);
    }
    getClassMap(cell) {
        const date = new CandyDate(cell.value);
        return Object.assign(Object.assign({}, super.getClassMap(cell)), { [`p-3  cursor-pointer text-caption-1 font-regular`]: true, [`text-neutral-1-900 dark:text-d-neutral-1-900`]: !cell.isSelected, [`text-primary-1`]: cell.isSelected });
    }
}
MonthTableComponent.ɵfac = function MonthTableComponent_Factory(t) { return new (t || MonthTableComponent)(i0.ɵɵdirectiveInject(i1.DateHelperService)); };
MonthTableComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: MonthTableComponent, selectors: [["month-table"]], hostAttrs: [1, "box-border", "w-full", "p-3", "flex", "items-center", "justify-center"], exportAs: ["monthTable"], features: [i0.ɵɵInheritDefinitionFeature], decls: 4, vars: 3, consts: [["cellspacing", "0", "role", "grid", 1, "tds-picker-content", "min-w-[238px]", "w-full"], [4, "ngIf"], ["role", "row", 3, "ngClass", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["role", "row"], ["role", "columnheader", "class", "px-3 text-caption-1 font-semibold text-neutral-1-900 dark:text-d-neutral-1-900 text-center", 4, "ngIf"], ["role", "columnheader", "class", "text-caption-1 font-semibold text-neutral-1-900 dark:text-d-neutral-1-900 text-center", 3, "title", 4, "ngFor", "ngForOf"], ["role", "columnheader", 1, "px-3", "text-caption-1", "font-semibold", "text-neutral-1-900", "dark:text-d-neutral-1-900", "text-center"], ["role", "columnheader", 1, "text-caption-1", "font-semibold", "text-neutral-1-900", "dark:text-d-neutral-1-900", "text-center", 3, "title"], ["role", "row", 3, "ngClass"], ["role", "gridcell", 3, "class", 4, "ngIf"], ["role", "gridcell", "class", "text-center text-caption-1 font-regular relative w-[34px] h-[36px] min-w-[34px] min-h-[36px] max-w-[34px] max-h-[36px] py-px", 3, "title", "click", "mouseenter", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["role", "gridcell"], [1, "absolute", "inset-0"], [1, "w-full", "flex", "items-center", "justify-center", "h-[34px]"], ["role", "gridcell", 1, "text-center", "text-caption-1", "font-regular", "relative", "w-[34px]", "h-[36px]", "min-w-[34px]", "min-h-[36px]", "max-w-[34px]", "max-h-[36px]", "py-px", 3, "title", "click", "mouseenter"], [3, "ngSwitch"], [4, "ngSwitchCase"], [4, "ngSwitchDefault"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], [3, "innerHTML"], [1, "flex", "items-center", "justify-center", "h-[34px]", "m-auto", 3, "ngClass"], [4, "ngIf", "ngIfElse"], ["defaultCell", ""]], template: function MonthTableComponent_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelementStart(0, "table", 0);
            i0.ɵɵtemplate(1, MonthTableComponent_thead_1_Template, 4, 2, "thead", 1);
            i0.ɵɵelementStart(2, "tbody");
            i0.ɵɵtemplate(3, MonthTableComponent_tr_3_Template, 3, 4, "tr", 2);
            i0.ɵɵelementEnd()();
        }
        if (rf & 2) {
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngIf", ctx.headRow && ctx.headRow.length > 0);
            i0.ɵɵadvance(2);
            i0.ɵɵproperty("ngForOf", ctx.bodyRows)("ngForTrackBy", ctx.trackByBodyRow);
        }
    }, directives: [i2.NgIf, i2.NgForOf, i2.NgClass, i2.NgSwitch, i2.NgSwitchCase, i2.NgTemplateOutlet, i2.NgSwitchDefault], encapsulation: 2, changeDetection: 0 });
(function () {
    (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(MonthTableComponent, [{
            type: Component,
            args: [{ encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, selector: 'month-table', exportAs: 'monthTable', host: {
                        class: "box-border w-full p-3 flex items-center justify-center"
                    }, template: "<table class=\"tds-picker-content min-w-[238px] w-full\" cellspacing=\"0\" role=\"grid\">\r\n  <thead *ngIf=\"headRow && headRow.length > 0\">\r\n    <tr role=\"row\">\r\n      <th *ngIf=\"showWeek\" role=\"columnheader\"\r\n        class=\"px-3 text-caption-1 font-semibold text-neutral-1-900 dark:text-d-neutral-1-900 text-center\">\r\n      </th>\r\n      <th *ngFor=\"let cell of headRow\" role=\"columnheader\" title=\"{{ cell.title }}\"\r\n        class=\"text-caption-1 font-semibold text-neutral-1-900 dark:text-d-neutral-1-900 text-center\">\r\n        {{ cell.content }}\r\n      </th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let row of bodyRows; trackBy: trackByBodyRow\" [ngClass]=\"row.classMap!\"  role=\"row\">\r\n      <td *ngIf=\"row.weekNum\" role=\"gridcell\"\r\n        class=\"{{ prefixCls }}-cell-week text-center text-caption-1 font-regular relative w-[34px] h-[34px] min-w-[34px] min-h-[34px] max-w-[34px] max-h-[34px] text-neutral-1-900 dark:text-d-neutral-1-900\">\r\n        <div class=\" absolute inset-0\">\r\n          <div class=\"w-full flex items-center justify-center h-[34px] \">\r\n            {{ row.weekNum }}\r\n          </div>\r\n        </div>\r\n      </td>\r\n      <td *ngFor=\"let cell of row.dateCells; trackBy: trackByBodyColumn\" title=\"{{ cell.title }}\" role=\"gridcell\"\r\n        (click)=\"cell.isDisabled ? null : cell.onClick()\" (mouseenter)=\"cell.onMouseEnter()\"\r\n        class=\"text-center text-caption-1 font-regular relative w-[34px] h-[36px] min-w-[34px] min-h-[36px] max-w-[34px] max-h-[36px] py-px\">\r\n        <ng-container [ngSwitch]=\"prefixCls\">\r\n          <ng-container *ngSwitchCase=\"'tds-picker'\">\r\n            <ng-container [ngSwitch]=\"true\">\r\n              <ng-container *ngSwitchCase=\"isTemplateRef(cell.cellRender)\">\r\n                <!--           *ngSwitchCase not has type assertion support, the cellRender type here is TemplateRef -->\r\n                <ng-container *ngTemplateOutlet=\"$any(cell.cellRender); context: { $implicit: cell.value }\">\r\n                </ng-container>\r\n              </ng-container>\r\n              <ng-container *ngSwitchCase=\"isNonEmptyString(cell.cellRender)\">\r\n                <span [innerHTML]=\"cell.cellRender\"></span>\r\n              </ng-container>\r\n              <ng-container *ngSwitchDefault>\r\n                <div class=\"{{ prefixCls }}-cell-inner absolute inset-0\" [attr.aria-selected]=\"cell.isSelected\"\r\n                  [attr.aria-disabled]=\"cell.isDisabled\">\r\n\r\n                  <div class=\"flex items-center justify-center h-[34px] m-auto \" [ngClass]=\"cell.classMap!\">\r\n                    {{ cell.content }}\r\n                  </div>\r\n\r\n                </div>\r\n              </ng-container>\r\n            </ng-container>\r\n          </ng-container>\r\n          <ng-container *ngSwitchCase=\"'tds-picker-calendar'\">\r\n            <div class=\"{{ prefixCls }}-date tds-picker-cell-inner\"\r\n              [class.tds-picker-calendar-date-today]=\"cell.isToday\">\r\n              <ng-container *ngIf=\"cell.fullCellRender; else defaultCell\">\r\n                <ng-container *ngTemplateOutlet=\"$any(cell.fullCellRender); context: { $implicit: cell.value }\">\r\n                </ng-container>\r\n              </ng-container>\r\n              <ng-template #defaultCell>\r\n                <div class=\"{{ prefixCls }}-date-value\">{{ cell.content }}</div>\r\n                <div class=\"{{ prefixCls }}-date-content\">\r\n                  <ng-container *ngTemplateOutlet=\"$any(cell.cellRender); context: { $implicit: cell.value }\">\r\n                  </ng-container>\r\n                </div>\r\n              </ng-template>\r\n            </div>\r\n          </ng-container>\r\n        </ng-container>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>" }]
        }], function () { return [{ type: i1.DateHelperService }]; }, null);
})();

function DateHeaderComponent_button_1_Template(rf, ctx) {
    if (rf & 1) {
        const _r4 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "button", 2);
        i0.ɵɵlistener("click", function DateHeaderComponent_button_1_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r4); const ctx_r3 = i0.ɵɵnextContext(); return ctx_r3.superPrevious(); });
        i0.ɵɵelement(1, "span", 6);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const ctx_r0 = i0.ɵɵnextContext();
        i0.ɵɵclassMapInterpolate1("", ctx_r0.prefixCls, "-super-prev-btn text-xl text-neutral-1-500 dark:text-d-neutral-1-500 p-1.5 flex items-center justify-center border border-transparent");
        i0.ɵɵstyleProp("visibility", ctx_r0.showSuperPreBtn ? "visible" : "hidden");
        i0.ɵɵpropertyInterpolate("title", ctx_r0.superPreviousTitle());
    }
}
function DateHeaderComponent_ng_container_5_button_1_Template(rf, ctx) {
    if (rf & 1) {
        const _r11 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "button", 9);
        i0.ɵɵlistener("click", function DateHeaderComponent_ng_container_5_button_1_Template_button_click_0_listener($event) { i0.ɵɵrestoreView(_r11); const selector_r5 = i0.ɵɵnextContext().$implicit; return selector_r5.onClick($event); });
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const selector_r5 = i0.ɵɵnextContext().$implicit;
        i0.ɵɵclassMap(selector_r5.className);
        i0.ɵɵpropertyInterpolate("title", selector_r5.title || null);
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", selector_r5.label, " \u00A0 ");
    }
}
function DateHeaderComponent_ng_container_5_div_2_ng_template_2_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵtext(0);
    }
    if (rf & 2) {
        const item_r15 = ctx.item;
        i0.ɵɵtextInterpolate1(" ", item_r15.name, " ");
    }
}
const _c0$4 = function (a0, a1) { return { "w-[85px]": a0, "flex-auto": a1 }; };
function DateHeaderComponent_ng_container_5_div_2_Template(rf, ctx) {
    if (rf & 1) {
        const _r20 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 10)(1, "tds-select", 11);
        i0.ɵɵlistener("ngModelChange", function DateHeaderComponent_ng_container_5_div_2_Template_tds_select_ngModelChange_1_listener($event) { i0.ɵɵrestoreView(_r20); const selector_r5 = i0.ɵɵnextContext().$implicit; return selector_r5.onClick($event); });
        i0.ɵɵtemplate(2, DateHeaderComponent_ng_container_5_div_2_ng_template_2_Template, 1, 1, "ng-template", 12);
        i0.ɵɵelementEnd()();
    }
    if (rf & 2) {
        const ctx_r21 = i0.ɵɵnextContext();
        const indx_r6 = ctx_r21.index;
        const selector_r5 = ctx_r21.$implicit;
        const ctx_r8 = i0.ɵɵnextContext();
        i0.ɵɵclassMap(i0.ɵɵpureFunction2(6, _c0$4, ctx_r8.selectors.length == 1, ctx_r8.selectors.length > 1 && indx_r6 == 0));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("placeholder", selector_r5.title)("ngModel", selector_r5.value)("data", selector_r5.data)("allowSearch", false);
    }
}
function DateHeaderComponent_ng_container_5_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵtemplate(1, DateHeaderComponent_ng_container_5_button_1_Template, 2, 5, "button", 7);
        i0.ɵɵtemplate(2, DateHeaderComponent_ng_container_5_div_2_Template, 3, 9, "div", 8);
        i0.ɵɵelementContainerEnd();
    }
    if (rf & 2) {
        const selector_r5 = ctx.$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", !selector_r5.data);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", selector_r5.data);
    }
}
function DateHeaderComponent_button_8_Template(rf, ctx) {
    if (rf & 1) {
        const _r23 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "button", 2);
        i0.ɵɵlistener("click", function DateHeaderComponent_button_8_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r23); const ctx_r22 = i0.ɵɵnextContext(); return ctx_r22.superNext(); });
        i0.ɵɵelement(1, "span", 13);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const ctx_r2 = i0.ɵɵnextContext();
        i0.ɵɵclassMapInterpolate1("", ctx_r2.prefixCls, "-super-next-btn text-xl text-neutral-1-500 dark:text-d-neutral-1-500 p-1.5 flex items-center justify-center border border-transparent");
        i0.ɵɵstyleProp("visibility", ctx_r2.showSuperNextBtn ? "visible" : "hidden");
        i0.ɵɵpropertyInterpolate("title", ctx_r2.superNextTitle());
    }
}
class DateHeaderComponent extends AbstractPanelHeader {
    constructor(dateHelper) {
        super();
        this.dateHelper = dateHelper;
    }
    getSelectors() {
        var _a, _b;
        let lstMonth = this.getMonths();
        const label = this.dateHelper.format(this.value.nativeDate, this.locale.monthFormat || 'MMMM');
        const value = (_a = lstMonth.find(f => { return f.name === label; })) === null || _a === void 0 ? void 0 : _a.id;
        let that = this;
        let year = this.getYears();
        const labelyear = this.dateHelper.format(this.value.nativeDate, transCompatFormat(this.locale.yearFormat));
        const valueYear = (_b = year.find(f => { return f.name === labelyear; })) === null || _b === void 0 ? void 0 : _b.id;
        return [
            {
                className: `${this.prefixCls}-month-btn`,
                title: this.locale.monthSelect,
                onClick: (data) => {
                    that.changeValue(that.value.setMonth(data));
                },
                label: label,
                value: value,
                data: lstMonth,
            },
            {
                className: `${this.prefixCls}-year-btn`,
                title: this.locale.yearSelect,
                onClick: (data) => {
                    that.changeValue(that.value.setYear(data)); // this.changeMode('year')
                },
                label: labelyear,
                value: valueYear,
                data: year,
            },
        ];
    }
    getMonths() {
        let result = [];
        const activeDate = new CandyDate(this.value.nativeDate);
        for (let monthValue = 0; monthValue < 12; monthValue++) {
            const month = activeDate.setMonth(monthValue);
            const content = this.dateHelper.format(month.nativeDate, 'MMMM');
            result.push({ id: monthValue, name: content });
        }
        return result;
    }
    getYears() {
        let result = [];
        const activeDate = new CandyDate(this.value.nativeDate);
        for (let year = 50; year > 0; year--) {
            if (activeDate.getYear() - year > 0)
                result.push({ id: activeDate.getYear() - year, name: `${activeDate.getYear() - year}` });
        }
        result.push({ id: activeDate.getYear(), name: `${activeDate.getYear()}` });
        for (let year = 1; year <= 50; year++) {
            result.push({ id: activeDate.getYear() + year, name: `${activeDate.getYear() + year}` });
        }
        return result;
    }
}
DateHeaderComponent.ɵfac = function DateHeaderComponent_Factory(t) { return new (t || DateHeaderComponent)(i0.ɵɵdirectiveInject(i1.DateHelperService)); };
DateHeaderComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: DateHeaderComponent, selectors: [["date-header"]], hostAttrs: [1, "block"], exportAs: ["dateHeader"], features: [i0.ɵɵInheritDefinitionFeature], decls: 9, vars: 19, consts: [[1, "flex", "py-2", "px-0.5", "w-full", 3, "ngClass"], ["role", "button", "tabindex", "-1", 3, "visibility", "class", "title", "click", 4, "ngIf"], ["role", "button", "tabindex", "-1", 3, "title", "click"], [1, "tdsi-arrow-left-line"], [4, "ngFor", "ngForOf"], [1, "tdsi-arrow-right-line"], [1, "tdsi-arrow-previous-fill"], ["role", "button", "type", "button", 3, "class", "title", "click", 4, "ngIf"], ["class", "px-0.5", 3, "class", 4, "ngIf"], ["role", "button", "type", "button", 3, "title", "click"], [1, "px-0.5"], ["valueField", "id", "textField", "name", 3, "placeholder", "ngModel", "data", "allowSearch", "ngModelChange"], ["tds-option-tmp", ""], [1, "tdsi-arrow-next-fill"]], template: function DateHeaderComponent_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelementStart(0, "div", 0);
            i0.ɵɵtemplate(1, DateHeaderComponent_button_1_Template, 2, 6, "button", 1);
            i0.ɵɵelementStart(2, "button", 2);
            i0.ɵɵlistener("click", function DateHeaderComponent_Template_button_click_2_listener() { return ctx.previous(); });
            i0.ɵɵelement(3, "span", 3);
            i0.ɵɵelementEnd();
            i0.ɵɵelementStart(4, "div");
            i0.ɵɵtemplate(5, DateHeaderComponent_ng_container_5_Template, 3, 2, "ng-container", 4);
            i0.ɵɵelementEnd();
            i0.ɵɵelementStart(6, "button", 2);
            i0.ɵɵlistener("click", function DateHeaderComponent_Template_button_click_6_listener() { return ctx.next(); });
            i0.ɵɵelement(7, "span", 5);
            i0.ɵɵelementEnd();
            i0.ɵɵtemplate(8, DateHeaderComponent_button_8_Template, 2, 6, "button", 1);
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            i0.ɵɵproperty("ngClass", ctx.prefixCls);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngIf", ctx.showSuperPreBtn);
            i0.ɵɵadvance(1);
            i0.ɵɵclassMapInterpolate1("", ctx.prefixCls, "-prev-btn p-1.5 text-xl text-neutral-1-500 dark:text-d-neutral-1-500 flex items-center justify-center border border-transparent");
            i0.ɵɵstyleProp("visibility", ctx.showPreBtn ? "visible" : "hidden");
            i0.ɵɵpropertyInterpolate("title", ctx.previousTitle());
            i0.ɵɵadvance(2);
            i0.ɵɵclassMapInterpolate1("", ctx.prefixCls, "-view flex-auto flex items-center justify-center font-semibold text-title-1 text-neutral-1-900 dark:text-d-neutral-1-900");
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngForOf", ctx.selectors);
            i0.ɵɵadvance(1);
            i0.ɵɵclassMapInterpolate1("", ctx.prefixCls, "-next-btn text-xl text-neutral-1-500 dark:text-d-neutral-1-500 p-1.5 flex items-center justify-center border border-transparent");
            i0.ɵɵstyleProp("visibility", ctx.showNextBtn ? "visible" : "hidden");
            i0.ɵɵpropertyInterpolate("title", ctx.nextTitle());
            i0.ɵɵadvance(2);
            i0.ɵɵproperty("ngIf", ctx.showSuperNextBtn);
        }
    }, directives: [i2.NgClass, i2.NgIf, i2.NgForOf, i2$1.TDSSelect, i7.NgControlStatus, i7.NgModel, i2$1.TDSOptionTemplateDirective], encapsulation: 2, changeDetection: 0 });
(function () {
    (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(DateHeaderComponent, [{
            type: Component,
            args: [{ encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, selector: 'date-header', exportAs: 'dateHeader', host: {
                        class: "block"
                    }, template: "<div class=\"flex py-2 px-0.5 w-full\" [ngClass]=\"prefixCls\">\r\n  <button *ngIf=\"showSuperPreBtn\" [style.visibility]=\"showSuperPreBtn ? 'visible' : 'hidden'\"\r\n    class=\"{{ prefixCls }}-super-prev-btn text-xl text-neutral-1-500 dark:text-d-neutral-1-500 p-1.5 flex items-center justify-center border border-transparent\"\r\n    role=\"button\" tabindex=\"-1\" title=\"{{ superPreviousTitle() }}\" (click)=\"superPrevious()\">\r\n    <span class=\"tdsi-arrow-previous-fill\"></span>\r\n  </button>\r\n  <button [style.visibility]=\"showPreBtn ? 'visible' : 'hidden'\"\r\n    class=\"{{ prefixCls }}-prev-btn p-1.5 text-xl text-neutral-1-500 dark:text-d-neutral-1-500 flex items-center justify-center border border-transparent\"\r\n    role=\"button\" title=\"{{ previousTitle() }}\" tabindex=\"-1\" (click)=\"previous()\">\r\n    <span class=\"tdsi-arrow-left-line\"></span>\r\n  </button>\r\n\r\n  <div\r\n    class=\"{{ prefixCls }}-view flex-auto flex items-center justify-center font-semibold text-title-1 text-neutral-1-900 dark:text-d-neutral-1-900\">\r\n    <ng-container *ngFor=\"let selector of selectors; let indx= index\">\r\n      <button *ngIf=\"!selector.data\" class=\"{{ selector.className }}\" role=\"button\" type=\"button\"\r\n        title=\"{{ selector.title || null }}\" (click)=\"selector.onClick($event)\">\r\n        {{ selector.label }} &nbsp;\r\n      </button>\r\n      <div *ngIf=\"selector.data\" class=\"px-0.5\"\r\n        [class]=\"{'w-[85px]':selectors.length == 1,'flex-auto':selectors.length > 1 && indx == 0}\">\r\n        <tds-select valueField=\"id\" textField=\"name\" [placeholder]='selector.title!' [ngModel]=\"selector.value\"\r\n          (ngModelChange)=\"selector.onClick($event)\" [data]=\"selector.data\" [allowSearch]=\"false\" >\r\n          <ng-template tds-option-tmp let-label='label' let-item=\"item\" let-value='value' let-selected=\"selected\">\r\n            {{item.name}}\r\n          </ng-template>\r\n        </tds-select>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <button [style.visibility]=\"showNextBtn ? 'visible' : 'hidden'\"\r\n    class=\"{{ prefixCls }}-next-btn text-xl text-neutral-1-500 dark:text-d-neutral-1-500 p-1.5 flex items-center justify-center border border-transparent\"\r\n    role=\"button\" tabindex=\"-1\" title=\"{{ nextTitle() }}\" (click)=\"next()\">\r\n    <span class=\"tdsi-arrow-right-line\"></span>\r\n  </button>\r\n  <button *ngIf=\"showSuperNextBtn\" [style.visibility]=\"showSuperNextBtn ? 'visible' : 'hidden'\"\r\n    class=\"{{ prefixCls }}-super-next-btn text-xl text-neutral-1-500 dark:text-d-neutral-1-500 p-1.5 flex items-center justify-center border border-transparent\"\r\n    role=\"button\" tabindex=\"-1\" title=\"{{ superNextTitle() }}\" (click)=\"superNext()\">\r\n    <span class=\"tdsi-arrow-next-fill\"></span>\r\n  </button>\r\n</div>" }]
        }], function () { return [{ type: i1.DateHelperService }]; }, null);
})();

function DateTableComponent_thead_1_th_2_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelement(0, "th", 6);
    }
}
function DateTableComponent_thead_1_th_3_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 7);
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const cell_r4 = ctx.$implicit;
        i0.ɵɵpropertyInterpolate("title", cell_r4.title);
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", cell_r4.content, " ");
    }
}
function DateTableComponent_thead_1_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "thead")(1, "tr", 3);
        i0.ɵɵtemplate(2, DateTableComponent_thead_1_th_2_Template, 1, 0, "th", 4);
        i0.ɵɵtemplate(3, DateTableComponent_thead_1_th_3_Template, 2, 2, "th", 5);
        i0.ɵɵelementEnd()();
    }
    if (rf & 2) {
        const ctx_r0 = i0.ɵɵnextContext();
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", ctx_r0.showWeek);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngForOf", ctx_r0.headRow);
    }
}
function DateTableComponent_tr_3_td_1_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "td", 11)(1, "div", 12)(2, "div", 13);
        i0.ɵɵtext(3);
        i0.ɵɵelementEnd()()();
    }
    if (rf & 2) {
        const row_r5 = i0.ɵɵnextContext().$implicit;
        const ctx_r6 = i0.ɵɵnextContext();
        i0.ɵɵclassMapInterpolate1("", ctx_r6.prefixCls, "-cell-week text-center text-caption-1 font-regular relative w-[34px] h-[34px] min-w-[34px] min-h-[34px] max-w-[34px] max-h-[34px] text-neutral-1-900 dark:text-d-neutral-1-900");
        i0.ɵɵadvance(3);
        i0.ɵɵtextInterpolate1(" ", row_r5.weekNum, " ");
    }
}
function DateTableComponent_tr_3_td_2_ng_container_2_ng_container_2_ng_container_1_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainer(0);
    }
}
const _c0$3 = function (a0) { return { $implicit: a0 }; };
function DateTableComponent_tr_3_td_2_ng_container_2_ng_container_2_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵtemplate(1, DateTableComponent_tr_3_td_2_ng_container_2_ng_container_2_ng_container_1_Template, 1, 0, "ng-container", 18);
        i0.ɵɵelementContainerEnd();
    }
    if (rf & 2) {
        const cell_r9 = i0.ɵɵnextContext(2).$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngTemplateOutlet", cell_r9.cellRender)("ngTemplateOutletContext", i0.ɵɵpureFunction1(2, _c0$3, cell_r9.value));
    }
}
function DateTableComponent_tr_3_td_2_ng_container_2_ng_container_3_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵelement(1, "span", 19);
        i0.ɵɵelementContainerEnd();
    }
    if (rf & 2) {
        const cell_r9 = i0.ɵɵnextContext(2).$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("innerHTML", cell_r9.cellRender, i0.ɵɵsanitizeHtml);
    }
}
function DateTableComponent_tr_3_td_2_ng_container_2_ng_container_4_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵelementStart(1, "div")(2, "div", 20);
        i0.ɵɵtext(3);
        i0.ɵɵelementEnd()();
        i0.ɵɵelementContainerEnd();
    }
    if (rf & 2) {
        const cell_r9 = i0.ɵɵnextContext(2).$implicit;
        const ctx_r14 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(1);
        i0.ɵɵclassMapInterpolate1("", ctx_r14.prefixCls, "-cell-inner absolute inset-0");
        i0.ɵɵattribute("aria-selected", cell_r9.isSelected)("aria-disabled", cell_r9.isDisabled);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngClass", cell_r9.classMap);
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", cell_r9.content, " ");
    }
}
function DateTableComponent_tr_3_td_2_ng_container_2_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainerStart(0)(1, 15);
        i0.ɵɵtemplate(2, DateTableComponent_tr_3_td_2_ng_container_2_ng_container_2_Template, 2, 4, "ng-container", 16);
        i0.ɵɵtemplate(3, DateTableComponent_tr_3_td_2_ng_container_2_ng_container_3_Template, 2, 1, "ng-container", 16);
        i0.ɵɵtemplate(4, DateTableComponent_tr_3_td_2_ng_container_2_ng_container_4_Template, 4, 7, "ng-container", 17);
        i0.ɵɵelementContainerEnd()();
    }
    if (rf & 2) {
        const cell_r9 = i0.ɵɵnextContext().$implicit;
        const ctx_r10 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngSwitch", true);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngSwitchCase", ctx_r10.isTemplateRef(cell_r9.cellRender));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngSwitchCase", ctx_r10.isNonEmptyString(cell_r9.cellRender));
    }
}
function DateTableComponent_tr_3_td_2_ng_container_3_ng_container_2_ng_container_1_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainer(0);
    }
}
function DateTableComponent_tr_3_td_2_ng_container_3_ng_container_2_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵtemplate(1, DateTableComponent_tr_3_td_2_ng_container_3_ng_container_2_ng_container_1_Template, 1, 0, "ng-container", 18);
        i0.ɵɵelementContainerEnd();
    }
    if (rf & 2) {
        const cell_r9 = i0.ɵɵnextContext(2).$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngTemplateOutlet", cell_r9.fullCellRender)("ngTemplateOutletContext", i0.ɵɵpureFunction1(2, _c0$3, cell_r9.value));
    }
}
function DateTableComponent_tr_3_td_2_ng_container_3_ng_template_3_ng_container_3_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainer(0);
    }
}
function DateTableComponent_tr_3_td_2_ng_container_3_ng_template_3_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "div");
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(2, "div");
        i0.ɵɵtemplate(3, DateTableComponent_tr_3_td_2_ng_container_3_ng_template_3_ng_container_3_Template, 1, 0, "ng-container", 18);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const cell_r9 = i0.ɵɵnextContext(2).$implicit;
        const ctx_r22 = i0.ɵɵnextContext(2);
        i0.ɵɵclassMapInterpolate1("", ctx_r22.prefixCls, "-date-value");
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate(cell_r9.content);
        i0.ɵɵadvance(1);
        i0.ɵɵclassMapInterpolate1("", ctx_r22.prefixCls, "-date-content");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngTemplateOutlet", cell_r9.cellRender)("ngTemplateOutletContext", i0.ɵɵpureFunction1(9, _c0$3, cell_r9.value));
    }
}
function DateTableComponent_tr_3_td_2_ng_container_3_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵelementStart(1, "div");
        i0.ɵɵtemplate(2, DateTableComponent_tr_3_td_2_ng_container_3_ng_container_2_Template, 2, 4, "ng-container", 21);
        i0.ɵɵtemplate(3, DateTableComponent_tr_3_td_2_ng_container_3_ng_template_3_Template, 4, 11, "ng-template", null, 22, i0.ɵɵtemplateRefExtractor);
        i0.ɵɵelementEnd();
        i0.ɵɵelementContainerEnd();
    }
    if (rf & 2) {
        const _r21 = i0.ɵɵreference(4);
        const cell_r9 = i0.ɵɵnextContext().$implicit;
        const ctx_r11 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(1);
        i0.ɵɵclassMapInterpolate1("", ctx_r11.prefixCls, "-date tds-picker-cell-inner");
        i0.ɵɵclassProp("tds-picker-calendar-date-today", cell_r9.isToday);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", cell_r9.fullCellRender)("ngIfElse", _r21);
    }
}
function DateTableComponent_tr_3_td_2_Template(rf, ctx) {
    if (rf & 1) {
        const _r29 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "td", 14);
        i0.ɵɵlistener("click", function DateTableComponent_tr_3_td_2_Template_td_click_0_listener() { const restoredCtx = i0.ɵɵrestoreView(_r29); const cell_r9 = restoredCtx.$implicit; return cell_r9.isDisabled ? null : cell_r9.onClick(); })("mouseenter", function DateTableComponent_tr_3_td_2_Template_td_mouseenter_0_listener() { const restoredCtx = i0.ɵɵrestoreView(_r29); const cell_r9 = restoredCtx.$implicit; return cell_r9.onMouseEnter(); });
        i0.ɵɵelementContainerStart(1, 15);
        i0.ɵɵtemplate(2, DateTableComponent_tr_3_td_2_ng_container_2_Template, 5, 3, "ng-container", 16);
        i0.ɵɵtemplate(3, DateTableComponent_tr_3_td_2_ng_container_3_Template, 5, 7, "ng-container", 16);
        i0.ɵɵelementContainerEnd();
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const cell_r9 = ctx.$implicit;
        const ctx_r7 = i0.ɵɵnextContext(2);
        i0.ɵɵpropertyInterpolate("title", cell_r9.title);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngSwitch", ctx_r7.prefixCls);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngSwitchCase", "tds-picker");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngSwitchCase", "tds-picker-calendar");
    }
}
function DateTableComponent_tr_3_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "tr", 8);
        i0.ɵɵtemplate(1, DateTableComponent_tr_3_td_1_Template, 4, 4, "td", 9);
        i0.ɵɵtemplate(2, DateTableComponent_tr_3_td_2_Template, 4, 4, "td", 10);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const row_r5 = ctx.$implicit;
        const ctx_r1 = i0.ɵɵnextContext();
        i0.ɵɵproperty("ngClass", row_r5.classMap);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", row_r5.weekNum);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngForOf", row_r5.dateCells)("ngForTrackBy", ctx_r1.trackByBodyColumn);
    }
}
class DateTableComponent extends AbstractTable {
    constructor(i18n, dateHelper) {
        super();
        this.i18n = i18n;
        this.dateHelper = dateHelper;
    }
    changeValueFromInside(value) {
        // Only change date not change time
        this.activeDate = this.activeDate.setYear(value.getYear()).setMonth(value.getMonth()).setDate(value.getDate());
        this.valueChange.emit(this.activeDate);
        if (!this.activeDate.isSameMonth(this.value)) {
            this.render();
        }
    }
    makeHeadRow() {
        const weekDays = [];
        const start = this.activeDate.calendarStart({ weekStartsOn: this.dateHelper.getFirstDayOfWeek() });
        for (let colIndex = 0; colIndex < this.MAX_COL; colIndex++) {
            const day = start.addDays(colIndex);
            weekDays.push({
                trackByIndex: null,
                value: day.nativeDate,
                title: this.dateHelper.format(day.nativeDate, 'E'),
                content: this.dateHelper.format(day.nativeDate, this.getVeryShortWeekFormat()),
                isSelected: false,
                isDisabled: false,
                onClick() { },
                onMouseEnter() { }
            });
        }
        return weekDays;
    }
    getVeryShortWeekFormat() {
        return this.i18n.getLocaleId().toLowerCase().indexOf('zh') === 0 ? 'EEEEE' : 'EEEEEE'; // Use extreme short for chinese
    }
    makeBodyRows() {
        const weekRows = [];
        const firstDayOfMonth = this.activeDate.calendarStart({ weekStartsOn: this.dateHelper.getFirstDayOfWeek() });
        for (let week = 0; week < this.MAX_ROW; week++) {
            const weekStart = firstDayOfMonth.addDays(week * 7);
            const row = {
                isActive: false,
                dateCells: [],
                trackByIndex: week
            };
            for (let day = 0; day < 7; day++) {
                const date = weekStart.addDays(day);
                const dateFormat = transCompatFormat(this.i18n.getLocaleData('DatePicker.lang.dateFormat', 'YYYY-MM-DD'));
                const title = this.dateHelper.format(date.nativeDate, dateFormat);
                const label = this.dateHelper.format(date.nativeDate, 'dd');
                const cell = {
                    trackByIndex: day,
                    value: date.nativeDate,
                    label: label,
                    isSelected: false,
                    isDisabled: false,
                    isToday: false,
                    title: title,
                    cellRender: valueFunctionProp(this.cellRender, date),
                    fullCellRender: valueFunctionProp(this.fullCellRender, date),
                    content: `${date.getDate()}`,
                    onClick: () => this.changeValueFromInside(date),
                    onMouseEnter: () => this.cellHover.emit(date)
                };
                this.addCellProperty(cell, date);
                if (this.showWeek && !row.weekNum) {
                    row.weekNum = this.dateHelper.getISOWeek(date.nativeDate);
                }
                if (date.isSameDay(this.value)) {
                    row.isActive = date.isSameDay(this.value);
                }
                row.dateCells.push(cell);
            }
            row.classMap = {
                [`tds-picker-week-panel-row`]: this.showWeek,
                [`tds-picker-week-panel-row-selected`]: this.showWeek && row.isActive
            };
            weekRows.push(row);
        }
        return weekRows;
    }
    addCellProperty(cell, date) {
        var _a;
        if (this.hasRangeValue() && !this.showWeek) {
            const [startHover, endHover] = this.hoverValue;
            const [startSelected, endSelected] = this.selectedValue || [null, null];
            // Selected
            if (startSelected === null || startSelected === void 0 ? void 0 : startSelected.isSameDay(date)) {
                cell.isSelectedStart = true;
                cell.isSelected = true;
            }
            if (endSelected === null || endSelected === void 0 ? void 0 : endSelected.isSameDay(date)) {
                cell.isSelectedEnd = true;
                cell.isSelected = true;
            }
            if (startHover && endHover) {
                cell.isHoverStart = startHover.isSameDay(date);
                cell.isHoverEnd = endHover.isSameDay(date);
                cell.isLastCellInPanel = date.isLastDayOfMonth();
                cell.isFirstCellInPanel = date.isFirstDayOfMonth();
                cell.isInHoverRange = startHover.isBeforeDay(date) && date.isBeforeDay(endHover);
            }
            cell.isStartSingle = startSelected && !endSelected;
            cell.isEndSingle = (!startSelected && endSelected) ? true : false;
            cell.isInSelectedRange = (startSelected === null || startSelected === void 0 ? void 0 : startSelected.isBeforeDay(date)) && date.isBeforeDay(endSelected);
            cell.isRangeStartNearHover = startSelected && cell.isInHoverRange;
            cell.isRangeEndNearHover = endSelected && cell.isInHoverRange;
        }
        cell.isToday = date.isToday();
        cell.isSelected = date.isSameDay(this.value);
        cell.isDisabled = !!((_a = this.disabledDate) === null || _a === void 0 ? void 0 : _a.call(this, date.nativeDate));
        cell.classMap = this.getClassMap(cell);
    }
    getClassMap(cell) {
        const date = new CandyDate(cell.value);
        return Object.assign(Object.assign({}, super.getClassMap(cell)), { [`tds-picker-cell-today`]: !!cell.isToday && date.isSameMonth(this.activeDate), [`border border-primary-1`]: !!cell.isToday && date.isSameMonth(this.activeDate), [`tds-picker-cell-in-view`]: date.isSameMonth(this.activeDate), ['text-neutral-1-900 dark:text-d-neutral-1-900']: date.isSameMonth(this.activeDate) && !cell.isSelected && !cell.isSelectedEnd && !cell.isSelectedStart, ['text-white']: (cell.isSelected || !!cell.isSelectedEnd || !!cell.isSelectedStart) && date.isSameMonth(this.activeDate), [`bg-primary-1`]: (cell.isSelected || !!cell.isSelectedEnd || !!cell.isInSelectedRange || !!cell.isSelectedStart) && date.isSameMonth(this.activeDate), [`rounded-md`]: (cell.isSelected || !!cell.isToday) && !(!!cell.isSelectedStart || !!cell.isSelectedEnd) && date.isSameMonth(this.activeDate), [`text-neutral-1-300 dark:text-d-neutral-1-300`]: !date.isSameMonth(this.activeDate), [`cursor-pointer`]: !cell.isDisabled, [`cursor-not-allowed`]: cell.isDisabled, [`bg-opacity-10`]: !!cell.isInSelectedRange, [`rounded-l-md`]: !!cell.isSelectedStart, [`rounded-r-md`]: !!cell.isSelectedEnd, [`hover:bg-neutral-3-50 dark:hover:bg-d-neutral-3-400`]: !cell.isSelected && !cell.isDisabled && !cell.isInSelectedRange, [`w-[34px]`]: true });
    }
}
DateTableComponent.ɵfac = function DateTableComponent_Factory(t) { return new (t || DateTableComponent)(i0.ɵɵdirectiveInject(i1.TDSI18nService), i0.ɵɵdirectiveInject(i1.DateHelperService)); };
DateTableComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: DateTableComponent, selectors: [["date-table"]], hostAttrs: [1, "box-border", "w-full", "p-3", "flex"], inputs: { locale: "locale" }, exportAs: ["dateTable"], features: [i0.ɵɵInheritDefinitionFeature], decls: 4, vars: 3, consts: [["cellspacing", "0", "role", "grid", 1, "tds-picker-content", "min-w-[238px]", "w-full"], [4, "ngIf"], ["role", "row", 3, "ngClass", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["role", "row"], ["role", "columnheader", "class", "px-3 text-caption-1 font-semibold text-neutral-1-900 dark:text-d-neutral-1-900 text-center", 4, "ngIf"], ["role", "columnheader", "class", "text-caption-1 font-semibold text-neutral-1-900 dark:text-d-neutral-1-900 text-center", 3, "title", 4, "ngFor", "ngForOf"], ["role", "columnheader", 1, "px-3", "text-caption-1", "font-semibold", "text-neutral-1-900", "dark:text-d-neutral-1-900", "text-center"], ["role", "columnheader", 1, "text-caption-1", "font-semibold", "text-neutral-1-900", "dark:text-d-neutral-1-900", "text-center", 3, "title"], ["role", "row", 3, "ngClass"], ["role", "gridcell", 3, "class", 4, "ngIf"], ["role", "gridcell", "class", "text-center text-caption-1 font-regular relative w-[34px] h-[36px] min-w-[34px] min-h-[36px] max-w-[34px] max-h-[36px] py-px", 3, "title", "click", "mouseenter", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["role", "gridcell"], [1, "absolute", "inset-0"], [1, "w-full", "flex", "items-center", "justify-center", "h-[34px]"], ["role", "gridcell", 1, "text-center", "text-caption-1", "font-regular", "relative", "w-[34px]", "h-[36px]", "min-w-[34px]", "min-h-[36px]", "max-w-[34px]", "max-h-[36px]", "py-px", 3, "title", "click", "mouseenter"], [3, "ngSwitch"], [4, "ngSwitchCase"], [4, "ngSwitchDefault"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], [3, "innerHTML"], [1, "flex", "items-center", "justify-center", "h-[34px]", "m-auto", 3, "ngClass"], [4, "ngIf", "ngIfElse"], ["defaultCell", ""]], template: function DateTableComponent_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelementStart(0, "table", 0);
            i0.ɵɵtemplate(1, DateTableComponent_thead_1_Template, 4, 2, "thead", 1);
            i0.ɵɵelementStart(2, "tbody");
            i0.ɵɵtemplate(3, DateTableComponent_tr_3_Template, 3, 4, "tr", 2);
            i0.ɵɵelementEnd()();
        }
        if (rf & 2) {
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngIf", ctx.headRow && ctx.headRow.length > 0);
            i0.ɵɵadvance(2);
            i0.ɵɵproperty("ngForOf", ctx.bodyRows)("ngForTrackBy", ctx.trackByBodyRow);
        }
    }, directives: [i2.NgIf, i2.NgForOf, i2.NgClass, i2.NgSwitch, i2.NgSwitchCase, i2.NgTemplateOutlet, i2.NgSwitchDefault], encapsulation: 2, changeDetection: 0 });
(function () {
    (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(DateTableComponent, [{
            type: Component,
            args: [{ encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, selector: 'date-table', exportAs: 'dateTable', host: {
                        class: "box-border w-full p-3 flex"
                    }, template: "<table class=\"tds-picker-content min-w-[238px] w-full\" cellspacing=\"0\" role=\"grid\">\r\n  <thead *ngIf=\"headRow && headRow.length > 0\">\r\n    <tr role=\"row\">\r\n      <th *ngIf=\"showWeek\" role=\"columnheader\"\r\n        class=\"px-3 text-caption-1 font-semibold text-neutral-1-900 dark:text-d-neutral-1-900 text-center\">\r\n      </th>\r\n      <th *ngFor=\"let cell of headRow\" role=\"columnheader\" title=\"{{ cell.title }}\"\r\n        class=\"text-caption-1 font-semibold text-neutral-1-900 dark:text-d-neutral-1-900 text-center\">\r\n        {{ cell.content }}\r\n      </th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let row of bodyRows; trackBy: trackByBodyRow\" [ngClass]=\"row.classMap!\"  role=\"row\">\r\n      <td *ngIf=\"row.weekNum\" role=\"gridcell\"\r\n        class=\"{{ prefixCls }}-cell-week text-center text-caption-1 font-regular relative w-[34px] h-[34px] min-w-[34px] min-h-[34px] max-w-[34px] max-h-[34px] text-neutral-1-900 dark:text-d-neutral-1-900\">\r\n        <div class=\" absolute inset-0\">\r\n          <div class=\"w-full flex items-center justify-center h-[34px] \">\r\n            {{ row.weekNum }}\r\n          </div>\r\n        </div>\r\n      </td>\r\n      <td *ngFor=\"let cell of row.dateCells; trackBy: trackByBodyColumn\" title=\"{{ cell.title }}\" role=\"gridcell\"\r\n        (click)=\"cell.isDisabled ? null : cell.onClick()\" (mouseenter)=\"cell.onMouseEnter()\"\r\n        class=\"text-center text-caption-1 font-regular relative w-[34px] h-[36px] min-w-[34px] min-h-[36px] max-w-[34px] max-h-[36px] py-px\">\r\n        <ng-container [ngSwitch]=\"prefixCls\">\r\n          <ng-container *ngSwitchCase=\"'tds-picker'\">\r\n            <ng-container [ngSwitch]=\"true\">\r\n              <ng-container *ngSwitchCase=\"isTemplateRef(cell.cellRender)\">\r\n                <!--           *ngSwitchCase not has type assertion support, the cellRender type here is TemplateRef -->\r\n                <ng-container *ngTemplateOutlet=\"$any(cell.cellRender); context: { $implicit: cell.value }\">\r\n                </ng-container>\r\n              </ng-container>\r\n              <ng-container *ngSwitchCase=\"isNonEmptyString(cell.cellRender)\">\r\n                <span [innerHTML]=\"cell.cellRender\"></span>\r\n              </ng-container>\r\n              <ng-container *ngSwitchDefault>\r\n                <div class=\"{{ prefixCls }}-cell-inner absolute inset-0\" [attr.aria-selected]=\"cell.isSelected\"\r\n                  [attr.aria-disabled]=\"cell.isDisabled\">\r\n\r\n                  <div class=\"flex items-center justify-center h-[34px] m-auto \" [ngClass]=\"cell.classMap!\">\r\n                    {{ cell.content }}\r\n                  </div>\r\n\r\n                </div>\r\n              </ng-container>\r\n            </ng-container>\r\n          </ng-container>\r\n          <ng-container *ngSwitchCase=\"'tds-picker-calendar'\">\r\n            <div class=\"{{ prefixCls }}-date tds-picker-cell-inner\"\r\n              [class.tds-picker-calendar-date-today]=\"cell.isToday\">\r\n              <ng-container *ngIf=\"cell.fullCellRender; else defaultCell\">\r\n                <ng-container *ngTemplateOutlet=\"$any(cell.fullCellRender); context: { $implicit: cell.value }\">\r\n                </ng-container>\r\n              </ng-container>\r\n              <ng-template #defaultCell>\r\n                <div class=\"{{ prefixCls }}-date-value\">{{ cell.content }}</div>\r\n                <div class=\"{{ prefixCls }}-date-content\">\r\n                  <ng-container *ngTemplateOutlet=\"$any(cell.cellRender); context: { $implicit: cell.value }\">\r\n                  </ng-container>\r\n                </div>\r\n              </ng-template>\r\n            </div>\r\n          </ng-container>\r\n        </ng-container>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>" }]
        }], function () { return [{ type: i1.TDSI18nService }, { type: i1.DateHelperService }]; }, { locale: [{
                type: Input
            }] });
})();

function InnerPopupComponent_ng_container_3_Template(rf, ctx) {
    if (rf & 1) {
        const _r7 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵelementStart(1, "decade-header", 5);
        i0.ɵɵlistener("valueChange", function InnerPopupComponent_ng_container_3_Template_decade_header_valueChange_1_listener($event) { i0.ɵɵrestoreView(_r7); const ctx_r6 = i0.ɵɵnextContext(); return ctx_r6.activeDate = $event; })("panelModeChange", function InnerPopupComponent_ng_container_3_Template_decade_header_panelModeChange_1_listener($event) { i0.ɵɵrestoreView(_r7); const ctx_r8 = i0.ɵɵnextContext(); return ctx_r8.panelModeChange.emit($event); })("valueChange", function InnerPopupComponent_ng_container_3_Template_decade_header_valueChange_1_listener($event) { i0.ɵɵrestoreView(_r7); const ctx_r9 = i0.ɵɵnextContext(); return ctx_r9.headerChange.emit($event); });
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(2, "div")(3, "decade-table", 6);
        i0.ɵɵlistener("valueChange", function InnerPopupComponent_ng_container_3_Template_decade_table_valueChange_3_listener($event) { i0.ɵɵrestoreView(_r7); const ctx_r10 = i0.ɵɵnextContext(); return ctx_r10.onChooseDecade($event); });
        i0.ɵɵelementEnd()();
        i0.ɵɵelementContainerEnd();
    }
    if (rf & 2) {
        const ctx_r0 = i0.ɵɵnextContext();
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("value", ctx_r0.activeDate)("locale", ctx_r0.locale)("showSuperPreBtn", ctx_r0.enablePrevNext("prev", "decade"))("showSuperNextBtn", ctx_r0.enablePrevNext("next", "decade"))("showNextBtn", false)("showPreBtn", false);
        i0.ɵɵadvance(1);
        i0.ɵɵclassMapInterpolate1("", ctx_r0.prefixCls, "-body");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("activeDate", ctx_r0.activeDate)("value", ctx_r0.value)("locale", ctx_r0.locale)("disabledDate", ctx_r0.disabledDate);
    }
}
function InnerPopupComponent_ng_container_4_Template(rf, ctx) {
    if (rf & 1) {
        const _r12 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵelementStart(1, "year-header", 5);
        i0.ɵɵlistener("valueChange", function InnerPopupComponent_ng_container_4_Template_year_header_valueChange_1_listener($event) { i0.ɵɵrestoreView(_r12); const ctx_r11 = i0.ɵɵnextContext(); return ctx_r11.activeDate = $event; })("panelModeChange", function InnerPopupComponent_ng_container_4_Template_year_header_panelModeChange_1_listener($event) { i0.ɵɵrestoreView(_r12); const ctx_r13 = i0.ɵɵnextContext(); return ctx_r13.panelModeChange.emit($event); })("valueChange", function InnerPopupComponent_ng_container_4_Template_year_header_valueChange_1_listener($event) { i0.ɵɵrestoreView(_r12); const ctx_r14 = i0.ɵɵnextContext(); return ctx_r14.headerChange.emit($event); });
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(2, "div")(3, "year-table", 7);
        i0.ɵɵlistener("valueChange", function InnerPopupComponent_ng_container_4_Template_year_table_valueChange_3_listener($event) { i0.ɵɵrestoreView(_r12); const ctx_r15 = i0.ɵɵnextContext(); return ctx_r15.onChooseYear($event); })("cellHover", function InnerPopupComponent_ng_container_4_Template_year_table_cellHover_3_listener($event) { i0.ɵɵrestoreView(_r12); const ctx_r16 = i0.ɵɵnextContext(); return ctx_r16.cellHover.emit($event); });
        i0.ɵɵelementEnd()();
        i0.ɵɵelementContainerEnd();
    }
    if (rf & 2) {
        const ctx_r1 = i0.ɵɵnextContext();
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("value", ctx_r1.activeDate)("locale", ctx_r1.locale)("showSuperPreBtn", ctx_r1.enablePrevNext("prev", "year"))("showSuperNextBtn", ctx_r1.enablePrevNext("next", "year"))("showNextBtn", false)("showPreBtn", false);
        i0.ɵɵadvance(1);
        i0.ɵɵclassMapInterpolate1("", ctx_r1.prefixCls, "-body");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("activeDate", ctx_r1.activeDate)("value", ctx_r1.value)("locale", ctx_r1.locale)("disabledDate", ctx_r1.disabledDate)("selectedValue", ctx_r1.selectedValue)("hoverValue", ctx_r1.hoverValue);
    }
}
function InnerPopupComponent_ng_container_5_Template(rf, ctx) {
    if (rf & 1) {
        const _r18 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵelementStart(1, "month-header", 5);
        i0.ɵɵlistener("valueChange", function InnerPopupComponent_ng_container_5_Template_month_header_valueChange_1_listener($event) { i0.ɵɵrestoreView(_r18); const ctx_r17 = i0.ɵɵnextContext(); return ctx_r17.activeDate = $event; })("panelModeChange", function InnerPopupComponent_ng_container_5_Template_month_header_panelModeChange_1_listener($event) { i0.ɵɵrestoreView(_r18); const ctx_r19 = i0.ɵɵnextContext(); return ctx_r19.panelModeChange.emit($event); })("valueChange", function InnerPopupComponent_ng_container_5_Template_month_header_valueChange_1_listener($event) { i0.ɵɵrestoreView(_r18); const ctx_r20 = i0.ɵɵnextContext(); return ctx_r20.headerChange.emit($event); });
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(2, "div")(3, "month-table", 8);
        i0.ɵɵlistener("valueChange", function InnerPopupComponent_ng_container_5_Template_month_table_valueChange_3_listener($event) { i0.ɵɵrestoreView(_r18); const ctx_r21 = i0.ɵɵnextContext(); return ctx_r21.onChooseMonth($event); })("cellHover", function InnerPopupComponent_ng_container_5_Template_month_table_cellHover_3_listener($event) { i0.ɵɵrestoreView(_r18); const ctx_r22 = i0.ɵɵnextContext(); return ctx_r22.cellHover.emit($event); });
        i0.ɵɵelementEnd()();
        i0.ɵɵelementContainerEnd();
    }
    if (rf & 2) {
        const ctx_r2 = i0.ɵɵnextContext();
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("value", ctx_r2.activeDate)("locale", ctx_r2.locale)("showSuperPreBtn", ctx_r2.enablePrevNext("prev", "month"))("showSuperNextBtn", ctx_r2.enablePrevNext("next", "month"))("showNextBtn", false)("showPreBtn", false);
        i0.ɵɵadvance(1);
        i0.ɵɵclassMapInterpolate1("", ctx_r2.prefixCls, "-body");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("value", ctx_r2.value)("activeDate", ctx_r2.activeDate)("locale", ctx_r2.locale)("disabledDate", ctx_r2.disabledDate)("selectedValue", ctx_r2.selectedValue)("hoverValue", ctx_r2.hoverValue);
    }
}
function InnerPopupComponent_ng_container_6_div_5_ng_container_1_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainer(0);
    }
}
function InnerPopupComponent_ng_container_6_div_5_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 13);
        i0.ɵɵtemplate(1, InnerPopupComponent_ng_container_6_div_5_ng_container_1_Template, 1, 0, "ng-container", 14);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        i0.ɵɵnextContext(2);
        const _r4 = i0.ɵɵreference(8);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngTemplateOutlet", _r4);
    }
}
function InnerPopupComponent_ng_container_6_Template(rf, ctx) {
    if (rf & 1) {
        const _r26 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵelementStart(1, "date-header", 9);
        i0.ɵɵlistener("valueChange", function InnerPopupComponent_ng_container_6_Template_date_header_valueChange_1_listener($event) { i0.ɵɵrestoreView(_r26); const ctx_r25 = i0.ɵɵnextContext(); return ctx_r25.activeDate = $event; })("panelModeChange", function InnerPopupComponent_ng_container_6_Template_date_header_panelModeChange_1_listener($event) { i0.ɵɵrestoreView(_r26); const ctx_r27 = i0.ɵɵnextContext(); return ctx_r27.panelModeChange.emit($event); })("valueChange", function InnerPopupComponent_ng_container_6_Template_date_header_valueChange_1_listener($event) { i0.ɵɵrestoreView(_r26); const ctx_r28 = i0.ɵɵnextContext(); return ctx_r28.headerChange.emit($event); });
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(2, "div")(3, "div", 10)(4, "date-table", 11);
        i0.ɵɵlistener("valueChange", function InnerPopupComponent_ng_container_6_Template_date_table_valueChange_4_listener($event) { i0.ɵɵrestoreView(_r26); const ctx_r29 = i0.ɵɵnextContext(); return ctx_r29.onSelectDate($event); })("cellHover", function InnerPopupComponent_ng_container_6_Template_date_table_cellHover_4_listener($event) { i0.ɵɵrestoreView(_r26); const ctx_r30 = i0.ɵɵnextContext(); return ctx_r30.cellHover.emit($event); });
        i0.ɵɵelementEnd()();
        i0.ɵɵtemplate(5, InnerPopupComponent_ng_container_6_div_5_Template, 2, 1, "div", 12);
        i0.ɵɵelementEnd();
        i0.ɵɵelementContainerEnd();
    }
    if (rf & 2) {
        const ctx_r3 = i0.ɵɵnextContext();
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("value", ctx_r3.activeDate)("locale", ctx_r3.locale)("showPreBtn", ctx_r3.showWeek ? ctx_r3.enablePrevNext("prev", "week") : ctx_r3.enablePrevNext("prev", "date"))("showNextBtn", ctx_r3.showWeek ? ctx_r3.enablePrevNext("next", "week") : ctx_r3.enablePrevNext("next", "date"));
        i0.ɵɵadvance(1);
        i0.ɵɵclassMapInterpolate1("", ctx_r3.prefixCls, "-body flex flex-col");
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("locale", ctx_r3.locale)("showWeek", ctx_r3.showWeek)("value", ctx_r3.value)("activeDate", ctx_r3.activeDate)("disabledDate", ctx_r3.disabledDate)("cellRender", ctx_r3.dateRender)("selectedValue", ctx_r3.selectedValue)("hoverValue", ctx_r3.hoverValue);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r3.showTimePicker && ctx_r3.timeOptions);
    }
}
function InnerPopupComponent_ng_template_7_Template(rf, ctx) {
    if (rf & 1) {
        const _r32 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "tds-time-picker-panel", 15);
        i0.ɵɵlistener("ngModelChange", function InnerPopupComponent_ng_template_7_Template_tds_time_picker_panel_ngModelChange_0_listener($event) { i0.ɵɵrestoreView(_r32); const ctx_r31 = i0.ɵɵnextContext(); return ctx_r31.onSelectTime($event); });
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const ctx_r5 = i0.ɵɵnextContext();
        i0.ɵɵproperty("inDatePicker", true)("ngModel", ctx_r5.value.nativeDate)("format", ctx_r5.timeOptions == null ? null : ctx_r5.timeOptions.format)("hourStep", ctx_r5.timeOptions == null ? null : ctx_r5.timeOptions.hourStep)("minuteStep", ctx_r5.timeOptions == null ? null : ctx_r5.timeOptions.minuteStep)("secondStep", ctx_r5.timeOptions == null ? null : ctx_r5.timeOptions.secondStep)("disabledHours", ctx_r5.timeOptions == null ? null : ctx_r5.timeOptions.disabledHours)("disabledMinutes", ctx_r5.timeOptions == null ? null : ctx_r5.timeOptions.disabledMinutes)("disabledSeconds", ctx_r5.timeOptions == null ? null : ctx_r5.timeOptions.disabledSeconds)("hideDisabledOptions", !!(ctx_r5.timeOptions == null ? null : ctx_r5.timeOptions.hideDisabledOptions))("defaultOpenValue", ctx_r5.timeOptions == null ? null : ctx_r5.timeOptions.defaultOpenValue)("use12Hours", !!(ctx_r5.timeOptions == null ? null : ctx_r5.timeOptions.use12Hours))("addOn", ctx_r5.timeOptions == null ? null : ctx_r5.timeOptions.addOn);
    }
}
const _c0$2 = function (a0) { return { "tds-picker-datetime-panel w-full flex flex-col": a0 }; };
class InnerPopupComponent {
    constructor() {
        this.panelModeChange = new EventEmitter();
        // TODO: name is not proper
        this.headerChange = new EventEmitter(); // Emitted when user changed the header's value
        this.selectDate = new EventEmitter(); // Emitted when the date is selected by click the date panel
        this.selectTime = new EventEmitter();
        this.cellHover = new EventEmitter(); // Emitted when hover on a day by mouse enter
        this.prefixCls = PREFIX_CLASS;
    }
    /**
     * Hide "next" arrow in left panel,
     * hide "prev" arrow in right panel
     * @param direction
     * @param panelMode
     */
    enablePrevNext(direction, panelMode) {
        if (!this.showTimePicker &&
            panelMode === this.endPanelMode &&
            ((this.partType === 'left' && direction === 'next') || (this.partType === 'right' && direction === 'prev'))) {
            return false;
        }
        return true;
    }
    onSelectTime(date) {
        this.selectTime.emit(new CandyDate(date));
    }
    // The value real changed to outside
    onSelectDate(date) {
        const value = date instanceof CandyDate ? date : new CandyDate(date);
        const timeValue = this.timeOptions && this.timeOptions.defaultOpenValue;
        // Display timeValue when value is null
        if (!this.value && timeValue) {
            value.setHms(timeValue.getHours(), timeValue.getMinutes(), timeValue.getSeconds());
        }
        this.selectDate.emit(value);
    }
    onChooseMonth(value) {
        this.activeDate = this.activeDate.setMonth(value.getMonth());
        if (this.endPanelMode === 'month') {
            this.value = value;
            this.selectDate.emit(value);
        }
        else {
            this.headerChange.emit(value);
            this.panelModeChange.emit(this.endPanelMode);
        }
    }
    onChooseYear(value) {
        this.activeDate = this.activeDate.setYear(value.getYear());
        if (this.endPanelMode === 'year') {
            this.value = value;
            this.selectDate.emit(value);
        }
        else {
            this.headerChange.emit(value);
            this.panelModeChange.emit(this.endPanelMode);
        }
    }
    onChooseDecade(value) {
        this.activeDate = this.activeDate.setYear(value.getYear());
        if (this.endPanelMode === 'decade') {
            this.value = value;
            this.selectDate.emit(value);
        }
        else {
            this.headerChange.emit(value);
            this.panelModeChange.emit('year');
        }
    }
    ngOnChanges(changes) {
        if (changes.activeDate && !changes.activeDate.currentValue) {
            this.activeDate = new CandyDate();
        }
        // New Antd vesion has merged 'date' tds 'time' to one panel,
        // So there is not 'time' panel
        if (changes.panelMode && changes.panelMode.currentValue === 'time') {
            this.panelMode = 'date';
        }
    }
}
InnerPopupComponent.ɵfac = function InnerPopupComponent_Factory(t) { return new (t || InnerPopupComponent)(); };
InnerPopupComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: InnerPopupComponent, selectors: [["inner-popup"]], hostAttrs: [1, "box-border"], inputs: { activeDate: "activeDate", endPanelMode: "endPanelMode", panelMode: "panelMode", showWeek: "showWeek", locale: "locale", showTimePicker: "showTimePicker", timeOptions: "timeOptions", disabledDate: "disabledDate", dateRender: "dateRender", selectedValue: "selectedValue", hoverValue: "hoverValue", value: "value", partType: "partType" }, outputs: { panelModeChange: "panelModeChange", headerChange: "headerChange", selectDate: "selectDate", selectTime: "selectTime", cellHover: "cellHover" }, exportAs: ["innerPopup"], features: [i0.ɵɵNgOnChangesFeature], decls: 9, vars: 11, consts: [[3, "ngClass"], [3, "ngSwitch"], [4, "ngSwitchCase"], [4, "ngSwitchDefault"], ["tplshowTimePicker", ""], [3, "value", "locale", "showSuperPreBtn", "showSuperNextBtn", "showNextBtn", "showPreBtn", "valueChange", "panelModeChange"], [3, "activeDate", "value", "locale", "disabledDate", "valueChange"], [3, "activeDate", "value", "locale", "disabledDate", "selectedValue", "hoverValue", "valueChange", "cellHover"], [3, "value", "activeDate", "locale", "disabledDate", "selectedValue", "hoverValue", "valueChange", "cellHover"], [3, "value", "locale", "showPreBtn", "showNextBtn", "valueChange", "panelModeChange"], [1, "w-full"], [3, "locale", "showWeek", "value", "activeDate", "disabledDate", "cellRender", "selectedValue", "hoverValue", "valueChange", "cellHover"], ["class", "w-full pb-3 px-4", 4, "ngIf"], [1, "w-full", "pb-3", "px-4"], [4, "ngTemplateOutlet"], [1, "w-full", 3, "inDatePicker", "ngModel", "format", "hourStep", "minuteStep", "secondStep", "disabledHours", "disabledMinutes", "disabledSeconds", "hideDisabledOptions", "defaultOpenValue", "use12Hours", "addOn", "ngModelChange"]], template: function InnerPopupComponent_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelementStart(0, "div", 0)(1, "div");
            i0.ɵɵelementContainerStart(2, 1);
            i0.ɵɵtemplate(3, InnerPopupComponent_ng_container_3_Template, 4, 13, "ng-container", 2);
            i0.ɵɵtemplate(4, InnerPopupComponent_ng_container_4_Template, 4, 15, "ng-container", 2);
            i0.ɵɵtemplate(5, InnerPopupComponent_ng_container_5_Template, 4, 15, "ng-container", 2);
            i0.ɵɵtemplate(6, InnerPopupComponent_ng_container_6_Template, 6, 16, "ng-container", 3);
            i0.ɵɵelementContainerEnd();
            i0.ɵɵelementEnd();
            i0.ɵɵtemplate(7, InnerPopupComponent_ng_template_7_Template, 1, 13, "ng-template", null, 4, i0.ɵɵtemplateRefExtractor);
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction1(9, _c0$2, ctx.showTimePicker));
            i0.ɵɵadvance(1);
            i0.ɵɵclassMapInterpolate2("", ctx.prefixCls, "-", ctx.panelMode, "-panel");
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngSwitch", ctx.panelMode);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngSwitchCase", "decade");
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngSwitchCase", "year");
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngSwitchCase", "month");
        }
    }, directives: [i2.NgClass, i2.NgSwitch, i2.NgSwitchCase, DecadeHeaderComponent, DecadeTableComponent, YearHeaderComponent, YearTableComponent, MonthHeaderComponent, MonthTableComponent, i2.NgSwitchDefault, DateHeaderComponent, DateTableComponent, i2.NgIf, i2.NgTemplateOutlet, i10.TDSTimePickerPanelComponent, i7.NgControlStatus, i7.NgModel], encapsulation: 2, changeDetection: 0 });
(function () {
    (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(InnerPopupComponent, [{
            type: Component,
            args: [{
                    encapsulation: ViewEncapsulation.None,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    // tslint:disable-next-line:component-selector
                    selector: 'inner-popup',
                    exportAs: 'innerPopup',
                    template: `
    <div [ngClass]="{'tds-picker-datetime-panel w-full flex flex-col':showTimePicker}">
      <div class="{{ prefixCls }}-{{ panelMode }}-panel">
        <ng-container [ngSwitch]="panelMode">
          <ng-container *ngSwitchCase="'decade'">
            <decade-header
              [(value)]="activeDate"
              [locale]="locale"
              [showSuperPreBtn]="enablePrevNext('prev', 'decade')"
              [showSuperNextBtn]="enablePrevNext('next', 'decade')"
              [showNextBtn]="false"
              [showPreBtn]="false"
              (panelModeChange)="panelModeChange.emit($event)"
              (valueChange)="headerChange.emit($event)"
            ></decade-header>
            <div class="{{ prefixCls }}-body">
              <decade-table
                [activeDate]="activeDate"
                [value]="value"
                [locale]="locale"
                (valueChange)="onChooseDecade($event)"
                [disabledDate]="disabledDate"
              ></decade-table>
            </div>
          </ng-container>
          <ng-container *ngSwitchCase="'year'">
            <year-header
              [(value)]="activeDate"
              [locale]="locale"
              [showSuperPreBtn]="enablePrevNext('prev', 'year')"
              [showSuperNextBtn]="enablePrevNext('next', 'year')"
              [showNextBtn]="false"
              [showPreBtn]="false"
              (panelModeChange)="panelModeChange.emit($event)"
              (valueChange)="headerChange.emit($event)"
            ></year-header>
            <div class="{{ prefixCls }}-body">
              <year-table
                [activeDate]="activeDate"
                [value]="value"
                [locale]="locale"
                [disabledDate]="disabledDate"
                [selectedValue]="selectedValue"
                [hoverValue]="hoverValue"
                (valueChange)="onChooseYear($event)"
                (cellHover)="cellHover.emit($event)"
              ></year-table>
            </div>
          </ng-container>
          <ng-container *ngSwitchCase="'month'">
            <month-header
              [(value)]="activeDate"
              [locale]="locale"
              [showSuperPreBtn]="enablePrevNext('prev', 'month')"
              [showSuperNextBtn]="enablePrevNext('next', 'month')"
              [showNextBtn]="false"
              [showPreBtn]="false"
              (panelModeChange)="panelModeChange.emit($event)"
              (valueChange)="headerChange.emit($event)"
            ></month-header>
            <div class="{{ prefixCls }}-body">
              <month-table
                [value]="value"
                [activeDate]="activeDate"
                [locale]="locale"
                [disabledDate]="disabledDate"
                [selectedValue]="selectedValue"
                [hoverValue]="hoverValue"
                (valueChange)="onChooseMonth($event)"
                (cellHover)="cellHover.emit($event)"
              ></month-table>
            </div>
          </ng-container>

          <ng-container *ngSwitchDefault>
            <date-header
              [(value)]="activeDate"
              [locale]="locale"
             
              [showPreBtn]="showWeek ? enablePrevNext('prev', 'week') : enablePrevNext('prev', 'date')"
              [showNextBtn]="showWeek ? enablePrevNext('next', 'week') : enablePrevNext('next', 'date')"
              (panelModeChange)="panelModeChange.emit($event)"
              (valueChange)="headerChange.emit($event)"
            ></date-header>
            <div class="{{ prefixCls }}-body flex flex-col">           
              <div  class="w-full">
                <date-table
                  [locale]="locale"
                  [showWeek]="showWeek"
                  [value]="value"
                  [activeDate]="activeDate"
                  [disabledDate]="disabledDate"
                  [cellRender]="dateRender"
                  [selectedValue]="selectedValue"
                  [hoverValue]="hoverValue"
                  (valueChange)="onSelectDate($event)"
                  (cellHover)="cellHover.emit($event)"                  
                ></date-table>
              </div>

             <div class="w-full pb-3 px-4" *ngIf="showTimePicker && timeOptions">
             <ng-container *ngTemplateOutlet="tplshowTimePicker"></ng-container></div>
            </div>
          </ng-container>
        </ng-container>
      </div>
      
      <ng-template #tplshowTimePicker>
      <tds-time-picker-panel class="w-full"
          [inDatePicker]="true"
          [ngModel]="value.nativeDate!"
          (ngModelChange)="onSelectTime($event)"
          [format]="$any(timeOptions?.format)"
          [hourStep]="$any(timeOptions?.hourStep)"
          [minuteStep]="$any(timeOptions?.minuteStep)"
          [secondStep]="$any(timeOptions?.secondStep)"
          [disabledHours]="$any(timeOptions?.disabledHours)"
          [disabledMinutes]="$any(timeOptions?.disabledMinutes)"
          [disabledSeconds]="$any(timeOptions?.disabledSeconds)"
          [hideDisabledOptions]="!!timeOptions?.hideDisabledOptions"
          [defaultOpenValue]="$any(timeOptions?.defaultOpenValue)"
          [use12Hours]="!!timeOptions?.use12Hours"
          [addOn]="$any(timeOptions?.addOn)"
        ></tds-time-picker-panel>
        <!-- use [opened] to trigger time panel \`initPosition()\` -->
      </ng-template>
    </div>
  `,
                    host: {
                        class: "box-border"
                    }
                }]
        }], null, { activeDate: [{
                type: Input
            }], endPanelMode: [{
                type: Input
            }], panelMode: [{
                type: Input
            }], showWeek: [{
                type: Input
            }], locale: [{
                type: Input
            }], showTimePicker: [{
                type: Input
            }], timeOptions: [{
                type: Input
            }], disabledDate: [{
                type: Input
            }], dateRender: [{
                type: Input
            }], selectedValue: [{
                type: Input
            }], hoverValue: [{
                type: Input
            }], value: [{
                type: Input
            }], partType: [{
                type: Input
            }], panelModeChange: [{
                type: Output
            }], headerChange: [{
                type: Output
            }], selectDate: [{
                type: Output
            }], selectTime: [{
                type: Output
            }], cellHover: [{
                type: Output
            }] });
})();

function DateRangePopupComponent_ng_container_0_div_4_div_1_Template(rf, ctx) {
    if (rf & 1) {
        const _r17 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 11);
        i0.ɵɵlistener("click", function DateRangePopupComponent_ng_container_0_div_4_div_1_Template_div_click_0_listener() { const restoredCtx = i0.ɵɵrestoreView(_r17); const name_r15 = restoredCtx.$implicit; const ctx_r16 = i0.ɵɵnextContext(3); return ctx_r16.onClickPresetRange(ctx_r16.menuLeft[name_r15]); })("mouseenter", function DateRangePopupComponent_ng_container_0_div_4_div_1_Template_div_mouseenter_0_listener() { const restoredCtx = i0.ɵɵrestoreView(_r17); const name_r15 = restoredCtx.$implicit; const ctx_r18 = i0.ɵɵnextContext(3); return ctx_r18.onHoverPresetRange(ctx_r18.menuLeft[name_r15]); })("mouseleave", function DateRangePopupComponent_ng_container_0_div_4_div_1_Template_div_mouseleave_0_listener() { i0.ɵɵrestoreView(_r17); const ctx_r19 = i0.ɵɵnextContext(3); return ctx_r19.onPresetRangeMouseLeave(); });
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const name_r15 = ctx.$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", name_r15, " ");
    }
}
function DateRangePopupComponent_ng_container_0_div_4_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 9);
        i0.ɵɵtemplate(1, DateRangePopupComponent_ng_container_0_div_4_div_1_Template, 2, 1, "div", 10);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const ctx_r9 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngForOf", ctx_r9.getObjectKeys(ctx_r9.menuLeft));
    }
}
function DateRangePopupComponent_ng_container_0_ng_container_6_ng_container_1_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainer(0);
    }
}
const _c0$1 = function (a0) { return { partType: a0 }; };
function DateRangePopupComponent_ng_container_0_ng_container_6_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵtemplate(1, DateRangePopupComponent_ng_container_0_ng_container_6_ng_container_1_Template, 1, 0, "ng-container", 12);
        i0.ɵɵelementContainerEnd();
    }
    if (rf & 2) {
        const ctx_r10 = i0.ɵɵnextContext(2);
        const _r3 = i0.ɵɵreference(4);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngTemplateOutlet", _r3)("ngTemplateOutletContext", i0.ɵɵpureFunction1(2, _c0$1, ctx_r10.datePickerService.activeInput));
    }
}
function DateRangePopupComponent_ng_container_0_ng_template_7_ng_container_0_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainer(0);
    }
}
function DateRangePopupComponent_ng_container_0_ng_template_7_ng_container_1_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainer(0);
    }
}
const _c1$1 = function () { return { partType: "left" }; };
const _c2$1 = function () { return { partType: "right" }; };
function DateRangePopupComponent_ng_container_0_ng_template_7_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵtemplate(0, DateRangePopupComponent_ng_container_0_ng_template_7_ng_container_0_Template, 1, 0, "ng-container", 12);
        i0.ɵɵtemplate(1, DateRangePopupComponent_ng_container_0_ng_template_7_ng_container_1_Template, 1, 0, "ng-container", 12);
    }
    if (rf & 2) {
        i0.ɵɵnextContext(2);
        const _r3 = i0.ɵɵreference(4);
        i0.ɵɵproperty("ngTemplateOutlet", _r3)("ngTemplateOutletContext", i0.ɵɵpureFunction0(4, _c1$1));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngTemplateOutlet", _r3)("ngTemplateOutletContext", i0.ɵɵpureFunction0(5, _c2$1));
    }
}
function DateRangePopupComponent_ng_container_0_ng_container_9_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainer(0);
    }
}
const _c3$1 = function (a0) { return { "w-full": a0 }; };
function DateRangePopupComponent_ng_container_0_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵelementStart(1, "div");
        i0.ɵɵelement(2, "div");
        i0.ɵɵelementStart(3, "div");
        i0.ɵɵtemplate(4, DateRangePopupComponent_ng_container_0_div_4_Template, 2, 1, "div", 5);
        i0.ɵɵelementStart(5, "div", 6);
        i0.ɵɵtemplate(6, DateRangePopupComponent_ng_container_0_ng_container_6_Template, 2, 4, "ng-container", 0);
        i0.ɵɵtemplate(7, DateRangePopupComponent_ng_container_0_ng_template_7_Template, 2, 6, "ng-template", null, 7, i0.ɵɵtemplateRefExtractor);
        i0.ɵɵelementEnd()();
        i0.ɵɵtemplate(9, DateRangePopupComponent_ng_container_0_ng_container_9_Template, 1, 0, "ng-container", 8);
        i0.ɵɵelementEnd();
        i0.ɵɵelementContainerEnd();
    }
    if (rf & 2) {
        const _r11 = i0.ɵɵreference(8);
        const ctx_r0 = i0.ɵɵnextContext();
        const _r5 = i0.ɵɵreference(6);
        i0.ɵɵadvance(1);
        i0.ɵɵclassMapInterpolate2("", ctx_r0.prefixCls, "-range-wrapper ", ctx_r0.prefixCls, "-date-range-wrapper");
        i0.ɵɵadvance(1);
        i0.ɵɵclassMapInterpolate1("", ctx_r0.prefixCls, "-range-arrow");
        i0.ɵɵstyleProp("left", ctx_r0.datePickerService.arrowLeft, "px");
        i0.ɵɵadvance(1);
        i0.ɵɵclassMapInterpolate1("", ctx_r0.prefixCls, "-panel-container w-full flex  items-stretch justify-center");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", !ctx_r0.hasTimePicker);
        i0.ɵɵadvance(1);
        i0.ɵɵclassMapInterpolate1("", ctx_r0.prefixCls, "-panels flex ");
        i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction1(20, _c3$1, ctx_r0.hasTimePicker));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r0.hasTimePicker)("ngIfElse", _r11);
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("ngTemplateOutlet", _r5);
    }
}
function DateRangePopupComponent_ng_template_1_ng_container_2_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainer(0);
    }
}
function DateRangePopupComponent_ng_template_1_ng_container_3_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainer(0);
    }
}
function DateRangePopupComponent_ng_template_1_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "div")(1, "div", 13);
        i0.ɵɵtemplate(2, DateRangePopupComponent_ng_template_1_ng_container_2_Template, 1, 0, "ng-container", 8);
        i0.ɵɵtemplate(3, DateRangePopupComponent_ng_template_1_ng_container_3_Template, 1, 0, "ng-container", 8);
        i0.ɵɵelementEnd()();
    }
    if (rf & 2) {
        const ctx_r2 = i0.ɵɵnextContext();
        const _r3 = i0.ɵɵreference(4);
        const _r5 = i0.ɵɵreference(6);
        i0.ɵɵclassMapInterpolate4("", ctx_r2.prefixCls, "-panel-container ", ctx_r2.showWeek ? ctx_r2.prefixCls + "-week-number" : "", " ", ctx_r2.hasTimePicker ? ctx_r2.prefixCls + "-time" : "", " ", ctx_r2.isRange ? ctx_r2.prefixCls + "-range" : "", "");
        i0.ɵɵadvance(1);
        i0.ɵɵclassMapInterpolate1("", ctx_r2.prefixCls, "-panel");
        i0.ɵɵclassProp("tds-picker-panel-rtl", ctx_r2.dir === "rtl");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngTemplateOutlet", _r3);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngTemplateOutlet", _r5);
    }
}
function DateRangePopupComponent_ng_template_3_Template(rf, ctx) {
    if (rf & 1) {
        const _r27 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div")(1, "inner-popup", 14);
        i0.ɵɵlistener("panelModeChange", function DateRangePopupComponent_ng_template_3_Template_inner_popup_panelModeChange_1_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r27); const partType_r25 = restoredCtx.partType; const ctx_r26 = i0.ɵɵnextContext(); return ctx_r26.onPanelModeChange($event, partType_r25); })("cellHover", function DateRangePopupComponent_ng_template_3_Template_inner_popup_cellHover_1_listener($event) { i0.ɵɵrestoreView(_r27); const ctx_r28 = i0.ɵɵnextContext(); return ctx_r28.onCellHover($event); })("selectDate", function DateRangePopupComponent_ng_template_3_Template_inner_popup_selectDate_1_listener($event) { i0.ɵɵrestoreView(_r27); const ctx_r29 = i0.ɵɵnextContext(); return ctx_r29.changeValueFromSelect($event, !ctx_r29.showTime); })("selectTime", function DateRangePopupComponent_ng_template_3_Template_inner_popup_selectTime_1_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r27); const partType_r25 = restoredCtx.partType; const ctx_r30 = i0.ɵɵnextContext(); return ctx_r30.onSelectTime($event, partType_r25); })("headerChange", function DateRangePopupComponent_ng_template_3_Template_inner_popup_headerChange_1_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r27); const partType_r25 = restoredCtx.partType; const ctx_r31 = i0.ɵɵnextContext(); return ctx_r31.onActiveDateChange($event, partType_r25); });
        i0.ɵɵelementEnd()();
    }
    if (rf & 2) {
        const partType_r25 = ctx.partType;
        const ctx_r4 = i0.ɵɵnextContext();
        i0.ɵɵclassMapInterpolate1("", ctx_r4.prefixCls, "-panel w-full");
        i0.ɵɵclassProp("tds-picker-panel-rtl", ctx_r4.dir === "rtl");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("showWeek", ctx_r4.showWeek)("endPanelMode", ctx_r4.getPanelMode(ctx_r4.endPanelMode, partType_r25))("partType", partType_r25)("locale", ctx_r4.locale)("showTimePicker", ctx_r4.hasTimePicker)("timeOptions", ctx_r4.getTimeOptions(partType_r25))("panelMode", ctx_r4.getPanelMode(ctx_r4.panelMode, partType_r25))("activeDate", ctx_r4.getActiveDate(partType_r25))("value", ctx_r4.getValue(partType_r25))("disabledDate", ctx_r4.disabledDate)("dateRender", ctx_r4.dateRender)("selectedValue", ctx_r4.datePickerService.value)("hoverValue", ctx_r4.hoverValue);
    }
}
function DateRangePopupComponent_ng_template_5_calendar_footer_0_Template(rf, ctx) {
    if (rf & 1) {
        const _r34 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "calendar-footer", 16);
        i0.ɵɵlistener("clickOk", function DateRangePopupComponent_ng_template_5_calendar_footer_0_Template_calendar_footer_clickOk_0_listener() { i0.ɵɵrestoreView(_r34); const ctx_r33 = i0.ɵɵnextContext(2); return ctx_r33.onClickOk(); })("clickToday", function DateRangePopupComponent_ng_template_5_calendar_footer_0_Template_calendar_footer_clickToday_0_listener($event) { i0.ɵɵrestoreView(_r34); const ctx_r35 = i0.ɵɵnextContext(2); return ctx_r35.onClickToday($event); })("clickCancel", function DateRangePopupComponent_ng_template_5_calendar_footer_0_Template_calendar_footer_clickCancel_0_listener() { i0.ɵɵrestoreView(_r34); const ctx_r36 = i0.ɵɵnextContext(2); return ctx_r36.onclickCancel(); });
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const ctx_r32 = i0.ɵɵnextContext(2);
        const _r7 = i0.ɵɵreference(8);
        i0.ɵɵproperty("locale", ctx_r32.locale)("isRange", ctx_r32.isRange)("showToday", ctx_r32.showToday)("showNow", ctx_r32.showNow)("hasTimePicker", ctx_r32.hasTimePicker)("okDisabled", !ctx_r32.isAllowed(ctx_r32.datePickerService.value))("extraFooter", ctx_r32.extraFooter)("rangeQuickSelector", ctx_r32.ranges ? _r7 : null)("listDate", ctx_r32.datePickerService.value);
    }
}
function DateRangePopupComponent_ng_template_5_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵtemplate(0, DateRangePopupComponent_ng_template_5_calendar_footer_0_Template, 1, 9, "calendar-footer", 15);
    }
    if (rf & 2) {
        const ctx_r6 = i0.ɵɵnextContext();
        i0.ɵɵproperty("ngIf", ctx_r6.hasFooter);
    }
}
function DateRangePopupComponent_ng_template_7_li_0_Template(rf, ctx) {
    if (rf & 1) {
        const _r40 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "li", 18);
        i0.ɵɵlistener("click", function DateRangePopupComponent_ng_template_7_li_0_Template_li_click_0_listener() { const restoredCtx = i0.ɵɵrestoreView(_r40); const name_r38 = restoredCtx.$implicit; const ctx_r39 = i0.ɵɵnextContext(2); return ctx_r39.onClickPresetRange(ctx_r39.ranges[name_r38]); })("mouseenter", function DateRangePopupComponent_ng_template_7_li_0_Template_li_mouseenter_0_listener() { const restoredCtx = i0.ɵɵrestoreView(_r40); const name_r38 = restoredCtx.$implicit; const ctx_r41 = i0.ɵɵnextContext(2); return ctx_r41.onHoverPresetRange(ctx_r41.ranges[name_r38]); })("mouseleave", function DateRangePopupComponent_ng_template_7_li_0_Template_li_mouseleave_0_listener() { i0.ɵɵrestoreView(_r40); const ctx_r42 = i0.ɵɵnextContext(2); return ctx_r42.onPresetRangeMouseLeave(); });
        i0.ɵɵelementStart(1, "span", 19);
        i0.ɵɵtext(2);
        i0.ɵɵelementEnd()();
    }
    if (rf & 2) {
        const name_r38 = ctx.$implicit;
        const ctx_r37 = i0.ɵɵnextContext(2);
        i0.ɵɵclassMapInterpolate1("", ctx_r37.prefixCls, "-preset");
        i0.ɵɵadvance(2);
        i0.ɵɵtextInterpolate(name_r38);
    }
}
function DateRangePopupComponent_ng_template_7_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵtemplate(0, DateRangePopupComponent_ng_template_7_li_0_Template, 3, 4, "li", 17);
    }
    if (rf & 2) {
        const ctx_r8 = i0.ɵɵnextContext();
        i0.ɵɵproperty("ngForOf", ctx_r8.getObjectKeys(ctx_r8.ranges));
    }
}
class DateRangePopupComponent {
    constructor(datePickerService, cdr) {
        this.datePickerService = datePickerService;
        this.cdr = cdr;
        this.inline = false;
        this.dir = 'ltr';
        this.panelModeChange = new EventEmitter();
        this.calendarChange = new EventEmitter();
        this.resultOk = new EventEmitter(); // Emitted when done with date selecting
        this.resultCancel = new EventEmitter();
        this.menuLeft = null;
        this.prefixCls = PREFIX_CLASS;
        this.endPanelMode = 'date';
        this.timeOptions = null;
        this.hoverValue = []; // Range ONLY
        this.checkedPartArr = [false, false];
        this.destroy$ = new Subject();
        this.disabledStartTime = (value) => {
            return this.disabledTime && this.disabledTime(value, 'start');
        };
        this.disabledEndTime = (value) => {
            return this.disabledTime && this.disabledTime(value, 'end');
        };
    }
    get hasTimePicker() {
        return !!this.showTime;
    }
    get hasFooter() {
        return this.showToday || this.hasTimePicker || !!this.extraFooter || !!this.ranges || !!this.isRange;
    }
    ngOnInit() {
        this.buildMenuLeft();
        merge(this.datePickerService.valueChange$, this.datePickerService.inputPartChange$)
            .pipe(takeUntil(this.destroy$))
            .subscribe(() => {
            this.updateActiveDate();
            this.cdr.markForCheck();
        });
    }
    ngOnChanges(changes) {
        // Parse showTime options
        if (changes.showTime || changes.disabledTime) {
            if (this.showTime) {
                this.buildTimeOptions();
            }
        }
        if (changes.panelMode) {
            this.endPanelMode = this.panelMode;
        }
        if (changes.defaultPickerValue) {
            this.updateActiveDate();
        }
    }
    ngOnDestroy() {
        this.destroy$.next();
        this.destroy$.complete();
    }
    updateActiveDate() {
        const activeDate = this.datePickerService.hasValue()
            ? this.datePickerService.value
            : this.datePickerService.makeValue(this.defaultPickerValue);
        this.datePickerService.setActiveDate(activeDate, this.hasTimePicker, this.getPanelMode(this.endPanelMode));
    }
    /**
     * Prevent input losing focus when click panel
     * @param event
     */
    onMousedown(event) {
        event.preventDefault();
    }
    onClickOk() {
        const inputIndex = { left: 0, right: 1 }[this.datePickerService.activeInput];
        const value = this.isRange
            ? this.datePickerService.value[inputIndex]
            : this.datePickerService.value;
        this.changeValueFromSelect(value, true, true);
        this.resultOk.emit();
    }
    onClickToday(value) {
        this.changeValueFromSelect(value, !this.showTime, true);
    }
    onCellHover(value) {
        if (!this.isRange) {
            return;
        }
        const otherInputIndex = { left: 1, right: 0 }[this.datePickerService.activeInput];
        const base = (this.datePickerService.value || [])[otherInputIndex];
        if (base) {
            if (base.isBeforeDay(value)) {
                this.hoverValue = [base, value];
            }
            else {
                this.hoverValue = [value, base];
            }
        }
    }
    onPanelModeChange(mode, partType) {
        if (this.isRange) {
            const index = this.datePickerService.getActiveIndex(partType);
            if (index === 0) {
                this.panelMode = [mode, this.panelMode[1]];
            }
            else {
                this.panelMode = [this.panelMode[0], mode];
            }
        }
        else {
            this.panelMode = mode;
        }
        this.panelModeChange.emit(this.panelMode);
    }
    onActiveDateChange(value, partType) {
        if (this.isRange) {
            const activeDate = [];
            activeDate[this.datePickerService.getActiveIndex(partType)] = value;
            this.datePickerService.setActiveDate(activeDate, this.hasTimePicker, this.getPanelMode(this.endPanelMode, partType));
        }
        else {
            this.datePickerService.setActiveDate(value);
        }
    }
    onSelectTime(value, partType) {
        if (this.isRange) {
            const newValue = cloneDate(this.datePickerService.value);
            const index = this.datePickerService.getActiveIndex(partType);
            newValue[index] = this.overrideHms(value, newValue[index]);
            this.datePickerService.setValue(newValue);
        }
        else {
            const newValue = this.overrideHms(value, this.datePickerService.value);
            this.datePickerService.setValue(newValue); // If not select a date currently, use today
        }
        this.datePickerService.inputPartChange$.next();
        this.buildTimeOptions();
    }
    changeValueFromSelect(value, emitValue = true, submit = false) {
        if (this.isRange) {
            const selectedValue = cloneDate(this.datePickerService.value) || [];
            const checkedPart = this.datePickerService.activeInput;
            let nextPart = checkedPart;
            selectedValue[this.datePickerService.getActiveIndex(checkedPart)] = value;
            this.checkedPartArr[this.datePickerService.getActiveIndex(checkedPart)] = true;
            this.hoverValue = selectedValue;
            if (emitValue) {
                if (this.inline) {
                    // For UE, Should always be reversed, and clear vaue when next part is right
                    nextPart = this.reversedPart(checkedPart);
                    if (nextPart === 'right') {
                        selectedValue[this.datePickerService.getActiveIndex(nextPart)] = null;
                        this.checkedPartArr[this.datePickerService.getActiveIndex(nextPart)] = false;
                    }
                    this.datePickerService.setValue(selectedValue);
                    this.calendarChange.emit(selectedValue);
                    if (this.isBothAllowed(selectedValue) && this.checkedPartArr[0] && this.checkedPartArr[1]) {
                        this.clearHoverValue();
                        this.datePickerService.emitValue$.next();
                    }
                }
                else {
                    /**
                     * if sort order is wrong, clear the other part's value
                     */
                    if (wrongSortOrder(selectedValue)) {
                        nextPart = this.reversedPart(checkedPart);
                        selectedValue[this.datePickerService.getActiveIndex(nextPart)] = null;
                        this.checkedPartArr[this.datePickerService.getActiveIndex(nextPart)] = false;
                    }
                    this.datePickerService.setValue(selectedValue);
                    /**
                     * range date usually selected paired,
                     * so we emit the date value only both date is allowed and both part are checked
                     */
                    if (this.isBothAllowed(selectedValue)) {
                        if (this.checkedPartArr[0] && this.checkedPartArr[1]) {
                            this.calendarChange.emit(selectedValue);
                            this.clearHoverValue();
                        }
                        if (submit)
                            this.datePickerService.emitValue$.next();
                    }
                    else if (this.isAllowed(selectedValue)) {
                        nextPart = this.reversedPart(checkedPart);
                        if (submit)
                            this.calendarChange.emit([value.clone()]);
                    }
                }
            }
            else {
                this.datePickerService.setValue(selectedValue);
            }
            this.datePickerService.inputPartChange$.next(nextPart);
        }
        else {
            this.datePickerService.setValue(value);
            this.datePickerService.inputPartChange$.next();
            if (emitValue && this.isAllowed(value)) {
                this.datePickerService.emitValue$.next();
            }
        }
    }
    reversedPart(part) {
        return part === 'left' ? 'right' : 'left';
    }
    getPanelMode(panelMode, partType) {
        if (this.isRange) {
            return panelMode[this.datePickerService.getActiveIndex(partType)];
        }
        else {
            return panelMode;
        }
    }
    // Get single value or part value of a range
    getValue(partType) {
        if (this.isRange) {
            return (this.datePickerService.value || [])[this.datePickerService.getActiveIndex(partType)];
        }
        else {
            return this.datePickerService.value;
        }
    }
    getActiveDate(partType) {
        if (this.isRange) {
            return this.datePickerService.activeDate[this.datePickerService.getActiveIndex(partType)];
        }
        else {
            return this.datePickerService.activeDate;
        }
    }
    isOneAllowed(selectedValue) {
        if (!TDSHelperObject.hasValue(selectedValue)) {
            return false;
        }
        const index = this.datePickerService.getActiveIndex();
        const disabledTimeArr = [this.disabledStartTime, this.disabledEndTime];
        return isAllowedDate(selectedValue[index], this.disabledDate, disabledTimeArr[index]);
    }
    isBothAllowed(selectedValue) {
        return (isAllowedDate(selectedValue[0], this.disabledDate, this.disabledStartTime) &&
            isAllowedDate(selectedValue[1], this.disabledDate, this.disabledEndTime));
    }
    isAllowed(value, isBoth = false) {
        if (this.isRange) {
            return isBoth ? this.isBothAllowed(value) : this.isOneAllowed(value);
        }
        else {
            return isAllowedDate(value, this.disabledDate, this.disabledTime);
        }
    }
    getTimeOptions(partType) {
        if (this.showTime && this.timeOptions) {
            return this.timeOptions instanceof Array ? this.timeOptions[this.datePickerService.getActiveIndex(partType)] : this.timeOptions;
        }
        return null;
    }
    onClickPresetRange(val) {
        const value = typeof val === 'function' ? val() : val;
        if (value) {
            this.datePickerService.setValue([new CandyDate(value[0]), new CandyDate(value[1])]);
            //khi submit mới change data
            // console.log('onClickPresetRange')
            // this.datePickerService.emitValue$.next();
            // this.calendarChange.emit([new CandyDate(value[0]), new CandyDate(value[1])]);
        }
    }
    onPresetRangeMouseLeave() {
        this.clearHoverValue();
    }
    onHoverPresetRange(val) {
        if (typeof val !== 'function') {
            this.hoverValue = [new CandyDate(val[0]), new CandyDate(val[1])];
        }
    }
    getObjectKeys(obj) {
        return obj ? Object.keys(obj) : [];
    }
    show(partType) {
        const hide = this.showTime && this.isRange && this.datePickerService.activeInput !== partType;
        return !hide;
    }
    clearHoverValue() {
        this.hoverValue = [];
    }
    buildTimeOptions() {
        if (this.showTime) {
            const showTime = typeof this.showTime === 'object' ? this.showTime : { use12Hours: true };
            if (this.isRange) {
                const value = (this.datePickerService.value || []);
                this.timeOptions = [this.overrideTimeOptions(showTime, value[0], 'start'), this.overrideTimeOptions(showTime, value[1], 'end')];
            }
            else {
                this.timeOptions = this.overrideTimeOptions(showTime, this.datePickerService.value);
            }
        }
        else {
            this.timeOptions = null;
        }
    }
    overrideTimeOptions(origin, value, partial) {
        let disabledTimeFn;
        if (partial) {
            disabledTimeFn = partial === 'start' ? this.disabledStartTime : this.disabledEndTime;
        }
        else {
            disabledTimeFn = this.disabledTime;
        }
        return Object.assign(Object.assign({}, origin), getTimeConfig(value, disabledTimeFn));
    }
    overrideHms(newValue, oldValue) {
        // tslint:disable-next-line:no-parameter-reassignment
        newValue = newValue || new CandyDate();
        // tslint:disable-next-line:no-parameter-reassignment
        oldValue = oldValue || new CandyDate();
        return oldValue.setHms(newValue.getHours(), newValue.getMinutes(), newValue.getSeconds());
    }
    buildMenuLeft() {
        let today = new Date();
        let lastMonth = new Date(today.getFullYear(), today.getMonth() - 1, 1);
        this.menuLeft = this.ranges ? this.ranges : {
            'Today': [today, today],
            'Yesterday': [addDays(today, -1), today],
            'Last 7 Days': [addDays(today, -7), today],
            'Last 30 Days': [addDays(today, -30), today],
            'This Month': [startOfMonth(today), endOfMonth(today)],
            'Last Month': [startOfMonth(lastMonth), endOfMonth(lastMonth)],
            // 'Custom Range': [new Date(), endOfMonth(new Date())],
        };
    }
    onclickCancel() {
        this.resultCancel.emit();
    }
}
DateRangePopupComponent.ɵfac = function DateRangePopupComponent_Factory(t) { return new (t || DateRangePopupComponent)(i0.ɵɵdirectiveInject(DatePickerService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); };
DateRangePopupComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: DateRangePopupComponent, selectors: [["date-range-popup"]], hostBindings: function DateRangePopupComponent_HostBindings(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵlistener("mousedown", function DateRangePopupComponent_mousedown_HostBindingHandler($event) { return ctx.onMousedown($event); });
        }
    }, inputs: { isRange: "isRange", inline: "inline", showWeek: "showWeek", locale: "locale", disabledDate: "disabledDate", disabledTime: "disabledTime", showToday: "showToday", showNow: "showNow", showTime: "showTime", extraFooter: "extraFooter", ranges: "ranges", dateRender: "dateRender", panelMode: "panelMode", defaultPickerValue: "defaultPickerValue", dir: "dir" }, outputs: { panelModeChange: "panelModeChange", calendarChange: "calendarChange", resultOk: "resultOk", resultCancel: "resultCancel" }, exportAs: ["dateRangePopup"], features: [i0.ɵɵNgOnChangesFeature], decls: 9, vars: 2, consts: [[4, "ngIf", "ngIfElse"], ["singlePanel", ""], ["tplInnerPopup", ""], ["tplFooter", ""], ["tplRangeQuickSelector", ""], ["class", "flex-auto border-0 border-r border-neutral-2-200 dark:border-d-neutral-2-200 ", 4, "ngIf"], [3, "ngClass"], ["noTimePicker", ""], [4, "ngTemplateOutlet"], [1, "flex-auto", "border-0", "border-r", "border-neutral-2-200", "dark:border-d-neutral-2-200"], ["class", "w-full px-4 py-2.5 text-caption-1 font-regular text-neutral-1-900 dark:text-d-neutral-1-900 dark:border-d-neutral-2-200 cursor-pointer hover:bg-primary-1 hover:text-white", 3, "click", "mouseenter", "mouseleave", 4, "ngFor", "ngForOf"], [1, "w-full", "px-4", "py-2.5", "text-caption-1", "font-regular", "text-neutral-1-900", "dark:text-d-neutral-1-900", "dark:border-d-neutral-2-200", "cursor-pointer", "hover:bg-primary-1", "hover:text-white", 3, "click", "mouseenter", "mouseleave"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], ["tabindex", "-1"], [3, "showWeek", "endPanelMode", "partType", "locale", "showTimePicker", "timeOptions", "panelMode", "activeDate", "value", "disabledDate", "dateRender", "selectedValue", "hoverValue", "panelModeChange", "cellHover", "selectDate", "selectTime", "headerChange"], [3, "locale", "isRange", "showToday", "showNow", "hasTimePicker", "okDisabled", "extraFooter", "rangeQuickSelector", "listDate", "clickOk", "clickToday", "clickCancel", 4, "ngIf"], [3, "locale", "isRange", "showToday", "showNow", "hasTimePicker", "okDisabled", "extraFooter", "rangeQuickSelector", "listDate", "clickOk", "clickToday", "clickCancel"], [3, "class", "click", "mouseenter", "mouseleave", 4, "ngFor", "ngForOf"], [3, "click", "mouseenter", "mouseleave"], [1, "tds-tag", "tds-tag-blue"]], template: function DateRangePopupComponent_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵtemplate(0, DateRangePopupComponent_ng_container_0_Template, 10, 22, "ng-container", 0);
            i0.ɵɵtemplate(1, DateRangePopupComponent_ng_template_1_Template, 4, 13, "ng-template", null, 1, i0.ɵɵtemplateRefExtractor);
            i0.ɵɵtemplate(3, DateRangePopupComponent_ng_template_3_Template, 2, 18, "ng-template", null, 2, i0.ɵɵtemplateRefExtractor);
            i0.ɵɵtemplate(5, DateRangePopupComponent_ng_template_5_Template, 1, 1, "ng-template", null, 3, i0.ɵɵtemplateRefExtractor);
            i0.ɵɵtemplate(7, DateRangePopupComponent_ng_template_7_Template, 1, 1, "ng-template", null, 4, i0.ɵɵtemplateRefExtractor);
        }
        if (rf & 2) {
            const _r1 = i0.ɵɵreference(2);
            i0.ɵɵproperty("ngIf", ctx.isRange)("ngIfElse", _r1);
        }
    }, directives: [i2.NgIf, i2.NgForOf, i2.NgClass, i2.NgTemplateOutlet, InnerPopupComponent, CalendarFooterComponent], encapsulation: 2, changeDetection: 0 });
(function () {
    (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(DateRangePopupComponent, [{
            type: Component,
            args: [{ encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, selector: 'date-range-popup', exportAs: 'dateRangePopup', host: {
                        '(mousedown)': 'onMousedown($event)'
                    }, template: "<ng-container *ngIf=\"isRange; else singlePanel\">\r\n    <div class=\"{{ prefixCls }}-range-wrapper {{ prefixCls }}-date-range-wrapper\">\r\n        <div class=\"{{ prefixCls }}-range-arrow\" [style.left.px]=\"datePickerService.arrowLeft\"></div>\r\n        <div class=\"{{ prefixCls }}-panel-container w-full flex  items-stretch justify-center\">\r\n            <div class=\"flex-auto border-0 border-r border-neutral-2-200 dark:border-d-neutral-2-200 \"\r\n                *ngIf=\"!hasTimePicker\">\r\n\r\n                <div *ngFor=\"let name of getObjectKeys(menuLeft!)\" (click)=\"onClickPresetRange(menuLeft![name])\"\r\n                    (mouseenter)=\"onHoverPresetRange(menuLeft![name])\" (mouseleave)=\"onPresetRangeMouseLeave()\"\r\n                    class=\"w-full px-4 py-2.5 text-caption-1 font-regular text-neutral-1-900 dark:text-d-neutral-1-900 dark:border-d-neutral-2-200 cursor-pointer hover:bg-primary-1 hover:text-white\">\r\n                    {{ name }}\r\n                </div>\r\n\r\n            </div>\r\n            <div class=\"{{ prefixCls }}-panels flex \" [ngClass]=\"{'w-full':hasTimePicker}\">\r\n                <ng-container *ngIf=\"hasTimePicker; else noTimePicker\">\r\n                    <ng-container\r\n                        *ngTemplateOutlet=\"tplInnerPopup; context: { partType: datePickerService.activeInput }\">\r\n                    </ng-container>\r\n                </ng-container>\r\n                <ng-template #noTimePicker>\r\n                    <ng-container *ngTemplateOutlet=\"tplInnerPopup; context: { partType: 'left' }\"></ng-container>\r\n                    <ng-container *ngTemplateOutlet=\"tplInnerPopup; context: { partType: 'right' }\"></ng-container>\r\n                </ng-template>\r\n            </div>\r\n        </div>\r\n        <ng-container *ngTemplateOutlet=\"tplFooter\"></ng-container>\r\n    </div>\r\n</ng-container>\r\n<ng-template #singlePanel>\r\n    <div class=\"{{ prefixCls }}-panel-container {{ showWeek ? prefixCls + '-week-number' : '' }} {{\r\n        hasTimePicker ? prefixCls + '-time' : ''\r\n      }} {{ isRange ? prefixCls + '-range' : '' }}\">\r\n        <div class=\"{{ prefixCls }}-panel\" [class.tds-picker-panel-rtl]=\"dir === 'rtl'\" tabindex=\"-1\">\r\n            <!-- Single ONLY -->\r\n            <ng-container *ngTemplateOutlet=\"tplInnerPopup\"></ng-container>\r\n            <ng-container *ngTemplateOutlet=\"tplFooter\"></ng-container>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #tplInnerPopup let-partType=\"partType\">\r\n    <div class=\"{{ prefixCls }}-panel w-full\" [class.tds-picker-panel-rtl]=\"dir === 'rtl'\">\r\n        <!-- TODO(@wenqi73) [selectedValue] [hoverValue] types-->\r\n        <inner-popup [showWeek]=\"showWeek\" [endPanelMode]=\"getPanelMode(endPanelMode, partType)\" [partType]=\"partType\"\r\n            [locale]=\"locale!\" [showTimePicker]=\"hasTimePicker\" [timeOptions]=\"getTimeOptions(partType)\"\r\n            [panelMode]=\"getPanelMode(panelMode, partType)\" (panelModeChange)=\"onPanelModeChange($event, partType)\"\r\n            [activeDate]=\"getActiveDate(partType)\" [value]=\"getValue(partType)\" [disabledDate]=\"disabledDate\"\r\n            [dateRender]=\"dateRender\" [selectedValue]=\"$any(datePickerService.value)\" [hoverValue]=\"$any(hoverValue)\"\r\n            (cellHover)=\"onCellHover($event)\" (selectDate)=\"changeValueFromSelect($event,!showTime)\"\r\n            (selectTime)=\"onSelectTime($event, partType)\" (headerChange)=\"onActiveDateChange($event, partType)\">\r\n        </inner-popup>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #tplFooter>\r\n\r\n    <calendar-footer *ngIf=\"hasFooter\" [locale]=\"locale!\" [isRange]=\"isRange\" [showToday]=\"showToday\"\r\n        [showNow]=\"showNow\" [hasTimePicker]=\"hasTimePicker\" [okDisabled]=\"!isAllowed($any(datePickerService.value))\"\r\n        [extraFooter]=\"extraFooter\" [rangeQuickSelector]=\"ranges ? tplRangeQuickSelector : null\" (clickOk)=\"onClickOk()\"\r\n        (clickToday)=\"onClickToday($event)\" [listDate]=\"$any(datePickerService.value)\" (clickCancel)=\"onclickCancel()\">\r\n    </calendar-footer>\r\n</ng-template>\r\n\r\n<!-- Range ONLY: Range Quick Selector -->\r\n<ng-template #tplRangeQuickSelector>\r\n    <li *ngFor=\"let name of getObjectKeys(ranges)\" class=\"{{ prefixCls }}-preset\"\r\n        (click)=\"onClickPresetRange(ranges![name])\" (mouseenter)=\"onHoverPresetRange(ranges![name])\"\r\n        (mouseleave)=\"onPresetRangeMouseLeave()\">\r\n        <span class=\"tds-tag tds-tag-blue\">{{ name }}</span>\r\n    </li>\r\n</ng-template>" }]
        }], function () { return [{ type: DatePickerService }, { type: i0.ChangeDetectorRef }]; }, { isRange: [{
                type: Input
            }], inline: [{
                type: Input
            }], showWeek: [{
                type: Input
            }], locale: [{
                type: Input
            }], disabledDate: [{
                type: Input
            }], disabledTime: [{
                type: Input
            }], showToday: [{
                type: Input
            }], showNow: [{
                type: Input
            }], showTime: [{
                type: Input
            }], extraFooter: [{
                type: Input
            }], ranges: [{
                type: Input
            }], dateRender: [{
                type: Input
            }], panelMode: [{
                type: Input
            }], defaultPickerValue: [{
                type: Input
            }], dir: [{
                type: Input
            }], panelModeChange: [{
                type: Output
            }], calendarChange: [{
                type: Output
            }], resultOk: [{
                type: Output
            }], resultCancel: [{
                type: Output
            }] });
})();

const _c0 = ["separatorElement"];
const _c1 = ["pickerInput"];
const _c2 = ["rangePickerInput"];
function TDSDatePickerComponent_ng_container_0_div_1_ng_container_4_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainer(0);
    }
}
const _c3 = function (a0, a1, a2) { return { "pl-2.5 py-1": a0, "pl-3 py-1.5": a1, "pl-4 py-2": a2 }; };
function TDSDatePickerComponent_ng_container_0_div_1_Template(rf, ctx) {
    if (rf & 1) {
        const _r15 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 8)(1, "div", 9)(2, "input", 10, 11);
        i0.ɵɵlistener("ngModelChange", function TDSDatePickerComponent_ng_container_0_div_1_Template_input_ngModelChange_2_listener($event) { i0.ɵɵrestoreView(_r15); const ctx_r14 = i0.ɵɵnextContext(2); return ctx_r14.inputValue = $event; })("focus", function TDSDatePickerComponent_ng_container_0_div_1_Template_input_focus_2_listener($event) { i0.ɵɵrestoreView(_r15); const ctx_r16 = i0.ɵɵnextContext(2); return ctx_r16.onFocus($event); })("focusout", function TDSDatePickerComponent_ng_container_0_div_1_Template_input_focusout_2_listener($event) { i0.ɵɵrestoreView(_r15); const ctx_r17 = i0.ɵɵnextContext(2); return ctx_r17.onFocusout($event); })("ngModelChange", function TDSDatePickerComponent_ng_container_0_div_1_Template_input_ngModelChange_2_listener($event) { i0.ɵɵrestoreView(_r15); const ctx_r18 = i0.ɵɵnextContext(2); return ctx_r18.onInputChange($event); })("keyup.enter", function TDSDatePickerComponent_ng_container_0_div_1_Template_input_keyup_enter_2_listener($event) { i0.ɵɵrestoreView(_r15); const ctx_r19 = i0.ɵɵnextContext(2); return ctx_r19.onKeyupEnter($event); });
        i0.ɵɵelementEnd()();
        i0.ɵɵtemplate(4, TDSDatePickerComponent_ng_container_0_div_1_ng_container_4_Template, 1, 0, "ng-container", 12);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const ctx_r10 = i0.ɵɵnextContext(2);
        const _r3 = i0.ɵɵreference(4);
        i0.ɵɵclassMap(ctx_r10.tdsCssContainer);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction3(11, _c3, ctx_r10.size === "sm", ctx_r10.size === "md", ctx_r10.size === "lg"));
        i0.ɵɵadvance(1);
        i0.ɵɵclassProp("tds-input-disabled", ctx_r10.disabled);
        i0.ɵɵpropertyInterpolate("placeholder", ctx_r10.getPlaceholder());
        i0.ɵɵproperty("disabled", ctx_r10.disabled)("readOnly", ctx_r10.inputReadOnly)("ngModel", ctx_r10.inputValue);
        i0.ɵɵattribute("id", ctx_r10.id);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngTemplateOutlet", _r3);
    }
}
function TDSDatePickerComponent_ng_container_0_ng_container_2_ng_container_4_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainer(0);
    }
}
function TDSDatePickerComponent_ng_container_0_ng_container_2_ng_container_8_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵtext(1);
        i0.ɵɵelementContainerEnd();
    }
    if (rf & 2) {
        const ctx_r22 = i0.ɵɵnextContext(3);
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate(ctx_r22.deparator);
    }
}
function TDSDatePickerComponent_ng_container_0_ng_container_2_ng_template_9_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementStart(0, "span");
        i0.ɵɵtext(1, " - ");
        i0.ɵɵelementEnd();
    }
}
function TDSDatePickerComponent_ng_container_0_ng_container_2_ng_container_12_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainer(0);
    }
}
function TDSDatePickerComponent_ng_container_0_ng_container_2_ng_container_13_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainer(0);
    }
}
const _c4 = function () { return { partType: "left" }; };
const _c5 = function () { return { partType: "right" }; };
function TDSDatePickerComponent_ng_container_0_ng_container_2_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵelementStart(1, "div", 8)(2, "div", 9)(3, "div");
        i0.ɵɵtemplate(4, TDSDatePickerComponent_ng_container_0_ng_container_2_ng_container_4_Template, 1, 0, "ng-container", 13);
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(5, "div", null, 14)(7, "span");
        i0.ɵɵtemplate(8, TDSDatePickerComponent_ng_container_0_ng_container_2_ng_container_8_Template, 2, 1, "ng-container", 0);
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(9, TDSDatePickerComponent_ng_container_0_ng_container_2_ng_template_9_Template, 2, 0, "ng-template", null, 15, i0.ɵɵtemplateRefExtractor);
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(11, "div");
        i0.ɵɵtemplate(12, TDSDatePickerComponent_ng_container_0_ng_container_2_ng_container_12_Template, 1, 0, "ng-container", 13);
        i0.ɵɵelementEnd()();
        i0.ɵɵtemplate(13, TDSDatePickerComponent_ng_container_0_ng_container_2_ng_container_13_Template, 1, 0, "ng-container", 12);
        i0.ɵɵelementEnd();
        i0.ɵɵelementContainerEnd();
    }
    if (rf & 2) {
        const _r23 = i0.ɵɵreference(10);
        const ctx_r11 = i0.ɵɵnextContext(2);
        const _r1 = i0.ɵɵreference(2);
        const _r3 = i0.ɵɵreference(4);
        i0.ɵɵadvance(1);
        i0.ɵɵclassMap(ctx_r11.tdsCssContainer);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction3(22, _c3, ctx_r11.size === "sm", ctx_r11.size === "md", ctx_r11.size === "lg"));
        i0.ɵɵadvance(1);
        i0.ɵɵclassMapInterpolate1("", ctx_r11.prefixCls, "-input");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngTemplateOutlet", _r1)("ngTemplateOutletContext", i0.ɵɵpureFunction0(26, _c4));
        i0.ɵɵadvance(1);
        i0.ɵɵclassMapInterpolate1("", ctx_r11.prefixCls, "-range-separator");
        i0.ɵɵadvance(2);
        i0.ɵɵclassMapInterpolate1("", ctx_r11.prefixCls, "-separator");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r11.deparator)("ngIfElse", _r23);
        i0.ɵɵadvance(3);
        i0.ɵɵclassMapInterpolate1("", ctx_r11.prefixCls, "-input pl-2");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngTemplateOutlet", _r1)("ngTemplateOutletContext", i0.ɵɵpureFunction0(27, _c5));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngTemplateOutlet", _r3);
    }
}
function TDSDatePickerComponent_ng_container_0_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵtemplate(1, TDSDatePickerComponent_ng_container_0_div_1_Template, 5, 15, "div", 6);
        i0.ɵɵtemplate(2, TDSDatePickerComponent_ng_container_0_ng_container_2_Template, 14, 28, "ng-container", 7);
        i0.ɵɵelementContainerEnd();
    }
    if (rf & 2) {
        const ctx_r0 = i0.ɵɵnextContext();
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", !ctx_r0.isRange);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r0.isRange);
    }
}
function TDSDatePickerComponent_ng_template_1_Template(rf, ctx) {
    if (rf & 1) {
        const _r30 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "input", 16, 17);
        i0.ɵɵlistener("click", function TDSDatePickerComponent_ng_template_1_Template_input_click_0_listener($event) { i0.ɵɵrestoreView(_r30); const ctx_r29 = i0.ɵɵnextContext(); return ctx_r29.onClickInputBox($event); })("focusout", function TDSDatePickerComponent_ng_template_1_Template_input_focusout_0_listener($event) { i0.ɵɵrestoreView(_r30); const ctx_r31 = i0.ɵɵnextContext(); return ctx_r31.onFocusout($event); })("focus", function TDSDatePickerComponent_ng_template_1_Template_input_focus_0_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r30); const partType_r27 = restoredCtx.partType; const ctx_r32 = i0.ɵɵnextContext(); return ctx_r32.onFocus($event, partType_r27); })("keyup.enter", function TDSDatePickerComponent_ng_template_1_Template_input_keyup_enter_0_listener($event) { i0.ɵɵrestoreView(_r30); const ctx_r33 = i0.ɵɵnextContext(); return ctx_r33.onKeyupEnter($event); })("ngModelChange", function TDSDatePickerComponent_ng_template_1_Template_input_ngModelChange_0_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r30); const partType_r27 = restoredCtx.partType; const ctx_r34 = i0.ɵɵnextContext(); return (ctx_r34.inputValue[ctx_r34.datePickerService.getActiveIndex(partType_r27)] = $event); })("ngModelChange", function TDSDatePickerComponent_ng_template_1_Template_input_ngModelChange_0_listener($event) { i0.ɵɵrestoreView(_r30); const ctx_r35 = i0.ɵɵnextContext(); return ctx_r35.onInputChange($event); });
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const partType_r27 = ctx.partType;
        const ctx_r2 = i0.ɵɵnextContext();
        i0.ɵɵproperty("disabled", ctx_r2.disabled)("readOnly", ctx_r2.inputReadOnly)("size", ctx_r2.inputSize)("ngModel", ctx_r2.inputValue[ctx_r2.datePickerService.getActiveIndex(partType_r27)])("placeholder", ctx_r2.getPlaceholder(partType_r27));
    }
}
const _c6 = function (a0, a1, a2) { return { "px-1": a0, "px-1.5": a1, "px-2": a2 }; };
function TDSDatePickerComponent_ng_template_3_div_0_Template(rf, ctx) {
    if (rf & 1) {
        const _r39 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 21);
        i0.ɵɵlistener("click", function TDSDatePickerComponent_ng_template_3_div_0_Template_div_click_0_listener($event) { i0.ɵɵrestoreView(_r39); const ctx_r38 = i0.ɵɵnextContext(2); return ctx_r38.onClickClear($event); });
        i0.ɵɵelement(1, "span", 22);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const ctx_r36 = i0.ɵɵnextContext(2);
        i0.ɵɵclassMapInterpolate1("", ctx_r36.prefixCls, "-clear flex items-center cursor-pointer");
        i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction3(4, _c6, ctx_r36.size === "sm", ctx_r36.size === "md", ctx_r36.size === "lg"));
    }
}
function TDSDatePickerComponent_ng_template_3_ng_container_2_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵelement(1, "span", 23);
        i0.ɵɵelementContainerEnd();
    }
    if (rf & 2) {
        const suffixIcon_r40 = ctx.$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngClass", suffixIcon_r40);
    }
}
function TDSDatePickerComponent_ng_template_3_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵtemplate(0, TDSDatePickerComponent_ng_template_3_div_0_Template, 2, 8, "div", 18);
        i0.ɵɵelementStart(1, "div", 19);
        i0.ɵɵtemplate(2, TDSDatePickerComponent_ng_template_3_ng_container_2_Template, 2, 1, "ng-container", 20);
        i0.ɵɵelementEnd();
    }
    if (rf & 2) {
        const ctx_r4 = i0.ɵɵnextContext();
        i0.ɵɵproperty("ngIf", ctx_r4.showClear());
        i0.ɵɵadvance(1);
        i0.ɵɵclassMapInterpolate1("", ctx_r4.prefixCls, "-suffix text-neutral-1-900 dark:text-d-neutral-1-900  group-hover:bg-neutral-3-50 dark:group-hover:bg-d-neutral-3-200 flex items-center  group-hover:border-transparent");
        i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction3(6, _c6, ctx_r4.size === "sm", ctx_r4.size === "md", ctx_r4.size === "lg"));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("tdsStringTemplateOutlet", ctx_r4.suffixIcon);
    }
}
function TDSDatePickerComponent_ng_template_5_ng_container_0_ng_container_2_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainer(0);
    }
}
function TDSDatePickerComponent_ng_template_5_ng_container_0_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵelementStart(1, "div", 24);
        i0.ɵɵtemplate(2, TDSDatePickerComponent_ng_template_5_ng_container_0_ng_container_2_Template, 1, 0, "ng-container", 12);
        i0.ɵɵelementEnd();
        i0.ɵɵelementContainerEnd();
    }
    if (rf & 2) {
        i0.ɵɵnextContext(2);
        const _r7 = i0.ɵɵreference(8);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("@slideMotion", "enter");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngTemplateOutlet", _r7);
    }
}
function TDSDatePickerComponent_ng_template_5_ng_container_1_ng_container_2_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainer(0);
    }
}
function TDSDatePickerComponent_ng_template_5_ng_container_1_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵelementStart(1, "div", 25);
        i0.ɵɵtemplate(2, TDSDatePickerComponent_ng_template_5_ng_container_1_ng_container_2_Template, 1, 0, "ng-container", 12);
        i0.ɵɵelementEnd();
        i0.ɵɵelementContainerEnd();
    }
    if (rf & 2) {
        const ctx_r42 = i0.ɵɵnextContext(2);
        const _r7 = i0.ɵɵreference(8);
        i0.ɵɵadvance(1);
        i0.ɵɵstyleProp("width", ctx_r42.isRange && !ctx_r42.showTime ? "700px" : "100%");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngTemplateOutlet", _r7);
    }
}
function TDSDatePickerComponent_ng_template_5_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵtemplate(0, TDSDatePickerComponent_ng_template_5_ng_container_0_Template, 3, 2, "ng-container", 7);
        i0.ɵɵtemplate(1, TDSDatePickerComponent_ng_template_5_ng_container_1_Template, 3, 3, "ng-container", 7);
    }
    if (rf & 2) {
        const ctx_r6 = i0.ɵɵnextContext();
        i0.ɵɵproperty("ngIf", !ctx_r6.inline);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r6.inline);
    }
}
function TDSDatePickerComponent_ng_template_7_Template(rf, ctx) {
    if (rf & 1) {
        const _r46 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 26)(1, "date-range-popup", 27);
        i0.ɵɵlistener("panelModeChange", function TDSDatePickerComponent_ng_template_7_Template_date_range_popup_panelModeChange_1_listener($event) { i0.ɵɵrestoreView(_r46); const ctx_r45 = i0.ɵɵnextContext(); return ctx_r45.onPanelModeChange($event); })("calendarChange", function TDSDatePickerComponent_ng_template_7_Template_date_range_popup_calendarChange_1_listener($event) { i0.ɵɵrestoreView(_r46); const ctx_r47 = i0.ɵɵnextContext(); return ctx_r47._calendarChange($event); })("resultOk", function TDSDatePickerComponent_ng_template_7_Template_date_range_popup_resultOk_1_listener() { i0.ɵɵrestoreView(_r46); const ctx_r48 = i0.ɵɵnextContext(); return ctx_r48.onResultOk(); })("resultCancel", function TDSDatePickerComponent_ng_template_7_Template_date_range_popup_resultCancel_1_listener() { i0.ɵɵrestoreView(_r46); const ctx_r49 = i0.ɵɵnextContext(); return ctx_r49.onResultCancel(); });
        i0.ɵɵelementEnd()();
    }
    if (rf & 2) {
        const ctx_r8 = i0.ɵɵnextContext();
        i0.ɵɵclassMapInterpolate2("", ctx_r8.prefixCls, "-dropdown ", ctx_r8.dropdownClassName, "");
        i0.ɵɵclassProp("tds-picker-dropdown-rtl", ctx_r8.dir === "rtl")("tds-picker-dropdown-placement-bottomLeft", ctx_r8.currentPositionY === "bottom" && ctx_r8.currentPositionX === "start")("tds-picker-dropdown-placement-topLeft", ctx_r8.currentPositionY === "top" && ctx_r8.currentPositionX === "start")("tds-picker-dropdown-placement-bottomRight", ctx_r8.currentPositionY === "bottom" && ctx_r8.currentPositionX === "end")("tds-picker-dropdown-placement-topRight", ctx_r8.currentPositionY === "top" && ctx_r8.currentPositionX === "end")("tds-picker-dropdown-range", ctx_r8.isRange)("tds-picker-active-left", ctx_r8.datePickerService.activeInput === "left")("tds-picker-active-right", ctx_r8.datePickerService.activeInput === "right");
        i0.ɵɵproperty("ngStyle", ctx_r8.popupStyle);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("isRange", ctx_r8.isRange)("inline", ctx_r8.inline)("defaultPickerValue", ctx_r8.defaultPickerValue)("showWeek", ctx_r8.mode === "week")("panelMode", ctx_r8.panelMode)("locale", ctx_r8.locale.lang)("showToday", ctx_r8.mode === "date" && ctx_r8.showToday && !ctx_r8.isRange && !ctx_r8.showTime)("showNow", ctx_r8.mode === "date" && ctx_r8.showNow && !ctx_r8.isRange && !!ctx_r8.showTime)("showTime", ctx_r8.showTime)("dateRender", ctx_r8.dateRender)("disabledDate", ctx_r8.disabledDate)("disabledTime", ctx_r8.disabledTime)("extraFooter", ctx_r8.extraFooter)("ranges", ctx_r8.ranges)("dir", ctx_r8.dir);
    }
}
function TDSDatePickerComponent_ng_template_9_ng_container_0_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵelementContainer(0);
    }
}
function TDSDatePickerComponent_ng_template_9_Template(rf, ctx) {
    if (rf & 1) {
        i0.ɵɵtemplate(0, TDSDatePickerComponent_ng_template_9_ng_container_0_Template, 1, 0, "ng-container", 12);
    }
    if (rf & 2) {
        i0.ɵɵnextContext();
        const _r5 = i0.ɵɵreference(6);
        i0.ɵɵproperty("ngTemplateOutlet", _r5);
    }
}
const POPUP_STYLE_PATCH = { position: 'relative' }; // Aim to override antd's style to support overlay's position strategy (position:absolute will cause it not working because the overlay can't get the height/width of it's content)
/**
 * The base picker for all common APIs
 */
class TDSDatePickerComponent {
    // ------------------------------------------------------------------------
    // Input API End
    // ------------------------------------------------------------------------
    constructor(tdsConfigService, datePickerService, i18n, cdr, renderer, elementRef, dateHelper, resizeObserver, platform, doc, directionality, _formField, ngControl, _parentForm, _parentFormGroup) {
        this.tdsConfigService = tdsConfigService;
        this.datePickerService = datePickerService;
        this.i18n = i18n;
        this.cdr = cdr;
        this.renderer = renderer;
        this.elementRef = elementRef;
        this.dateHelper = dateHelper;
        this.resizeObserver = resizeObserver;
        this.platform = platform;
        this.directionality = directionality;
        this._formField = _formField;
        this.ngControl = ngControl;
        this._parentForm = _parentForm;
        this._parentFormGroup = _parentFormGroup;
        this.isRange = false; // Indicate whether the value is a range value
        this.dir = 'ltr';
        this.panelMode = 'date';
        this.destroyed$ = new Subject();
        this.isCustomPlaceHolder = false;
        this.isCustomFormat = false;
        this._showTime = false;
        // --- Common API
        this.allowClear = true;
        this.autoFocus = false;
        this.disabled = false;
        this.borderless = false;
        this.inputReadOnly = false;
        this.inline = false;
        this.placeholder = '';
        this.popupStyle = POPUP_STYLE_PATCH;
        this.showToday = true;
        this.mode = 'date';
        this.showNow = true;
        this.defaultPickerValue = null;
        this.deparator = undefined;
        this.suffixIcon = 'tdsi-calendar-fill';
        this.backdrop = false;
        this.id = null;
        this.tdsClass = "";
        this._size = "md";
        // TODO(@wenqi73) The PanelMode need named for each pickers and export
        this.panelChange = new EventEmitter();
        this.calendarChange = new EventEmitter();
        this.ok = new EventEmitter();
        this.openChange = new EventEmitter();
        this.stateChanges = new Subject();
        this.focused = false;
        this._required = false;
        this.parentIsFormField = false;
        this.inputSize = 12;
        this.destroy$ = new Subject();
        this.prefixCls = PREFIX_CLASS;
        this.activeBarStyle = {};
        this.overlayOpen = false; // Available when "isOpen" = undefined
        this.overlayPositions = [
            {
                offsetY: 2,
                originX: 'start',
                originY: 'bottom',
                overlayX: 'start',
                overlayY: 'top'
            },
            {
                offsetY: -2,
                originX: 'start',
                originY: 'top',
                overlayX: 'start',
                overlayY: 'bottom'
            },
            {
                offsetY: 2,
                originX: 'end',
                originY: 'bottom',
                overlayX: 'end',
                overlayY: 'top'
            },
            {
                offsetY: -2,
                originX: 'end',
                originY: 'top',
                overlayX: 'end',
                overlayY: 'bottom'
            }
        ];
        this.currentPositionX = 'start';
        this.currentPositionY = 'bottom';
        this.currentPickerValue = null;
        this.tdsCssContainer = "";
        // ------------------------------------------------------------------------
        // | Control value accessor implements
        // ------------------------------------------------------------------------
        // NOTE: onChangeFn/onTouchedFn will not be assigned if user not use as ngModel
        this.onChangeFn = () => void 0;
        this.onTouchedFn = () => void 0;
        this.errorState = false;
        this.document = doc;
        this.origin = new CdkOverlayOrigin(this.elementRef);
        if (this.ngControl != null) {
            this.ngControl.valueAccessor = this;
        }
        if (this._formField) {
            // this.size = this._formField.size;
            this.parentIsFormField = true;
        }
    }
    get size() {
        return this._size;
    }
    set size(value) {
        if (this._size != value) {
            this._size = value;
            this.stateChanges.next();
        }
    }
    get showTime() {
        return this._showTime;
    }
    set showTime(value) {
        this._showTime = typeof value === 'object' ? value : toBoolean(value);
    }
    get empty() {
        return false;
    }
    get required() {
        return this._required;
    }
    set required(value) {
        this._required = coerceBooleanProperty(value);
        this.stateChanges.next();
    }
    get realOpenState() {
        // The value that really decide the open state of overlay
        return this.isOpenHandledByUser() ? !!this.isOpen : this.overlayOpen;
    }
    ngAfterViewInit() {
        if (this.autoFocus) {
            this.focus();
        }
        if (this.isRange && this.platform.isBrowser) {
            this.resizeObserver
                .observe(this.elementRef)
                .pipe(takeUntil(this.destroy$))
                .subscribe(() => {
                this.updateInputWidthAndArrowLeft();
            });
        }
        this.datePickerService.inputPartChange$.pipe(takeUntil(this.destroy$)).subscribe(partType => {
            if (partType) {
                this.datePickerService.activeInput = partType;
            }
            this.focus();
            this.updateInputWidthAndArrowLeft();
        });
    }
    updateInputWidthAndArrowLeft() {
        var _a, _b, _c;
        this.inputWidth = ((_b = (_a = this.rangePickerInputs) === null || _a === void 0 ? void 0 : _a.first) === null || _b === void 0 ? void 0 : _b.nativeElement.offsetWidth) || 0;
        const baseStyle = { position: 'absolute', width: `${this.inputWidth}px` };
        this.datePickerService.arrowLeft = this.datePickerService.activeInput === 'left' ? 0 : this.inputWidth + ((_c = this.separatorElement) === null || _c === void 0 ? void 0 : _c.nativeElement.offsetWidth) || 0;
        if (this.dir === 'rtl') {
            this.activeBarStyle = Object.assign(Object.assign({}, baseStyle), { right: `${this.datePickerService.arrowLeft}px` });
        }
        else {
            this.activeBarStyle = Object.assign(Object.assign({}, baseStyle), { left: `${this.datePickerService.arrowLeft}px` });
        }
        this.cdr.markForCheck();
    }
    getInput(partType) {
        var _a, _b;
        if (this.inline) {
            return undefined;
        }
        return this.isRange
            ? partType === 'left'
                ? (_a = this.rangePickerInputs) === null || _a === void 0 ? void 0 : _a.first.nativeElement
                : (_b = this.rangePickerInputs) === null || _b === void 0 ? void 0 : _b.last.nativeElement
            : this.pickerInput.nativeElement;
    }
    focus() {
        const activeInputElement = this.getInput(this.datePickerService.activeInput);
        if (this.document.activeElement !== activeInputElement) {
            activeInputElement === null || activeInputElement === void 0 ? void 0 : activeInputElement.focus();
        }
        if (!this.focused && !this.disabled) {
            this.focused = true;
            this.stateChanges.next();
        }
    }
    onFocus(event, partType) {
        event.preventDefault();
        if (partType) {
            this.datePickerService.inputPartChange$.next(partType);
        }
        this.renderClass(true);
    }
    // blur event has not the relatedTarget in IE11, use focusout instead.
    onFocusout(event) {
        event.preventDefault();
        this.renderClass(false);
    }
    // Show overlay content
    open() {
        if (this.isRange) {
            this.currentPickerValue = this.datePickerService.hasValue() ? this.datePickerService.value : null;
        }
        if (this.inline) {
            return;
        }
        if (!this.realOpenState && !this.disabled) {
            this.updateInputWidthAndArrowLeft();
            this.overlayOpen = true;
            this.openChange.emit(true);
            this.updateCssContainer();
            this.cdr.markForCheck();
        }
    }
    close() {
        if (this.inline || this.isRange) {
            return;
        }
        else {
            this.p_Close();
        }
    }
    p_Close() {
        if (this.realOpenState) {
            this.overlayOpen = false;
            this.focused = false;
            this.stateChanges.next();
            this.openChange.emit(false);
            this.onTouchedFn();
            this.updateCssContainer();
        }
    }
    showClear() {
        return !this.disabled && !this.isEmptyValue(this.datePickerService.value) && this.allowClear;
    }
    checkAndClose() {
        if (!this.realOpenState) {
            return;
        }
        if (this.panel.isAllowed(this.datePickerService.value, true)) {
            if (Array.isArray(this.datePickerService.value) && wrongSortOrder(this.datePickerService.value)) {
                const index = this.datePickerService.getActiveIndex();
                const value = this.datePickerService.value[index];
                this.panel.changeValueFromSelect(value, true);
                return;
            }
            if (!this.isRange) {
                //cập nhật modelchange khi đóng popup
                if (this.showTime) {
                    this.updateInputValue();
                    this.datePickerService.emitValue$.next();
                }
                else
                    this.close();
            }
        }
        else {
            this.datePickerService.setValue(this.datePickerService.initialValue);
            this.close();
        }
    }
    onClickInputBox(event) {
        event.stopPropagation();
        this.focus();
        if (!this.isOpenHandledByUser()) {
            this.open();
        }
    }
    onOverlayKeydown(event) {
        if (event.keyCode === ESCAPE) {
            this.datePickerService.initValue();
        }
    }
    // NOTE: A issue here, the first time position change, the animation will not be triggered.
    // Because the overlay's "positionChange" event is emitted after the content's full shown up.
    // All other components like "tds-dropdown" which depends on overlay also has the same issue.
    // See: https://github.com/NG-ZORRO/ng-zorro-antd/issues/1429
    onPositionChange(position) {
        this.currentPositionX = position.connectionPair.originX;
        this.currentPositionY = position.connectionPair.originY;
        this.cdr.detectChanges(); // Take side-effects to position styles
    }
    onClickClear(event) {
        event.preventDefault();
        event.stopPropagation();
        this.datePickerService.initValue(true);
        this.datePickerService.emitValue$.next();
    }
    updateInputValue() {
        const newValue = this.datePickerService.value;
        if (this.isRange) {
            this.inputValue = newValue ? newValue.map(v => this.formatValue(v)) : ['', ''];
        }
        else {
            this.inputValue = this.formatValue(newValue);
        }
        this.cdr.markForCheck();
    }
    formatValue(value) {
        return this.dateHelper.format(value && value.nativeDate, this.format);
    }
    onInputChange(value, isEnter = false) {
        /**
         * in IE11 focus/blur will trigger ngModelChange if placeholder changes,
         * so we forbidden IE11 to open panel through input change
         */
        if (!this.platform.TRIDENT &&
            this.document.activeElement === this.getInput(this.datePickerService.activeInput) &&
            !this.realOpenState) {
            this.open();
            return;
        }
        const date = this.checkValidDate(value);
        // Can only change date when it's open
        if (date && this.realOpenState) {
            this.panel.changeValueFromSelect(date, isEnter);
        }
    }
    onKeyupEnter(event) {
        this.onInputChange(event.target.value, true);
    }
    checkValidDate(value) {
        const date = new CandyDate(this.dateHelper.parseDate(value, this.format));
        if (!date.isValid() || value !== this.dateHelper.format(date.nativeDate, this.format)) {
            return null;
        }
        return date;
    }
    getPlaceholder(partType) {
        return this.isRange ? this.placeholder[this.datePickerService.getActiveIndex(partType)] : this.placeholder;
    }
    isEmptyValue(value) {
        if (value === null) {
            return true;
        }
        else if (this.isRange) {
            return !value || !Array.isArray(value) || value.every(val => !val);
        }
        else {
            return !value;
        }
    }
    // Whether open state is permanently controlled by user himself
    isOpenHandledByUser() {
        return this.isOpen !== undefined;
    }
    ngOnInit() {
        var _a;
        this.updateCssContainer();
        // Subscribe the every locale change if the locale is not handled by user
        if (!this.locale) {
            this.i18n.localeChange.pipe(takeUntil(this.destroyed$)).subscribe(() => this.setLocale());
        }
        // Default value
        this.datePickerService.isRange = this.isRange;
        this.datePickerService.initValue(true);
        this.datePickerService.emitValue$.pipe(takeUntil(this.destroyed$)).subscribe(_ => {
            var _a, _b, _c, _d;
            const value = this.datePickerService.value;
            this.datePickerService.initialValue = cloneDate(value);
            if (this.isRange) {
                const vAsRange = value;
                if (TDSHelperArray.hasListValue(vAsRange)) {
                    this.onChangeFn([(_b = (_a = vAsRange[0]) === null || _a === void 0 ? void 0 : _a.nativeDate) !== null && _b !== void 0 ? _b : null, (_d = (_c = vAsRange[1]) === null || _c === void 0 ? void 0 : _c.nativeDate) !== null && _d !== void 0 ? _d : null]);
                }
                else {
                    this.onChangeFn([]);
                }
            }
            else {
                if (value) {
                    this.onChangeFn(value.nativeDate);
                }
                else {
                    this.onChangeFn(null);
                }
            }
            this.onTouchedFn();
            // When value emitted, overlay will be closed
            this.close();
        });
        (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroyed$)).subscribe((direction) => {
            this.dir = direction;
            this.cdr.detectChanges();
        });
        this.dir = this.directionality.value;
        this.inputValue = this.isRange ? ['', ''] : '';
        this.setModeAndFormat();
        this.datePickerService.valueChange$.pipe(takeUntil(this.destroy$)).subscribe(() => {
            this.updateInputValue();
        });
    }
    ngOnChanges(changes) {
        var _a, _b;
        if (changes.popupStyle) {
            // Always assign the popup style patch
            this.popupStyle = this.popupStyle ? Object.assign(Object.assign({}, this.popupStyle), POPUP_STYLE_PATCH) : POPUP_STYLE_PATCH;
        }
        // Mark as customized placeholder by user once placeholder assigned at the first time
        if ((_a = changes.placeholder) === null || _a === void 0 ? void 0 : _a.currentValue) {
            this.isCustomPlaceHolder = true;
        }
        if ((_b = changes.format) === null || _b === void 0 ? void 0 : _b.currentValue) {
            this.isCustomFormat = true;
        }
        if (changes.locale) {
            // The locale is currently handled by user
            this.setDefaultPlaceHolder();
        }
        if (changes.renderExtraFooter) {
            this.extraFooter = valueFunctionProp(this.renderExtraFooter);
        }
        if (changes.mode) {
            this.setDefaultPlaceHolder();
            this.setModeAndFormat();
        }
    }
    ngOnDestroy() {
        this.destroyed$.next();
        this.destroyed$.complete();
    }
    setModeAndFormat() {
        const local = this.i18n.getLocale();
        let inputFormats = {
            year: 'yyyy',
            month: 'yyyy/MM',
            week: this.i18n.getDateLocale() ? 'RRRR/II' : 'yyyy/ww',
            date: this.showTime ? 'yyyy/MM/dd HH:mm:ss' : 'yyyy/MM/dd'
        };
        if (TDSHelperObject.hasValue(local)) {
            inputFormats = {
                year: local.DatePicker.lang.yearFormat ? local.DatePicker.lang.yearFormat : 'yyyy',
                month: local.DatePicker.lang.monthFormat ? local.DatePicker.lang.monthFormat : 'yyyy/MM',
                week: this.i18n.getDateLocale() ? 'RRRR/II' : 'ww',
                date: this.showTime ? local.DatePicker.lang.dateTimeFormat : local.DatePicker.lang.dateFormat
            };
        }
        if (!this.mode) {
            this.mode = 'date';
        }
        this.panelMode = this.isRange ? [this.mode, this.mode] : this.mode;
        // Default format when it's empty
        if (!this.isCustomFormat) {
            this.format = inputFormats[this.mode];
        }
        this.inputSize = Math.max(10, this.format.length) + 2;
        this.updateInputValue();
    }
    /**
     * Triggered when overlayOpen changes (different with realOpenState)
     * @param open The overlayOpen in picker component
     */
    onOpenChange(open) {
        this.openChange.emit(open);
    }
    writeValue(value) {
        //  lỗi không binding dc data khi dùng formcontrol, do gọi writevalue trước ngOnInit
        setTimeout(() => {
            this.setValue(value);
            this.cdr.markForCheck();
        }, 0);
    }
    registerOnChange(fn) {
        this.onChangeFn = fn;
    }
    registerOnTouched(fn) {
        this.onTouchedFn = fn;
    }
    setDisabledState(isDisabled) {
        this.disabled = isDisabled;
        this.cdr.markForCheck();
    }
    // ------------------------------------------------------------------------
    // | Internal methods
    // ------------------------------------------------------------------------
    // Reload locale from i18n with side effects
    setLocale() {
        this.locale = this.i18n.getLocaleData('DatePicker', {});
        this.setDefaultPlaceHolder();
        this.cdr.markForCheck();
    }
    setDefaultPlaceHolder() {
        if (!this.isCustomPlaceHolder && this.locale) {
            const defaultPlaceholder = {
                year: this.getPropertyOfLocale('yearPlaceholder'),
                month: this.getPropertyOfLocale('monthPlaceholder'),
                week: this.getPropertyOfLocale('weekPlaceholder'),
                date: this.getPropertyOfLocale('placeholder')
            };
            const defaultRangePlaceholder = {
                year: this.getPropertyOfLocale('rangeYearPlaceholder'),
                month: this.getPropertyOfLocale('rangeMonthPlaceholder'),
                week: this.getPropertyOfLocale('rangeWeekPlaceholder'),
                date: this.getPropertyOfLocale('rangePlaceholder')
            };
            this.placeholder = this.isRange
                ? defaultRangePlaceholder[this.mode]
                : defaultPlaceholder[this.mode];
        }
    }
    getPropertyOfLocale(type) {
        return this.locale.lang[type] || this.i18n.getLocaleData(`DatePicker.lang.${type}`);
    }
    // Safe way of setting value with default
    setValue(value) {
        const newValue = this.datePickerService.makeValue(value);
        this.datePickerService.setValue(newValue);
        this.datePickerService.initialValue = newValue;
    }
    renderClass(value) {
        // TODO: avoid autoFocus cause change after checked error
        if (value) {
            this.renderer.addClass(this.elementRef.nativeElement, 'tds-picker-focused');
        }
        else {
            this.renderer.removeClass(this.elementRef.nativeElement, 'tds-picker-focused');
        }
    }
    onPanelModeChange(panelMode) {
        this.panelChange.emit(panelMode);
    }
    // Emit calendarChange when select date by tds-range-picker
    _calendarChange(value) {
        if (this.isRange && Array.isArray(value)) {
            const rangeValue = value.filter(x => x instanceof CandyDate).map(x => x.nativeDate);
            this.calendarChange.emit(rangeValue);
        }
    }
    onResultOk() {
        var _a, _b;
        if (this.isRange) {
            const value = this.datePickerService.value;
            if (value.length) {
                this.ok.emit([((_a = value[0]) === null || _a === void 0 ? void 0 : _a.nativeDate) || null, ((_b = value[1]) === null || _b === void 0 ? void 0 : _b.nativeDate) || null]);
            }
            else {
                this.ok.emit([]);
            }
            if (!this.showTime || this.panel.isAllowed(this.datePickerService.value, true))
                this.p_Close();
        }
        else {
            if (this.datePickerService.value) {
                this.ok.emit(this.datePickerService.value.nativeDate);
            }
            else {
                this.ok.emit(null);
            }
        }
    }
    onResultCancel() {
        this.datePickerService.setValue(this.currentPickerValue);
        this.datePickerService.emitValue$.next();
        this.p_Close();
    }
    ngDoCheck() {
        if (this.ngControl) {
            this.updateErrorState();
        }
    }
    updateErrorState() {
        const oldState = this.errorState;
        const parent = this._parentFormGroup || this._parentForm;
        // const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;
        const control = this.ngControl ? this.ngControl.control : null;
        const newState = this._isErrorState(control, parent);
        if (newState !== oldState) {
            this.errorState = newState;
            this.stateChanges.next();
            this.cdr.markForCheck();
        }
    }
    _isErrorState(control, form) {
        return TDSIsErrorState(control, form);
    }
    // get errorState(): boolean {
    //   return this.ngControl && this.ngControl.errors !== null && !!this.ngControl.touched;
    // }
    setDescribedByIds(ids) {
        // if (ids.length) {
        //   this._elementRef.nativeElement.setAttribute('aria-describedby', ids.join(' '));
        // } else {
        //   this._elementRef.nativeElement.removeAttribute('aria-describedby');
        // }
    }
    onContainerClick(e) {
        // e.preventDefault();
        // e.stopPropagation();
    }
    onClickOutside(e) {
        e.preventDefault();
        e.stopPropagation();
        this.checkAndClose();
    }
    updateCssContainer() {
        this.tdsCssContainer = '';
        if (!this.parentIsFormField) {
            this.tdsCssContainer += 'border  rounded bg-white dark:bg-d-neutral-3-50';
            if (this.overlayOpen) {
                this.tdsCssContainer += ' outline-none ring-opacity-20 ring ring-primary-1 border-primary-1';
            }
            else {
                this.tdsCssContainer += ' border-neutral-2-200 dark:border-d-neutral-2-200';
            }
        }
        this.tdsCssContainer += ` ${this.tdsClass}`;
    }
}
TDSDatePickerComponent.ɵfac = function TDSDatePickerComponent_Factory(t) { return new (t || TDSDatePickerComponent)(i0.ɵɵdirectiveInject(i1$1.TDSConfigService), i0.ɵɵdirectiveInject(DatePickerService), i0.ɵɵdirectiveInject(i1.TDSI18nService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.DateHelperService), i0.ɵɵdirectiveInject(i4$1.TDSResizeObserver), i0.ɵɵdirectiveInject(i5.Platform), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i6.Directionality, 8), i0.ɵɵdirectiveInject(TDS_FORM_FIELD, 9), i0.ɵɵdirectiveInject(i7.NgControl, 10), i0.ɵɵdirectiveInject(i7.NgForm, 8), i0.ɵɵdirectiveInject(i7.FormGroupDirective, 8)); };
TDSDatePickerComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TDSDatePickerComponent, selectors: [["tds-date-picker"], ["tds-week-picker"], ["tds-month-picker"], ["tds-year-picker"], ["tds-range-picker"]], viewQuery: function TDSDatePickerComponent_Query(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵviewQuery(CdkConnectedOverlay, 5);
            i0.ɵɵviewQuery(DateRangePopupComponent, 5);
            i0.ɵɵviewQuery(_c0, 5);
            i0.ɵɵviewQuery(_c1, 5);
            i0.ɵɵviewQuery(_c2, 5);
        }
        if (rf & 2) {
            let _t;
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cdkConnectedOverlay = _t.first);
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.panel = _t.first);
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.separatorElement = _t.first);
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.pickerInput = _t.first);
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.rangePickerInputs = _t);
        }
    }, hostAttrs: [1, "w-full", "block", "relative", "box-border", "m-0", "p-0"], hostVars: 12, hostBindings: function TDSDatePickerComponent_HostBindings(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵlistener("click", function TDSDatePickerComponent_click_HostBindingHandler($event) { return ctx.onClickInputBox($event); });
        }
        if (rf & 2) {
            i0.ɵɵclassProp("tds-picker", true)("tds-picker-range", ctx.isRange)("tds-picker-disabled", ctx.disabled)("tds-picker-rtl", ctx.dir === "rtl")("tds-picker-borderless", ctx.borderless)("tds-picker-inline", ctx.inline);
        }
    }, inputs: { allowClear: "allowClear", autoFocus: "autoFocus", disabled: "disabled", borderless: "borderless", inputReadOnly: "inputReadOnly", inline: "inline", isOpen: "isOpen", disabledDate: "disabledDate", locale: "locale", placeholder: "placeholder", popupStyle: "popupStyle", dropdownClassName: "dropdownClassName", format: "format", dateRender: "dateRender", disabledTime: "disabledTime", renderExtraFooter: "renderExtraFooter", showToday: "showToday", mode: "mode", showNow: "showNow", ranges: "ranges", defaultPickerValue: "defaultPickerValue", deparator: "deparator", suffixIcon: "suffixIcon", backdrop: "backdrop", id: "id", tdsClass: "tdsClass", size: "size", showTime: "showTime", required: "required" }, outputs: { panelChange: "panelChange", calendarChange: "calendarChange", ok: "ok", openChange: "openChange" }, exportAs: ["tdsDatePicker"], features: [i0.ɵɵProvidersFeature([
            DatePickerService,
            {
                provide: TDSFormFieldControl,
                useExisting: forwardRef(() => TDSDatePickerComponent)
            }
        ]), i0.ɵɵNgOnChangesFeature], decls: 10, vars: 7, consts: [[4, "ngIf", "ngIfElse"], ["tplRangeInput", ""], ["tplRightRest", ""], ["inlineMode", ""], ["inlineModeContent", ""], ["cdkConnectedOverlay", "", 3, "cdkConnectedOverlayHasBackdrop", "cdkConnectedOverlayOrigin", "cdkConnectedOverlayOpen", "cdkConnectedOverlayPositions", "cdkConnectedOverlayTransformOriginOn", "positionChange", "detach", "overlayKeydown", "overlayOutsideClick"], ["class", "flex items-stretch w-full group ", 3, "class", 4, "ngIf"], [4, "ngIf"], [1, "flex", "items-stretch", "w-full", "group"], [1, "flex-auto", "flex", "items-center", 3, "ngClass"], [1, "text-body-2", "font-regular", "text-neutral-1-40", "focus:outline-none", "focus:border-transparent", "shadow-none", "border-0", "bg-transparent", "text-current", "pl-0", "pb-0", "pt-0", "m-0", "w-full", "outline-none", "box-border", "placeholder:text-neutral-1-400", "dark:placeholder:text-d-neutral-1-400", 3, "disabled", "readOnly", "ngModel", "placeholder", "ngModelChange", "focus", "focusout", "keyup.enter"], ["pickerInput", ""], [4, "ngTemplateOutlet"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], ["separatorElement", ""], ["defaultSeparator", ""], [1, "text-body-2", "font-regular", "text-neutral-1-40", "border-b", "border-transparent", "focus:outline-none", "focus:border-b", "focus:border-primary-1", "dark:focus:border-d-primary-1", "shadow-none", "bg-transparent", "text-current", "pl-0", "pb-0", "pt-0", "m-0", "w-full", "outline-none", "box-border", "placeholder:text-neutral-1-400", "dark:placeholder:text-d-neutral-1-400", 3, "disabled", "readOnly", "size", "ngModel", "placeholder", "click", "focusout", "focus", "keyup.enter", "ngModelChange"], ["rangePickerInput", ""], [3, "class", "ngClass", "click", 4, "ngIf"], [2, "border-top-right-radius", "0.2rem", "border-bottom-right-radius", "0.2rem", 3, "ngClass"], [4, "tdsStringTemplateOutlet"], [3, "ngClass", "click"], [1, "tdsi-close-fill", "text-base", "leading-4", "text-neutral-1-500"], [1, "text-lg", "leading-5", "text-neutral-1-900", "dark:text-d-neutral-1-900", 3, "ngClass"], [1, "tds-picker-wrapper", "shadow-1-xl", "overflow-auto", "bg-white", "dark:bg-d-neutral-3-300", "box-border", "rounded", "w-full", 2, "position", "relative"], [1, "tds-picker-wrapper", "pt-3", "overflow-auto", "bg-white", "dark:bg-d-neutral-3-300", "box-border", "rounded", "min-w-[266px]", 2, "position", "relative"], [3, "ngStyle"], [3, "isRange", "inline", "defaultPickerValue", "showWeek", "panelMode", "locale", "showToday", "showNow", "showTime", "dateRender", "disabledDate", "disabledTime", "extraFooter", "ranges", "dir", "panelModeChange", "calendarChange", "resultOk", "resultCancel"]], template: function TDSDatePickerComponent_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵtemplate(0, TDSDatePickerComponent_ng_container_0_Template, 3, 2, "ng-container", 0);
            i0.ɵɵtemplate(1, TDSDatePickerComponent_ng_template_1_Template, 2, 5, "ng-template", null, 1, i0.ɵɵtemplateRefExtractor);
            i0.ɵɵtemplate(3, TDSDatePickerComponent_ng_template_3_Template, 3, 10, "ng-template", null, 2, i0.ɵɵtemplateRefExtractor);
            i0.ɵɵtemplate(5, TDSDatePickerComponent_ng_template_5_Template, 2, 2, "ng-template", null, 3, i0.ɵɵtemplateRefExtractor);
            i0.ɵɵtemplate(7, TDSDatePickerComponent_ng_template_7_Template, 2, 36, "ng-template", null, 4, i0.ɵɵtemplateRefExtractor);
            i0.ɵɵtemplate(9, TDSDatePickerComponent_ng_template_9_Template, 1, 1, "ng-template", 5);
            i0.ɵɵlistener("positionChange", function TDSDatePickerComponent_Template_ng_template_positionChange_9_listener($event) { return ctx.onPositionChange($event); })("detach", function TDSDatePickerComponent_Template_ng_template_detach_9_listener() { return ctx.close(); })("overlayKeydown", function TDSDatePickerComponent_Template_ng_template_overlayKeydown_9_listener($event) { return ctx.onOverlayKeydown($event); })("overlayOutsideClick", function TDSDatePickerComponent_Template_ng_template_overlayOutsideClick_9_listener($event) { return ctx.onClickOutside($event); });
        }
        if (rf & 2) {
            const _r5 = i0.ɵɵreference(6);
            i0.ɵɵproperty("ngIf", !ctx.inline)("ngIfElse", _r5);
            i0.ɵɵadvance(9);
            i0.ɵɵproperty("cdkConnectedOverlayHasBackdrop", ctx.backdrop)("cdkConnectedOverlayOrigin", ctx.origin)("cdkConnectedOverlayOpen", ctx.realOpenState)("cdkConnectedOverlayPositions", ctx.overlayPositions)("cdkConnectedOverlayTransformOriginOn", ".tds-picker-wrapper");
        }
    }, directives: [i2.NgIf, i2.NgClass, i7.DefaultValueAccessor, i7.NgControlStatus, i7.NgModel, i2.NgTemplateOutlet, i9.TDSStringTemplateOutletDirective, i2.NgStyle, DateRangePopupComponent, i6.Dir, i11.CdkConnectedOverlay], encapsulation: 2, data: { animation: [slideMotion] }, changeDetection: 0 });
__decorate([
    InputBoolean()
], TDSDatePickerComponent.prototype, "allowClear", void 0);
__decorate([
    InputBoolean()
], TDSDatePickerComponent.prototype, "autoFocus", void 0);
__decorate([
    InputBoolean()
], TDSDatePickerComponent.prototype, "disabled", void 0);
__decorate([
    InputBoolean()
], TDSDatePickerComponent.prototype, "borderless", void 0);
__decorate([
    InputBoolean()
], TDSDatePickerComponent.prototype, "inputReadOnly", void 0);
__decorate([
    InputBoolean()
], TDSDatePickerComponent.prototype, "inline", void 0);
__decorate([
    InputBoolean()
], TDSDatePickerComponent.prototype, "isOpen", void 0);
__decorate([
    InputBoolean()
], TDSDatePickerComponent.prototype, "showToday", void 0);
__decorate([
    InputBoolean()
], TDSDatePickerComponent.prototype, "showNow", void 0);
(function () {
    (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSDatePickerComponent, [{
            type: Component,
            args: [{ encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, selector: 'tds-date-picker,tds-week-picker,tds-month-picker,tds-year-picker,tds-range-picker', exportAs: 'tdsDatePicker', host: {
                        '[class.tds-picker]': `true`,
                        '[class.tds-picker-range]': `isRange`,
                        '[class.tds-picker-disabled]': `disabled`,
                        '[class.tds-picker-rtl]': `dir === 'rtl'`,
                        '[class.tds-picker-borderless]': `borderless`,
                        '[class.tds-picker-inline]': `inline`,
                        'class': 'w-full block relative box-border m-0 p-0',
                        '(click)': 'onClickInputBox($event)',
                    }, providers: [
                        DatePickerService,
                        {
                            provide: TDSFormFieldControl,
                            useExisting: forwardRef(() => TDSDatePickerComponent)
                        }
                    ], animations: [slideMotion], template: "<ng-container *ngIf=\"!inline; else inlineMode\">\r\n    <!-- Content of single picker -->\r\n    <div *ngIf=\"!isRange\" class=\"flex items-stretch w-full group \" [class]=\"tdsCssContainer\">\r\n        <div class=\"flex-auto flex items-center\" [ngClass]=\"{\r\n      'pl-2.5 py-1':size ==='sm', \r\n      'pl-3 py-1.5':size ==='md' ,                                              \r\n      'pl-4 py-2':size ==='lg'        \r\n  }\">\r\n            <input #pickerInput\r\n                class=\"text-body-2 font-regular text-neutral-1-40 focus:outline-none focus:border-transparent shadow-none border-0 bg-transparent text-current pl-0 pb-0 pt-0 m-0 w-full outline-none  box-border placeholder:text-neutral-1-400 dark:placeholder:text-d-neutral-1-400\"\r\n                [attr.id]=\"id\" [class.tds-input-disabled]=\"disabled\" [disabled]=\"disabled\" [readOnly]=\"inputReadOnly\"\r\n                [(ngModel)]=\"inputValue\" placeholder=\"{{ getPlaceholder() }}\" (focus)=\"onFocus($event)\"\r\n                (focusout)=\"onFocusout($event)\" (ngModelChange)=\"onInputChange($event)\"\r\n                (keyup.enter)=\"onKeyupEnter($event)\" />\r\n        </div>\r\n        <ng-container *ngTemplateOutlet=\"tplRightRest\"></ng-container>\r\n    </div>\r\n    <!-- Content of range picker -->\r\n    <ng-container *ngIf=\"isRange\">\r\n        <div class=\"flex items-stretch w-full group\"\r\n        [class]=\"tdsCssContainer\">\r\n            <div class=\"flex-auto flex items-center\" [ngClass]=\"{\r\n      'pl-2.5 py-1':size ==='sm', \r\n      'pl-3 py-1.5':size ==='md' ,                                              \r\n      'pl-4 py-2':size ==='lg'        \r\n  }\">\r\n                <div class=\"{{ prefixCls }}-input\">\r\n                    <ng-container *ngTemplateOutlet=\"tplRangeInput; context: { partType: 'left' }\"></ng-container>\r\n                </div>\r\n                <div #separatorElement class=\"{{ prefixCls }}-range-separator\">\r\n                    <span class=\"{{ prefixCls }}-separator\">\r\n                        <ng-container *ngIf=\"deparator; else defaultSeparator\">{{ deparator }}</ng-container>\r\n                    </span>\r\n                    <ng-template #defaultSeparator>\r\n                        <span> - </span>\r\n                    </ng-template>\r\n                </div>\r\n                <div class=\"{{ prefixCls }}-input pl-2\">\r\n                    <ng-container *ngTemplateOutlet=\"tplRangeInput; context: { partType: 'right' }\"></ng-container>\r\n                </div>\r\n            </div>\r\n            <ng-container *ngTemplateOutlet=\"tplRightRest\"></ng-container>\r\n        </div>\r\n\r\n\r\n    </ng-container>\r\n</ng-container>\r\n<!-- Input for Range ONLY -->\r\n<ng-template #tplRangeInput let-partType=\"partType\">\r\n    <input #rangePickerInput\r\n        class=\"text-body-2 font-regular text-neutral-1-40 border-b border-transparent focus:outline-none focus:border-b focus:border-primary-1 dark:focus:border-d-primary-1 shadow-none  bg-transparent text-current pl-0 pb-0 pt-0 m-0 w-full outline-none  box-border placeholder:text-neutral-1-400 dark:placeholder:text-d-neutral-1-400\"\r\n        [disabled]=\"disabled\" [readOnly]=\"inputReadOnly\" [size]=\"inputSize\" (click)=\"onClickInputBox($event)\"\r\n        (focusout)=\"onFocusout($event)\" (focus)=\"onFocus($event, partType)\" (keyup.enter)=\"onKeyupEnter($event)\"\r\n        [(ngModel)]=\"inputValue[datePickerService.getActiveIndex(partType)]\" (ngModelChange)=\"onInputChange($event)\"\r\n        [placeholder]=\"getPlaceholder(partType)\" />\r\n</ng-template>\r\n\r\n<!-- Right operator icons -->\r\n<ng-template #tplRightRest>\r\n\r\n    <div *ngIf=\"showClear()\" class=\"{{ prefixCls }}-clear flex items-center cursor-pointer\"\r\n        (click)=\"onClickClear($event)\" [ngClass]=\"{\r\n      'px-1':size ==='sm',\r\n      'px-1.5':size ==='md',                                          \r\n      'px-2':size ==='lg'\r\n  }\">\r\n        <span class=\"tdsi-close-fill text-base leading-4 text-neutral-1-500\"></span>\r\n    </div>\r\n    <div class=\"{{ prefixCls }}-suffix text-neutral-1-900 dark:text-d-neutral-1-900  group-hover:bg-neutral-3-50 dark:group-hover:bg-d-neutral-3-200 flex items-center  group-hover:border-transparent\"\r\n        style=\"border-top-right-radius: 0.2rem;border-bottom-right-radius: 0.2rem;\" [ngClass]=\"{\r\n        'px-1':size ==='sm',\r\n        'px-1.5':size ==='md',                                          \r\n        'px-2':size ==='lg'\r\n    }\">\r\n        <ng-container *tdsStringTemplateOutlet=\"suffixIcon; let suffixIcon\">\r\n            <span [ngClass]=\"suffixIcon\" class=\"text-lg leading-5 text-neutral-1-900 dark:text-d-neutral-1-900\"></span>\r\n        </ng-container>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #inlineMode>\r\n    <ng-container *ngIf=\"!inline\">\r\n        <div class=\"tds-picker-wrapper  shadow-1-xl overflow-auto bg-white dark:bg-d-neutral-3-300 box-border  rounded w-full\"\r\n             [@slideMotion]=\"'enter'\" style=\"position: relative;\">\r\n            <ng-container *ngTemplateOutlet=\"inlineModeContent\"></ng-container>\r\n        </div>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"inline\">\r\n        <div class=\"tds-picker-wrapper pt-3 overflow-auto bg-white dark:bg-d-neutral-3-300 box-border  rounded min-w-[266px]\"\r\n            [style.width]=\"(isRange && !showTime) ? '700px': '100%'\" style=\"position: relative;\">\r\n            <ng-container *ngTemplateOutlet=\"inlineModeContent\"></ng-container>\r\n        </div>\r\n    </ng-container>\r\n</ng-template>\r\n<ng-template #inlineModeContent>\r\n    <div class=\"{{ prefixCls }}-dropdown {{ dropdownClassName }}\" [class.tds-picker-dropdown-rtl]=\"dir === 'rtl'\"\r\n        [class.tds-picker-dropdown-placement-bottomLeft]=\"currentPositionY === 'bottom' && currentPositionX === 'start'\"\r\n        [class.tds-picker-dropdown-placement-topLeft]=\"currentPositionY === 'top' && currentPositionX === 'start'\"\r\n        [class.tds-picker-dropdown-placement-bottomRight]=\"currentPositionY === 'bottom' && currentPositionX === 'end'\"\r\n        [class.tds-picker-dropdown-placement-topRight]=\"currentPositionY === 'top' && currentPositionX === 'end'\"\r\n        [class.tds-picker-dropdown-range]=\"isRange\"\r\n        [class.tds-picker-active-left]=\"datePickerService.activeInput === 'left'\"\r\n        [class.tds-picker-active-right]=\"datePickerService.activeInput === 'right'\" [ngStyle]=\"popupStyle\">\r\n        <date-range-popup [isRange]=\"isRange\" [inline]=\"inline\" [defaultPickerValue]=\"defaultPickerValue\"\r\n            [showWeek]=\"mode === 'week'\" [panelMode]=\"panelMode\" (panelModeChange)=\"onPanelModeChange($event)\"\r\n            (calendarChange)=\"_calendarChange($event)\" [locale]=\"locale.lang!\"\r\n            [showToday]=\"mode === 'date' && showToday && !isRange && !showTime\"\r\n            [showNow]=\"mode === 'date' && showNow && !isRange && !!showTime\" [showTime]=\"showTime\"\r\n            [dateRender]=\"dateRender\" [disabledDate]=\"disabledDate\" [disabledTime]=\"disabledTime\"\r\n            [extraFooter]=\"extraFooter\" [ranges]=\"ranges\" [dir]=\"dir\" (resultOk)=\"onResultOk()\"\r\n            (resultCancel)=\"onResultCancel()\"></date-range-popup>\r\n    </div>\r\n</ng-template>\r\n<!-- Overlay -->\r\n<ng-template cdkConnectedOverlay [cdkConnectedOverlayHasBackdrop]=\"backdrop\" [cdkConnectedOverlayOrigin]=\"origin\"\r\n    [cdkConnectedOverlayOpen]=\"realOpenState\" [cdkConnectedOverlayPositions]=\"overlayPositions\"\r\n    [cdkConnectedOverlayTransformOriginOn]=\"'.tds-picker-wrapper'\" (positionChange)=\"onPositionChange($event)\"\r\n    (detach)=\"close()\" (overlayKeydown)=\"onOverlayKeydown($event)\" (overlayOutsideClick)=\"onClickOutside($event)\">\r\n    <ng-container *ngTemplateOutlet=\"inlineMode\"></ng-container>\r\n</ng-template>" }]
        }], function () {
        return [{ type: i1$1.TDSConfigService }, { type: DatePickerService }, { type: i1.TDSI18nService }, { type: i0.ChangeDetectorRef }, { type: i0.Renderer2 }, { type: i0.ElementRef }, { type: i1.DateHelperService }, { type: i4$1.TDSResizeObserver }, { type: i5.Platform }, { type: undefined, decorators: [{
                        type: Inject,
                        args: [DOCUMENT]
                    }] }, { type: i6.Directionality, decorators: [{
                        type: Optional
                    }] }, { type: i12.TDSFormField, decorators: [{
                        type: Optional
                    }, {
                        type: Inject,
                        args: [TDS_FORM_FIELD]
                    }, {
                        type: Host
                    }] }, { type: i7.NgControl, decorators: [{
                        type: Optional
                    }, {
                        type: Self
                    }] }, { type: i7.NgForm, decorators: [{
                        type: Optional
                    }] }, { type: i7.FormGroupDirective, decorators: [{
                        type: Optional
                    }] }];
    }, { allowClear: [{
                type: Input
            }], autoFocus: [{
                type: Input
            }], disabled: [{
                type: Input
            }], borderless: [{
                type: Input
            }], inputReadOnly: [{
                type: Input
            }], inline: [{
                type: Input
            }], isOpen: [{
                type: Input
            }], disabledDate: [{
                type: Input
            }], locale: [{
                type: Input
            }], placeholder: [{
                type: Input
            }], popupStyle: [{
                type: Input
            }], dropdownClassName: [{
                type: Input
            }], format: [{
                type: Input
            }], dateRender: [{
                type: Input
            }], disabledTime: [{
                type: Input
            }], renderExtraFooter: [{
                type: Input
            }], showToday: [{
                type: Input
            }], mode: [{
                type: Input
            }], showNow: [{
                type: Input
            }], ranges: [{
                type: Input
            }], defaultPickerValue: [{
                type: Input
            }], deparator: [{
                type: Input
            }], suffixIcon: [{
                type: Input
            }], backdrop: [{
                type: Input
            }], id: [{
                type: Input
            }], tdsClass: [{
                type: Input
            }], size: [{
                type: Input
            }], panelChange: [{
                type: Output
            }], calendarChange: [{
                type: Output
            }], ok: [{
                type: Output
            }], openChange: [{
                type: Output
            }], showTime: [{
                type: Input
            }], cdkConnectedOverlay: [{
                type: ViewChild,
                args: [CdkConnectedOverlay, { static: false }]
            }], panel: [{
                type: ViewChild,
                args: [DateRangePopupComponent, { static: false }]
            }], separatorElement: [{
                type: ViewChild,
                args: ['separatorElement', { static: false }]
            }], pickerInput: [{
                type: ViewChild,
                args: ['pickerInput', { static: false }]
            }], rangePickerInputs: [{
                type: ViewChildren,
                args: ['rangePickerInput']
            }], required: [{
                type: Input
            }] });
})();

/**
 * A collection module of standard output for all lib components
 */
class LibPackerModule {
}
LibPackerModule.ɵfac = function LibPackerModule_Factory(t) { return new (t || LibPackerModule)(); };
LibPackerModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: LibPackerModule });
LibPackerModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [[
            CommonModule,
            FormsModule,
            TDSI18nModule,
            TDSTimePickerModule,
            TDSOutletModule,
            TDSSelectModule
        ]] });
(function () {
    (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(LibPackerModule, [{
            type: NgModule,
            args: [{
                    imports: [
                        CommonModule,
                        FormsModule,
                        TDSI18nModule,
                        TDSTimePickerModule,
                        TDSOutletModule,
                        TDSSelectModule
                    ],
                    exports: [
                        DateHeaderComponent,
                        DateTableComponent,
                        DecadeHeaderComponent,
                        DecadeTableComponent,
                        MonthHeaderComponent,
                        MonthTableComponent,
                        YearHeaderComponent,
                        YearTableComponent
                    ],
                    declarations: [
                        DateHeaderComponent,
                        DateTableComponent,
                        DecadeHeaderComponent,
                        DecadeTableComponent,
                        MonthHeaderComponent,
                        MonthTableComponent,
                        YearHeaderComponent,
                        YearTableComponent
                    ]
                }]
        }], null, null);
})();
(function () {
    (typeof ngJitMode === "undefined" || ngJitMode) && i0.ɵɵsetNgModuleScope(LibPackerModule, { declarations: [DateHeaderComponent,
            DateTableComponent,
            DecadeHeaderComponent,
            DecadeTableComponent,
            MonthHeaderComponent,
            MonthTableComponent,
            YearHeaderComponent,
            YearTableComponent], imports: [CommonModule,
            FormsModule,
            TDSI18nModule,
            TDSTimePickerModule,
            TDSOutletModule,
            TDSSelectModule], exports: [DateHeaderComponent,
            DateTableComponent,
            DecadeHeaderComponent,
            DecadeTableComponent,
            MonthHeaderComponent,
            MonthTableComponent,
            YearHeaderComponent,
            YearTableComponent] });
})();

// tslint:disable-next-line:directive-class-suffix
class TDSMonthPickerComponent {
    constructor(datePicker) {
        this.datePicker = datePicker;
        this.datePicker.mode = 'month';
    }
}
TDSMonthPickerComponent.ɵfac = function TDSMonthPickerComponent_Factory(t) { return new (t || TDSMonthPickerComponent)(i0.ɵɵdirectiveInject(TDSDatePickerComponent, 9)); };
TDSMonthPickerComponent.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: TDSMonthPickerComponent, selectors: [["tds-month-picker"]], exportAs: ["tdsMonthPicker"] });
(function () {
    (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSMonthPickerComponent, [{
            type: Directive,
            args: [{
                    selector: 'tds-month-picker',
                    exportAs: 'tdsMonthPicker'
                }]
        }], function () {
        return [{ type: TDSDatePickerComponent, decorators: [{
                        type: Optional
                    }, {
                        type: Host
                    }] }];
    }, null);
})();

// tslint:disable-next-line:directive-class-suffix
class TDSRangePickerComponent {
    constructor(datePicker) {
        this.datePicker = datePicker;
        this.datePicker.isRange = true;
    }
}
TDSRangePickerComponent.ɵfac = function TDSRangePickerComponent_Factory(t) { return new (t || TDSRangePickerComponent)(i0.ɵɵdirectiveInject(TDSDatePickerComponent, 9)); };
TDSRangePickerComponent.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: TDSRangePickerComponent, selectors: [["tds-range-picker"]], exportAs: ["tdsRangePicker"] });
(function () {
    (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSRangePickerComponent, [{
            type: Directive,
            args: [{
                    selector: 'tds-range-picker',
                    exportAs: 'tdsRangePicker'
                }]
        }], function () {
        return [{ type: TDSDatePickerComponent, decorators: [{
                        type: Optional
                    }, {
                        type: Host
                    }] }];
    }, null);
})();

// tslint:disable-next-line:directive-class-suffix
class TDSWeekPickerComponent {
    constructor(datePicker) {
        this.datePicker = datePicker;
        this.datePicker.mode = 'week';
    }
}
TDSWeekPickerComponent.ɵfac = function TDSWeekPickerComponent_Factory(t) { return new (t || TDSWeekPickerComponent)(i0.ɵɵdirectiveInject(TDSDatePickerComponent, 9)); };
TDSWeekPickerComponent.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: TDSWeekPickerComponent, selectors: [["tds-week-picker"]], exportAs: ["tdsWeekPicker"] });
(function () {
    (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSWeekPickerComponent, [{
            type: Directive,
            args: [{
                    selector: 'tds-week-picker',
                    exportAs: 'tdsWeekPicker',
                }]
        }], function () {
        return [{ type: TDSDatePickerComponent, decorators: [{
                        type: Optional
                    }, {
                        type: Host
                    }] }];
    }, null);
})();

// tslint:disable-next-line:directive-class-suffix
class TDSYearPickerComponent {
    constructor(datePicker) {
        this.datePicker = datePicker;
        this.datePicker.mode = 'year';
    }
}
TDSYearPickerComponent.ɵfac = function TDSYearPickerComponent_Factory(t) { return new (t || TDSYearPickerComponent)(i0.ɵɵdirectiveInject(TDSDatePickerComponent, 9)); };
TDSYearPickerComponent.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: TDSYearPickerComponent, selectors: [["tds-year-picker"]], exportAs: ["tdsYearPicker"] });
(function () {
    (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSYearPickerComponent, [{
            type: Directive,
            args: [{
                    selector: 'tds-year-picker',
                    exportAs: 'tdsYearPicker'
                }]
        }], function () {
        return [{ type: TDSDatePickerComponent, decorators: [{
                        type: Optional
                    }, {
                        type: Host
                    }] }];
    }, null);
})();

class TDSDatePickerModule {
}
TDSDatePickerModule.ɵfac = function TDSDatePickerModule_Factory(t) { return new (t || TDSDatePickerModule)(); };
TDSDatePickerModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: TDSDatePickerModule });
TDSDatePickerModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [[
            BidiModule,
            CommonModule,
            FormsModule,
            OverlayModule,
            LibPackerModule,
            TDSOutletModule,
            TDSTimePickerModule,
            TDSButtonModule,
        ]] });
(function () {
    (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSDatePickerModule, [{
            type: NgModule,
            args: [{
                    imports: [
                        BidiModule,
                        CommonModule,
                        FormsModule,
                        OverlayModule,
                        LibPackerModule,
                        TDSOutletModule,
                        TDSTimePickerModule,
                        TDSButtonModule,
                    ],
                    exports: [TDSDatePickerComponent,
                        TDSRangePickerComponent,
                        TDSMonthPickerComponent,
                        TDSYearPickerComponent,
                        TDSWeekPickerComponent],
                    declarations: [
                        TDSDatePickerComponent,
                        TDSMonthPickerComponent,
                        TDSYearPickerComponent,
                        TDSWeekPickerComponent,
                        TDSRangePickerComponent,
                        CalendarFooterComponent,
                        InnerPopupComponent,
                        DateRangePopupComponent
                    ]
                }]
        }], null, null);
})();
(function () {
    (typeof ngJitMode === "undefined" || ngJitMode) && i0.ɵɵsetNgModuleScope(TDSDatePickerModule, { declarations: [TDSDatePickerComponent,
            TDSMonthPickerComponent,
            TDSYearPickerComponent,
            TDSWeekPickerComponent,
            TDSRangePickerComponent,
            CalendarFooterComponent,
            InnerPopupComponent,
            DateRangePopupComponent], imports: [BidiModule,
            CommonModule,
            FormsModule,
            OverlayModule,
            LibPackerModule,
            TDSOutletModule,
            TDSTimePickerModule,
            TDSButtonModule], exports: [TDSDatePickerComponent,
            TDSRangePickerComponent,
            TDSMonthPickerComponent,
            TDSYearPickerComponent,
            TDSWeekPickerComponent] });
})();

/**
 * Generated bundle index. Do not edit.
 */

export { LibPackerModule, PREFIX_CLASS, TDSDatePickerComponent, TDSDatePickerModule, TDSMonthPickerComponent, TDSRangePickerComponent, TDSWeekPickerComponent, TDSYearPickerComponent, getTimeConfig, isAllowedDate, isTimeValid, isTimeValidByConfig, transCompatFormat, AbstractPanelHeader as ɵAbstractPanelHeader, AbstractTable as ɵAbstractTable, CalendarFooterComponent as ɵCalendarFooterComponent, DateHeaderComponent as ɵDateHeaderComponent, DatePickerService as ɵDatePickerService, DateRangePopupComponent as ɵDateRangePopupComponent, DateTableComponent as ɵDateTableComponent, DecadeHeaderComponent as ɵDecadeHeaderComponent, DecadeTableComponent as ɵDecadeTableComponent, InnerPopupComponent as ɵInnerPopupComponent, MonthHeaderComponent as ɵMonthHeaderComponent, MonthTableComponent as ɵMonthTableComponent, YearHeaderComponent as ɵYearHeaderComponent, YearTableComponent as ɵYearTableComponent };
//# sourceMappingURL=tds-ui-date-picker.mjs.map
