{"version":3,"file":"tds-ui-breadcrumb.mjs","sources":["../../../projects/tds-ui/breadcrumb/breadcrumb-item.component.ts","../../../projects/tds-ui/breadcrumb/breadcrumb.component.ts","../../../projects/tds-ui/breadcrumb/breadcrumb-separator.component.ts","../../../projects/tds-ui/breadcrumb/breadcrumb.module.ts","../../../projects/tds-ui/breadcrumb/tds-ui-breadcrumb.ts"],"sourcesContent":["\r\n\r\nimport { ChangeDetectionStrategy, Component, Input, TemplateRef, ViewEncapsulation } from '@angular/core';\r\nimport { TDSDropdownMenuComponent } from 'tds-ui/dropdown';\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  selector: 'tds-breadcrumb-item',\r\n  exportAs: 'tdsBreadcrumbItem',\r\n  preserveWhitespaces: false,\r\n  template: `\r\n    <ng-container *ngIf=\"!!overlay; else noMenuTpl\">\r\n      <span class=\"tds-breadcrumb-overlay-link flex items-center\" tds-dropdown [tdsDropdownMenu]=\"overlay\">\r\n        <ng-template [ngTemplateOutlet]=\"noMenuTpl\"></ng-template>\r\n        <span *ngIf=\"!!overlay\" class='flex items-center tdsi-arrow-down-fill text-base leading-4 px-1'></span>\r\n      </span>\r\n    </ng-container>\r\n\r\n    <ng-template #noMenuTpl>\r\n      <span class=\"tds-breadcrumb-link\">\r\n        <ng-content></ng-content>\r\n      </span>\r\n    </ng-template>\r\n\r\n    <span class=\"tds-breadcrumb-separator px-1 flex text-neutral-1-400 dark:text-d-neutral-1-400\" *ngIf=\"separator\">\r\n      <ng-container *tdsStringTemplateOutlet=\"separator\">\r\n       <span class='text-base leading-4' [ngClass]=\"separator\"></span>\r\n      </ng-container>\r\n    </span>\r\n  `,\r\n  host:{\r\n    '[class.tds-breadcrumitem-active]':'active == true',    \r\n    'class':'text-caption-1 font-regular text-neutral-1-400 dark:text-d-neutral-1-400 flex items-center hover:text-primary-1 dark:hover:text-primary-1 cursor-pointer'\r\n  }\r\n})\r\nexport class TDSBreadCrumbItemComponent {\r\n  /**\r\n   * Dropdown content of a breadcrumb item.\r\n   */\r\n  @Input() overlay?: TDSDropdownMenuComponent;\r\n  @Input() separator: string | TemplateRef<void> | null = '/';\r\n  @Input() active: boolean =false;\r\n  constructor() {\r\n\r\n  }\r\n}\r\n","\r\n\r\nimport { Direction, Directionality } from '@angular/cdk/bidi';\r\nimport { BooleanInput } from '@angular/cdk/coercion';\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  ContentChildren,\r\n  ElementRef,\r\n  Injector,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  QueryList,\r\n  Renderer2,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ViewChildren,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, Params, PRIMARY_OUTLET, Router } from '@angular/router';\r\n\r\nimport { Subject } from 'rxjs';\r\nimport { filter, startWith, takeUntil } from 'rxjs/operators';\r\nimport { InputBoolean, TDSHelperObject } from 'tds-ui/shared/utility';\r\nimport { TDSBreadCrumbItemComponent } from './breadcrumb-item.component';\r\n\r\nexport interface BreadcrumbOption {\r\n  label: string;\r\n  params: Params;\r\n  url: string;\r\n}\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  selector: 'tds-breadcrumb',\r\n  exportAs: 'tdsBreadcrumb',\r\n  preserveWhitespaces: false,\r\n  template: `\r\n    <ng-content></ng-content>\r\n    <ng-container *ngIf=\"autoGenerate && breadcrumbs.length\">\r\n      <tds-breadcrumb-item *ngFor=\"let breadcrumb of breadcrumbs;let last = last\" [active]=\"last\" [separator]='last ? null : separator'>\r\n        <a [attr.href]=\"breadcrumb.url\" (click)=\"navigate(breadcrumb.url, $event)\">{{ breadcrumb.label }}</a>\r\n      </tds-breadcrumb-item>\r\n      \r\n    </ng-container> `,\r\n    host:{\r\n      class:'flex items-center w-full'\r\n    }\r\n})\r\nexport class TDSBreadCrumbComponent implements OnInit, OnDestroy, AfterContentInit {\r\n  static ngAcceptInputType_autoGenerate: BooleanInput;\r\n  @ViewChild('defaultSeparator', { read: TemplateRef }) defaultSeparator!: TemplateRef<any>;\r\n\r\n\r\n  @Input() @InputBoolean() autoGenerate = false;\r\n  @Input() separator: string | TemplateRef<void> | null = 'tdsi-arrow-right-line';\r\n  @Input() routeLabel: string = 'breadcrumb';\r\n  @Input() routeLabelFn: (label: string) => string = label => label;\r\n\r\n  breadcrumbs: BreadcrumbOption[] = [];\r\n  dir: Direction = 'ltr';\r\n\r\n  private destroy$ = new Subject<void>();\r\n  @ContentChildren(TDSBreadCrumbItemComponent) listChild!: QueryList<TDSBreadCrumbItemComponent>;\r\n  constructor(\r\n    private injector: Injector,\r\n    private ngZone: NgZone,\r\n    private cdr: ChangeDetectorRef,\r\n    private elementRef: ElementRef,\r\n    private renderer: Renderer2,\r\n    @Optional() private directionality: Directionality\r\n  ) {\r\n    renderer.addClass(elementRef.nativeElement, 'tds-breadcrumb');\r\n\r\n  }\r\n  ngAfterContentInit(): void {\r\n    if (!this.autoGenerate) {\r\n      if (TDSHelperObject.hasValue(this.listChild) && this.listChild.length > 0) {\r\n        this.listChild.forEach((item, index) => {\r\n          if (index < this.listChild.length - 1) {\r\n            item.separator = this.separator ? this.separator : this.defaultSeparator;\r\n            item.active = false;\r\n          } else {\r\n            item.separator = null;\r\n            item.active = true;\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    if (this.autoGenerate) {\r\n      this.registerRouterChange();\r\n    }\r\n\r\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\r\n      this.dir = direction;\r\n      this.prepareComponentForRtl();\r\n      this.cdr.detectChanges();\r\n    });\r\n\r\n    this.dir = this.directionality.value;\r\n    this.prepareComponentForRtl();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  navigate(url: string, e: MouseEvent): void {\r\n    e.preventDefault();\r\n\r\n    this.ngZone.run(() => this.injector.get(Router).navigateByUrl(url).then()).then();\r\n  }\r\n\r\n  private registerRouterChange(): void {\r\n    try {\r\n      const router = this.injector.get(Router);\r\n      const activatedRoute = this.injector.get(ActivatedRoute);\r\n      router.events\r\n        .pipe(\r\n          filter(e => e instanceof NavigationEnd),\r\n          takeUntil(this.destroy$),\r\n          startWith(true) // trigger initial render\r\n        )\r\n        .subscribe(() => {\r\n          this.breadcrumbs = this.getBreadcrumbs(activatedRoute.root);\r\n          this.cdr.markForCheck();\r\n        });\r\n    } catch (e) {\r\n      throw new Error(`[TDS] You should import RouterModule if you want to use 'autoGenerate'.`);\r\n    }\r\n  }\r\n\r\n  private getBreadcrumbs(route: ActivatedRoute, url: string = '', breadcrumbs: BreadcrumbOption[] = []): BreadcrumbOption[] {\r\n    const children: ActivatedRoute[] = route.children;\r\n\r\n    // If there's no sub root, then stop the recurse and returns the generated breadcrumbs.\r\n    if (children.length === 0) {\r\n      return breadcrumbs;\r\n    }\r\n\r\n    for (const child of children) {\r\n      if (child.outlet === PRIMARY_OUTLET) {\r\n        // Only parse components in primary router-outlet (in another word, router-outlet without a specific name).\r\n        // Parse this layer and generate a breadcrumb item.\r\n        const routeUrl: string = child.snapshot.url\r\n          .map(segment => segment.path)\r\n          .filter(path => path)\r\n          .join('/');\r\n\r\n        // Do not change nextUrl if routeUrl is falsy. This happens when it's a route lazy loading other modules.\r\n        const nextUrl = !!routeUrl ? url + `/${routeUrl}` : url;\r\n        const breadcrumbLabel = this.routeLabelFn(child.snapshot.data[this.routeLabel]);\r\n\r\n        // If have data, go to generate a breadcrumb for it.\r\n        if (routeUrl != null && breadcrumbLabel) {\r\n          const breadcrumb: BreadcrumbOption = {\r\n            label: breadcrumbLabel,\r\n            params: child.snapshot.params,\r\n            url: nextUrl\r\n          };\r\n          breadcrumbs.push(breadcrumb);\r\n        }\r\n\r\n        return this.getBreadcrumbs(child, nextUrl, breadcrumbs);\r\n      }\r\n    }\r\n\r\n    return breadcrumbs;\r\n  }\r\n\r\n  private prepareComponentForRtl(): void {\r\n    if (this.dir === 'rtl') {\r\n      this.renderer.addClass(this.elementRef.nativeElement, 'tds-breadcrumb-rtl');\r\n    } else {\r\n      this.renderer.removeClass(this.elementRef.nativeElement, 'tds-breadcrumb-rtl');\r\n    }\r\n  }\r\n}\r\n","\r\n\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'tds-breadcrumb-separator',\r\n  exportAs: 'tdsBreadcrumbSeparator',\r\n  template: `\r\n    <span class=\"tds-breadcrumb-separator text-neutral-1-400 dark:text-d-neutral-1-400 px-1 flex\">\r\n      <ng-content></ng-content>\r\n    </span>\r\n  `\r\n})\r\nexport class TDSBreadCrumbSeparatorComponent {}\r\n","\r\n\r\nimport { BidiModule } from '@angular/cdk/bidi';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { TDSOutletModule } from 'tds-ui/core/outlet';\r\nimport { TDSOverlayModule } from 'tds-ui/core/overlay';\r\nimport { TDSDropDownModule } from 'tds-ui/dropdown';\r\n// import { TDSDropDownModule } from 'ng-zorro-antd/dropdown';\r\n// import { NzIconModule } from 'ng-zorro-antd/icon';\r\n\r\nimport { TDSBreadCrumbItemComponent } from './breadcrumb-item.component';\r\nimport { TDSBreadCrumbSeparatorComponent } from './breadcrumb-separator.component';\r\nimport { TDSBreadCrumbComponent } from './breadcrumb.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TDSOutletModule,\r\n    OverlayModule,\r\n    TDSOverlayModule,\r\n    TDSDropDownModule\r\n  ],\r\n  declarations: [\r\n    TDSBreadCrumbComponent,\r\n    TDSBreadCrumbItemComponent,\r\n    TDSBreadCrumbSeparatorComponent\r\n  ],\r\n  exports: [\r\n    BidiModule,\r\n    TDSBreadCrumbComponent,\r\n    TDSBreadCrumbItemComponent,\r\n    TDSBreadCrumbSeparatorComponent\r\n  ]\r\n})\r\nexport class TDSBreadCrumbModule { }\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1"],"mappings":";;;;;;;;;;;;;;;;;;;;;QAcQ,EAAuG,CAAA,SAAA,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA;;;;;AAH3G,QAAA,EAAgD,CAAA,uBAAA,CAAA,CAAA,CAAA,CAAA;QAC9C,EAAqG,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA;AACnG,QAAA,EAA0D,CAAA,UAAA,CAAA,CAAA,EAAA,gEAAA,EAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,CAAA,CAAA,CAAA;AAC1D,QAAA,EAAuG,CAAA,UAAA,CAAA,CAAA,EAAA,yDAAA,EAAA,CAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA;QACzG,EAAO,CAAA,YAAA,EAAA,CAAA;QACT,EAAe,CAAA,qBAAA,EAAA,CAAA;;;;;AAJ4D,QAAA,EAA2B,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;QAA3B,EAA2B,CAAA,UAAA,CAAA,iBAAA,EAAA,MAAA,CAAA,OAAA,CAAA,CAAA;AACrF,QAAA,EAA8B,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;AAA9B,QAAA,EAA8B,CAAA,UAAA,CAAA,kBAAA,EAAA,GAAA,CAAA,CAAA;AACpC,QAAA,EAAe,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;QAAf,EAAe,CAAA,UAAA,CAAA,MAAA,EAAA,CAAA,CAAA,MAAA,CAAA,OAAA,CAAA,CAAA;;;;;QAKxB,EAAkC,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA;AAChC,QAAA,EAAyB,CAAA,YAAA,CAAA,CAAA,CAAA,CAAA;QAC3B,EAAO,CAAA,YAAA,EAAA,CAAA;;;;;AAIP,QAAA,EAAmD,CAAA,uBAAA,CAAA,CAAA,CAAA,CAAA;QAClD,EAA+D,CAAA,SAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,CAAA;QAChE,EAAe,CAAA,qBAAA,EAAA,CAAA;;;;AADoB,QAAA,EAAqB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;QAArB,EAAqB,CAAA,UAAA,CAAA,SAAA,EAAA,MAAA,CAAA,SAAA,CAAA,CAAA;;;;;QAF1D,EAAgH,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA;AAC9G,QAAA,EAEe,CAAA,UAAA,CAAA,CAAA,EAAA,yDAAA,EAAA,CAAA,EAAA,CAAA,EAAA,cAAA,EAAA,CAAA,CAAA,CAAA;QACjB,EAAO,CAAA,YAAA,EAAA,CAAA;;;;AAHU,QAAA,EAAkC,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;QAAlC,EAAkC,CAAA,UAAA,CAAA,yBAAA,EAAA,MAAA,CAAA,SAAA,CAAA,CAAA;;;;MAU1C,0BAA0B,CAAA;AAOrC,IAAA,WAAA,GAAA;AAFS,QAAA,IAAS,CAAA,SAAA,GAAsC,GAAG,CAAC;AACnD,QAAA,IAAM,CAAA,MAAA,GAAW,KAAK,CAAC;KAG/B;;oGATU,0BAA0B,GAAA,CAAA,EAAA,CAAA;6EAA1B,0BAA0B,EAAA,SAAA,EAAA,CAAA,CAAA,qBAAA,CAAA,CAAA,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,gBAAA,EAAA,cAAA,EAAA,oBAAA,EAAA,2BAAA,EAAA,MAAA,EAAA,cAAA,EAAA,sBAAA,EAAA,2BAAA,EAAA,gBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,EAAA,YAAA,EAAA,SAAA,uCAAA,CAAA,EAAA,EAAA,GAAA,EAAA;QAAA,IAAA,EAAA,GAAA,CAAA,EAAA;;;;;;AAxBnC,YAAA,EAKe,CAAA,UAAA,CAAA,CAAA,EAAA,kDAAA,EAAA,CAAA,EAAA,CAAA,EAAA,cAAA,EAAA,CAAA,CAAA,CAAA;YAEf,EAIc,CAAA,UAAA,CAAA,CAAA,EAAA,iDAAA,EAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,sBAAA,CAAA,CAAA;AAEd,YAAA,EAIO,CAAA,UAAA,CAAA,CAAA,EAAA,0CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA;;;;AAjBQ,YAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,CAAA,CAAA,GAAA,CAAA,OAAA,CAAiB,CAAA,UAAA,EAAA,GAAA,CAAA,CAAA;AAa+D,YAAA,EAAe,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;YAAf,EAAe,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,SAAA,CAAA,CAAA;;;;4EAWrG,0BAA0B,EAAA,CAAA;kBA/BtC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;oBACT,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,aAAa,EAAE,iBAAiB,CAAC,IAAI;AACrC,oBAAA,QAAQ,EAAE,qBAAqB;AAC/B,oBAAA,QAAQ,EAAE,mBAAmB;AAC7B,oBAAA,mBAAmB,EAAE,KAAK;AAC1B,oBAAA,QAAQ,EAAE,CAAA;;;;;;;;;;;;;;;;;;;AAmBT,EAAA,CAAA;AACD,oBAAA,IAAI,EAAC;AACH,wBAAA,kCAAkC,EAAC,gBAAgB;AACnD,wBAAA,OAAO,EAAC,0JAA0J;AACnK,qBAAA;iBACF,CAAA;0CAKU,OAAO,EAAA,CAAA;sBAAf,KAAK;gBACG,SAAS,EAAA,CAAA;sBAAjB,KAAK;gBACG,MAAM,EAAA,CAAA;sBAAd,KAAK;;;;;;;;ACMF,QAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,qBAAA,EAAA,CAAA,CAAkI,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA,CAAA,CAAA;QAChG,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,uFAAA,CAAA,MAAA,EAAA,EAAA,MAAA,WAAA,GAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,aAAA,GAAA,WAAA,CAAA,SAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,CAAA,CAAA,CAAA,CAAA,CAAA,OAAS,0CAAgC,CAAC,EAAA,CAAA,CAAA;AAAC,QAAA,EAAsB,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA;AAAA,QAAA,EAAA,CAAA,YAAA,EAAI,EAAA,CAAA;;;;;;QAD3B,EAAA,CAAA,UAAA,CAAA,QAAA,EAAA,OAAA,CAAe,CAAA,WAAA,EAAA,OAAA,GAAA,IAAA,GAAA,MAAA,CAAA,SAAA,CAAA,CAAA;AACtF,QAAA,EAA4B,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;AAA5B,QAAA,EAA4B,CAAA,WAAA,CAAA,MAAA,EAAA,aAAA,CAAA,GAAA,EAAA,EAAA,CAAA,aAAA,CAAA,CAAA;AAA4C,QAAA,EAAsB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;AAAtB,QAAA,EAAsB,CAAA,iBAAA,CAAA,aAAA,CAAA,KAAA,CAAA,CAAA;;;;;AAFrG,QAAA,EAAyD,CAAA,uBAAA,CAAA,CAAA,CAAA,CAAA;AACvD,QAAA,EAEsB,CAAA,UAAA,CAAA,CAAA,EAAA,oEAAA,EAAA,CAAA,EAAA,CAAA,EAAA,qBAAA,EAAA,CAAA,CAAA,CAAA;QAExB,EAAe,CAAA,qBAAA,EAAA,CAAA;;;;AAJ+B,QAAA,EAAe,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;QAAf,EAAe,CAAA,UAAA,CAAA,SAAA,EAAA,MAAA,CAAA,WAAA,CAAA,CAAA;;;;MASpD,sBAAsB,CAAA;IAejC,WACU,CAAA,QAAkB,EAClB,MAAc,EACd,GAAsB,EACtB,UAAsB,EACtB,QAAmB,EACP,cAA8B,EAAA;AAL1C,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAU;AAClB,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;AACd,QAAA,IAAG,CAAA,GAAA,GAAH,GAAG,CAAmB;AACtB,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;AACtB,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAW;AACP,QAAA,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;AAhB3B,QAAA,IAAY,CAAA,YAAA,GAAG,KAAK,CAAC;AACrC,QAAA,IAAS,CAAA,SAAA,GAAsC,uBAAuB,CAAC;AACvE,QAAA,IAAU,CAAA,UAAA,GAAW,YAAY,CAAC;QAClC,IAAA,CAAA,YAAY,GAA8B,KAAK,IAAI,KAAK,CAAC;AAElE,QAAA,IAAW,CAAA,WAAA,GAAuB,EAAE,CAAC;AACrC,QAAA,IAAG,CAAA,GAAA,GAAc,KAAK,CAAC;AAEf,QAAA,IAAA,CAAA,QAAQ,GAAG,IAAI,OAAO,EAAQ,CAAC;QAUrC,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC,aAAa,EAAE,gBAAgB,CAAC,CAAC;KAE/D;IACD,kBAAkB,GAAA;AAChB,QAAA,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;AACtB,YAAA,IAAI,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;gBACzE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,KAAK,KAAI;oBACrC,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;AACrC,wBAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC;AACzE,wBAAA,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AACrB,qBAAA;AAAM,yBAAA;AACL,wBAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AACtB,wBAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;AACpB,qBAAA;AACH,iBAAC,CAAC,CAAA;AACH,aAAA;AACF,SAAA;KAEF;IAED,QAAQ,GAAA;;QAEN,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,oBAAoB,EAAE,CAAC;AAC7B,SAAA;QAED,CAAA,EAAA,GAAA,IAAI,CAAC,cAAc,CAAC,MAAM,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAE,CAAA,SAAS,CAAC,CAAC,SAAoB,KAAI;AAC5F,YAAA,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC;YACrB,IAAI,CAAC,sBAAsB,EAAE,CAAC;AAC9B,YAAA,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;AAC3B,SAAC,CAAC,CAAC;QAEH,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;QACrC,IAAI,CAAC,sBAAsB,EAAE,CAAC;KAC/B;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;AACrB,QAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;KAC1B;IAED,QAAQ,CAAC,GAAW,EAAE,CAAa,EAAA;QACjC,CAAC,CAAC,cAAc,EAAE,CAAC;AAEnB,QAAA,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;KACnF;IAEO,oBAAoB,GAAA;QAC1B,IAAI;YACF,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACzC,MAAM,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;AACzD,YAAA,MAAM,CAAC,MAAM;iBACV,IAAI,CACH,MAAM,CAAC,CAAC,IAAI,CAAC,YAAY,aAAa,CAAC,EACvC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EACxB,SAAS,CAAC,IAAI,CAAC;AAChB,aAAA;iBACA,SAAS,CAAC,MAAK;gBACd,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;AAC5D,gBAAA,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;AAC1B,aAAC,CAAC,CAAC;AACN,SAAA;AAAC,QAAA,OAAO,CAAC,EAAE;AACV,YAAA,MAAM,IAAI,KAAK,CAAC,CAAA,uEAAA,CAAyE,CAAC,CAAC;AAC5F,SAAA;KACF;IAEO,cAAc,CAAC,KAAqB,EAAE,MAAc,EAAE,EAAE,cAAkC,EAAE,EAAA;AAClG,QAAA,MAAM,QAAQ,GAAqB,KAAK,CAAC,QAAQ,CAAC;;AAGlD,QAAA,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;AACzB,YAAA,OAAO,WAAW,CAAC;AACpB,SAAA;AAED,QAAA,KAAK,MAAM,KAAK,IAAI,QAAQ,EAAE;AAC5B,YAAA,IAAI,KAAK,CAAC,MAAM,KAAK,cAAc,EAAE;;;AAGnC,gBAAA,MAAM,QAAQ,GAAW,KAAK,CAAC,QAAQ,CAAC,GAAG;qBACxC,GAAG,CAAC,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC;AAC5B,qBAAA,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC;qBACpB,IAAI,CAAC,GAAG,CAAC,CAAC;;AAGb,gBAAA,MAAM,OAAO,GAAG,CAAC,CAAC,QAAQ,GAAG,GAAG,GAAG,IAAI,QAAQ,CAAA,CAAE,GAAG,GAAG,CAAC;AACxD,gBAAA,MAAM,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;;AAGhF,gBAAA,IAAI,QAAQ,IAAI,IAAI,IAAI,eAAe,EAAE;AACvC,oBAAA,MAAM,UAAU,GAAqB;AACnC,wBAAA,KAAK,EAAE,eAAe;AACtB,wBAAA,MAAM,EAAE,KAAK,CAAC,QAAQ,CAAC,MAAM;AAC7B,wBAAA,GAAG,EAAE,OAAO;qBACb,CAAC;AACF,oBAAA,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC9B,iBAAA;gBAED,OAAO,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,OAAO,EAAE,WAAW,CAAC,CAAC;AACzD,aAAA;AACF,SAAA;AAED,QAAA,OAAO,WAAW,CAAC;KACpB;IAEO,sBAAsB,GAAA;AAC5B,QAAA,IAAI,IAAI,CAAC,GAAG,KAAK,KAAK,EAAE;AACtB,YAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,oBAAoB,CAAC,CAAC;AAC7E,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,oBAAoB,CAAC,CAAC;AAChF,SAAA;KACF;;4FArIU,sBAAsB,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAAA,IAAA,CAAA,cAAA,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA;yEAAtB,sBAAsB,EAAA,SAAA,EAAA,CAAA,CAAA,gBAAA,CAAA,CAAA,EAAA,cAAA,EAAA,SAAA,qCAAA,CAAA,EAAA,EAAA,GAAA,EAAA,QAAA,EAAA;QAAA,IAAA,EAAA,GAAA,CAAA,EAAA;wCAchB,0BAA0B,EAAA,CAAA,CAAA,CAAA;;;;;;;;qCAZJ,WAAW,CAAA,CAAA;;;;;;;;;AAbhD,YAAA,EAAyB,CAAA,YAAA,CAAA,CAAA,CAAA,CAAA;AACzB,YAAA,EAKe,CAAA,UAAA,CAAA,CAAA,EAAA,8CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,cAAA,EAAA,CAAA,CAAA,CAAA;;;AALA,YAAA,EAAwC,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;AAAxC,YAAA,EAAwC,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,YAAA,IAAA,GAAA,CAAA,WAAA,CAAA,MAAA,CAAA,CAAA;;;AAehC,UAAA,CAAA;AAAf,IAAA,YAAY,EAAE;CAAsB,EAAA,sBAAA,CAAA,SAAA,EAAA,cAAA,EAAA,KAAA,CAAA,CAAA,CAAA;;4EALnC,sBAAsB,EAAA,CAAA;kBAlBlC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;oBACT,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,aAAa,EAAE,iBAAiB,CAAC,IAAI;AACrC,oBAAA,QAAQ,EAAE,gBAAgB;AAC1B,oBAAA,QAAQ,EAAE,eAAe;AACzB,oBAAA,mBAAmB,EAAE,KAAK;AAC1B,oBAAA,QAAQ,EAAE,CAAA;;;;;;;AAOS,oBAAA,CAAA;AACjB,oBAAA,IAAI,EAAC;AACH,wBAAA,KAAK,EAAC,0BAA0B;AACjC,qBAAA;iBACJ,CAAA;;;8BAsBI,QAAQ;;SAnB2C,gBAAgB,EAAA,CAAA;sBAArE,SAAS;gBAAC,IAAA,EAAA,CAAA,kBAAkB,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,CAAA;gBAG3B,YAAY,EAAA,CAAA;sBAApC,KAAK;gBACG,SAAS,EAAA,CAAA;sBAAjB,KAAK;gBACG,UAAU,EAAA,CAAA;sBAAlB,KAAK;gBACG,YAAY,EAAA,CAAA;sBAApB,KAAK;gBAMuC,SAAS,EAAA,CAAA;sBAArD,eAAe;uBAAC,0BAA0B,CAAA;;;;;MCzDhC,+BAA+B,CAAA;;8GAA/B,+BAA+B,GAAA,CAAA,EAAA,CAAA;kFAA/B,+BAA+B,EAAA,SAAA,EAAA,CAAA,CAAA,0BAAA,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA,wBAAA,CAAA,EAAA,kBAAA,EAAA,GAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,0BAAA,EAAA,oBAAA,EAAA,2BAAA,EAAA,MAAA,EAAA,MAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,wCAAA,CAAA,EAAA,EAAA,GAAA,EAAA;QAAA,IAAA,EAAA,GAAA,CAAA,EAAA;;YALxC,EAA8F,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA;AAC5F,YAAA,EAAyB,CAAA,YAAA,CAAA,CAAA,CAAA,CAAA;YAC3B,EAAO,CAAA,YAAA,EAAA,CAAA;;;;4EAGE,+BAA+B,EAAA,CAAA;kBAT3C,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,0BAA0B;AACpC,oBAAA,QAAQ,EAAE,wBAAwB;AAClC,oBAAA,QAAQ,EAAE,CAAA;;;;AAIT,EAAA,CAAA;iBACF,CAAA;;;;MCwBY,mBAAmB,CAAA;;sFAAnB,mBAAmB,GAAA,CAAA,EAAA,CAAA;qEAAnB,mBAAmB,EAAA,CAAA,CAAA;AAnBrB,mBAAA,CAAA,IAAA,iBAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,OAAA,EAAA,CAAA;YACP,YAAY;YACZ,eAAe;YACf,aAAa;YACb,gBAAgB;YAChB,iBAAiB;AAClB,SAAA,EAOC,UAAU,CAAA,EAAA,CAAA,CAAA;;4EAMD,mBAAmB,EAAA,CAAA;kBApB/B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,eAAe;wBACf,aAAa;wBACb,gBAAgB;wBAChB,iBAAiB;AAClB,qBAAA;AACD,oBAAA,YAAY,EAAE;wBACZ,sBAAsB;wBACtB,0BAA0B;wBAC1B,+BAA+B;AAChC,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACP,UAAU;wBACV,sBAAsB;wBACtB,0BAA0B;wBAC1B,+BAA+B;AAChC,qBAAA;iBACF,CAAA;;;AACY,CAAA,YAAA;AAAA,IAAA,CAAA,OAAA,SAAA,KAAA,WAAA,IAAA,SAAA,KAAA,EAAA,CAAA,kBAAA,CAAA,mBAAmB,mBAX5B,sBAAsB;YACtB,0BAA0B;AAC1B,YAAA,+BAA+B,aAT/B,YAAY;YACZ,eAAe;YACf,aAAa;YACb,gBAAgB;AAChB,YAAA,iBAAiB,aAQjB,UAAU;YACV,sBAAsB;YACtB,0BAA0B;YAC1B,+BAA+B,CAAA,EAAA,CAAA,CAAA;AAAA,CAAA,GAAA;;ACjCnC;;AAEG;;;;"}