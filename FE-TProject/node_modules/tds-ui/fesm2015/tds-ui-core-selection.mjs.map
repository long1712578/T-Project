{"version":3,"file":"tds-ui-core-selection.mjs","sources":["../../../projects/tds-ui/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../../projects/tds-ui/core/selection/tdspseudoCheckbox.module.ts","../../../projects/tds-ui/core/selection/tds-ui-core-selection.ts"],"sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  Component,\r\n  ViewEncapsulation,\r\n  Input,\r\n  ChangeDetectionStrategy,\r\n  Inject,\r\n  Optional,\r\n} from '@angular/core';\r\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\r\n\r\n/**\r\n * Possible states for a pseudo checkbox.\r\n * @docs-private\r\n */\r\nexport type TDSPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\r\n\r\n/**\r\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\r\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\r\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\r\n * Note that theming is meant to be handled by the parent element, e.g.\r\n * `mat-primary .tds-pseudo-checkbox`.\r\n *\r\n * Note that this component will be completely invisible to screen-reader users. This is *not*\r\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\r\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\r\n * of more complex components that appropriately handle selected / checked state.\r\n * @docs-private\r\n */\r\n@Component({\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  selector: 'tds-pseudo-checkbox',  \r\n  template: '',\r\n  host: {\r\n    'class': 'tds-pseudo-checkbox',\r\n    '[class.tds-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\r\n    '[class.tds-pseudo-checkbox-checked]': 'state === \"checked\"',\r\n    '[class.tds-pseudo-checkbox-disabled]': 'disabled',\r\n    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\r\n  },\r\n})\r\nexport class TDSPseudoCheckbox {\r\n  /** Display state of the checkbox. */\r\n  @Input() state: TDSPseudoCheckboxState = 'unchecked';\r\n\r\n  /** Whether the checkbox is disabled. */\r\n  @Input() disabled: boolean = false;\r\n\r\n  constructor(@Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) { }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {NgModule} from '@angular/core';\r\nimport {TDSPseudoCheckbox} from './pseudo-checkbox/pseudo-checkbox';\r\n\r\n\r\n@NgModule({\r\n  imports: [],\r\n  exports: [TDSPseudoCheckbox],\r\n  declarations: [TDSPseudoCheckbox]\r\n})\r\nexport class TDSPseudoCheckboxModule { }\r\n\r\n\r\n\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;AAAA;;;;;;AAMG;AAkBH;;;;;;;;;;;;AAYG;MAcU,iBAAiB,CAAA;AAO5B,IAAA,WAAA,CAA8D,cAAuB,EAAA;AAAvB,QAAA,IAAc,CAAA,cAAA,GAAd,cAAc,CAAS;;AAL5E,QAAA,IAAK,CAAA,KAAA,GAA2B,WAAW,CAAC;;AAG5C,QAAA,IAAQ,CAAA,QAAA,GAAY,KAAK,CAAC;KAEuD;;AAP/E,iBAAA,CAAA,IAAA,GAAA,SAAA,yBAAA,CAAA,CAAA,EAAA,EAAA,OAAA,KAAA,CAAA,IAAA,iBAAiB,uBAOI,qBAAqB,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA;oEAP1C,iBAAiB,EAAA,SAAA,EAAA,CAAA,CAAA,qBAAA,CAAA,CAAA,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,qBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,EAAA,YAAA,EAAA,SAAA,8BAAA,CAAA,EAAA,EAAA,GAAA,EAAA;QAAA,IAAA,EAAA,GAAA,CAAA,EAAA;;;;;4EAAjB,iBAAiB,EAAA,CAAA;kBAb7B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;oBACT,aAAa,EAAE,iBAAiB,CAAC,IAAI;oBACrC,eAAe,EAAE,uBAAuB,CAAC,MAAM;AAC/C,oBAAA,QAAQ,EAAE,qBAAqB;AAC/B,oBAAA,QAAQ,EAAE,EAAE;AACZ,oBAAA,IAAI,EAAE;AACJ,wBAAA,OAAO,EAAE,qBAAqB;AAC9B,wBAAA,2CAA2C,EAAE,2BAA2B;AACxE,wBAAA,qCAAqC,EAAE,qBAAqB;AAC5D,wBAAA,sCAAsC,EAAE,UAAU;AAClD,wBAAA,iCAAiC,EAAE,qCAAqC;AACzE,qBAAA;iBACF,CAAA;;;8BAQc,QAAQ;;8BAAI,MAAM;+BAAC,qBAAqB,CAAA;;SAL5C,KAAK,EAAA,CAAA;sBAAb,KAAK;gBAGG,QAAQ,EAAA,CAAA;sBAAhB,KAAK;;;;ACvDR;;;;;;AAMG;MAWU,uBAAuB,CAAA;;8FAAvB,uBAAuB,GAAA,CAAA,EAAA,CAAA;yEAAvB,uBAAuB,EAAA,CAAA,CAAA;6EAJzB,EAAE,CAAA,EAAA,CAAA,CAAA;;4EAIA,uBAAuB,EAAA,CAAA;kBALnC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE,EAAE;oBACX,OAAO,EAAE,CAAC,iBAAiB,CAAC;oBAC5B,YAAY,EAAE,CAAC,iBAAiB,CAAC;iBAClC,CAAA;;;wFACY,uBAAuB,EAAA,EAAA,YAAA,EAAA,CAFnB,iBAAiB,CAAA,EAAA,OAAA,EAAA,CADtB,iBAAiB,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;ACd7B;;AAEG;;;;"}