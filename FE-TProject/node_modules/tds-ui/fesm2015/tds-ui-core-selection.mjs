import * as i0 from '@angular/core';
import { Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, Input, NgModule } from '@angular/core';
import { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/**
 * Component that shows a simplified checkbox without including any kind of "real" checkbox.
 * Meant to be used when the checkbox is purely decorative and a large number of them will be
 * included, such as for the options in a multi-select. Uses no SVGs or complex animations.
 * Note that theming is meant to be handled by the parent element, e.g.
 * `mat-primary .tds-pseudo-checkbox`.
 *
 * Note that this component will be completely invisible to screen-reader users. This is *not*
 * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly
 * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail
 * of more complex components that appropriately handle selected / checked state.
 * @docs-private
 */
class TDSPseudoCheckbox {
    constructor(_animationMode) {
        this._animationMode = _animationMode;
        /** Display state of the checkbox. */
        this.state = 'unchecked';
        /** Whether the checkbox is disabled. */
        this.disabled = false;
    }
}
TDSPseudoCheckbox.ɵfac = function TDSPseudoCheckbox_Factory(t) { return new (t || TDSPseudoCheckbox)(i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };
TDSPseudoCheckbox.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TDSPseudoCheckbox, selectors: [["tds-pseudo-checkbox"]], hostAttrs: [1, "tds-pseudo-checkbox"], hostVars: 8, hostBindings: function TDSPseudoCheckbox_HostBindings(rf, ctx) {
        if (rf & 2) {
            i0.ɵɵclassProp("tds-pseudo-checkbox-indeterminate", ctx.state === "indeterminate")("tds-pseudo-checkbox-checked", ctx.state === "checked")("tds-pseudo-checkbox-disabled", ctx.disabled)("_mat-animation-noopable", ctx._animationMode === "NoopAnimations");
        }
    }, inputs: { state: "state", disabled: "disabled" }, decls: 0, vars: 0, template: function TDSPseudoCheckbox_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });
(function () {
    (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSPseudoCheckbox, [{
            type: Component,
            args: [{
                    encapsulation: ViewEncapsulation.None,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    selector: 'tds-pseudo-checkbox',
                    template: '',
                    host: {
                        'class': 'tds-pseudo-checkbox',
                        '[class.tds-pseudo-checkbox-indeterminate]': 'state === "indeterminate"',
                        '[class.tds-pseudo-checkbox-checked]': 'state === "checked"',
                        '[class.tds-pseudo-checkbox-disabled]': 'disabled',
                        '[class._mat-animation-noopable]': '_animationMode === "NoopAnimations"',
                    },
                }]
        }], function () {
        return [{ type: undefined, decorators: [{
                        type: Optional
                    }, {
                        type: Inject,
                        args: [ANIMATION_MODULE_TYPE]
                    }] }];
    }, { state: [{
                type: Input
            }], disabled: [{
                type: Input
            }] });
})();

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
class TDSPseudoCheckboxModule {
}
TDSPseudoCheckboxModule.ɵfac = function TDSPseudoCheckboxModule_Factory(t) { return new (t || TDSPseudoCheckboxModule)(); };
TDSPseudoCheckboxModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: TDSPseudoCheckboxModule });
TDSPseudoCheckboxModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [[]] });
(function () {
    (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSPseudoCheckboxModule, [{
            type: NgModule,
            args: [{
                    imports: [],
                    exports: [TDSPseudoCheckbox],
                    declarations: [TDSPseudoCheckbox]
                }]
        }], null, null);
})();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0.ɵɵsetNgModuleScope(TDSPseudoCheckboxModule, { declarations: [TDSPseudoCheckbox], exports: [TDSPseudoCheckbox] }); })();

/**
 * Generated bundle index. Do not edit.
 */

export { TDSPseudoCheckbox, TDSPseudoCheckboxModule };
//# sourceMappingURL=tds-ui-core-selection.mjs.map
