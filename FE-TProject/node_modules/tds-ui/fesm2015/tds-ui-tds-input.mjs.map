{"version":3,"file":"tds-ui-tds-input.mjs","sources":["../../../projects/tds-ui/tds-input/input-errors.ts","../../../projects/tds-ui/tds-input/input-value-accessor.ts","../../../projects/tds-ui/tds-input/input.ts","../../../projects/tds-ui/tds-input/autosize.directive.ts","../../../projects/tds-ui/tds-input/disabled-control.ts","../../../projects/tds-ui/tds-input/input-debounce.directive.ts","../../../projects/tds-ui/tds-input/input-module.ts","../../../projects/tds-ui/tds-input/tds-ui-tds-input.ts"],"sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/** @docs-private */\r\nexport function getTDSInputUnsupportedTypeError(type: string): Error {\r\n  return Error(`Input type \"${type}\" isn't supported by tdsInput.`);\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {InjectionToken} from '@angular/core';\r\n\r\n\r\n/**\r\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\r\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\r\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\r\n * value to them.\r\n */\r\nexport const TDS_INPUT_VALUE_ACCESSOR =\r\n    new InjectionToken<{value: any}>('TDS_INPUT_VALUE_ACCESSOR');\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { FocusMonitor } from '@angular/cdk/a11y';\r\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport { getSupportedInputTypes, Platform } from '@angular/cdk/platform';\r\nimport { AutofillMonitor } from '@angular/cdk/text-field';\r\nimport {\r\n  AfterViewInit,\r\n  Directive,\r\n  DoCheck,\r\n  ElementRef,\r\n  HostListener,\r\n  Inject,\r\n  Input,\r\n  NgZone,\r\n  OnChanges,\r\n  OnDestroy,\r\n  Optional,\r\n  Self,\r\n} from '@angular/core';\r\nimport { FormGroupDirective, NgControl, NgForm } from '@angular/forms';\r\nimport { Subject } from 'rxjs';\r\nimport { ButtonSize } from \"tds-ui/core/config\";\r\nimport { TDSFormField, TDSFormFieldControl, TDS_FORM_FIELD } from 'tds-ui/form-field';\r\nimport { CanUpdateErrorState, CanUpdateErrorStateCtor, ErrorStateMatcher, mixinErrorState } from 'tds-ui/shared/common';\r\nimport { InputBoolean } from 'tds-ui/shared/utility';\r\nimport { getTDSInputUnsupportedTypeError } from './input-errors';\r\nimport { TDS_INPUT_VALUE_ACCESSOR } from './input-value-accessor';\r\n\r\n\r\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\r\nconst TA_INPUT_INVALID_TYPES = [\r\n  'button',\r\n  'checkbox',\r\n  'file',\r\n  'hidden',\r\n  'image',\r\n  'radio',\r\n  'range',\r\n  'reset',\r\n  'submit'\r\n];\r\n\r\nlet nextUniqueId = 0;\r\n\r\n// Boilerplate for applying mixins to MatInput.\r\n/** @docs-private */\r\nclass TDSInputBase {\r\n  constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\r\n    public _parentForm: NgForm,\r\n    public _parentFormGroup: FormGroupDirective,\r\n    /** @docs-private */\r\n    public ngControl: NgControl) { }\r\n}\r\nconst _TDSInputMixinBase: CanUpdateErrorStateCtor & typeof TDSInputBase =\r\n  mixinErrorState(TDSInputBase);\r\n\r\n/** Directive that allows a native input to work inside a `TDSFormField`. */\r\n@Directive({\r\n  selector: `input[tdsInput], textarea[tdsInput], select[tdsNativeControl],\r\n      input[tdsNativeControl], textarea[tdsNativeControl]`,\r\n  exportAs: 'tdsInput',\r\n  host: {\r\n\r\n    'class': 'flex  items-center text-body-2 tds-input-element tds-form-field-autofill-control focus:outline-none focus:border-transparent shadow-none border-0 bg-transparent text-current  p-0  m-0 w-full outline-none  box-border placeholder:text-neutral-1-400 dark:placeholder:text-d-neutral-1-400',\r\n    '[class.tds-input-server]': '_isServer',\r\n    '[class.cursor-not-allowed]': 'disabled',\r\n    // Native input properties that are overwritten by Angular inputs need to be synced with\r\n    // the native input element. Otherwise property bindings for those don't work.\r\n    '[attr.id]': 'id',\r\n    // At the time of writing, we have a lot of customer tests that look up the input based on its\r\n    // placeholder. Since we sometimes omit the placeholder attribute from the DOM to prevent screen\r\n    // readers from reading it twice, we have to keep it somewhere in the DOM for the lookup.\r\n    '[attr.data-placeholder]': 'placeholder',\r\n    '[attr.placeholder]': 'placeholder',\r\n    '[disabled]': 'disabled',\r\n    '[required]': 'required',\r\n    '[attr.readonly]': 'readonly && !_isNativeSelect || null',\r\n    // Only mark the input as invalid for assistive technology if it has a value since the\r\n    // state usually overlaps with `aria-required` when the input is empty and can be redundant.\r\n    '[attr.aria-invalid]': 'errorState && !empty',\r\n    '[attr.aria-required]': 'required',\r\n    '[style.boxShadow]': '\"unset\"',\r\n    '[attr.autofocus]': \"autofocus ? 'autofocus' : null\"\r\n  },\r\n  providers: [{ provide: TDSFormFieldControl, useExisting: TDSInput }],\r\n})\r\nexport class TDSInput extends _TDSInputMixinBase implements TDSFormFieldControl<any>, OnChanges,\r\n  OnDestroy, AfterViewInit, DoCheck, CanUpdateErrorState {\r\n  protected _uid = `tds-input-${nextUniqueId++}`;\r\n  protected _previousNativeValue: any;\r\n  private _inputValueAccessor: { value: any };\r\n  // private _previousPlaceholder: string | null;\r\n\r\n  /** Whether the component is being rendered on the server. */\r\n  readonly _isServer: boolean;\r\n\r\n  /** Whether the component is a native html select. */\r\n  readonly _isNativeSelect: boolean;\r\n\r\n  /** Whether the component is a textarea. */\r\n  readonly _isTextarea: boolean;\r\n  /**\r\n   * Implemented as part of TDSFormFieldControl.\r\n   * @docs-private\r\n   */\r\n  focused: boolean = false;\r\n\r\n  /**\r\n   * Implemented as part of TDSFormFieldControl.\r\n   * @docs-private\r\n   */\r\n  readonly stateChanges: Subject<void> = new Subject<void>();\r\n\r\n  /**\r\n   * Implemented as part of TDSFormFieldControl.\r\n   * @docs-private\r\n   */\r\n  controlType: string = 'tds-input';\r\n\r\n  /**\r\n   * Implemented as part of TDSFormFieldControl.\r\n   * @docs-private\r\n   */\r\n  autofilled = false;\r\n  private _size: ButtonSize = 'md'\r\n  @Input()\r\n  get size() {\r\n    return this._size;\r\n  }\r\n  set size(value: ButtonSize) {\r\n    if (this._size != value) {\r\n      this._size = value;\r\n      this.stateChanges.next();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Implemented as part of TDSFormFieldControl.\r\n   * @docs-private\r\n   */\r\n  @Input()\r\n  get disabled(): boolean {\r\n    if (this.ngControl && this.ngControl.disabled !== null) {\r\n      return this.ngControl.disabled;\r\n    }\r\n    return this._disabled;\r\n  }\r\n  set disabled(value: boolean) {\r\n    this._disabled = coerceBooleanProperty(value);\r\n\r\n    // Browsers may not fire the blur event if the input is disabled too quickly.\r\n    // Reset from here to ensure that the element doesn't become stuck.\r\n    if (this.focused) {\r\n      this.focused = false;\r\n      this.stateChanges.next();\r\n    }\r\n  }\r\n  protected _disabled = false;\r\n\r\n  /**\r\n   * Implemented as part of TDSFormFieldControl.\r\n   * @docs-private\r\n   */\r\n  @Input()\r\n  get id(): string { return this._id; }\r\n  set id(value: string) { this._id = value || this._uid; }\r\n  protected _id!: string;\r\n\r\n  /**\r\n   * Implemented as part of TDSFormFieldControl.\r\n   * @docs-private\r\n   */\r\n  @Input() placeholder!: string;\r\n\r\n  /**\r\n   * Implemented as part of TDSFormFieldControl.\r\n   * @docs-private\r\n   */\r\n  @Input()\r\n  get required(): boolean { return this._required; }\r\n  set required(value: boolean) { this._required = coerceBooleanProperty(value); }\r\n  protected _required = false;\r\n\r\n  /** Input type of the element. */\r\n  @Input()\r\n  get type(): string { return this._type; }\r\n  set type(value: string) {\r\n    this._type = value || 'text';\r\n    this._validateType();\r\n\r\n    // When using Angular inputs, developers are no longer able to set the properties on the native\r\n    // input element. To ensure that bindings for `type` work, we need to sync the setter\r\n    // with the native property. Textarea elements don't support the type property or attribute.\r\n    if (!this._isTextarea && getSupportedInputTypes().has(this._type)) {\r\n      (this._elementRef.nativeElement as HTMLInputElement).type = this._type;\r\n    }\r\n  }\r\n  protected _type = 'text';\r\n\r\n  /** An object used to control when error messages are shown. */\r\n  @Input() errorStateMatcher!: ErrorStateMatcher;\r\n\r\n  /**\r\n   * Implemented as part of TDSFormFieldControl.\r\n   * @docs-private\r\n   */\r\n  @Input('aria-describedby') userAriaDescribedBy!: string;\r\n\r\n  /**\r\n   * Implemented as part of TDSFormFieldControl.\r\n   * @docs-private\r\n   */\r\n  @Input()\r\n  get value(): string { return this._inputValueAccessor.value; }\r\n  set value(value: string) {\r\n    if (value !== this.value) {\r\n      this._inputValueAccessor.value = value;\r\n      this.stateChanges.next();\r\n    }\r\n  }\r\n  @Input() @InputBoolean() autofocus = false;\r\n  /** Whether the element is readonly. */\r\n  @Input()\r\n  get readonly(): boolean { return this._readonly; }\r\n  set readonly(value: boolean) { this._readonly = coerceBooleanProperty(value); }\r\n  private _readonly = false;\r\n\r\n  protected _neverEmptyInputTypes = [\r\n    'date',\r\n    'datetime',\r\n    'datetime-local',\r\n    'month',\r\n    'time',\r\n    'week'\r\n  ].filter(t => getSupportedInputTypes().has(t));\r\n\r\n  constructor(\r\n    protected _elementRef: ElementRef<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>,\r\n    protected _platform: Platform,\r\n    /** @docs-private */\r\n    @Optional() @Self() public ngControl: NgControl,\r\n    @Optional() _parentForm: NgForm,\r\n    @Optional() _parentFormGroup: FormGroupDirective,\r\n    _defaultErrorStateMatcher: ErrorStateMatcher,\r\n    @Optional() @Self() @Inject(TDS_INPUT_VALUE_ACCESSOR) inputValueAccessor: any,\r\n    private _autofillMonitor: AutofillMonitor,\r\n    private host: ElementRef<HTMLElement>,\r\n    private focusMonitor: FocusMonitor,\r\n    ngZone: NgZone,\r\n    // TODO: Remove this once the legacy appearance has been removed. We only need\r\n    // to inject the form-field for determining whether the placeholder has been promoted.\r\n    @Optional() @Inject(TDS_FORM_FIELD) private _formField?: TDSFormField) {\r\n\r\n    super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\r\n\r\n    const element = this._elementRef.nativeElement;\r\n    const nodeName = element.nodeName.toLowerCase();\r\n\r\n    // If no input value accessor was explicitly specified, use the element as the input value\r\n    // accessor.\r\n    this._inputValueAccessor = inputValueAccessor || element;\r\n\r\n    this._previousNativeValue = this.value;\r\n\r\n    // Force setter to be called in case id was not specified.\r\n    this.id = this.id;\r\n\r\n    // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\r\n    // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\r\n    // exists on iOS, we only bother to install the listener on iOS.\r\n    if (_platform.IOS) {\r\n      ngZone.runOutsideAngular(() => {\r\n        _elementRef.nativeElement.addEventListener('keyup', (event: Event) => {\r\n          let el = event.target as HTMLInputElement;\r\n          if (!el.value && !el.selectionStart && !el.selectionEnd) {\r\n            // Note: Just setting `0, 0` doesn't fix the issue. Setting\r\n            // `1, 1` fixes it for the first time that you type text and\r\n            // then hold delete. Toggling to `1, 1` and then back to\r\n            // `0, 0` seems to completely fix it.\r\n            el.setSelectionRange(1, 1);\r\n            el.setSelectionRange(0, 0);\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    this._isServer = !this._platform.isBrowser;\r\n    this._isNativeSelect = nodeName === 'select';\r\n    this._isTextarea = nodeName === 'textarea';\r\n\r\n    if (this._isNativeSelect) {\r\n      this.controlType = (element as HTMLSelectElement).multiple ? 'tds-native-select-multiple' :\r\n        'tds-native-select';\r\n    }\r\n\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this._platform.isBrowser) {\r\n      this._autofillMonitor.monitor(this.host).subscribe(event => {\r\n        this.autofilled = event.isAutofilled;\r\n        this.stateChanges.next();\r\n      });\r\n      this.focusMonitor.monitor(this.host, true).subscribe(event => {\r\n        this._focusChanged(event != null);\r\n      })\r\n      if (this.autofocus && !this.focused && (!this.readonly)) {\r\n        this.focused = true;\r\n        this.focus();\r\n        this.stateChanges.next();\r\n      }\r\n    }\r\n    this.setPaddingRight();\r\n    this.setpaddingLeft();\r\n    this.setStyle();\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.setStyle();\r\n    this.stateChanges.next();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.stateChanges.complete();\r\n\r\n    if (this._platform.isBrowser) {\r\n      this._autofillMonitor.stopMonitoring(this.host);\r\n      this.focusMonitor.stopMonitoring(this.host)\r\n    }\r\n  }\r\n\r\n  ngDoCheck() {\r\n    if (this.ngControl) {\r\n      // We need to re-evaluate this on every change detection cycle, because there are some\r\n      // error triggers that we can't subscribe to (e.g. parent form submissions). This means\r\n      // that whatever logic is in here has to be super lean or we risk destroying the performance.\r\n      this.updateErrorState();\r\n    }\r\n\r\n    // We need to dirty-check the native element's value, because there are some cases where\r\n    // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\r\n    // updating the value using `emitEvent: false`).\r\n    this._dirtyCheckNativeValue();\r\n\r\n\r\n  }\r\n\r\n  /** Focuses the input. */\r\n  focus(options?: FocusOptions): void {\r\n    this._elementRef.nativeElement.focus(options);\r\n  }\r\n\r\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\r\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\r\n  // ViewEngine they're overwritten.\r\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\r\n  /** Callback for the cases where the focused state of the input changes. */\r\n  // tslint:disable:no-host-decorator-in-concrete\r\n  // @HostListener('focus', ['true'])\r\n  // @HostListener('blur', ['false'])\r\n  // tslint:enable:no-host-decorator-in-concrete\r\n  _focusChanged(isFocused: boolean) {\r\n    if (isFocused !== this.focused && (!this.readonly || !isFocused)) {\r\n      this.focused = isFocused;\r\n      this.stateChanges.next();\r\n    }\r\n  }\r\n\r\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\r\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\r\n  // ViewEngine they're overwritten.\r\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\r\n  // tslint:disable-next-line:no-host-decorator-in-concrete\r\n  @HostListener('input')\r\n  _onInput() {\r\n    // This is a noop function and is used to let Angular know whenever the value changes.\r\n    // Angular will run a new change detection each time the `input` event has been dispatched.\r\n    // It's necessary that Angular recognizes the value change, because when floatingLabel\r\n    // is set to false and Angular forms aren't used, the placeholder won't recognize the\r\n    // value changes and will not disappear.\r\n    // Listening to the input event wouldn't be necessary when the input is using the\r\n    // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\r\n  }\r\n\r\n\r\n\r\n  /** Does some manual dirty checking on the native input `value` property. */\r\n  protected _dirtyCheckNativeValue() {\r\n    const newValue = this._elementRef.nativeElement.value;\r\n\r\n    if (this._previousNativeValue !== newValue) {\r\n      this._previousNativeValue = newValue;\r\n      this.stateChanges.next();\r\n    }\r\n  }\r\n\r\n  /** Make sure the input is a supported type. */\r\n  protected _validateType() {\r\n    if (TA_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\r\n      throw getTDSInputUnsupportedTypeError(this._type);\r\n    }\r\n  }\r\n\r\n  /** Checks whether the input type is one of the types that are never empty. */\r\n  protected _isNeverEmpty() {\r\n    return this._neverEmptyInputTypes.indexOf(this._type) > -1;\r\n  }\r\n\r\n  /** Checks whether the input is invalid based on the native validation. */\r\n  protected _isBadInput() {\r\n    // The `validity` property won't be present on platform-server.\r\n    let validity = (this._elementRef.nativeElement as HTMLInputElement).validity;\r\n    return validity && validity.badInput;\r\n  }\r\n\r\n  /**\r\n   * Implemented as part of TDSFormFieldControl.\r\n   * @docs-private\r\n   */\r\n  get empty(): boolean {\r\n    return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput() &&\r\n      !this.autofilled;\r\n  }\r\n\r\n  /**\r\n   * Implemented as part of TDSFormFieldControl.\r\n   * @docs-private\r\n   */\r\n  get shouldLabelFloat(): boolean {\r\n    if (this._isNativeSelect) {\r\n      // For a single-selection `<select>`, the label should float when the selected option has\r\n      // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\r\n      // overlapping the label with the options.\r\n      const selectElement = this._elementRef.nativeElement as HTMLSelectElement;\r\n      const firstOption: HTMLOptionElement | undefined = selectElement.options[0];\r\n\r\n      // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\r\n      // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\r\n      return this.focused || selectElement.multiple || !this.empty ||\r\n        !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label);\r\n    } else {\r\n      return this.focused || !this.empty;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Implemented as part of TDSFormFieldControl.\r\n   * @docs-private\r\n   */\r\n  setDescribedByIds(ids: string[]) {\r\n    if (ids.length) {\r\n      this._elementRef.nativeElement.setAttribute('aria-describedby', ids.join(' '));\r\n    } else {\r\n      this._elementRef.nativeElement.removeAttribute('aria-describedby');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Implemented as part of TDSFormFieldControl.\r\n   * @docs-private\r\n   */\r\n  onContainerClick() {\r\n    // Do not re-focus the input element if the element is already focused. Otherwise it can happen\r\n    // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\r\n    // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\r\n    // if (!this.focused) {\r\n    //   this.focus();\r\n    // }\r\n  }\r\n  private setStyle() {\r\n\r\n    switch (this.size) {\r\n      case 'sm':\r\n        this._elementRef.nativeElement.classList.add(\"my-1\");\r\n        break;\r\n      case 'md':\r\n        this._elementRef.nativeElement.classList.add(\"my-1.5\");\r\n        break;\r\n      case 'lg':\r\n        this._elementRef.nativeElement.classList.add(\"my-2\");\r\n        break;\r\n\r\n      default:\r\n        this._elementRef.nativeElement.classList.add(\"my-1.5\");\r\n        break;\r\n    }\r\n  }\r\n  private setPaddingRight() {\r\n\r\n    if (this._hasPaddingRight()) {\r\n      switch (this.size) {\r\n        case 'sm':\r\n          this._elementRef.nativeElement.classList.add(\"pr-2.5\");\r\n          break;\r\n        case 'md':\r\n          this._elementRef.nativeElement.classList.add(\"pr-3\");\r\n          break;\r\n        case 'lg':\r\n          this._elementRef.nativeElement.classList.add(\"pr-4\");\r\n          break;\r\n\r\n        default:\r\n          this._elementRef.nativeElement.classList.add(\"pr-3\");\r\n          break;\r\n      }\r\n    } else {\r\n      this._elementRef.nativeElement.classList.add(\"pr-0\");\r\n    }\r\n  }\r\n  private _hasPaddingRight() {\r\n    if (!this._formField) {\r\n      return true;\r\n    }\r\n    return !(this._formField._hasAddOnRightChildren() || this._formField._hasSuffixChildren())\r\n  }\r\n  private setpaddingLeft() {\r\n\r\n    if (this._hasAddOneftChildren()) {\r\n      this._elementRef.nativeElement.classList.add(\"pl-2\");\r\n    } else if (!this._hasPrefixChildren()) {\r\n      switch (this.size) {\r\n        case 'sm':\r\n          this._elementRef.nativeElement.classList.add(\"pl-2.5\");\r\n          break;\r\n        case 'md':\r\n          this._elementRef.nativeElement.classList.add(\"pl-3\");\r\n          break;\r\n        case 'lg':\r\n          this._elementRef.nativeElement.classList.add(\"pl-4\");\r\n          break;\r\n\r\n        default:\r\n          this._elementRef.nativeElement.classList.add(\"pr-3\");\r\n          break;\r\n      }\r\n    }\r\n  }\r\n  private _hasAddOneftChildren() {\r\n    if (!this._formField) {\r\n      return false;\r\n    }\r\n    return this._formField._hasAddOnLeftChildren();\r\n  }\r\n  private _hasPrefixChildren() {\r\n    if (!this._formField) {\r\n      return false;\r\n    }\r\n    return this._formField._hasPrefixChildren();\r\n  }\r\n  static ngAcceptInputType_disabled: BooleanInput;\r\n  static ngAcceptInputType_readonly: BooleanInput;\r\n  static ngAcceptInputType_required: BooleanInput;\r\n\r\n  // Accept `any` to avoid conflicts with other directives on `<input>` that may\r\n  // accept different types.\r\n  static ngAcceptInputType_value: any;\r\n}\r\n","\r\n\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { AfterViewInit, Directive, DoCheck, ElementRef, Input, NgZone, OnDestroy } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { TDSResizeService } from 'tds-ui/core/services';\r\n\r\nexport interface AutoSizeType {\r\n  minRows?: number;\r\n  maxRows?: number;\r\n}\r\n\r\n@Directive({\r\n  selector: 'textarea[tdsAutosize]',\r\n  exportAs: 'tdsAutosize',\r\n  host: {\r\n    // Textarea elements that have the directive applied should have a single row by default.\r\n    // Browsers normally show two rows by default and therefore this limits the minRows binding.\r\n    rows: '1',\r\n    '(input)': 'noopInputHandler()'\r\n  }\r\n})\r\nexport class TDSAutosizeDirective implements AfterViewInit, OnDestroy, DoCheck {\r\n  private autosize: boolean = false;\r\n  private el: HTMLTextAreaElement | HTMLInputElement = this.elementRef.nativeElement;\r\n  private cachedLineHeight!: number;\r\n  private previousValue!: string;\r\n  private previousMinRows: number | undefined;\r\n  private minRows: number | undefined;\r\n  private maxRows: number | undefined;\r\n  private maxHeight: number | null = null;\r\n  private minHeight: number | null = null;\r\n  private destroy$ = new Subject<void>();\r\n  private inputGap = 10;\r\n\r\n  @Input()\r\n  set tdsAutosize(value: string | boolean | AutoSizeType) {\r\n    const isAutoSizeType = (data: string | boolean | AutoSizeType): data is AutoSizeType =>\r\n      typeof data !== 'string' && typeof data !== 'boolean' && (!!data.maxRows || !!data.minRows);\r\n    if (typeof value === 'string' || value === true) {\r\n      this.autosize = true;\r\n    } else if (isAutoSizeType(value)) {\r\n      this.autosize = true;\r\n      this.minRows = value.minRows;\r\n      this.maxRows = value.maxRows;\r\n      this.maxHeight = this.setMaxHeight();\r\n      this.minHeight = this.setMinHeight();\r\n    }\r\n  }\r\n\r\n  resizeToFitContent(force: boolean = false): void {\r\n    this.cacheTextareaLineHeight();\r\n\r\n    // If we haven't determined the line-height yet, we know we're still hidden and there's no point\r\n    // in checking the height of the textarea.\r\n    if (!this.cachedLineHeight) {\r\n      return;\r\n    }\r\n\r\n    const textarea = this.el as HTMLTextAreaElement;\r\n    const value = textarea.value;\r\n\r\n    // Only resize if the value or minRows have changed since these calculations can be expensive.\r\n    if (!force && this.minRows === this.previousMinRows && value === this.previousValue) {\r\n      return;\r\n    }\r\n    const placeholderText = textarea.placeholder;\r\n\r\n    // Reset the textarea height to auto in order to shrink back to its default size.\r\n    // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\r\n    // Long placeholders that are wider than the textarea width may lead to a bigger scrollHeight\r\n    // value. To ensure that the scrollHeight is not bigger than the content, the placeholders\r\n    // need to be removed temporarily.\r\n    textarea.classList.add('nz-textarea-autosize-measuring');\r\n    textarea.placeholder = '';\r\n    let height =\r\n      Math.round((textarea.scrollHeight - this.inputGap) / this.cachedLineHeight) * this.cachedLineHeight +\r\n      this.inputGap;\r\n    if (this.maxHeight !== null && height > this.maxHeight) {\r\n      height = this.maxHeight!;\r\n    }\r\n    if (this.minHeight !== null && height < this.minHeight) {\r\n      height = this.minHeight!;\r\n    }\r\n    // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\r\n    textarea.style.height = `${height}px`;\r\n    textarea.classList.remove('nz-textarea-autosize-measuring');\r\n    textarea.placeholder = placeholderText;\r\n\r\n    // On Firefox resizing the textarea will prevent it from scrolling to the caret position.\r\n    // We need to re-set the selection in order for it to scroll to the proper position.\r\n    if (typeof requestAnimationFrame !== 'undefined') {\r\n      this.ngZone.runOutsideAngular(() =>\r\n        requestAnimationFrame(() => {\r\n          const { selectionStart, selectionEnd } = textarea;\r\n\r\n          // IE will throw an \"Unspecified error\" if we try to set the selection range after the\r\n          // element has been removed from the DOM. Assert that the directive hasn't been destroyed\r\n          // between the time we requested the animation frame and when it was executed.\r\n          // Also note that we have to assert that the textarea is focused before we set the\r\n          // selection range. Setting the selection range on a non-focused textarea will cause\r\n          // it to receive focus on IE and Edge.\r\n          if (!this.destroy$.isStopped && document.activeElement === textarea) {\r\n            textarea.setSelectionRange(selectionStart, selectionEnd);\r\n          }\r\n        })\r\n      );\r\n    }\r\n\r\n    this.previousValue = value;\r\n    this.previousMinRows = this.minRows;\r\n  }\r\n\r\n  private cacheTextareaLineHeight(): void {\r\n    if (this.cachedLineHeight >= 0 || !this.el.parentNode) {\r\n      return;\r\n    }\r\n\r\n    // Use a clone element because we have to override some styles.\r\n    const textareaClone = this.el.cloneNode(false) as HTMLTextAreaElement;\r\n    textareaClone.rows = 1;\r\n\r\n    // Use `position: absolute` so that this doesn't cause a browser layout and use\r\n    // `visibility: hidden` so that nothing is rendered. Clear any other styles that\r\n    // would affect the height.\r\n    textareaClone.style.position = 'absolute';\r\n    textareaClone.style.visibility = 'hidden';\r\n    textareaClone.style.border = 'none';\r\n    textareaClone.style.padding = '0';\r\n    textareaClone.style.height = '';\r\n    textareaClone.style.minHeight = '';\r\n    textareaClone.style.maxHeight = '';\r\n\r\n    // In Firefox it happens that textarea elements are always bigger than the specified amount\r\n    // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\r\n    // As a workaround that removes the extra space for the scrollbar, we can just set overflow\r\n    // to hidden. This ensures that there is no invalid calculation of the line height.\r\n    // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\r\n    textareaClone.style.overflow = 'hidden';\r\n\r\n    this.el.parentNode!.appendChild(textareaClone);\r\n    this.cachedLineHeight = textareaClone.clientHeight - this.inputGap;\r\n    this.el.parentNode!.removeChild(textareaClone);\r\n\r\n    // Min and max heights have to be re-calculated if the cached line height changes\r\n    this.maxHeight = this.setMaxHeight();\r\n    this.minHeight = this.setMinHeight();\r\n  }\r\n\r\n  setMinHeight(): number | null {\r\n    const minHeight =\r\n      this.minRows && this.cachedLineHeight ? this.minRows * this.cachedLineHeight + this.inputGap : null;\r\n\r\n    if (minHeight !== null) {\r\n      this.el.style.minHeight = `${minHeight}px`;\r\n    }\r\n    return minHeight;\r\n  }\r\n\r\n  setMaxHeight(): number | null {\r\n    const maxHeight =\r\n      this.maxRows && this.cachedLineHeight ? this.maxRows * this.cachedLineHeight + this.inputGap : null;\r\n    if (maxHeight !== null) {\r\n      this.el.style.maxHeight = `${maxHeight}px`;\r\n    }\r\n    return maxHeight;\r\n  }\r\n\r\n  noopInputHandler(): void {\r\n    // no-op handler that ensures we're running change detection on input events.\r\n  }\r\n\r\n  constructor(\r\n    private elementRef: ElementRef,\r\n    private ngZone: NgZone,\r\n    private platform: Platform,\r\n    private resizeService: TDSResizeService\r\n  ) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.autosize && this.platform.isBrowser) {\r\n      this.resizeToFitContent();\r\n      this.resizeService\r\n        .subscribe()\r\n        .pipe(takeUntil(this.destroy$))\r\n        .subscribe(() => this.resizeToFitContent(true));\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  ngDoCheck(): void {\r\n    if (this.autosize && this.platform.isBrowser) {\r\n      this.resizeToFitContent();\r\n    }\r\n  }\r\n}\r\n","import { Directive, Input } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: '([formControlName], [formControl])[disabledControl]',\r\n})\r\nexport class TDSDisabledControlDirective {\r\n  @Input() set disabledControl(state: boolean) {\r\n    const action = state ? 'disable' : 'enable';\r\n    this.ngControl.control![action]();\r\n  }\r\n\r\n  constructor(private readonly ngControl: NgControl) {}\r\n}","import { Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output } from \"@angular/core\";\r\nimport { fromEvent, Subject } from \"rxjs\";\r\nimport { debounceTime, distinctUntilChanged, takeUntil } from \"rxjs/operators\";\r\n\r\n@Directive({\r\n  selector: '[tdsInputDebounce]'\r\n})\r\nexport class TDSInputDebounceDirective implements OnInit, OnDestroy {\r\n  @Input() tdsInputDebounce = 300;\r\n  @Output() inputKeyup: EventEmitter<any> = new EventEmitter();\r\n  private destroy$ = new Subject<void>();\r\n  constructor(private elementRef: ElementRef) {\r\n  }\r\n  ngOnInit(): void {\r\n    const eventStream = fromEvent(this.elementRef.nativeElement, 'keyup').pipe(\r\n      debounceTime(this.tdsInputDebounce),\r\n      distinctUntilChanged()\r\n    );\r\n    eventStream.pipe(takeUntil(this.destroy$)).subscribe(event => this.inputKeyup.emit({\r\n      value: this.elementRef.nativeElement.value,\r\n      keyupEvent: event\r\n    }));\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { NgModule } from \"@angular/core\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { TDSFormFieldModule } from \"tds-ui/form-field\";\r\nimport { ErrorStateMatcher } from \"tds-ui/shared/common\";\r\nimport { TDSAutosizeDirective } from \"./autosize.directive\";\r\nimport { TDSDisabledControlDirective } from \"./disabled-control\";\r\nimport { TDSInput } from \"./input\";\r\nimport { TDSInputDebounceDirective } from \"./input-debounce.directive\";\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TDSInput,\r\n    TDSDisabledControlDirective,\r\n    TDSAutosizeDirective,\r\n    TDSInputDebounceDirective\r\n  ],\r\n  imports: [\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    TDSFormFieldModule,    \r\n     \r\n  ],\r\n  exports: [\r\n    TDSFormFieldModule,\r\n    TDSInput,\r\n    TDSDisabledControlDirective,\r\n    TDSAutosizeDirective,\r\n    TDSInputDebounceDirective\r\n  ],\r\n  providers: [ErrorStateMatcher],\r\n})\r\nexport class TDSInputModule { }\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i2","i1"],"mappings":"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"}