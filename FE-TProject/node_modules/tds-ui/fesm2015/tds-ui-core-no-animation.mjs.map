{"version":3,"file":"tds-ui-core-no-animation.mjs","sources":["../../../projects/tds-ui/core/no-animation/tds-no-animation.directive.ts","../../../projects/tds-ui/core/no-animation/tds-no-animation.module.ts","../../../projects/tds-ui/core/no-animation/tds-ui-core-no-animation.ts"],"sourcesContent":["\r\n\r\nimport { BooleanInput, coerceElement } from '@angular/cdk/coercion';\r\nimport { AfterViewInit, Directive, ElementRef, Inject, Input, OnChanges, Optional, Renderer2 } from '@angular/core';\r\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\r\n\r\nconst DISABLED_CLASSNAME = 'tds-animate-disabled';\r\n\r\n@Directive({\r\n  selector: '[noAnimation]',\r\n  exportAs: 'noAnimation'\r\n})\r\nexport class TDSNoAnimationDirective implements OnChanges, AfterViewInit {\r\n  static ngAcceptInputType_noAnimation: BooleanInput;\r\n\r\n  @Input()  noAnimation: boolean = false;\r\n\r\n  constructor(\r\n    private element: ElementRef,\r\n    private renderer: Renderer2,\r\n    @Optional() @Inject(ANIMATION_MODULE_TYPE) private animationType: string\r\n  ) {}\r\n\r\n  ngOnChanges(): void {\r\n    this.updateClass();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.updateClass();\r\n  }\r\n\r\n  private updateClass(): void {\r\n    const element = coerceElement(this.element);\r\n    if (!element) {\r\n      return;\r\n    }\r\n    if (this.noAnimation || this.animationType === 'NoopAnimations') {\r\n      this.renderer.addClass(element, DISABLED_CLASSNAME);\r\n    } else {\r\n      this.renderer.removeClass(element, DISABLED_CLASSNAME);\r\n    }\r\n  }\r\n}\r\n","\r\n\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { TDSNoAnimationDirective } from './tds-no-animation.directive';\r\n\r\n@NgModule({\r\n  declarations: [TDSNoAnimationDirective],\r\n  exports: [TDSNoAnimationDirective],\r\n  imports: [CommonModule]\r\n})\r\nexport class TDSNoAnimationModule {}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;;AAMA,MAAM,kBAAkB,GAAG,sBAAsB,CAAC;MAMrC,uBAAuB,CAAA;AAKlC,IAAA,WAAA,CACU,OAAmB,EACnB,QAAmB,EACwB,aAAqB,EAAA;AAFhE,QAAA,IAAO,CAAA,OAAA,GAAP,OAAO,CAAY;AACnB,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAW;AACwB,QAAA,IAAa,CAAA,aAAA,GAAb,aAAa,CAAQ;AALhE,QAAA,IAAW,CAAA,WAAA,GAAY,KAAK,CAAC;KAMnC;IAEJ,WAAW,GAAA;QACT,IAAI,CAAC,WAAW,EAAE,CAAC;KACpB;IAED,eAAe,GAAA;QACb,IAAI,CAAC,WAAW,EAAE,CAAC;KACpB;IAEO,WAAW,GAAA;QACjB,MAAM,OAAO,GAAG,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC5C,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO;AACR,SAAA;QACD,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,aAAa,KAAK,gBAAgB,EAAE;YAC/D,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,EAAE,kBAAkB,CAAC,CAAC;AACrD,SAAA;AAAM,aAAA;YACL,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,EAAE,kBAAkB,CAAC,CAAC;AACxD,SAAA;KACF;;AA7BU,uBAAA,CAAA,IAAA,GAAA,SAAA,+BAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,IAAA,uBAAuB,gGAQZ,qBAAqB,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA;0EARhC,uBAAuB,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,EAAA,aAAA,EAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,QAAA,EAAA,CAAA,aAAA,CAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,CAAA,CAAA;;4EAAvB,uBAAuB,EAAA,CAAA;kBAJnC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,eAAe;AACzB,oBAAA,QAAQ,EAAE,aAAa;iBACxB,CAAA;;;8BASI,QAAQ;;8BAAI,MAAM;+BAAC,qBAAqB,CAAA;;SALjC,WAAW,EAAA,CAAA;sBAApB,KAAK;;;;MCHK,oBAAoB,CAAA;;wFAApB,oBAAoB,GAAA,CAAA,EAAA,CAAA;sEAApB,oBAAoB,EAAA,CAAA,CAAA;AAFtB,oBAAA,CAAA,IAAA,iBAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,CAAC,YAAY,CAAC,CAAA,EAAA,CAAA,CAAA;;4EAEZ,oBAAoB,EAAA,CAAA;kBALhC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,uBAAuB,CAAC;oBACvC,OAAO,EAAE,CAAC,uBAAuB,CAAC;oBAClC,OAAO,EAAE,CAAC,YAAY,CAAC;iBACxB,CAAA;;;AACY,CAAA,cAAA,CAAA,OAAA,SAAA,KAAA,WAAA,IAAA,SAAA,KAAA,EAAA,CAAA,kBAAA,CAAA,oBAAoB,EAJhB,EAAA,YAAA,EAAA,CAAA,uBAAuB,CAE5B,EAAA,OAAA,EAAA,CAAA,YAAY,aADZ,uBAAuB,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;ACTnC;;AAEG;;;;"}