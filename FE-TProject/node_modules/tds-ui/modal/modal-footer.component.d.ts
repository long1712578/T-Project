import { EventEmitter, OnDestroy } from '@angular/core';
import { TDSModalRef } from './modal-ref';
import { ModalButtonOptions, ModalOptions } from './modal-types';
import * as i0 from "@angular/core";
export declare class TDSModalFooterComponent implements OnDestroy {
    config: ModalOptions;
    buttonsFooter: boolean;
    buttons: ModalButtonOptions[];
    readonly cancelTriggered: EventEmitter<void>;
    readonly okTriggered: EventEmitter<void>;
    modalRef: TDSModalRef;
    private destroy$;
    locale: {
        okText: string;
        cancelText: string;
    };
    constructor(config: ModalOptions);
    onCancel(): void;
    onOk(): void;
    /**
     * Returns the value of the specified key.
     * If it is a function, run and return the return value of the function.
     */
    getButtonCallableProp(options: ModalButtonOptions, prop: keyof ModalButtonOptions): boolean;
    /**
     * Run function based on the type and set its `loading` prop if needed.
     */
    onButtonClick(options: ModalButtonOptions): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSModalFooterComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TDSModalFooterComponent, "div[tds-modal-footer]", ["tdsModalFooterBuiltin"], { "modalRef": "modalRef"; }, { "cancelTriggered": "cancelTriggered"; "okTriggered": "okTriggered"; }, never, never>;
}
//# sourceMappingURL=modal-footer.component.d.ts.map