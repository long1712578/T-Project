import { ChangeDetectorRef, OnChanges, SimpleChanges, TemplateRef } from '@angular/core';
import { TDSTreeNode, TDSTreeNodeOptions } from 'tds-ui/core/tree';
import * as i0 from "@angular/core";
export declare class TDSTreeNodeTitleComponent implements OnChanges {
    private cdr;
    searchValue: string;
    treeTemplate: TemplateRef<{
        $implicit: TDSTreeNode;
        origin: TDSTreeNodeOptions;
    }> | null;
    draggable: boolean;
    showIcon: boolean;
    selectMode: boolean;
    context: TDSTreeNode;
    icon: string;
    title: string;
    isLoading: boolean;
    isSelected: boolean;
    isDisabled: boolean;
    isMatched: boolean;
    isExpanded: boolean;
    isLeaf: boolean;
    showIndicator: boolean;
    dragPosition?: number;
    get canDraggable(): boolean | null;
    get matchedValue(): string;
    get isSwitcherOpen(): boolean;
    get isSwitcherClose(): boolean;
    constructor(cdr: ChangeDetectorRef);
    ngOnChanges(changes: SimpleChanges): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSTreeNodeTitleComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TDSTreeNodeTitleComponent, "tds-tree-node-title", never, { "searchValue": "searchValue"; "treeTemplate": "treeTemplate"; "draggable": "draggable"; "showIcon": "showIcon"; "selectMode": "selectMode"; "context": "context"; "icon": "icon"; "title": "title"; "isLoading": "isLoading"; "isSelected": "isSelected"; "isDisabled": "isDisabled"; "isMatched": "isMatched"; "isExpanded": "isExpanded"; "isLeaf": "isLeaf"; "showIndicator": "showIndicator"; "dragPosition": "dragPosition"; }, {}, never, never>;
}
//# sourceMappingURL=tree-node-title.component.d.ts.map