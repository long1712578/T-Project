{"version":3,"file":"tds-ui-core-time.mjs","sources":["../../../projects/tds-ui/core/time/candy-date.ts","../../../projects/tds-ui/core/time/time.ts","../../../projects/tds-ui/core/time/time-parser.ts","../../../projects/tds-ui/core/time/tds-ui-core-time.ts"],"sourcesContent":["\r\n\r\nimport {\r\n  addMonths,\r\n  addYears,\r\n  differenceInCalendarDays,\r\n  differenceInCalendarMonths,\r\n  differenceInCalendarYears,\r\n  differenceInHours,\r\n  differenceInMinutes,\r\n  differenceInSeconds,\r\n  isFirstDayOfMonth,\r\n  isLastDayOfMonth,\r\n  isSameDay,\r\n  isSameHour,\r\n  isSameMinute,\r\n  isSameMonth,\r\n  isSameSecond,\r\n  isSameYear,\r\n  isToday,\r\n  isValid,\r\n  setDay,\r\n  setMonth,\r\n  setYear,\r\n  startOfMonth,\r\n  startOfWeek\r\n} from 'date-fns';\r\nimport { IndexableObject } from 'tds-ui/core/util';\r\n\r\nexport type CandyDateMode = 'decade' | 'year' | 'month' | 'day' | 'hour' | 'minute' | 'second';\r\nexport type NormalizedMode = 'decade' | 'year' | 'month';\r\nexport type WeekDayIndex = 0 | 1 | 2 | 3 | 4 | 5 | 6;\r\nexport type CandyDateType = CandyDate | Date | null;\r\nexport type SingleValue = CandyDate | null;\r\nexport type CompatibleValue = SingleValue | SingleValue[];\r\n\r\nexport function wrongSortOrder(rangeValue: SingleValue[]): boolean {\r\n  const [start, end] = rangeValue;\r\n  return !!start && !!end && end.isBeforeDay(start);\r\n}\r\n\r\nexport function normalizeRangeValue(\r\n  value: SingleValue[],\r\n  hasTimePicker: boolean,\r\n  type: NormalizedMode = 'month',\r\n  activePart: 'left' | 'right' = 'left'\r\n): CandyDate[] {\r\n  const [start, end] = value;\r\n  let newStart: CandyDate = start || new CandyDate();\r\n  let newEnd: CandyDate = end || (hasTimePicker ? newStart : newStart.add(1, type));\r\n\r\n  if (start && !end) {\r\n    newStart = start;\r\n    newEnd = hasTimePicker ? start : start.add(1, type);\r\n  } else if (!start && end) {\r\n    newStart = hasTimePicker ? end : end.add(-1, type);\r\n    newEnd = end;\r\n  } else if (start && end && !hasTimePicker) {\r\n    if (start.isSame(end, type)) {\r\n      newEnd = newStart.add(1, type);\r\n    } else {\r\n      if (activePart === 'left') {\r\n        newEnd = newStart.add(1, type);\r\n      } else {\r\n        newStart = newEnd.add(-1, type);\r\n      }\r\n    }\r\n  }\r\n  return [newStart, newEnd];\r\n}\r\n\r\nexport function cloneDate(value: CompatibleValue): CompatibleValue {\r\n  if (Array.isArray(value)) {\r\n    return value.map(v => (v instanceof CandyDate ? v.clone() : null));\r\n  } else {\r\n    return value instanceof CandyDate ? value.clone() : null;\r\n  }\r\n}\r\n\r\n/**\r\n * Wrapping kind APIs for date operating and unify\r\n * NOTE: every new API return new CandyDate object without side effects to the former Date object\r\n * NOTE: most APIs are based on local time other than customized locale id (this needs tobe support in future)\r\n * TODO: support format() against to angular's core API\r\n */\r\nexport class CandyDate implements IndexableObject {\r\n  nativeDate: Date;\r\n  // locale: string; // Custom specified locale ID\r\n\r\n  constructor(date?: Date | string | number) {\r\n    if (date) {\r\n      if (date instanceof Date) {\r\n        this.nativeDate = date;\r\n      } else if (typeof date === 'string' || typeof date === 'number') {\r\n        console.warn('The string type is not recommended for date-picker, use \"Date\" type');\r\n        this.nativeDate = new Date(date);\r\n      } else {\r\n        throw new Error('The input date type is not supported (\"Date\" is now recommended)');\r\n      }\r\n    } else {\r\n      this.nativeDate = new Date();\r\n    }\r\n  }\r\n\r\n  calendarStart(options?: { weekStartsOn: WeekDayIndex | undefined }): CandyDate {\r\n    return new CandyDate(startOfWeek(startOfMonth(this.nativeDate), options));\r\n  }\r\n\r\n  // ---------------------------------------------------------------------\r\n  // | Native shortcuts\r\n  // -----------------------------------------------------------------------------\\\r\n\r\n  getYear(): number {\r\n    return this.nativeDate.getFullYear();\r\n  }\r\n\r\n  getMonth(): number {\r\n    return this.nativeDate.getMonth();\r\n  }\r\n\r\n  getDay(): number {\r\n    return this.nativeDate.getDay();\r\n  }\r\n\r\n  getTime(): number {\r\n    return this.nativeDate.getTime();\r\n  }\r\n\r\n  getDate(): number {\r\n    return this.nativeDate.getDate();\r\n  }\r\n\r\n  getHours(): number {\r\n    return this.nativeDate.getHours();\r\n  }\r\n\r\n  getMinutes(): number {\r\n    return this.nativeDate.getMinutes();\r\n  }\r\n\r\n  getSeconds(): number {\r\n    return this.nativeDate.getSeconds();\r\n  }\r\n\r\n  getMilliseconds(): number {\r\n    return this.nativeDate.getMilliseconds();\r\n  }\r\n\r\n  // ---------------------------------------------------------------------\r\n  // | New implementing APIs\r\n  // ---------------------------------------------------------------------\r\n\r\n  clone(): CandyDate {\r\n    return new CandyDate(new Date(this.nativeDate));\r\n  }\r\n\r\n  setHms(hour: number, minute: number, second: number): CandyDate {\r\n    const newDate = new Date(this.nativeDate.setHours(hour, minute, second));\r\n    return new CandyDate(newDate);\r\n  }\r\n\r\n  setYear(year: number): CandyDate {\r\n    return new CandyDate(setYear(this.nativeDate, year));\r\n  }\r\n\r\n  addYears(amount: number): CandyDate {\r\n    return new CandyDate(addYears(this.nativeDate, amount));\r\n  }\r\n\r\n  // NOTE: month starts from 0\r\n  // NOTE: Don't use the native API for month manipulation as it not restrict the date when it overflows, eg. (new Date('2018-7-31')).setMonth(1) will be date of 2018-3-03 instead of 2018-2-28\r\n  setMonth(month: number): CandyDate {\r\n    return new CandyDate(setMonth(this.nativeDate, month));\r\n  }\r\n\r\n  addMonths(amount: number): CandyDate {\r\n    return new CandyDate(addMonths(this.nativeDate, amount));\r\n  }\r\n\r\n  setDay(day: number, options?: { weekStartsOn: WeekDayIndex }): CandyDate {\r\n    return new CandyDate(setDay(this.nativeDate, day, options));\r\n  }\r\n\r\n  setDate(amount: number): CandyDate {\r\n    const date = new Date(this.nativeDate);\r\n    date.setDate(amount);\r\n    return new CandyDate(date);\r\n  }\r\n\r\n  addDays(amount: number): CandyDate {\r\n    return this.setDate(this.getDate() + amount);\r\n  }\r\n\r\n  add(amount: number, mode: NormalizedMode): CandyDate {\r\n    switch (mode) {\r\n      case 'decade':\r\n        return this.addYears(amount * 10);\r\n      case 'year':\r\n        return this.addYears(amount);\r\n      case 'month':\r\n        return this.addMonths(amount);\r\n      default:\r\n        return this.addMonths(amount);\r\n    }\r\n  }\r\n\r\n  isSame(date: CandyDateType, grain: CandyDateMode = 'day'): boolean {\r\n    let fn;\r\n    switch (grain) {\r\n      case 'decade':\r\n        fn = (pre: Date, next: Date) => Math.abs(pre.getFullYear() - next.getFullYear()) < 11;\r\n        break;\r\n      case 'year':\r\n        fn = isSameYear;\r\n        break;\r\n      case 'month':\r\n        fn = isSameMonth;\r\n        break;\r\n      case 'day':\r\n        fn = isSameDay;\r\n        break;\r\n      case 'hour':\r\n        fn = isSameHour;\r\n        break;\r\n      case 'minute':\r\n        fn = isSameMinute;\r\n        break;\r\n      case 'second':\r\n        fn = isSameSecond;\r\n        break;\r\n      default:\r\n        fn = isSameDay;\r\n        break;\r\n    }\r\n    return fn(this.nativeDate, this.toNativeDate(date));\r\n  }\r\n\r\n  isSameYear(date: CandyDateType): boolean {\r\n    return this.isSame(date, 'year');\r\n  }\r\n\r\n  isSameMonth(date: CandyDateType): boolean {\r\n    return this.isSame(date, 'month');\r\n  }\r\n\r\n  isSameDay(date: CandyDateType): boolean {\r\n    return this.isSame(date, 'day');\r\n  }\r\n\r\n  isSameHour(date: CandyDateType): boolean {\r\n    return this.isSame(date, 'hour');\r\n  }\r\n\r\n  isSameMinute(date: CandyDateType): boolean {\r\n    return this.isSame(date, 'minute');\r\n  }\r\n\r\n  isSameSecond(date: CandyDateType): boolean {\r\n    return this.isSame(date, 'second');\r\n  }\r\n\r\n  isBefore(date: CandyDateType, grain: CandyDateMode = 'day'): boolean {\r\n    if (date === null) {\r\n      return false;\r\n    }\r\n    let fn;\r\n    switch (grain) {\r\n      case 'year':\r\n        fn = differenceInCalendarYears;\r\n        break;\r\n      case 'month':\r\n        fn = differenceInCalendarMonths;\r\n        break;\r\n      case 'day':\r\n        fn = differenceInCalendarDays;\r\n        break;\r\n      case 'hour':\r\n        fn = differenceInHours;\r\n        break;\r\n      case 'minute':\r\n        fn = differenceInMinutes;\r\n        break;\r\n      case 'second':\r\n        fn = differenceInSeconds;\r\n        break;\r\n      default:\r\n        fn = differenceInCalendarDays;\r\n        break;\r\n    }\r\n    return fn(this.nativeDate, this.toNativeDate(date)) < 0;\r\n  }\r\n\r\n  isBeforeYear(date: CandyDateType): boolean {\r\n    return this.isBefore(date, 'year');\r\n  }\r\n\r\n  isBeforeMonth(date: CandyDateType): boolean {\r\n    return this.isBefore(date, 'month');\r\n  }\r\n\r\n  isBeforeDay(date: CandyDateType): boolean {\r\n    return this.isBefore(date, 'day');\r\n  }\r\n\r\n  // Equal to today accurate to \"day\"\r\n  isToday(): boolean {\r\n    return isToday(this.nativeDate);\r\n  }\r\n\r\n  isValid(): boolean {\r\n    return isValid(this.nativeDate);\r\n  }\r\n\r\n  isFirstDayOfMonth(): boolean {\r\n    return isFirstDayOfMonth(this.nativeDate);\r\n  }\r\n\r\n  isLastDayOfMonth(): boolean {\r\n    return isLastDayOfMonth(this.nativeDate);\r\n  }\r\n\r\n  private toNativeDate(date: any): Date {\r\n    return date instanceof CandyDate ? date.nativeDate : date;\r\n  }\r\n}\r\n","\r\n\r\nexport const timeUnits: Array<[string, number]> = [\r\n  ['Y', 1000 * 60 * 60 * 24 * 365], // years\r\n  ['M', 1000 * 60 * 60 * 24 * 30], // months\r\n  ['D', 1000 * 60 * 60 * 24], // days\r\n  ['H', 1000 * 60 * 60], // hours\r\n  ['m', 1000 * 60], // minutes\r\n  ['s', 1000], // seconds\r\n  ['S', 1] // million seconds\r\n];\r\n","\r\n\r\n// from https://github.com/hsuanxyz/ng-time-parser\r\nimport { FormStyle, getLocaleDayPeriods, TranslationWidth } from '@angular/common';\r\nimport { TDSHelperObject } from 'tds-ui/shared/utility';\r\n\r\nexport interface TimeResult {\r\n  hour: number | null;\r\n  minute: number | null;\r\n  second: number | null;\r\n  period: number | null;\r\n}\r\n\r\nexport class NgTimeParser {\r\n  regex: RegExp = null!;\r\n  matchMap: { [key: string]: null | number } = {\r\n    hour: null,\r\n    minute: null,\r\n    second: null,\r\n    periodNarrow: null,\r\n    periodWide: null,\r\n    periodAbbreviated: null\r\n  };\r\n\r\n  constructor(private format: string, private localeId: string) {\r\n    this.genRegexp();\r\n  }\r\n\r\n  toDate(str: string): Date {\r\n    const result = this.getTimeResult(str);\r\n    const time = new Date();\r\n\r\n    if (TDSHelperObject.hasValue(result?.hour)) {\r\n      time.setHours(result!.hour as number);\r\n    }\r\n\r\n    if (TDSHelperObject.hasValue(result?.minute)) {\r\n      time.setMinutes(result!.minute as number);\r\n    }\r\n\r\n    if (TDSHelperObject.hasValue(result?.second)) {\r\n      time.setSeconds(result!.second as number);\r\n    }\r\n\r\n    if (result?.period === 1 && time.getHours() < 12) {\r\n      time.setHours(time.getHours() + 12);\r\n    }\r\n\r\n    return time;\r\n  }\r\n\r\n  getTimeResult(str: string): TimeResult | null {\r\n    const match = this.regex.exec(str);\r\n    let period = null;\r\n    if (match) {\r\n      if (TDSHelperObject.hasValue(this.matchMap.periodNarrow)) {\r\n        period = getLocaleDayPeriods(this.localeId, FormStyle.Format, TranslationWidth.Narrow).indexOf(\r\n          match[this.matchMap.periodNarrow! + 1]\r\n        );\r\n      }\r\n      if (TDSHelperObject.hasValue(this.matchMap.periodWide)) {\r\n        period = getLocaleDayPeriods(this.localeId, FormStyle.Format, TranslationWidth.Wide).indexOf(match[this.matchMap.periodWide! + 1]);\r\n      }\r\n      if (TDSHelperObject.hasValue(this.matchMap.periodAbbreviated)) {\r\n        period = getLocaleDayPeriods(this.localeId, FormStyle.Format, TranslationWidth.Abbreviated).indexOf(\r\n          match[this.matchMap.periodAbbreviated! + 1]\r\n        );\r\n      }\r\n      return {\r\n        hour: TDSHelperObject.hasValue(this.matchMap.hour) ? Number.parseInt(match[this.matchMap.hour! + 1], 10) : null,\r\n        minute: TDSHelperObject.hasValue(this.matchMap.minute) ? Number.parseInt(match[this.matchMap.minute! + 1], 10) : null,\r\n        second: TDSHelperObject.hasValue(this.matchMap.second) ? Number.parseInt(match[this.matchMap.second! + 1], 10) : null,\r\n        period\r\n      };\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  genRegexp(): void {\r\n    let regexStr = this.format.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$&');\r\n    const hourRegex = /h{1,2}/i;\r\n    const minuteRegex = /m{1,2}/;\r\n    const secondRegex = /s{1,2}/;\r\n    const periodNarrow = /aaaaa/;\r\n    const periodWide = /aaaa/;\r\n    const periodAbbreviated = /a{1,3}/;\r\n\r\n    const hourMatch = hourRegex.exec(this.format);\r\n    const minuteMatch = minuteRegex.exec(this.format);\r\n    const secondMatch = secondRegex.exec(this.format);\r\n    const periodNarrowMatch = periodNarrow.exec(this.format);\r\n    let periodWideMatch: null | RegExpExecArray = null;\r\n    let periodAbbreviatedMatch: null | RegExpExecArray = null;\r\n    if (!periodNarrowMatch) {\r\n      periodWideMatch = periodWide.exec(this.format);\r\n    }\r\n    if (!periodWideMatch && !periodNarrowMatch) {\r\n      periodAbbreviatedMatch = periodAbbreviated.exec(this.format);\r\n    }\r\n\r\n    const matchs = [hourMatch, minuteMatch, secondMatch, periodNarrowMatch, periodWideMatch, periodAbbreviatedMatch]\r\n      .filter(m => !!m)\r\n      .sort((a, b) => a!.index - b!.index);\r\n\r\n    matchs.forEach((match, index) => {\r\n      switch (match) {\r\n        case hourMatch:\r\n          this.matchMap.hour = index;\r\n          regexStr = regexStr.replace(hourRegex, '(\\\\d{1,2})');\r\n          break;\r\n        case minuteMatch:\r\n          this.matchMap.minute = index;\r\n          regexStr = regexStr.replace(minuteRegex, '(\\\\d{1,2})');\r\n          break;\r\n        case secondMatch:\r\n          this.matchMap.second = index;\r\n          regexStr = regexStr.replace(secondRegex, '(\\\\d{1,2})');\r\n          break;\r\n        case periodNarrowMatch:\r\n          this.matchMap.periodNarrow = index;\r\n          const periodsNarrow = getLocaleDayPeriods(this.localeId, FormStyle.Format, TranslationWidth.Narrow).join('|');\r\n          regexStr = regexStr.replace(periodNarrow, `(${periodsNarrow})`);\r\n          break;\r\n        case periodWideMatch:\r\n          this.matchMap.periodWide = index;\r\n          const periodsWide = getLocaleDayPeriods(this.localeId, FormStyle.Format, TranslationWidth.Wide).join('|');\r\n          regexStr = regexStr.replace(periodWide, `(${periodsWide})`);\r\n          break;\r\n        case periodAbbreviatedMatch:\r\n          this.matchMap.periodAbbreviated = index;\r\n          const periodsAbbreviated = getLocaleDayPeriods(this.localeId, FormStyle.Format, TranslationWidth.Abbreviated).join('|');\r\n          regexStr = regexStr.replace(periodAbbreviated, `(${periodsAbbreviated})`);\r\n          break;\r\n      }\r\n    });\r\n\r\n    this.regex = new RegExp(regexStr);\r\n  }\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}