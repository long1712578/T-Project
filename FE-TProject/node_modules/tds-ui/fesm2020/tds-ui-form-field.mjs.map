{"version":3,"file":"tds-ui-form-field.mjs","sources":["../../../projects/tds-ui/form-field/add-on.ts","../../../projects/tds-ui/form-field/error.ts","../../../projects/tds-ui/form-field/form-field-animations.ts","../../../projects/tds-ui/form-field/form-field-color.ts","../../../projects/tds-ui/form-field/form-field-control.ts","../../../projects/tds-ui/form-field/label.ts","../../../projects/tds-ui/form-field/prefix.ts","../../../projects/tds-ui/form-field/suffix.ts","../../../projects/tds-ui/form-field/form-field-container.ts","../../../projects/tds-ui/form-field/form-field.html","../../../projects/tds-ui/form-field/form-field.ts","../../../projects/tds-ui/form-field/success.ts","../../../projects/tds-ui/form-field/warning.ts","../../../projects/tds-ui/form-field/form-field.module.ts","../../../projects/tds-ui/form-field/tds-ui-form-field.ts"],"sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Directive, ElementRef, InjectionToken, Input } from '@angular/core';\r\n\r\nimport { ButtonSize } from \"tds-ui/core/config\";\r\nimport { Constructor, HasElementRef } from 'tds-ui/shared/common';\r\n\r\n/**\r\n * Injection token that can be used to reference instances of `TDSAddOnLeft`. It serves as\r\n * alternative token to the actual `TDSAddOnLeft` class which could cause unnecessary\r\n * retention of the class and its directive metadata.\r\n */\r\nexport const TDS_ADDONLEFT = new InjectionToken<TDSAddOnLeft>('TDSAddOnLeft');\r\n\r\n\r\n\r\nexport interface CanAddOnSize {\r\n  defaultSize: ButtonSize;\r\n  size: ButtonSize;\r\n\r\n}\r\n\r\n/** @docs-private */\r\nexport type CanAddOnSizeCtor = Constructor<CanAddOnSize>;\r\nexport function mixinAddOnSize<T extends Constructor<HasElementRef>>(\r\n  base: T, defaultSize?: ButtonSize): CanAddOnSizeCtor & T {\r\n  return class extends base {\r\n    private _size: ButtonSize;\r\n    defaultSize = defaultSize;\r\n\r\n    get size(): ButtonSize { return this._size; }\r\n    set size(value: ButtonSize) {\r\n      const _size = value || this.defaultSize;\r\n      if (_size !== this._size) {\r\n        if (this._size) {\r\n          const lstClass = this.getClassbySize(this._size);\r\n          lstClass.forEach(cl => {\r\n            this._elementRef.nativeElement.classList.remove(cl);\r\n          });\r\n        }\r\n        if (_size) {\r\n          const lstClass = this.getClassbySize(_size);\r\n          lstClass.forEach(cl => {\r\n            this._elementRef.nativeElement.classList.add(cl);\r\n          });\r\n        }\r\n        this._size = defaultSize;\r\n      }\r\n    }\r\n\r\n    constructor(...args: any[]) {\r\n      super(...args);\r\n      // Set the default color that can be specified from the mixin.\r\n      this.size = defaultSize;\r\n\r\n\r\n    }\r\n    getClassbySize(size: ButtonSize): Array<string> {\r\n      let result: Array<string> = [];\r\n      switch (size) {\r\n        case \"sm\":\r\n          result = ['p-1']\r\n          break;\r\n        case \"md\":\r\n          result = ['p-1.5',]\r\n          break;\r\n        case \"lg\":\r\n          result = ['p-2',]\r\n          break;\r\n\r\n      }\r\n      return result;\r\n    }\r\n  };\r\n}\r\n\r\nclass TDSAddOnBase {\r\n  constructor(public _elementRef: ElementRef) { }\r\n}\r\n\r\nconst _TDSAddOnMixinBase: CanAddOnSizeCtor &\r\n  typeof TDSAddOnBase = mixinAddOnSize(TDSAddOnBase, 'md');\r\n\r\n/** AddOnLeft to be placed in front of the form field. */\r\n@Directive({\r\n  selector: '[tdsAddOnLeft]',\r\n  providers: [{ provide: TDS_ADDONLEFT, useExisting: TDSAddOnLeft }],\r\n  host: {\r\n    class: \"h-full border-neutral-2-200 dark:border-d-neutral-2-200 border rounded-l border-r-0 flex\",    \r\n  },\r\n  inputs: ['size']\r\n})\r\nexport class TDSAddOnLeft extends _TDSAddOnMixinBase\r\n  implements CanAddOnSize {\r\n\r\n  constructor(elementRef: ElementRef\r\n  ) {\r\n    super(elementRef);\r\n  }\r\n}\r\n\r\nexport const TA_ADDONRIGHT = new InjectionToken<TDSAddOnLeft>('TDSAddOnRight');\r\n/** AddOnLeft to be placed in front of the form field. */\r\n@Directive({\r\n  selector: '[tdsAddOnRight]',\r\n  providers: [{ provide: TA_ADDONRIGHT, useExisting: TDSAddOnRight }],\r\n  host: {\r\n    class: \"h-full border-neutral-2-200 dark:border-d-neutral-2-200 border rounded-r border-l-0 flex\"\r\n  },\r\n  inputs: ['size']\r\n})\r\nexport class TDSAddOnRight extends _TDSAddOnMixinBase\r\nimplements CanAddOnSize {\r\n\r\nconstructor(elementRef: ElementRef\r\n) {\r\n  super(elementRef);\r\n}\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Attribute, ChangeDetectionStrategy, Component, Directive, ElementRef, InjectionToken, Input, ViewEncapsulation} from '@angular/core';\r\n\r\nlet nextUniqueId = 0;\r\n\r\n/**\r\n * Injection token that can be used to reference instances of `TDSError`. It serves as\r\n * alternative token to the actual `TDSError` class which could cause unnecessary\r\n * retention of the class and its directive metadata.\r\n */\r\nexport const TDS_ERROR = new InjectionToken<TDSError>('TDSError');\r\n\r\n/** Single error message to be shown underneath the form field. */\r\n@Component({\r\n  selector: 'tds-error',\r\n  template:`\r\n    <i class='mr-2' [ngClass]=\"icon\"> \r\n    </i>\r\n    <ng-content></ng-content>\r\n  `,\r\n  host: {\r\n    'class': 'tds-error text-xs leading-4 font-normal text-error-500  dark:text-d-error-500 mt-1 inline-flex items-center',\r\n    '[attr.id]': 'id',\r\n    'aria-atomic': 'true',\r\n  },\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [{provide: TDS_ERROR, useExisting: TDSError}],\r\n})\r\nexport class TDSError {\r\n  @Input() id: string = `tds-error-${nextUniqueId++}`;\r\n  @Input() icon:string = 'tdsi-warning-2-fill text-base leading-4';\r\n  constructor(@Attribute('aria-live') ariaLive: string, elementRef: ElementRef) {\r\n    if (!ariaLive) {\r\n      elementRef.nativeElement.setAttribute('aria-live', 'polite');\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport {\r\n  animate,\r\n  state,\r\n  style,\r\n  transition,\r\n  trigger,\r\n  AnimationTriggerMetadata,\r\n} from '@angular/animations';\r\n\r\n/**\r\n * Animations used by the TDSFormField.\r\n * @docs-private\r\n */\r\nexport const tdsFormFieldAnimations: {\r\n  readonly transitionMessages: AnimationTriggerMetadata\r\n} = {\r\n  /** Animation that transitions the form field's error and hint messages. */\r\n  transitionMessages: trigger('transitionMessages', [\r\n    // TODO(mmalerba): Use angular animations for label animation as well.\r\n    state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\r\n    transition('void => enter', [\r\n      style({ opacity: 0, transform: 'translateY(-5px)' }),\r\n      animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\r\n    ]),\r\n  ])\r\n};\r\n","import { Constructor, HasElementRef } from \"tds-ui/shared/common\";\r\n\r\nexport type InputColor = \"default\" | 'success' | 'error' | 'warning' | 'dark' | undefined;\r\n\r\nexport interface CanInputColor {\r\n    clsByColor: string;\r\n    clsFocusByColor: string;\r\n    /** Theme color palette for the component. */\r\n    color: InputColor;\r\n    /** Default color to fall back to if no value is set. */\r\n    defaultColor: InputColor | undefined;\r\n\r\n}\r\n\r\n/** @docs-private */\r\nexport type CanInputColorCtor = Constructor<CanInputColor>;\r\n\r\n/** Mixin to augment a directive with a `color` property. */\r\nexport function mixinInputColor<T extends Constructor<HasElementRef>>(\r\n    base: T, defaultColor?: InputColor): CanInputColorCtor & T {\r\n    return class extends base {\r\n        private _color: InputColor;\r\n        defaultColor = defaultColor;\r\n        private _clsByColor: string = \"\";\r\n        private _clsFocusByColor: string = \"\";\r\n        get color(): InputColor { return this._color; }\r\n        set color(value: InputColor) {\r\n            const colorPalette = value || this.defaultColor;\r\n            if (colorPalette !== this._color) {\r\n                // this._elementRef.nativeElement\r\n                this._color = colorPalette;\r\n                this.p_updateClass(this._color);\r\n            }\r\n        }\r\n        get clsByColor(): string {\r\n            return this._clsByColor;\r\n        }\r\n        set clsByColor(val: string) {\r\n            this._clsByColor = val;\r\n        }\r\n        get clsFocusByColor(): string {\r\n            return this._clsFocusByColor;\r\n        }\r\n        set clsFocusByColor(val: string) {\r\n            this._clsFocusByColor = val;\r\n        }\r\n        constructor(...args: any[]) {\r\n            super(...args);\r\n            // Set the default color that can be specified from the mixin.            \r\n            this.color = defaultColor;\r\n\r\n        }\r\n        private p_updateClass(color: InputColor): void {\r\n            switch (color) {\r\n                case \"dark\":\r\n                    this.clsByColor = 'border-transparent',\r\n                    this.clsFocusByColor = 'outline-none ring-opacity-20 ring  ring-primary-1 dark:ring-d-primary-1 border-primary-1 dark:border-d-primary-1';\r\n                    break;\r\n                case \"success\":\r\n                    this.clsByColor = `border-success-400 dark:border-d-success-400`,\r\n                    this.clsFocusByColor = `outline-none ring-opacity-20 ring ring-success-400 dark:ring-d-success-400 border-success-400 dark:border-d-success-400`;\r\n                    break;\r\n                case \"error\":\r\n                    this.clsByColor = `border-error-400 dark:border-d-error-400`,\r\n                    this.clsFocusByColor = `outline-none ring-opacity-20 ring ring-error-400 dark:ring-d-error-400 border-error-400 dark:border-d-error-400`;\r\n                    break;\r\n                case \"warning\":\r\n                    this.clsByColor = `border-warning-400 dark:border-d-warning-400`,\r\n                    this.clsFocusByColor = `outline-none ring-opacity-20 ring ring-warning-400 dark:ring-d-warning-400 border-warning-400 dark:border-d-warning-400`;\r\n                    break;\r\n                default:\r\n                    this.clsByColor = 'border-neutral-2-200',\r\n                        this.clsFocusByColor = 'outline-none ring-opacity-20 ring  ring-primary-1 dark:ring-d-primary-1 border-primary-1 dark:border-d-primary-1';\r\n                    break;\r\n            }\r\n            // if (color == \"default\") {\r\n            //     this.clsByColor = 'border-neutral-2-200',\r\n            //         this.clsFocusByColor = 'outline-none ring-opacity-20 ring  ring-primary-1 dark:ring-d-primary-1 border-primary-1 dark:border-d-primary-1';\r\n            // }\r\n            // else if (color == 'dark') {\r\n            //     this.clsByColor = 'border-transparent',\r\n            //         this.clsFocusByColor = 'outline-none ring-opacity-20 ring  ring-primary-1 dark:ring-d-primary-1 border-primary-1 dark:border-d-primary-1';\r\n            // }\r\n            // else {\r\n            //     this.clsByColor = `border-${color}-400`,\r\n            //         this.clsFocusByColor = `outline-none ring-opacity-20 ring ring-${color}-400 border-${color}-400`;\r\n            // }\r\n        }\r\n\r\n    };\r\n}\r\n\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Observable} from 'rxjs';\r\nimport {NgControl} from '@angular/forms';\r\nimport {Directive} from '@angular/core';\r\nimport { ButtonSize } from \"tds-ui/core/config\";\r\n//import { ButtonSize } from 'tds-ui';\r\n\r\n\r\n/** An interface which allows a control to work inside of a `TDSFormField`. */\r\n@Directive()\r\nexport abstract class TDSFormFieldControl<T> {\r\n  /** The value of the control. */\r\n  value!: T | null;\r\n\r\n  /**\r\n   * Stream that emits whenever the state of the control changes such that the parent `TDSFormField`\r\n   * needs to run change detection.\r\n   */\r\n  readonly stateChanges!: Observable<void>;\r\n\r\n  /** The element ID for this control. */\r\n  readonly id!: string | null;\r\n\r\n  /** The placeholder for this control. */\r\n  readonly placeholder!: string | string [];\r\n\r\n  /** Gets the NgControl for this control. */\r\n  readonly ngControl!: NgControl | null;\r\n\r\n  /** Whether the control is focused. */\r\n  readonly focused!: boolean;\r\n\r\n  /** Whether the control is empty. */\r\n  readonly empty!: boolean;\r\n\r\n /** Gets the size for this control. */\r\n readonly size: ButtonSize;\r\n\r\n  /** Whether the control is required. */\r\n  readonly required!: boolean;\r\n\r\n  /** Whether the control is disabled. */\r\n  readonly disabled!: boolean;\r\n\r\n  /** Whether the control is in an error state. */\r\n  readonly errorState!: boolean;\r\n\r\n  /**\r\n   * An optional name for the control type that can be used to distinguish `mat-form-field` elements\r\n   * based on their control type. The form field will add a class,\r\n   * `mat-form-field-type-{{controlType}}` to its root element.\r\n   */\r\n  readonly controlType?: string;\r\n\r\n  /**\r\n   * Whether the input is currently in an autofilled state. If property is not present on the\r\n   * control it is assumed to be false.\r\n   */\r\n  readonly autofilled?: boolean;\r\n\r\n  /**\r\n   * Value of `aria-describedby` that should be merged with the described-by ids\r\n   * which are set by the form-field.\r\n   */\r\n  readonly userAriaDescribedBy?: string;\r\n\r\n  /** Sets the list of element IDs that currently describe this control. */\r\n  abstract setDescribedByIds(ids: string[]): void;\r\n\r\n  /** Handles a click on the control's container. */\r\n  abstract onContainerClick(event: MouseEvent): void;\r\n}\r\n","import { BooleanInput } from '@angular/cdk/coercion';\r\nimport { I } from '@angular/cdk/keycodes';\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Directive, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\r\nimport { InputBoolean } from 'tds-ui/shared/utility';\r\n\r\n\r\n// /** The floating label for a `tds-form-field`. */\r\n// @Directive({\r\n//   selector: 'tds-label',\r\n//   host:{\r\n//     class:\"text-body-2 font-semibold text-neutral-1-900  block dark:text-d-neutral-1-900 \"\r\n//   }\r\n// })\r\n// export class TDSLabel {}\r\n\r\n@Component({\r\n  selector: 'tds-label',\r\n  exportAs: 'tdsLabel',\r\n  preserveWhitespaces: false,\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <label [attr.for]=\"tdsFor\" class=\"text-body-2 font-semibold text-neutral-1-900  block dark:text-d-neutral-1-900\">\r\n      <ng-content></ng-content>\r\n      <span class=\"ml-1 text-error-500 dark:text-d-error-500 text-body-2 font-semibold\"\r\n                *ngIf=\"tdsRequired\">*</span>\r\n    </label>\r\n  `\r\n})\r\nexport class TDSLabel implements OnChanges {\r\n  static ngAcceptInputType_tdsRequired: BooleanInput;\r\n\r\n  @Input() tdsFor?: string;\r\n  @Input() @InputBoolean() tdsRequired = false;\r\n  constructor(\r\n    private cdr: ChangeDetectorRef,\r\n  ) {\r\n\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const { tdsFor, tdsRequired } = changes;\r\n    if (tdsFor || tdsRequired) {\r\n      this.cdr.markForCheck();\r\n    }\r\n  }\r\n  updateRequired(required:boolean)\r\n  {\r\n    this.tdsRequired = required;\r\n    this.cdr.detectChanges();\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Directive, InjectionToken} from '@angular/core';\r\n\r\n/**\r\n * Injection token that can be used to reference instances of `TDSPrefix`. It serves as\r\n * alternative token to the actual `TDSPrefix` class which could cause unnecessary\r\n * retention of the class and its directive metadata.\r\n */\r\nexport const TDS_PREFIX = new InjectionToken<TDSPrefix>('TDSPrefix');\r\n\r\n/** Prefix to be placed in front of the form field. */\r\n@Directive({\r\n  selector: '[tdsPrefix]',\r\n  providers: [{provide: TDS_PREFIX, useExisting: TDSPrefix}],\r\n  host:{\r\n    class:'tds-prefix  text-neutral-1-300 dark:text-d-neutral-1-900'\r\n  }\r\n})\r\nexport class TDSPrefix {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Directive, InjectionToken} from '@angular/core';\r\n\r\n/**\r\n * Injection token that can be used to reference instances of `TDSSuffix`. It serves as\r\n * alternative token to the actual `TDSSuffix` class which could cause unnecessary\r\n * retention of the class and its directive metadata.\r\n */\r\nexport const TDS_SUFFIX = new InjectionToken<TDSSuffix>('TDSSuffix');\r\n\r\n/** Suffix to be placed at the end of the form field. */\r\n@Directive({\r\n  selector: '[tdsSuffix]',\r\n  exportAs:'tdsSuffix',\r\n  providers: [{provide: TDS_SUFFIX, useExisting: TDSSuffix}],\r\n  host:{\r\n    class:'tds-suffix'\r\n  }\r\n})\r\nexport class TDSSuffix {}\r\n","import {  Directive, ElementRef, Input } from \"@angular/core\";\r\nimport { InputColor } from \"./form-field-color\";\r\n\r\n@Directive({\r\n    selector: `[tds-form-field-container]`, \r\n    host:{\r\n        \"[class]\":'tdsClass'\r\n    }\r\n})\r\nexport class TDSFormFieldContainer{\r\n    private _color: InputColor = \"default\";\r\n    private _focus: boolean = false;\r\n    private _disabled: boolean = false;\r\n    defaultColor: InputColor = \"default\";\r\n    private _tdsClass = \"\";\r\n    @Input()\r\n    get tdsClass() {\r\n        return this._tdsClass\r\n    }\r\n    set tdsClass(value: string) {\r\n        this._tdsClass = value;\r\n    }\r\n    constructor(private _elementRef: ElementRef) {\r\n    }\r\n}","<div class=\"w-full\">\r\n    <div class=\"flex flex-col w-full\">\r\n        <div class=\"flex w-full mb-2\" *ngIf=\"_labelChildChildren.length\">\r\n            <ng-content select=\"tds-label\"></ng-content>\r\n        </div>\r\n        <div class=\"flex w-full\" [ngClass]=\"{'opacity-65':_control.disabled}\"\r\n            (click)=\"_control.onContainerClick && _control.onContainerClick($event)\">\r\n            <ng-content select=\"[tdsAddOnLeft]\" [size]=\"size\"></ng-content>\r\n            <div class=\"flex flex-auto flex-col\"\r\n                [ngClass]=\"{'w-full':!_addOnRightChildren.length && !_addOnLeftChildren.length}\">\r\n                <div #connectionContainer\r\n                    class=\"flex items-end relative tds-form-field-control w-full max-w-full form-field-connection-container\"\r\n                    tds-form-field-container [tdsClass]=\"clsContainer\">\r\n                    <div class=\"tds-form-field-prefix text-xl leading-none self-center\" *ngIf=\"_prefixChildren.length\"\r\n                        [ngClass]=\"{\r\n                            'px-2':size ==='sm',\r\n                            'px-2.5':size !=='sm',\r\n                            'bg-neutral-3-50 adrk:bg-d-neutral-3-50 rounded-l':_control.disabled\r\n                        }\">\r\n                        <ng-content select=\"[tdsPrefix]\"></ng-content>\r\n                    </div>\r\n                    <div class=\"tds-form-field-infix flex-auto max-w-full\" #inputContainer [id]=\"_labelId\">\r\n                        <ng-content></ng-content>\r\n                    </div>\r\n                    <div class=\"tds-form-field-suffix h-full flex  items-center text-xl leading-none text-neutral-1-300 dark:text-d-neutral-1-900\"\r\n                        *ngIf=\"_suffixChildren.length\" [ngClass]=\"{\r\n                            'px-1.5':size ==='md',\r\n                            'px-2':size ==='lg',\r\n                            'px-1':size ==='sm',\r\n                            'group-hover:bg-neutral-3-50 group-hover:rounded-r cursor-pointer dark:group-hover:bg-d-neutral-3-200 dark:bg-d-neutral-3-50 bg-white ':!_control.disabled,\r\n                            'bg-neutral-3-50 adrk:bg-d-neutral-3-50 rounded-r ':_control.disabled\r\n                        }\">\r\n                        <ng-content select=\"[tdsSuffix]\"></ng-content>\r\n                    </div>\r\n                </div>\r\n                <div class=\"tds-form-field-subscript-wrapper \" [ngSwitch]=\"_getDisplayedMessages()\">\r\n\r\n                    <div *ngSwitchCase=\"'error'\">\r\n                        <ng-content select=\"tds-error\"></ng-content>\r\n                    </div>\r\n                    <ng-content select=\"tds-warning\"></ng-content>\r\n                    <ng-content select=\"tds-success\"></ng-content>\r\n                </div>\r\n            </div>\r\n            <ng-content select=\"[tdsAddOnRight]\"></ng-content>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>","import { Platform } from \"@angular/cdk/platform\";\r\nimport { AfterViewInit, ChangeDetectorRef, ContentChild, ContentChildren, Inject, InjectionToken, Input, NgZone, QueryList, ViewChild, ViewEncapsulation } from \"@angular/core\";\r\nimport { AfterContentInit } from \"@angular/core\";\r\nimport { OnDestroy } from \"@angular/core\";\r\nimport { AfterContentChecked } from \"@angular/core\";\r\nimport { Component, ChangeDetectionStrategy, ElementRef } from \"@angular/core\";\r\nimport { AbstractControl, NgControl } from \"@angular/forms\";\r\nimport { fromEvent, merge, Subject } from \"rxjs\";\r\nimport { startWith, take, takeUntil } from \"rxjs/operators\";\r\nimport { ButtonSize } from \"tds-ui/core/config\";\r\nimport { TDSHelperArray } from \"tds-ui/shared/utility\";\r\n\r\nimport { TDSAddOnLeft, TDSAddOnRight, TDS_ADDONLEFT, TA_ADDONRIGHT } from \"./add-on\";\r\nimport { TDSError, TDS_ERROR } from \"./error\";\r\nimport { tdsFormFieldAnimations } from \"./form-field-animations\";\r\nimport { CanInputColor, CanInputColorCtor, InputColor, mixinInputColor } from \"./form-field-color\";\r\nimport { TDSFormFieldControl } from \"./form-field-control\";\r\nimport { TDSLabel } from \"./label\";\r\nimport { TDSPrefix, TDS_PREFIX } from \"./prefix\";\r\nimport { TDSSuffix, TDS_SUFFIX } from \"./suffix\";\r\nlet nextUniqueId = 0;\r\n\r\n/**\r\n * Boilerplate for applying mixins to TDSFormField.\r\n * @docs-private\r\n */\r\nclass TAFormFieldBase {\r\n\r\n    constructor(public _elementRef: ElementRef) { }\r\n}\r\n/**\r\n* Base class to which we're applying the form field mixins.\r\n* @docs-private\r\n*/\r\nconst _TAFormFieldMixinBase: CanInputColorCtor & typeof TAFormFieldBase =\r\n    mixinInputColor(TAFormFieldBase, 'default');\r\n\r\n\r\nexport const TDS_FORM_FIELD = new InjectionToken<TDSFormField>('TDSFormField');\r\n\r\n@Component({\r\n    selector: 'tds-form-field',\r\n    exportAs: 'taFormField',\r\n    templateUrl: './form-field.html',\r\n    host: {\r\n        'class': 'block relative text-left',\r\n        '[class.tds-form-field-invalid]': '_control.errorState',\r\n        '[class.tds-form-field-disabled]': '_control.disabled',\r\n        '[class.tds-form-field-autofilled]': '_control.autofilled',\r\n        '[class.ta-focused]': '_control.focused',\r\n        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\r\n        '[class.ng-touched]': '_shouldForward(\"touched\")',\r\n        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\r\n        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\r\n        '[class.ng-valid]': '_shouldForward(\"valid\")',\r\n        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\r\n        '[class.ng-pending]': '_shouldForward(\"pending\")',\r\n    },\r\n    encapsulation: ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [\r\n        { provide: TDS_FORM_FIELD, useExisting: TDSFormField },\r\n    ],\r\n    animations: [tdsFormFieldAnimations.transitionMessages],\r\n})\r\n\r\nexport class TDSFormField\r\n    implements AfterContentInit, AfterContentChecked, AfterViewInit, OnDestroy {\r\n    private readonly _destroyed = new Subject<void>();\r\n    private _color: InputColor = \"default\";\r\n    private _size: ButtonSize = \"md\";\r\n    private _tdsClass: string = 'dark:bg-d-neutral-3-50 border bg-white ';\r\n    private _tdsClassDefault = 'dark:border-d-neutral-2-200 border-neutral-2-200';\r\n    clsContainer: string = '';\r\n    @Input() tdsClass: string = '';\r\n\r\n    @Input()\r\n    get color() {\r\n        return this._color\r\n    }\r\n    set color(val: InputColor) {\r\n        this._color = val;\r\n    }\r\n    // @Input()\r\n    get size() {\r\n        return (this._control && this._control.size) ? this._control.size : this._size;\r\n    }\r\n\r\n    readonly _labelId = `tds-form-field-label-${nextUniqueId++}`;\r\n    @ViewChild('connectionContainer', { static: true }) _connectionContainerRef!: ElementRef;\r\n    @ViewChild('inputContainer') _inputContainerRef!: ElementRef;\r\n\r\n    @ContentChild(TDSFormFieldControl) _controlNonStatic!: TDSFormFieldControl<any>;\r\n    @ContentChild(TDSFormFieldControl, { static: true }) _controlStatic!: TDSFormFieldControl<any>;\r\n\r\n    get _control() {\r\n\r\n        // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.\r\n        //  We should clean this up once Ivy is the default renderer.\r\n        return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\r\n    }\r\n    set _control(value) {\r\n\r\n        this._explicitFormFieldControl = value;\r\n    }\r\n    private _explicitFormFieldControl!: TDSFormFieldControl<any>;\r\n\r\n    @ContentChild(TDSLabel) _labelChildNonStatic!: TDSLabel;\r\n    @ContentChild(TDSLabel, { static: true }) _labelChildStatic!: TDSLabel;\r\n    @ContentChildren(TDSLabel, { descendants: false }) _labelChildChildren!: QueryList<TDSLabel>;\r\n    @ContentChildren(TDS_ERROR, { descendants: true }) _errorChildren!: QueryList<TDSError>;\r\n    // @ContentChildren(_MAT_HINT, { descendants: true }) _hintChildren: QueryList<MatHint>;\r\n    @ContentChildren(TDS_PREFIX, { descendants: true }) _prefixChildren!: QueryList<TDSPrefix>;\r\n    @ContentChildren(TDS_SUFFIX, { descendants: true }) _suffixChildren!: QueryList<TDSSuffix>;\r\n    @ContentChildren(TDS_ADDONLEFT, { descendants: true }) _addOnLeftChildren!: QueryList<TDSAddOnLeft>;\r\n    @ContentChildren(TA_ADDONRIGHT, { descendants: true }) _addOnRightChildren!: QueryList<TDSAddOnRight>;\r\n    constructor(\r\n        public _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef,\r\n\r\n    ) {\r\n\r\n\r\n    }\r\n    /**\r\n  * Gets an ElementRef for the element that a overlay attached to the form-field should be\r\n  * positioned relative to.\r\n  */\r\n    getConnectedOverlayOrigin(): ElementRef {\r\n        return this._connectionContainerRef || this._elementRef;\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n\r\n        this._validateControlChild();\r\n\r\n        const control = this._control;\r\n        if (control.controlType) {\r\n            this._elementRef.nativeElement.classList.add(`tds-form-field-type-${control.controlType}`);\r\n        }\r\n\r\n        // Subscribe to changes in the child control state in order to update the form field UI.\r\n        control.stateChanges.pipe(startWith(null)).subscribe(() => {\r\n            this.updateCssContainer();\r\n            this._syncDescribedByIds();\r\n            this._changeDetectorRef.markForCheck();\r\n        });\r\n\r\n        // Run change detection if the value changes.\r\n        if (control.ngControl && control.ngControl.valueChanges) {\r\n            control.ngControl.valueChanges\r\n                .pipe(takeUntil(this._destroyed))\r\n                .subscribe(() => {\r\n                    this.updateCssContainer();\r\n                    this._changeDetectorRef.markForCheck()\r\n                }\r\n                );\r\n        }\r\n\r\n        // Run change detection and update the outline if the suffix or prefix changes.\r\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(() => {\r\n            this._changeDetectorRef.markForCheck();\r\n        });\r\n        // Update the aria-described by when the number of errors changes.\r\n        this._errorChildren.changes.pipe(startWith(null)).subscribe(() => {\r\n            this._syncDescribedByIds();\r\n            this.updateCssContainer();\r\n            this._changeDetectorRef.markForCheck();\r\n        });\r\n    }\r\n\r\n    ngAfterContentChecked() {\r\n        this._validateControlChild();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        \r\n        if (TDSHelperArray.hasListValue(this._labelChildChildren) && this.hasRequired)\r\n            this._labelChildChildren.forEach(el => {                \r\n                el.updateRequired(this.hasRequired);\r\n            })\r\n        this._changeDetectorRef.detectChanges();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this._destroyed.next();\r\n        this._destroyed.complete();\r\n    }\r\n    /**\r\n      * Gets the id of the label element. If no label is present, returns `null`.\r\n      */\r\n    getLabelId(): string | null {\r\n        return this._hasLabel() ? this._labelId : null;\r\n    }\r\n\r\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\r\n    _shouldForward(prop: keyof NgControl): boolean {\r\n        const ngControl = this._control ? this._control.ngControl : null;\r\n        return ngControl && ngControl[prop];\r\n    }\r\n\r\n    _hasPlaceholder() {\r\n        return !!(this._control && this._control.placeholder);\r\n    }\r\n\r\n    _hasLabel() {\r\n        return !!(this._labelChildNonStatic || this._labelChildStatic);\r\n    }\r\n\r\n    /** Determines whether to display hints or errors. */\r\n    _getDisplayedMessages(): string | undefined {\r\n        return (this._control.errorState) ? 'error' : this.color;\r\n    }\r\n\r\n    _hasAddOnRightChildren() {\r\n        return this._addOnRightChildren && this._addOnRightChildren.length > 0;\r\n    }\r\n    _hasAddOnLeftChildren() {\r\n        return this._addOnLeftChildren && this._addOnLeftChildren.length > 0;\r\n    }\r\n    _hasSuffixChildren() {\r\n        return this._suffixChildren && this._suffixChildren.length > 0;\r\n    }\r\n    _hasPrefixChildren() {\r\n        return this._prefixChildren && this._prefixChildren.length > 0;\r\n    }\r\n    get hasRequired() {\r\n        return (this._control.required || this.hasRequiredValidator(this._control.ngControl?.control)) && !this._control.disabled\r\n    }\r\n    hasRequiredValidator(control: AbstractControl | null | undefined): boolean {\r\n        if (control?.validator) {\r\n            const validator = control?.validator({} as AbstractControl);\r\n            if (validator && validator.required) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Sets the list of element IDs that describe the child control. This allows the control to update\r\n     * its `aria-describedby` attribute accordingly.\r\n     */\r\n    private _syncDescribedByIds() {\r\n        if (this._control) {\r\n            let ids: string[] = [];\r\n\r\n            // TODO(wagnermaciel): Remove the type check when we find the root cause of this bug.\r\n            if (this._control.userAriaDescribedBy &&\r\n                typeof this._control.userAriaDescribedBy === 'string') {\r\n                ids.push(...this._control.userAriaDescribedBy.split(' '));\r\n            }\r\n\r\n            if (this._errorChildren) {\r\n                ids.push(...this._errorChildren.map(error => error.id));\r\n            }\r\n\r\n            this._control.setDescribedByIds(ids);\r\n        }\r\n    }\r\n\r\n    /** Throws an error if the form field's control is missing. */\r\n    protected _validateControlChild() {\r\n        if (!this._control) {\r\n            throw 'tds-form-field must contain a TDSFormFieldControl.';\r\n        }\r\n    }\r\n\r\n    private updateCssContainer() {\r\n        // console.log('updateCssContainer');\r\n        let cls = this._tdsClass;\r\n        if(this._control.disabled)\r\n        {\r\n            cls ='dark:bg-d-neutral-3-50 border bg-neutral-3-50 cursor-not-allowed'\r\n        }else\r\n        if (this._control.focused) {\r\n            cls += ` ${this.p_ClassFocus()}`\r\n        } else if (this._control.errorState) {\r\n            cls += ` outline-none ring-opacity-20 dark:ring-opacity-20 ring ring-error-400 dark:ring-d-error-400 border-error-400`\r\n        }\r\n        else {\r\n            if (this.color == \"default\" || this.color == 'dark')\r\n                cls += ` ${this._tdsClassDefault} `\r\n            else {\r\n                cls += this.p_getClassBorderByColor(this.color);\r\n            }\r\n        }\r\n        this.clsContainer = cls + ` ${this.p_GetBorderRadius()}` + ` ${this.tdsClass}`;\r\n    }\r\n    private p_GetBorderRadius() {\r\n        let rounded = 'rounded';\r\n        if (this._addOnLeftChildren.length > 0) {\r\n            rounded = \"rounded-r\";\r\n        } else if (\r\n            this._addOnRightChildren.length > 0\r\n        ) {\r\n            rounded = 'rounded-l';\r\n        }\r\n        return rounded;\r\n    }\r\n    private p_ClassFocus() {\r\n        let result = '';\r\n        if (this.color == \"default\" || this.color == 'dark') {\r\n            result = 'outline-none ring-opacity-20 dark:ring-opacity-20 ring ring-primary-1 border-primary-1 dark:ring-d-primary-1 dark:border-d-primary-1';\r\n        } else {\r\n            result = this.p_getClassFocusByColor(this.color);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private p_getClassBorderByColor(color: InputColor) {\r\n        let result = '';\r\n        switch (color) {\r\n            case \"dark\":\r\n                result = `border-transparent`,\r\n                    result = 'outline-none ring-opacity-20 dark:ring-opacity-20 ring  ring-primary-1 dark:ring-d-primary-1 border-primary-1 dark:border-d-primary-1';\r\n                break;\r\n            case \"success\":\r\n                result = `border-success-400 dark:border-d-success-400`,\r\n                    result = `outline-none ring-opacity-20 dark:ring-opacity-20 ring ring-success-400 dark:ring-d-success-400 border-success-400 dark:border-d-success-400`;\r\n                break;\r\n            case \"error\":\r\n                result = `border-error-400 dark:border-d-error-400`,\r\n                    result = `outline-none ring-opacity-20 dark:ring-opacity-20 ring ring-error-400 dark:ring-d-error-400 border-error-400 dark:border-d-error-400`;\r\n                break;\r\n            case \"warning\":\r\n                result = `border-warning-400 dark:border-d-warning-400`,\r\n                    result = `outline-none ring-opacity-20 dark:ring-opacity-20 ring ring-warning-400 dark:ring-d-warning-400 border-warning-400 dark:border-d-warning-400`;\r\n                break;\r\n            default:\r\n                result = 'border-neutral-2-200 dark:border-d-neutral-2-200',\r\n                    result = 'outline-none ring-opacity-20 dark:ring-opacity-20 ring  ring-primary-1 dark:ring-d-primary-1 border-primary-1 dark:border-d-primary-1';\r\n                break;\r\n\r\n        }\r\n        return result;\r\n    }\r\n    private p_getClassFocusByColor(color: InputColor) {\r\n        let result = '';\r\n        switch (color) {\r\n            case \"dark\":\r\n\r\n                result = 'outline-none ring-opacity-20 dark:ring-opacity-20 ring  ring-primary-1 dark:ring-d-primary-1 border-primary-1 dark:border-d-primary-1';\r\n                break;\r\n            case \"success\":\r\n\r\n                result = `outline-none ring-opacity-20 dark:ring-opacity-20 ring ring-success-400 dark:ring-d-success-400 border-success-400 dark:border-d-success-400`;\r\n                break;\r\n            case \"error\":\r\n\r\n                result = `outline-none ring-opacity-20 dark:ring-opacity-20 ring ring-error-400 dark:ring-d-error-400 border-error-400 dark:border-d-error-400`;\r\n                break;\r\n            case \"warning\":\r\n\r\n                result = `outline-none ring-opacity-20 dark:ring-opacity-20 ring ring-warning-400 dark:ring-d-warning-400 border-warning-400 dark:border-d-warning-400`;\r\n                break;\r\n            default:\r\n\r\n                result = 'outline-none ring-opacity-20 dark:ring-opacity-20 ring  ring-primary-1 dark:ring-d-primary-1 border-primary-1 dark:border-d-primary-1';\r\n                break;\r\n\r\n        }\r\n        return result;\r\n    }\r\n}","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\r\nimport {Attribute, ChangeDetectionStrategy, Component, ElementRef, InjectionToken, Input, ViewEncapsulation} from '@angular/core';\r\n\r\nlet nextUniqueId = 0;\r\n\r\n/**\r\n * Injection token that can be used to reference instances of `TDSError`. It serves as\r\n * alternative token to the actual `TDSError` class which could cause unnecessary\r\n * retention of the class and its directive metadata.\r\n */\r\nexport const TA_SUCCESS = new InjectionToken<TDSSuccess>('TDSSuccess');\r\n\r\n/** Single success message to be shown underneath the form field. */\r\n@Component({\r\n  selector: 'tds-success',\r\n  template:`\r\n    <i class='mr-2' [ngClass]=\"icon\"> \r\n    </i>\r\n    <ng-content></ng-content>\r\n  `,\r\n  host: {\r\n    'class': 'tds-success text-success-400 text-xs leading-4 font-normal mt-1 inline-flex items-center',\r\n    '[attr.id]': 'id',\r\n    'aria-atomic': 'true',\r\n  },\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [{provide: TA_SUCCESS, useExisting: TDSSuccess}],\r\n})\r\nexport class TDSSuccess {\r\n  @Input() id: string = `tds-success-${nextUniqueId++}`;\r\n  @Input() icon:string = 'tdsi-success-fill text-base leading-4';\r\n  constructor(@Attribute('aria-live') ariaLive: string, elementRef: ElementRef) {\r\n    // If no aria-live value is set add 'polite' as a default. This is preferred over setting\r\n    // role='alert' so that screen readers do not interrupt the current task to read this aloud.\r\n    if (!ariaLive) {\r\n      elementRef.nativeElement.setAttribute('aria-live', 'polite');\r\n      \r\n    }\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Attribute, ChangeDetectionStrategy, Component, Directive, ElementRef, InjectionToken, Input, ViewEncapsulation} from '@angular/core';\r\n\r\nlet nextUniqueId = 0;\r\n\r\n/**\r\n * Injection token that can be used to reference instances of `TDSError`. It serves as\r\n * alternative token to the actual `TDSError` class which could cause unnecessary\r\n * retention of the class and its directive metadata.\r\n */\r\nexport const TDS_WARNING = new InjectionToken<TDSWarning>('TDSWarning');\r\n\r\n/** Single success message to be shown underneath the form field. */\r\n@Component({\r\n  selector: 'tds-warning',\r\n  template:`\r\n    <i class='mr-2' [ngClass]=\"icon\"> \r\n    </i>\r\n    <ng-content></ng-content>\r\n  `,\r\n  host: {\r\n    'class': 'tds-warning text-warning-500 text-xs leading-4 font-normal mt-1 inline-flex items-center',\r\n    '[attr.id]': 'id',\r\n    'aria-atomic': 'true',\r\n  },\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [{provide: TDS_WARNING, useExisting: TDSWarning}],\r\n})\r\nexport class TDSWarning {\r\n  @Input() id: string = `tds-warning-${nextUniqueId++}`;\r\n  @Input() icon:string = 'tdsi-warning-fill text-base leading-4';\r\n  constructor(@Attribute('aria-live') ariaLive: string, elementRef: ElementRef) {\r\n    // If no aria-live value is set add 'polite' as a default. This is preferred over setting\r\n    // role='alert' so that screen readers do not interrupt the current task to read this aloud.\r\n    if (!ariaLive) {\r\n      elementRef.nativeElement.setAttribute('aria-live', 'polite');\r\n    }\r\n  }\r\n}\r\n","import { ObserversModule } from \"@angular/cdk/observers\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport {  TDSAddOnLeft, TDSAddOnRight } from \"./add-on\";\r\nimport { TDSError } from \"./error\";\r\nimport { TDSFormField } from \"./form-field\";\r\nimport { TDSFormFieldContainer } from \"./form-field-container\";\r\nimport { TDSLabel } from \"./label\";\r\nimport { TDSPrefix } from \"./prefix\";\r\nimport { TDSSuccess } from \"./success\";\r\nimport { TDSSuffix } from \"./suffix\";\r\nimport { TDSWarning } from \"./warning\";\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ObserversModule\r\n  ],\r\n  exports: [\r\n    TDSFormField,\r\n    TDSLabel,\r\n    TDSSuccess,\r\n    TDSError,\r\n    TDSWarning,\r\n    TDSFormFieldContainer,\r\n    TDSPrefix,\r\n    TDSSuffix,\r\n    TDSAddOnRight,\r\n    TDSAddOnLeft\r\n  ],\r\n  declarations: [\r\n    TDSFormField,\r\n    TDSLabel,\r\n    TDSSuccess,\r\n    TDSError,\r\n    TDSWarning,\r\n    TDSFormFieldContainer,\r\n    TDSPrefix,\r\n    TDSSuffix,    \r\n    TDSAddOnRight,\r\n    TDSAddOnLeft\r\n  ]\r\n})\r\nexport class TDSFormFieldModule { }","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["nextUniqueId","_c0"],"mappings":"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"}