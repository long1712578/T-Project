{"version":3,"file":"tds-ui-flex.mjs","sources":["../../../projects/tds-ui/flex/flex.ts","../../../projects/tds-ui/flex/flex.module.ts","../../../projects/tds-ui/flex/tds-ui-flex.ts"],"sourcesContent":["import { Component, ChangeDetectionStrategy, ElementRef } from \"@angular/core\";\r\nimport { Constructor, HasElementRef } from \"tds-ui/shared/common\";\r\nimport { ALIGN_ITEMS, FLEX_DIRECTION, JUSTIFY_CONTENT } from \"./config\";\r\nconst DEFAULT_JUSTIFY_CONTENT = \"start\";\r\nconst DEFAULT_FLEX_DIRECTION =\"row\";\r\nconst DEFAULT_ALIGN_ITEMS =\"stretch\";\r\n//#region FlexDirection\r\ninterface FlexDirection {\r\n    flex: FLEX_DIRECTION,\r\n    //Default flex-direction\r\n    defaultFlexDirection: FLEX_DIRECTION,\r\n}\r\n\r\nexport type FlexDirectionCtor = Constructor<FlexDirection>;\r\nfunction mixinFlexDirection<T extends Constructor<HasElementRef>>(\r\n    base: T, defaultFlexDirection: FLEX_DIRECTION): FlexDirectionCtor & T {\r\n    return class extends base {\r\n        defaultFlexDirection = defaultFlexDirection;\r\n        private _flexDirection: FLEX_DIRECTION = null;\r\n        set flex(val: FLEX_DIRECTION) {\r\n            const flexDirection = val || this.defaultFlexDirection;\r\n            if (flexDirection !== this._flexDirection) {\r\n                if (this._flexDirection) {\r\n                    this._elementRef.nativeElement.classList.remove(\"flex-\" + this._flexDirection);\r\n                }\r\n                if (flexDirection) {\r\n                    this._elementRef.nativeElement.classList.add(\"flex-\" + val);\r\n                }\r\n                this._flexDirection = flexDirection;\r\n            }\r\n        }\r\n        get flex() {\r\n            return this._flexDirection;\r\n        }\r\n        constructor(...args: any[]) {\r\n            super(...args);\r\n            this.flex = defaultFlexDirection\r\n        }\r\n\r\n    };\r\n}\r\n//#endregion\r\n//#region  justify-content\r\ninterface JustifyContent {\r\n    justifyContent: JUSTIFY_CONTENT,\r\n    //Default flex-direction\r\n    defaultJustifyContent: JUSTIFY_CONTENT,\r\n}\r\nexport type JustifyContentCtor = Constructor<JustifyContent>;\r\nfunction mixinJustifyContent<T extends Constructor<HasElementRef>>(\r\n    base: T, defaultJustifyContent: JUSTIFY_CONTENT): JustifyContentCtor & T {\r\n    return class extends base {\r\n        defaultJustifyContent = defaultJustifyContent;\r\n        private _justifyContent: JUSTIFY_CONTENT = null;\r\n        set justifyContent(val: JUSTIFY_CONTENT) {\r\n            const justifyContent = val || this.defaultJustifyContent;\r\n            if (justifyContent !== this._justifyContent) {\r\n                if (this._justifyContent) {\r\n                    this._elementRef.nativeElement.classList.remove(\"justify-\" + this._justifyContent);\r\n                }\r\n                if (justifyContent) {\r\n                    this._elementRef.nativeElement.classList.add(\"justify-\" + val);\r\n                }\r\n                this._justifyContent = justifyContent;\r\n            }\r\n        }\r\n        get justifyContent() {\r\n            return this._justifyContent;\r\n        }\r\n        constructor(...args: any[]) {\r\n            super(...args);\r\n            this.justifyContent = defaultJustifyContent\r\n        }\r\n\r\n    };\r\n}\r\n//#endregion \r\n//#region AlignItems\r\ninterface AlignItems {\r\n    alignItems: ALIGN_ITEMS,\r\n    //Default flex-direction\r\n    defaultAlignItems: ALIGN_ITEMS,\r\n}\r\nexport type AlignItemsCtor = Constructor<AlignItems>;\r\nfunction mixinAlignItems<T extends Constructor<HasElementRef>>(\r\n    base: T, defaultAlignItems: ALIGN_ITEMS): AlignItemsCtor & T {\r\n    return class extends base {\r\n        defaultAlignItems = defaultAlignItems;\r\n        private _alignItems: ALIGN_ITEMS = null;\r\n        set alignItems(val: ALIGN_ITEMS) {\r\n            const align_Items = val || this.defaultAlignItems;\r\n            if (align_Items !== this._alignItems) {\r\n                if (this._alignItems) {\r\n                    this._elementRef.nativeElement.classList.remove(\"items-\" + this._alignItems);\r\n                }\r\n                if (align_Items) {\r\n                    this._elementRef.nativeElement.classList.add(\"items-\" + val);\r\n                }\r\n                this._alignItems = align_Items;\r\n            }\r\n        }\r\n        get alignItems() {\r\n            return this._alignItems;\r\n        }\r\n        constructor(...args: any[]) {\r\n            super(...args);\r\n            this.alignItems = defaultAlignItems\r\n        }\r\n\r\n    };\r\n}\r\n//#endregion \r\n\r\n\r\n\r\n\r\nclass TFlexBase {\r\n    constructor(public _elementRef: ElementRef) { }\r\n}\r\nconst _TFlexMixinBase: FlexDirectionCtor & JustifyContentCtor & AlignItemsCtor  &\r\n    typeof TFlexBase =mixinAlignItems(mixinJustifyContent(mixinFlexDirection(TFlexBase, DEFAULT_FLEX_DIRECTION),DEFAULT_JUSTIFY_CONTENT),DEFAULT_ALIGN_ITEMS) ;\r\n\r\n@Component({\r\n    selector: 'tds-flex',\r\n    template: `\r\n        <ng-content></ng-content>\r\n    `,\r\n    host: {\r\n        class: 'flex',\r\n    },\r\n    inputs: ['flex',\"justifyContent\",\"alignItems\"],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\nexport class TDSFlexComponent extends _TFlexMixinBase {\r\n    // flex: FLEX_DIRECTION\r\n    //justifyContent: JUSTIFY_CONTENT\r\n    //alignItems: ALIGN_ITEMS\r\n    constructor(elementRef: ElementRef) {\r\n        super(elementRef);\r\n    }\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TDSFlexComponent } from './flex';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [TDSFlexComponent],\r\n  exports: [TDSFlexComponent],\r\n  imports: [\r\n    CommonModule\r\n  ]\r\n})\r\nexport class TDSFlexModule { }\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}