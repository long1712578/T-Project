{"version":3,"file":"tds-ui-notification.mjs","sources":["../../../projects/tds-ui/notification/notification.component.ts","../../../projects/tds-ui/notification/notification-container.component.ts","../../../projects/tds-ui/notification/notification.service.module.ts","../../../projects/tds-ui/notification/notification.module.ts","../../../projects/tds-ui/notification/notification.service.ts","../../../projects/tds-ui/notification/tds-ui-notification.ts"],"sourcesContent":["\r\n\r\nimport { ChangeDetectorRef, Component, EventEmitter, Input, OnDestroy, Output, ViewEncapsulation } from '@angular/core';\r\nimport { notificationMotion } from 'tds-ui/core/animation';\r\nimport { TDSMNComponent } from 'tds-ui/message';\r\n\r\n\r\n\r\nimport { TDSNotificationData } from './typings';\r\n\r\n@Component({\r\n  encapsulation: ViewEncapsulation.None,\r\n  selector: 'tds-notification',\r\n  exportAs: 'tdsNotification',\r\n  preserveWhitespaces: false,\r\n  animations: [notificationMotion],\r\n  host: {\r\n    class: \"mb-2 block\"\r\n  },\r\n  template: `\r\n  <div class=\"tds-notification-notice tds-notification-notice-closable relative mr-4\"\r\n  [ngStyle]=\"instance.options.style!\" \r\n  [ngClass]=\"instance.options.clss || ''\" \r\n  [@notificationMotion]=\"state\"\r\n  (@notificationMotion.done)=\"animationStateChanged.next($event)\" \r\n  (click)=\"onClick($event)\" \r\n  (mouseenter)=\"onEnter()\"\r\n  (mouseleave)=\"onLeave()\">\r\n  <div *ngIf=\"!instance.template\"\r\n      class=\"tds-notification-notice-content bg-white dark:bg-d-neutral-3-300 p-4 shadow-1-xl rounded-md flex flex-col w-96\">\r\n      <div class=\"tds-notification-notice-content flex  \"\r\n          [ngClass]=\"{ 'tds-notification-notice-with-icon': instance.type !== 'blank' }\">\r\n          <div\r\n              [ngClass]=\"{'tds-notification-notice-with-icon mr-4':instance.type !== 'blank','hidden':instance.type == 'blank'}\">\r\n              <ng-container [ngSwitch]=\"instance.type\">\r\n                  <i *ngSwitchCase=\"'success'\"\r\n                      class=\"text-2xl leading-6 text-success-400 tdsi-success-fill  tds-notification-notice-icon tds-notification-notice-icon-success\"></i>\r\n                  <i *ngSwitchCase=\"'info'\"\r\n                      class=\"text-2xl leading-6 text-info-400 tdsi-information-fill tds-notification-notice-icon tds-notification-notice-icon-info\"></i>\r\n                  <i *ngSwitchCase=\"'warning'\"\r\n                      class=\"text-2xl leading-6 text-warning-400  tdsi-warning-fill tds-notification-notice-icon tds-notification-notice-icon-warning\"></i>\r\n                  <i *ngSwitchCase=\"'error'\"\r\n                      class=\"text-2xl leading-6 text-error-400  tdsi-error-fill tds-notification-notice-icon tds-notification-notice-icon-error\"></i>\r\n              </ng-container>\r\n          </div>\r\n          <div class=\"flex flex-col\">\r\n              <div class=\"tds-notification-notice-message text-title-1 text-neutral-1-900 dark:text-d-neutral-1-900 font-semibold break-all pr-8\"\r\n                  [innerHTML]=\"instance.title\"></div>\r\n              <div class=\"tds-notification-notice-description pt-2 text-body-2 font-regular text-neutral-1-900 dark:text-d-neutral-1-900 break-all\"\r\n                  [innerHTML]=\"instance.content\"></div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n  <div class=\"bg-white dark:bg-d-neutral-3-300 px-4 py-3 shadow-1-xl rounded-md flex flex-col w-96\" *ngIf=\"instance.template\">\r\n  <ng-template [ngIf]=\"instance.template\" [ngTemplateOutlet]=\"instance.template!\"\r\n  [ngTemplateOutletContext]=\"{ $implicit: this, data: instance.options.data! }\"></ng-template>\r\n  </div>\r\n \r\n  <a tabindex=\"0\" class=\"tds-notification-notice-close absolute hover:bg-neutral-3-50 dark:hover:bg-d-neutral-3-300  rounded-md top-4 right-4 cursor-pointer p-1 border border-transparent\" (click)=\"close()\">\r\n      <span class=\"tds-notification-notice-close-x flex\">\r\n          <ng-container *ngIf=\"instance.options?.closeIcon; else iconTpl\">\r\n              <ng-container *tdsStringTemplateOutlet=\"instance.options?.closeIcon; let closeIcon\">\r\n                  <button [ngClass]=\"instance.options.closeIcon!\" tds-button-close class=\"tds-notification-close-icon\"></button>\r\n              </ng-container>\r\n          </ng-container>\r\n          <ng-template #iconTpl>\r\n            <button tds-button-close class=\"tds-notification-close-icon\"></button>\r\n          </ng-template>\r\n      </span>\r\n  </a>\r\n</div>\r\n  `\r\n})\r\nexport class TDSNotificationComponent extends TDSMNComponent implements OnDestroy {\r\n  @Input() instance!: Required<TDSNotificationData>;\r\n  @Input() placement?: string;\r\n  @Input() index!: number;\r\n  @Output() readonly destroyed = new EventEmitter<{ id: string; userAction: boolean }>();\r\n\r\n  constructor(cdr: ChangeDetectorRef) {\r\n    super(cdr);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    super.ngOnDestroy();\r\n    this.instance.onClick.complete();\r\n  }\r\n\r\n  onClick(event: MouseEvent): void {\r\n    this.instance.onClick.next(event);\r\n  }\r\n\r\n  close(): void {\r\n    this.destroy(true);\r\n  }\r\n\r\n  get state(): string | undefined {\r\n    if (this.instance.state === 'enter') {\r\n      if (this.placement === 'topLeft' || this.placement === 'bottomLeft') {\r\n        return 'enterLeft';\r\n      } else {\r\n        return 'enterRight';\r\n      }\r\n    } else {\r\n      return this.instance.state;\r\n    }\r\n  }\r\n}\r\n","\r\n\r\nimport { Direction } from '@angular/cdk/bidi';\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation } from '@angular/core';\r\n\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { NotificationConfig, TDSConfigService } from 'tds-ui/core/config';\r\nimport { TDSMNContainerComponent } from 'tds-ui/message';\r\nimport { toCssPixel } from 'tds-ui/shared/utility';\r\nimport { TDSNotificationData, TDSNotificationDataOptions } from './typings';\r\n\r\nconst TDS_CONFIG_MODULE_NAME = 'notification';\r\n\r\nconst TDS_NOTIFICATION_DEFAULT_CONFIG: Required<NotificationConfig> = {\r\n  top: '24px',\r\n  bottom: '24px',\r\n  placement: 'topRight',\r\n  duration: 4500,\r\n  maxStack: 7,\r\n  pauseOnHover: true,\r\n  animate: true,\r\n  direction: 'ltr'\r\n};\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  selector: 'tds-notification-container',\r\n  exportAs: 'tdsNotificationContainer',\r\n  preserveWhitespaces: false,\r\n  template: `\r\n    <div\r\n      class=\"tds-notification absolute  tds-notification-topLeft\"\r\n      [class.tds-notification-rtl]=\"dir === 'rtl'\"\r\n      [style.top]=\"top\"\r\n      [style.left]=\"'0px'\"\r\n    >\r\n      <tds-notification\r\n        *ngFor=\"let instance of topLeftInstances\"\r\n        [instance]=\"instance\"\r\n        [placement]=\"config.placement\"\r\n        (destroyed)=\"remove($event.id, $event.userAction)\"\r\n      ></tds-notification>\r\n    </div>\r\n    <div\r\n      class=\"tds-notification absolute  tds-notification-topRight\"\r\n      [class.tds-notification-rtl]=\"dir === 'rtl'\"\r\n      [style.top]=\"top\"\r\n      [style.right]=\"'0px'\"\r\n    >\r\n      <tds-notification\r\n        *ngFor=\"let instance of topRightInstances\"\r\n        [instance]=\"instance\"\r\n        [placement]=\"config.placement\"\r\n        (destroyed)=\"remove($event.id, $event.userAction)\"\r\n      ></tds-notification>\r\n    </div>\r\n    <div\r\n      class=\"tds-notification absolute  tds-notification-bottomLeft\"\r\n      [class.tds-notification-rtl]=\"dir === 'rtl'\"\r\n      [style.bottom]=\"bottom\"\r\n      [style.left]=\"'0px'\"\r\n    >\r\n      <tds-notification\r\n        *ngFor=\"let instance of bottomLeftInstances\"\r\n        [instance]=\"instance\"\r\n        [placement]=\"config.placement\"\r\n        (destroyed)=\"remove($event.id, $event.userAction)\"\r\n      ></tds-notification>\r\n    </div>\r\n    <div\r\n      class=\"tds-notification absolute  tds-notification-bottomRight\"\r\n      [class.tds-notification-rtl]=\"dir === 'rtl'\"\r\n      [style.bottom]=\"bottom\"\r\n      [style.right]=\"'0px'\"\r\n    >\r\n      <tds-notification\r\n        *ngFor=\"let instance of bottomRightInstances\"\r\n        [instance]=\"instance\"\r\n        [placement]=\"config.placement\"\r\n        (destroyed)=\"remove($event.id, $event.userAction)\"\r\n      ></tds-notification>\r\n    </div>\r\n  `\r\n})\r\nexport class TDSNotificationContainerComponent extends TDSMNContainerComponent {\r\n  dir: Direction = 'ltr';\r\n  bottom?: string | null;\r\n  top?: string | null;\r\n  config!: Required<NotificationConfig>; // initialized by parent class constructor\r\n  instances: Array<Required<TDSNotificationData>> = [];\r\n  topLeftInstances: Array<Required<TDSNotificationData>> = [];\r\n  topRightInstances: Array<Required<TDSNotificationData>> = [];\r\n  bottomLeftInstances: Array<Required<TDSNotificationData>> = [];\r\n  bottomRightInstances: Array<Required<TDSNotificationData>> = [];\r\n\r\n  constructor(cdr: ChangeDetectorRef, tdsConfigService: TDSConfigService) {\r\n    super(cdr,tdsConfigService);\r\n    const config = TDS_NOTIFICATION_DEFAULT_CONFIG;\r\n    this.dir = config?.direction || 'ltr';\r\n  }\r\n\r\n  create(notification: TDSNotificationData): Required<TDSNotificationData> {\r\n    const noti = this.onCreate(notification);\r\n    const key = noti.options.key;\r\n    const notificationWithSameKey = this.instances.find(\r\n      msg => msg.options.key === (notification.options as Required<TDSNotificationDataOptions>).key\r\n    );\r\n    if (key && notificationWithSameKey) {\r\n      this.replaceNotification(notificationWithSameKey, noti);\r\n    } else {\r\n      if (this.instances.length >= this.config.maxStack) {\r\n        this.instances = this.instances.slice(1);\r\n      }\r\n      this.instances = [...this.instances, noti];\r\n    }\r\n\r\n    this.readyInstances();\r\n\r\n    return noti;\r\n  }\r\n\r\n  protected onCreate(instance: TDSNotificationData): Required<TDSNotificationData> {\r\n    instance.options = this.mergeOptions(instance.options);\r\n    instance.onClose = new Subject<boolean>();\r\n    instance.onClick = new Subject<MouseEvent>();\r\n    return instance as Required<TDSNotificationData>;\r\n  }\r\n\r\n  protected subscribeConfigChange(): void {\r\n    this.tdsConfigService\r\n      .getConfigChangeEventForComponent(TDS_CONFIG_MODULE_NAME)\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(() => {\r\n       this.updateConfig();\r\n        const config = this.tdsConfigService.getConfigForComponent(TDS_CONFIG_MODULE_NAME);\r\n        if (config) {\r\n          const { direction } = config;\r\n          this.dir = direction || this.dir;\r\n        }\r\n      });\r\n  }\r\n\r\n  protected updateConfig(): void {\r\n    this.config = {\r\n      ...TDS_NOTIFICATION_DEFAULT_CONFIG,\r\n      ...this.config,\r\n       ...this.tdsConfigService.getConfigForComponent(TDS_CONFIG_MODULE_NAME)\r\n    };\r\n\r\n    this.top = toCssPixel(this.config.top!);\r\n    this.bottom = toCssPixel(this.config.bottom!);\r\n\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  private replaceNotification(old: TDSNotificationData, _new: TDSNotificationData): void {\r\n    old.title = _new.title;\r\n    old.content = _new.content;\r\n    old.template = _new.template;\r\n    old.type = _new.type;\r\n    old.options = _new.options;\r\n  }\r\n\r\n  protected readyInstances(): void {\r\n    this.topLeftInstances = this.instances.filter(m => m.options.placement === 'topLeft');\r\n    this.topRightInstances = this.instances.filter(m => m.options.placement === 'topRight' || !m.options.placement);\r\n    this.bottomLeftInstances = this.instances.filter(m => m.options.placement === 'bottomLeft');\r\n    this.bottomRightInstances = this.instances.filter(m => m.options.placement === 'bottomRight');\r\n\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  protected mergeOptions(options?: TDSNotificationDataOptions): TDSNotificationDataOptions {\r\n    const { duration, animate, pauseOnHover, placement } = this.config;\r\n    return { duration, animate, pauseOnHover, placement: placement, ...options };\r\n  }\r\n}\r\n","\r\n\r\nimport { NgModule } from '@angular/core';\r\n\r\n@NgModule()\r\nexport class TDSNotificationServiceModule {}\r\n","\r\n\r\nimport { BidiModule } from '@angular/cdk/bidi';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { TDSButtonModule } from 'tds-ui/button';\r\nimport { TDSOutletModule } from 'tds-ui/core/outlet';\r\nimport { TDSNotificationContainerComponent } from './notification-container.component';\r\nimport { TDSNotificationComponent } from './notification.component';\r\nimport { TDSNotificationServiceModule } from './notification.service.module';\r\n\r\n@NgModule({\r\n    imports: [BidiModule, CommonModule, OverlayModule, TDSOutletModule, TDSNotificationServiceModule, TDSButtonModule],\r\n    declarations: [TDSNotificationComponent, TDSNotificationContainerComponent]\r\n})\r\nexport class TDSNotificationModule {}\r\n","\r\n\r\nimport { Overlay } from '@angular/cdk/overlay';\r\nimport { Injectable, Injector, TemplateRef } from '@angular/core';\r\nimport { TDSSingletonService } from 'tds-ui/core/services';\r\nimport { TDSMNService } from 'tds-ui/message';\r\nimport { TDSNotificationContainerComponent } from './notification-container.component';\r\nimport { TDSNotificationServiceModule } from './notification.service.module';\r\nimport { TDSNotificationData, TDSNotificationDataOptions, TDSNotificationRef } from './typings';\r\n\r\nlet notificationId = 0;\r\n\r\n@Injectable({\r\n  providedIn: TDSNotificationServiceModule\r\n})\r\nexport class TDSNotificationService extends TDSMNService {\r\n  protected container!: TDSNotificationContainerComponent;\r\n  protected componentPrefix = 'notification-';\r\n\r\n  constructor(tdsSingletonService: TDSSingletonService, overlay: Overlay, injector: Injector) {\r\n    super(tdsSingletonService, overlay, injector);\r\n  }\r\n\r\n  success(title: string, content: string, options?: TDSNotificationDataOptions): TDSNotificationRef {\r\n    return this.createInstance({ type: 'success', title, content }, options);\r\n  }\r\n\r\n  error(title: string, content: string, options?: TDSNotificationDataOptions): TDSNotificationRef {\r\n    return this.createInstance({ type: 'error', title, content }, options);\r\n  }\r\n\r\n  info(title: string, content: string, options?: TDSNotificationDataOptions): TDSNotificationRef {\r\n    return this.createInstance({ type: 'info', title, content }, options);\r\n  }\r\n\r\n  warning(title: string, content: string, options?: TDSNotificationDataOptions): TDSNotificationRef {\r\n    return this.createInstance({ type: 'warning', title, content }, options);\r\n  }\r\n\r\n  blank(title: string, content: string, options?: TDSNotificationDataOptions): TDSNotificationRef {\r\n    return this.createInstance({ type: 'blank', title, content }, options);\r\n  }\r\n\r\n  create(\r\n    type: 'success' | 'info' | 'warning' | 'error' | 'blank' | string,\r\n    title: string,\r\n    content: string,\r\n    options?: TDSNotificationDataOptions\r\n  ): TDSNotificationRef {\r\n    return this.createInstance({ type, title, content }, options);\r\n  }\r\n\r\n  template(template: TemplateRef<{}>, options?: TDSNotificationDataOptions): TDSNotificationRef {\r\n    return this.createInstance({ template }, options);\r\n  }\r\n\r\n  protected generateMessageId(): string {\r\n    return `${this.componentPrefix}-${notificationId++}`;\r\n  }\r\n\r\n  private createInstance(message: TDSNotificationData, options?: TDSNotificationDataOptions): TDSNotificationRef {\r\n    this.container = this.withContainer(TDSNotificationContainerComponent);\r\n\r\n    return this.container.create({\r\n      ...message,\r\n      ...{\r\n        createdAt: new Date(),\r\n        messageId: this.generateMessageId(),\r\n        options\r\n      }\r\n    });\r\n  }\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1","i2"],"mappings":"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"}