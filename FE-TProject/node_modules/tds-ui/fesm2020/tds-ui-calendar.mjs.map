{"version":3,"file":"tds-ui-calendar.mjs","sources":["../../../projects/tds-ui/calendar/calendar-cells.ts","../../../projects/tds-ui/calendar/tds-calendar-datepicker.component.ts","../../../projects/tds-ui/calendar/tds-calendar-datepicker.component.html","../../../projects/tds-ui/calendar/calendar-header.component.ts","../../../projects/tds-ui/calendar/calendar.utils.ts","../../../projects/tds-ui/calendar/tds-calendar-event.component.ts","../../../projects/tds-ui/calendar/tds-calendar-current-time.component.html","../../../projects/tds-ui/calendar/tds-calendar-current-time.component.ts","../../../projects/tds-ui/calendar/tds-calendar-mode-day.component.html","../../../projects/tds-ui/calendar/tds-calendar-mode-day.component.ts","../../../projects/tds-ui/calendar/calendar.component.ts","../../../projects/tds-ui/calendar/tds-calendar-mode-week.component.ts","../../../projects/tds-ui/calendar/tds-calendar-mode-week.component.html","../../../projects/tds-ui/calendar/tds-calendar-mode-month.component.ts","../../../projects/tds-ui/calendar/tds-calendar-mode-month.component.html","../../../projects/tds-ui/calendar/tds-calendar-mode-year.component.ts","../../../projects/tds-ui/calendar/tds-calendar-mode-year.component.html","../../../projects/tds-ui/calendar/calendar.module.ts","../../../projects/tds-ui/calendar/tds-ui-calendar.ts"],"sourcesContent":["\n\nimport { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[tdsDateCell]',\n  exportAs: 'tdsDateCell'\n})\nexport class TDSDateCellDirective {}\n\n@Directive({\n  selector: '[tdsMonthCell]',\n  exportAs: 'tdsMonthCell'\n})\nexport class TDSMonthCellDirective {}\n\n@Directive({\n  selector: '[tdsDateFullCell]',\n  exportAs: 'tdsDateFullCell'\n})\nexport class TDSDateFullCellDirective {}\n\n@Directive({\n  selector: '[tdsMonthFullCell]',\n  exportAs: 'tdsMonthFullCell'\n})\nexport class TDSMonthFullCellDirective {}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewEncapsulation } from '@angular/core';\r\nimport { eachDayOfInterval, endOfMonth, endOfWeek, lastDayOfMonth, startOfMonth, startOfWeek } from 'date-fns';\r\nimport { CandyDate, WeekDayIndex } from 'tds-ui/core/time';\r\nimport { TDSCalendarMode } from 'tds-ui/date-picker';\r\nimport { DateHelperService, TDSCalendarI18nInterface, TDSI18nService } from 'tds-ui/i18n';\r\n\r\n@Component({\r\n  selector: 'tds-calendar-datepicker',\r\n  exportAs: 'tdsCalendarDatepicker',\r\n  templateUrl: './tds-calendar-datepicker.component.html',\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TDSCalendarDatepickerComponent implements OnInit, OnChanges {\r\n  @Input() tdsMode: TDSCalendarMode = \"date\";\r\n  @Input() tdsViewDate: Date = new Date();\r\n  @Input() locale!: TDSCalendarI18nInterface;\r\n  @Input()  tdsWeekStartsOn: WeekDayIndex | undefined;\r\n  @Output() readonly tdsViewDateChange = new EventEmitter<Date>();\r\n  @Output() readonly tdsValueChange = new EventEmitter<Array<Date>>();\r\n  activeDate: CandyDate = new CandyDate();\r\n  formatDate = 'MMMM yyyy';\r\n  viewDate = '';\r\n  dropdownVisible = false;\r\n  constructor(private cdr: ChangeDetectorRef, private i18n: TDSI18nService, private dateHelper: DateHelperService) {\r\n\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.tdsViewDate || changes.tdsMode) {\r\n      this.activeDate = new CandyDate(this.tdsViewDate);\r\n      this.updateFormatDate();\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this.weekStartsOn = this.i18n.getDateLocale().\r\n    this.updateFormatDate();\r\n  }\r\n  onChangeDatePicker(result: Date) {\r\n    if (!this.activeDate.isSame(result)) {\r\n      this.activeDate = new CandyDate(result);\r\n    }\r\n    this.dropdownVisible = false;\r\n    this.updateFormatDate();\r\n\r\n    this.valueChange();\r\n  }\r\n  onNextPrevious(e: MouseEvent, step: number) {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n\r\n    switch (this.tdsMode) {\r\n      case 'date':\r\n        this.activeDate = new CandyDate(this.activeDate.addDays(step).nativeDate);\r\n        break;\r\n      case 'week':\r\n        this.activeDate = new CandyDate(this.activeDate.addMonths(step).nativeDate);\r\n        break;\r\n      case 'month':\r\n        this.activeDate = new CandyDate(this.activeDate.addMonths(step).nativeDate);\r\n        break;\r\n      case 'year':\r\n        this.activeDate = new CandyDate(this.activeDate.addYears(step).nativeDate);\r\n        break;\r\n      default:\r\n        this.activeDate = new CandyDate(this.activeDate.addMonths(step).nativeDate);\r\n        break;\r\n    }\r\n    this.valueChange();\r\n    this.updateFormatDate();\r\n  }\r\n\r\n\r\n  private updateFormatDate() {\r\n    switch (this.tdsMode) {\r\n      case 'date':\r\n        this.formatDate = 'EEEE - dd/MM/yyyy';\r\n        break;\r\n      case 'week':\r\n        this.formatDate = 'MMMM yyyy';\r\n        break;\r\n      case 'month':\r\n        this.formatDate = 'MMMM - yyyy';\r\n        break;\r\n      case 'year':\r\n        this.formatDate = 'yyyy';\r\n        break;\r\n      default:\r\n        this.formatDate = 'yyyy';\r\n        break;\r\n    }\r\n    this.viewDate = this.dateHelper.format(this.activeDate.nativeDate, this.formatDate);\r\n    this.cdr.markForCheck();\r\n\r\n  }\r\n  valueChange() {\r\n    let viewDate = this.activeDate.clone().nativeDate;\r\n    this.tdsViewDateChange.emit(viewDate);\r\n    let rangeDate: Array<Date> = [];\r\n    switch (this.tdsMode) {\r\n      case 'week':\r\n        rangeDate = this.getDayOfWeek(viewDate);\r\n        break;\r\n      case 'month':\r\n        rangeDate = this.getDayOfMonth(viewDate);\r\n        break;\r\n      default:\r\n        rangeDate = [viewDate];\r\n        break;\r\n    }\r\n    this.tdsValueChange.emit(rangeDate);\r\n  }\r\n  onDropdownOutsideClick(){\r\n    if(this.dropdownVisible)\r\n    {\r\n      this.dropdownVisible = false;\r\n    }\r\n  }\r\n  private getDayOfWeek(viewDate: Date) {\r\n    let startWeek = startOfWeek(viewDate, { weekStartsOn: this.tdsWeekStartsOn || this.dateHelper.getFirstDayOfWeek() });\r\n    let endWeek = endOfWeek(viewDate, { weekStartsOn: this.tdsWeekStartsOn || this.dateHelper.getFirstDayOfWeek() });\r\n    return eachDayOfInterval({\r\n      start: startWeek,\r\n      end: endWeek\r\n    });\r\n  }\r\n  private getDayOfMonth(viewDate: Date) {\r\n    let startMonth = startOfMonth(viewDate);\r\n    let endMonth = endOfMonth(viewDate);\r\n    return eachDayOfInterval({\r\n      start: startMonth,\r\n      end: endMonth\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"inline-flex justify-center items-center gap-x-4 \">\r\n    <button (click)=\"onNextPrevious($event,-1)\" class=\"text-neutral-1-500 hover:bg-neutral-3-50 active:bg-neutral-3-100 border border-transparent p-1.5 rounded-full inline-flex justify-center items-center\">\r\n        <span class=\"tdsi-arrow-left-line text-2xl leading-6\"></span>\r\n    </button>\r\n    <button class=\"inline-flex justify-center items-center text-heading-4 font-semibold text-neutral-1-900 py-2\" [autoClose]=\"false\" [placement]=\"'bottomCenter'\" [(visible)]=\"dropdownVisible\" [trigger]=\"'click'\"  tds-dropdown [tdsDropdownMenu]=\"drpDatepicker\" (tdsDropdownOutsideClick)=\"onDropdownOutsideClick()\">\r\n        {{viewDate}}\r\n    </button>\r\n    <button (click)=\"onNextPrevious($event,1)\"  class=\"text-neutral-1-500 hover:bg-neutral-3-50 active:bg-neutral-3-100 border border-transparent p-1.5 rounded-full inline-flex justify-center items-center\">\r\n        <span class=\"tdsi-arrow-right-line text-2xl leading-6\"></span>\r\n    </button>\r\n</div>\r\n<tds-dropdown-menu #drpDatepicker=\"tdsDropdownMenu\">\r\n    <div class=\"w-full\" >\r\n        <tds-date-picker [inline]=\"true\" [ngModel]=\"activeDate.nativeDate\" (ngModelChange)=\"onChangeDatePicker($event)\" [mode]=\"tdsMode\">\r\n        </tds-date-picker>\r\n    </div>\r\n</tds-dropdown-menu>","\r\n\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { CandyDate } from 'tds-ui/core/time';\r\nimport { TDSCalendarMode } from 'tds-ui/date-picker';\r\nimport { DateHelperService, TDSI18nService as I18n } from 'tds-ui/i18n';\r\n\r\n\r\n\r\n@Component({\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  selector: 'tds-calendar-header',\r\n  exportAs: 'tdsCalendarHeader',\r\n  template: `\r\n    <div class=\"tds-calendar-header-left flex items-center \">\r\n          <tds-radio-group class=\"mr-2\" [(ngModel)]=\"tdsMode\" (ngModelChange)=\"onModeChange($event)\">\r\n            <label tds-radio-button [value]=\"'date'\">{{dayTypeText}}</label>\r\n            <label tds-radio-button [value]=\"'week'\">{{weekTypeText}}</label>\r\n            <label tds-radio-button [value]=\"'month'\">{{monthTypeText}}</label>\r\n            <label tds-radio-button [value]=\"'year'\">{{yearTypeText}}</label>            \r\n          </tds-radio-group>\r\n          <button tds-button-flat color=\"primary\" *ngIf=\"hiddenTodaybtn\" (click)=\"onToday($event)\">\r\n            <span class=\"flex items-center\"> {{toDayTypeText}} </span>\r\n          </button>\r\n        </div>\r\n        <div class=\"tds-calendar-header-middle\">\r\n          <tds-calendar-datepicker [tdsViewDate]=\"tdsViewDate\" [tdsMode]=\"tdsMode\" (tdsViewDateChange)=\"onValueChange($event)\"></tds-calendar-datepicker>\r\n        </div>\r\n        <div class=\"tds-calendar-header-right min-w-[30%]\">\r\n        <!-- <tds-radio-group [(ngModel)]=\"tdsMode\">\r\n            <label tds-radio-button [value]=\"'date'\">Hangzhou</label>\r\n            <label tds-radio-button [value]=\"'week'\">Chengdu</label>\r\n            <label tds-radio-button [value]=\"'month'\">Shanghai</label>\r\n            <label tds-radio-button [value]=\"'year'\">Beijing</label>            \r\n          </tds-radio-group> -->\r\n        </div>\r\n  `,\r\n  host: {\r\n    class: 'tds-fullcalendar-header tds-picker-calendar-header w-full flex items-center justify-between py-2 px-3',\r\n\r\n  }\r\n})\r\nexport class TDSCalendarHeaderComponent implements OnInit, OnChanges {\r\n  @Input() tdsMode: TDSCalendarMode = 'month';\r\n  @Input() tdsFullscreen: boolean = true;\r\n  @Input() tdsViewDate: Date = new Date();\r\n  @Output() readonly tdsModeChange: EventEmitter<TDSCalendarMode> = new EventEmitter();\r\n  @Output() readonly tdsActiveDateChange: EventEmitter<CandyDate> = new EventEmitter();\r\n  @Output() readonly tdsViewDateChange: EventEmitter<Date> = new EventEmitter();\r\n  hiddenTodaybtn = false;\r\n  activeDate: CandyDate = new CandyDate();\r\n  get activeYear(): number {\r\n    return this.activeDate.getYear();\r\n  }\r\n\r\n  get activeMonth(): number {\r\n    return this.activeDate.getMonth();\r\n  }\r\n\r\n  get size() {\r\n    return this.tdsFullscreen ? 'md' : 'sm';\r\n  }\r\n  get dayTypeText(): string {\r\n    return this.i18n.getLocale().Calendar.lang.day;\r\n  }\r\n  get weekTypeText(): string {\r\n    return this.i18n.getLocale().Calendar.lang.week;\r\n  }\r\n  get yearTypeText(): string {\r\n    return this.i18n.getLocale().Calendar.lang.year;\r\n  }\r\n\r\n  get monthTypeText(): string {\r\n    return this.i18n.getLocale().Calendar.lang.month;\r\n  }\r\n  get toDayTypeText(): string {\r\n    return this.i18n.getLocale().Calendar.lang.today;\r\n  }\r\n\r\n  constructor(\r\n    private i18n: I18n, private dateHelper: DateHelperService,\r\n    private cdr: ChangeDetectorRef\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.updateDate(this.tdsViewDate);\r\n  }\r\n\r\n  onToday(e: MouseEvent) {\r\n    e.preventDefault();\r\n    e.stopImmediatePropagation();\r\n    this.activeDate = new CandyDate(new Date());\r\n    this.tdsViewDateChange.emit(this.activeDate.nativeDate);\r\n    // this.checkHiddenTodayBtn();    \r\n  }\r\n  onModeChange(e: TDSCalendarMode) {\r\n    this.tdsModeChange.emit(e);\r\n    this.checkHiddenTodayBtn();\r\n  }\r\n  onValueChange(date: Date) {\r\n    this.tdsActiveDateChange.emit(new CandyDate(date));\r\n    this.tdsViewDateChange.emit(date);\r\n    this.checkHiddenTodayBtn();\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.tdsViewDate) {\r\n      this.updateDate(this.tdsViewDate);\r\n      this.checkHiddenTodayBtn();\r\n    }\r\n  }\r\n  private updateDate(date: Date) {\r\n    this.activeDate = new CandyDate(date);\r\n  }\r\n  private checkHiddenTodayBtn() {\r\n    this.hiddenTodaybtn = this.tdsMode == \"date\" && !this.activeDate.isSame(new Date());\r\n    this.cdr.markForCheck();\r\n  }\r\n \r\n}\r\n","import { TemplateRef } from \"@angular/core\";\r\nimport { addDays, addMinutes, differenceInMinutes, endOfDay, isSameSecond, setHours, setMinutes, startOfDay, startOfMinute } from \"date-fns\";\r\nimport { TDSSafeAny } from \"tds-ui/shared/utility\";\r\n\r\nexport enum DAYS_OF_WEEK {\r\n    SUNDAY = 0,\r\n    MONDAY = 1,\r\n    TUESDAY = 2,\r\n    WEDNESDAY = 3,\r\n    THURSDAY = 4,\r\n    FRIDAY = 5,\r\n    SATURDAY = 6,\r\n}\r\n\r\nconst DEFAULT_WEEKEND_DAYS: number[] = [\r\n    DAYS_OF_WEEK.SUNDAY,\r\n    DAYS_OF_WEEK.SATURDAY,\r\n];\r\nconst DAYS_IN_WEEK = 7;\r\nconst HOURS_IN_DAY = 24;\r\nconst MINUTES_IN_HOUR = 60;\r\nexport const SECONDS_IN_DAY: number = 60 * 60 * 24;\r\n\r\nexport interface WeekViewHourSegment {\r\n    isStart: boolean;\r\n    date: Date;\r\n    displayDate: Date;\r\n    cssClass?: string;\r\n}\r\n\r\nexport interface WeekViewHour {\r\n    segments: WeekViewHourSegment[];\r\n}\r\nexport interface TDSCanlendarEventInterface {\r\n    start: Date,\r\n    end: Date,\r\n    data: TDSSafeAny;\r\n    template: string | TemplateRef<void>;\r\n    allDay?: boolean\r\n}\r\nexport interface TDSWeekViewTimeEvent {\r\n    event: TDSCanlendarEventInterface;\r\n    height: number;\r\n    width: number;\r\n    top: number;\r\n    left: number;\r\n    startsBeforeDay: boolean;\r\n    endsAfterDay: boolean;\r\n}\r\nexport interface ViewPeriod {\r\n    start: Date;\r\n    end: Date;\r\n    events: TDSCanlendarEventInterface[];\r\n}\r\nexport interface GetDayViewArgs {\r\n    events?: TDSCanlendarEventInterface[];\r\n    viewDate: Date;\r\n    hourSegments: number;\r\n    dayStart: {\r\n        hour: number;\r\n        minute: number;\r\n    };\r\n    dayEnd: {\r\n        hour: number;\r\n        minute: number;\r\n    };\r\n    eventWidth: number;\r\n    segmentHeight: number;\r\n    hourDuration: number;\r\n    minimumEventHeight: number;\r\n}\r\ninterface Time {\r\n    hour: number;\r\n    minute: number;\r\n}\r\ninterface GetDayViewHourGridArgs {\r\n    viewDate: Date;\r\n    hourSegments: number;\r\n    hourDuration: number;\r\n    dayStart: Time;\r\n    dayEnd: Time;\r\n}\r\nexport interface DayView {\r\n    events: TDSWeekViewTimeEvent[];\r\n    width: number;\r\n    allDayEvents: TDSCanlendarEventInterface[];\r\n    period: ViewPeriod;\r\n}\r\nfunction sanitiseHours(hours: number): number {\r\n    return Math.max(Math.min(23, hours), 0);\r\n}\r\n\r\nfunction sanitiseMinutes(minutes: number): number {\r\n    return Math.max(Math.min(59, minutes), 0);\r\n}\r\nfunction getTimezoneOffset(date: Date | number): number {\r\n    return new Date(date).getTimezoneOffset();\r\n}\r\nexport function getDayViewHourGrid({\r\n    viewDate,\r\n    hourSegments,\r\n    hourDuration,\r\n    dayStart,\r\n    dayEnd\r\n}: GetDayViewHourGridArgs\r\n): WeekViewHour[] {\r\n    const hours: WeekViewHour[] = [];\r\n    let startOfView: Date = setMinutes(\r\n        setHours(startOfDay(viewDate), sanitiseHours(dayStart.hour)),\r\n        sanitiseMinutes(dayStart.minute)\r\n    );\r\n    let endOfView: Date = setMinutes(\r\n        setHours(startOfMinute(endOfDay(viewDate)), sanitiseHours(dayEnd.hour)),\r\n        sanitiseMinutes(dayEnd.minute)\r\n    );\r\n    const segmentDuration: number =\r\n        (hourDuration || MINUTES_IN_HOUR) / hourSegments;\r\n    let startOfViewDay: Date = startOfDay(viewDate);\r\n    const endOfViewDay: Date = endOfDay(viewDate);\r\n    let dateAdjustment: (d: Date) => Date = (d: Date) => d;\r\n\r\n    // this means that we change from or to DST on this day and that's going to cause problems so we bump the date\r\n    if (\r\n        getTimezoneOffset(startOfViewDay) !==\r\n        getTimezoneOffset(endOfViewDay)\r\n    ) {\r\n        startOfViewDay = addDays(startOfViewDay, 1);\r\n        startOfView = addDays(startOfView, 1);\r\n        endOfView = addDays(endOfView, 1);\r\n        dateAdjustment = (d: Date) => addDays(d, -1);\r\n    }\r\n\r\n    const dayDuration: number = hourDuration\r\n        ? (HOURS_IN_DAY * 60) / hourDuration\r\n        : MINUTES_IN_HOUR;\r\n    for (let i = 0; i < dayDuration; i++) {\r\n        const segments: WeekViewHourSegment[] = [];\r\n        for (let j = 0; j < hourSegments; j++) {\r\n            const date: Date = addMinutes(\r\n                addMinutes(startOfView, i * (hourDuration || MINUTES_IN_HOUR)),\r\n                j * segmentDuration\r\n            );\r\n            if (date >= startOfView && date < endOfView) {\r\n                segments.push({\r\n                    date: dateAdjustment(date),\r\n                    displayDate: date,\r\n                    isStart: j === 0,\r\n                });\r\n            }\r\n        }\r\n        if (segments.length > 0) {\r\n            hours.push({ segments });\r\n        }\r\n    }\r\n\r\n    return hours;\r\n}\r\nexport const trackByHourSegment = (\r\n    index: number,\r\n    segment: WeekViewHourSegment\r\n) => segment.date.toISOString();\r\n\r\nexport interface GetEventsInPeriodArgs {\r\n    events: TDSCanlendarEventInterface[];\r\n    periodStart: Date;\r\n    periodEnd: Date;\r\n}\r\n\r\ninterface IsEventInPeriodArgs {\r\n    event: TDSCanlendarEventInterface;\r\n    periodStart: Date;\r\n    periodEnd: Date;\r\n}\r\nfunction isEventIsPeriod(\r\n    { event, periodStart, periodEnd }: IsEventInPeriodArgs\r\n): boolean {\r\n    const eventStart: Date = event.start;\r\n    const eventEnd: Date = event.end || event.start;\r\n\r\n    if (eventStart > periodStart && eventStart < periodEnd) {\r\n        return true;\r\n    }\r\n\r\n    if (eventEnd > periodStart && eventEnd < periodEnd) {\r\n        return true;\r\n    }\r\n\r\n    if (eventStart < periodStart && eventEnd > periodEnd) {\r\n        return true;\r\n    }\r\n\r\n    if (\r\n        isSameSecond(eventStart, periodStart) ||\r\n        isSameSecond(eventStart, periodEnd)\r\n    ) {\r\n        return true;\r\n    }\r\n\r\n    if (\r\n        isSameSecond(eventEnd, periodStart) ||\r\n        isSameSecond(eventEnd, periodEnd)\r\n    ) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\nexport function getEventsInPeriod(\r\n\r\n    { events, periodStart, periodEnd }: GetEventsInPeriodArgs\r\n): TDSCanlendarEventInterface[] {\r\n    return events.filter((event: TDSCanlendarEventInterface) =>\r\n        isEventIsPeriod({ event, periodStart, periodEnd })\r\n    );\r\n}\r\nfunction getOverLappingWeekViewEvents(\r\n    events: TDSWeekViewTimeEvent[],\r\n    top: number,\r\n    bottom: number\r\n): TDSWeekViewTimeEvent[] {\r\n    return events.filter((previousEvent: TDSWeekViewTimeEvent) => {\r\n        const previousEventTop: number = previousEvent.top;\r\n        const previousEventBottom: number =\r\n            previousEvent.top + previousEvent.height;\r\n\r\n        if (top < previousEventBottom && previousEventBottom < bottom) {\r\n            return true;\r\n        } else if (top < previousEventTop && previousEventTop < bottom) {\r\n            return true;\r\n        } else if (previousEventTop <= top && bottom <= previousEventBottom) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    });\r\n}\r\nexport function getDayView(\r\n    {\r\n        events,\r\n        viewDate,\r\n        hourSegments,\r\n        dayStart,\r\n        dayEnd,\r\n        eventWidth,\r\n        segmentHeight,\r\n        hourDuration,\r\n        minimumEventHeight\r\n    }: GetDayViewArgs\r\n): DayView {\r\n\r\n\r\n    const startOfView: Date = setMinutes(\r\n        setHours(startOfDay(viewDate), sanitiseHours(dayStart.hour)),\r\n        sanitiseMinutes(dayStart.minute)\r\n    );\r\n    const endOfView: Date = setMinutes(\r\n        setHours(startOfMinute(endOfDay(viewDate)), sanitiseHours(dayEnd.hour)),\r\n        sanitiseMinutes(dayEnd.minute)\r\n    );\r\n    endOfView.setSeconds(59, 999);\r\n    const previousDayEvents: TDSWeekViewTimeEvent[] = [];\r\n    const eventsInPeriod = getEventsInPeriod({\r\n        events: events?.filter((event: TDSCanlendarEventInterface) => !event.allDay)! ,\r\n        periodStart: startOfView,\r\n        periodEnd: endOfView,\r\n    });\r\n\r\n    const dayViewEvents: TDSWeekViewTimeEvent[] = eventsInPeriod\r\n        .sort((eventA: TDSCanlendarEventInterface, eventB: TDSCanlendarEventInterface) => {\r\n            return eventA.start.valueOf() - eventB.start.valueOf();\r\n        })\r\n        .map((event: TDSCanlendarEventInterface) => {\r\n            const eventStart: Date = event.start;\r\n            const eventEnd: Date = event.end || eventStart;\r\n            const startsBeforeDay: boolean = eventStart < startOfView;\r\n            const endsAfterDay: boolean = eventEnd > endOfView;\r\n            const hourHeightModifier: number =\r\n                (hourSegments * segmentHeight) / (hourDuration || MINUTES_IN_HOUR);\r\n\r\n            let top = 0;\r\n            if (eventStart > startOfView) {\r\n                // adjust the difference in minutes if the user's offset is different between the start of the day and the event (e.g. when going to or from DST)\r\n                const eventOffset = getTimezoneOffset(eventStart);\r\n                const startOffset = getTimezoneOffset(startOfView);\r\n                const diff = startOffset - eventOffset;\r\n                top += differenceInMinutes(eventStart, startOfView) + diff;\r\n            }\r\n            top *= hourHeightModifier;\r\n            top = Math.floor(top);\r\n\r\n            const startDate: Date = startsBeforeDay ? startOfView : eventStart;\r\n            const endDate: Date = endsAfterDay ? endOfView : eventEnd;\r\n            const timezoneOffset =\r\n                getTimezoneOffset(startDate) -\r\n                getTimezoneOffset(endDate);\r\n            let height: number =\r\n                differenceInMinutes(endDate, startDate) + timezoneOffset;\r\n\r\n            if (!event.end) {\r\n                height = segmentHeight;\r\n            } else {\r\n                height *= hourHeightModifier;\r\n            }\r\n\r\n            if (minimumEventHeight && height < minimumEventHeight) {\r\n                height = minimumEventHeight;\r\n            }\r\n\r\n            height = Math.floor(height);\r\n\r\n            const bottom: number = top + height;\r\n\r\n            const overlappingPreviousEvents = getOverLappingWeekViewEvents(\r\n                previousDayEvents,\r\n                top,\r\n                bottom\r\n            );\r\n\r\n            let left = 0;\r\n\r\n            while (\r\n                overlappingPreviousEvents.some(\r\n                    (previousEvent) => previousEvent.left === left\r\n                )\r\n            ) {\r\n                left += eventWidth;\r\n            }\r\n\r\n            const dayEvent: TDSWeekViewTimeEvent = {\r\n                event,\r\n                height,\r\n                width: eventWidth,\r\n                top,\r\n                left,\r\n                startsBeforeDay,\r\n                endsAfterDay,\r\n            };\r\n\r\n            previousDayEvents.push(dayEvent);\r\n\r\n            return dayEvent;\r\n        });\r\n\r\n    const width: number = Math.max(\r\n        ...dayViewEvents.map((event: TDSWeekViewTimeEvent) => event.left + event.width)\r\n    );\r\n    const allDayEvents: TDSCanlendarEventInterface[] = getEventsInPeriod({\r\n        events: events?.filter((event: TDSCanlendarEventInterface) => event.allDay)!,\r\n        periodStart: startOfDay(startOfView),\r\n        periodEnd: endOfDay(endOfView),\r\n    });\r\n\r\n    return {\r\n        events: dayViewEvents,\r\n        width,\r\n        allDayEvents,\r\n        period: {\r\n            events: eventsInPeriod,\r\n            start: startOfView,\r\n            end: endOfView,\r\n        },\r\n    };\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnInit, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { TDSSafeAny } from 'tds-ui/shared/utility';\n\n@Component({\n  selector: 'tds-calendar-event',\n  template: `\n    <ng-content></ng-content>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TDSCalendarEventComponent implements OnChanges {\n  @Input() tdsStartDate: Date = new Date();\n  @Input() tdsEndDate: Date = new Date();\n  @Input() tdsData:TDSSafeAny;\n  @Input() tdsTemplate!:string | TemplateRef<void>;\n  changes = new Subject<void>();\n  constructor() { }\n  ngOnInit(): void {\n  } \n  ngOnChanges(): void {\n    this.changes.next();\n  }\n}\n","<ng-template #defaultTemplate let-columnDate=\"columnDate\" let-dayStartHour=\"dayStartHour\"\n    let-dayStartMinute=\"dayStartMinute\" let-dayEndHour=\"dayEndHour\" let-dayEndMinute=\"dayEndMinute\"\n    let-isVisible=\"isVisible\" let-topPx=\"topPx\" let-now=\"now\">\n\n    <div class=\"cal-current-time-marker bg-primary-1 absolute inset-0 h-px \" *ngIf=\"isVisible\"\n        [style.top.px]=\"topPx\" [style.left.px]=\"widthColTime\">\n        <div class=\"w-full flex items-center justify-center relative \">\n            <div class=\"absolute -left-[60px] text-primary-1 z-10  bg-white\">{{ now | date:\"HH:mm\"}}</div>            \n        </div>\n    </div>\n</ng-template>\n<ng-template [ngTemplateOutlet]=\"customTemplate || defaultTemplate\" [ngTemplateOutletContext]=\"{\n  columnDate: columnDate,\n  dayStartHour: dayStartHour,\n  dayStartMinute: dayStartMinute,\n  dayEndHour: dayEndHour,\n  dayEndMinute: dayEndMinute,\n  isVisible: (marker$ | async)?.isVisible,\n  topPx: (marker$ | async)?.top,\n  now: (marker$ | async)?.now\n}\">\n</ng-template>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, NgZone, OnChanges, SimpleChanges, TemplateRef } from '@angular/core';\r\nimport { differenceInMinutes, isSameDay, setHours, setMinutes } from 'date-fns';\r\nimport { BehaviorSubject, interval, Observable } from 'rxjs';\r\nimport { map, startWith, switchMap, switchMapTo, takeUntil, tap } from 'rxjs/operators';\r\nimport { TDSDestroyService } from 'tds-ui/core/services';\r\n\r\n\r\n@Component({\r\n  selector: 'tds-calendar-current-time',\r\n  templateUrl: './tds-calendar-current-time.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    TDSDestroyService\r\n  ]\r\n})\r\nexport class TDSCalendarCurrentTimeComponent implements OnChanges {\r\n  @Input() columnDate!: Date;\r\n\r\n  @Input() dayStartHour!: number;\r\n\r\n  @Input() dayStartMinute!: number;\r\n\r\n  @Input() dayEndHour!: number;\r\n\r\n  @Input() dayEndMinute!: number;\r\n\r\n  @Input() hourSegments!: number;\r\n\r\n  @Input() hourDuration!: number;\r\n\r\n  @Input() hourSegmentHeight!: number;\r\n\r\n  @Input() customTemplate!: TemplateRef<any>;\r\n\r\n  @Input() widthColTime!: number;\r\n  columnDate$ = new BehaviorSubject<Date | undefined>(undefined);\r\n  //1 phút hiển thị 1 lần\r\n  marker$: Observable<{\r\n    isVisible: boolean;\r\n    top: number;\r\n    now:Date;\r\n  }> = interval(60*1000).pipe(\r\n    // switchMap(() => ),\r\n    startWith(0),\r\n    switchMapTo(this.columnDate$),\r\n    map((columnDate) => {\r\n      const now = new Date();\r\n      const startOfDay = setMinutes(\r\n        setHours(columnDate!, this.dayStartHour),\r\n        this.dayStartMinute\r\n      );\r\n      const endOfDay = setMinutes(\r\n        setHours(columnDate!, this.dayEndHour),\r\n        this.dayEndMinute\r\n      );\r\n      const hourHeightModifier =\r\n        (this.hourSegments * this.hourSegmentHeight) /\r\n        (this.hourDuration || 60);      \r\n      \r\n      return {\r\n        isVisible:\r\n          isSameDay(columnDate!, now) &&\r\n          now >= startOfDay &&\r\n          now <= endOfDay,\r\n        top:\r\n          differenceInMinutes(now, startOfDay) *\r\n          hourHeightModifier,\r\n          now:now\r\n      };\r\n    }),\r\n    takeUntil(this.destroy$)\r\n  );\r\n\r\n  constructor(\r\n    private zone: NgZone,\r\n    private cdr: ChangeDetectorRef,\r\n    private destroy$:TDSDestroyService\r\n    ) { }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.columnDate) {\r\n      this.columnDate$.next(changes.columnDate.currentValue);\r\n    }\r\n  }\r\n  \r\n}","<div class=\"w-full h-full  relative overflow-auto tds-custom-scroll\">\n    <table class=\"table-fixed min-w-full\" [style.width.px]=\"widthTable\">\n        <colgroup>\n            <col [width]=\"widthColTime\">\n            <col>\n        </colgroup>\n        <tbody>\n            <ng-template ngFor [ngForOf]=\"weekViewHour\" let-week let-idx=\"index\" let-total=\"count\">               \n                <ng-template ngFor [ngForOf]=\"week.segments\" let-segment [ngForTrackBy]=\"trackByHourSegment\">\n                    <tr  *ngIf=\"segment.isStart\" class=\"tds-calendar-segment-start\">\n                        <td [attr.rowspan]=\"week.segments.length\" class=\"tds-calendar-col-lock align-top text-center sticky left-0 z-10 bg-white \">\n                            {{segment.displayDate | date:\"HH:mm\"}}\n                        </td>\n                        <td class=\"cursor-pointer\" [style.height.px]=\"hourSegmentHeight\" (click)=\"onClickSegment($event,segment)\">\n                            \n                        </td>\n                    </tr>\n                    <tr *ngIf=\"!segment.isStart\" class=\"tds-calendar-segment\">\n                        <td class=\"cursor-pointer\" [style.height.px]=\"hourSegmentHeight\" (click)=\"onClickSegment($event,segment)\">                           \n                        </td>\n                    </tr>                    \n                </ng-template>\n            </ng-template>\n        </tbody>\n    </table>\n    <tds-calendar-current-time\n    [columnDate]=\"viewDate\"\n    [dayStartHour]=\"dayStartHour\"\n    [dayStartMinute]=\"dayStartMinute\"\n    [dayEndHour]=\"dayEndHour\"\n    [dayEndMinute]=\"dayEndMinute\"\n    [hourSegments]=\"hourSegments\"\n    [hourDuration]=\"hourDuration\"\n    [hourSegmentHeight]=\"hourSegmentHeight\"\n    [customTemplate]=\"currentTimeMarkerTemplate\"\n    [widthColTime]=\"widthColTime\"\n  ></tds-calendar-current-time>\n    <!-- <ng-template ngFor [ngForOf]=\"weekViewHour\" let-week let-idx=\"index\" let-total=\"count\">\n        <ng-template ngFor [ngForOf]=\"week.segments\" let-segment [ngForTrackBy]=\"trackByHourSegment\">\n            <div class=\"w-full flex\" [ngClass]=\"{'border-t border-neutral-2-200':segment.isStart}\"\n                [style.height.px]=\"hourSegmentHeight\">\n                <div class=\"w-20 text-center\">\n                    <span *ngIf=\"segment.isStart\">\n                        {{segment.displayDate | date:\"HH:mm\"}}\n                    </span>\n                </div>\n                <div class=\"flex-auto\">\n\n                </div>\n            </div>\n        </ng-template>\n    </ng-template> -->\n    <div class=\"tds-calendar-event-container pointer-events-none absolute inset-0 pl-4\" [style.left.px]=\"widthColTime\" *ngIf=\"dayView\">\n        <div class=\"w-full h-full relative pointer-events-none\">\n            <div class=\"h-px pointer-events-none\" [style.width.px]=\"maxWidth\"></div>\n            <ng-template ngFor [ngForOf]=\"dayView.events\" let-dataEvent>\n                <div class=\"absolute pointer-events-auto\" [style.height.px]=\"dataEvent.height\" [style.marginTop.px]=\"dataEvent.top\"\n                    [style.marginLeft.px]=\"dataEvent.left\" [style.width.px]=\"dataEvent.width\">\n                    <ng-container *tdsStringTemplateOutlet=\"dataEvent.event.template\">{{ dataEvent.event.template }}\n                    </ng-container>\n                </div>\n            </ng-template>   \n        </div>\n    </div>     \n  \n</div>\n<ng-content></ng-content>","import { AfterContentInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChildren, ElementRef, EventEmitter, Input, OnChanges, OnInit, Output, QueryList, SimpleChanges, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { CandyDate } from 'tds-ui/core/time';\nimport { TDSCalendarI18nInterface } from 'tds-ui/i18n';\nimport { getDayViewHourGrid, WeekViewHour, trackByHourSegment, TDSCanlendarEventInterface, getDayView, DayView, WeekViewHourSegment } from './calendar.utils';\nimport { TDSCalendarEventComponent } from './tds-calendar-event.component';\nimport { startWith, switchMap, takeUntil } from 'rxjs/operators';\nimport { BehaviorSubject, merge } from 'rxjs';\nimport { TDSSafeAny } from 'tds-ui/shared/utility';\nimport { TDSDestroyService } from 'tds-ui/core/services';\n\n@Component({\n  selector: 'tds-calendar-mode-day',\n  templateUrl: './tds-calendar-mode-day.component.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [TDSDestroyService],\n  host: {\n    class: \"w-full block border  border-neutral-2-200\"\n  }\n})\nexport class TDSCalendarModeDayComponent implements OnInit, OnChanges, AfterContentInit {\n  @Input() viewDate: Date = new Date();\n  @Input() locale!: TDSCalendarI18nInterface;\n  @Input() start: CandyDate = new CandyDate();\n  /**\n   * Giờ kết thúc ngày trong thời gian 24 giờ. Phải là 0-23\n   */\n  @Input() dayEndHour: number = 17;\n  /**\n  * Phút cuối ngày. Phải là 0-59\n  */\n  @Input() dayEndMinute: number = 30;\n  /**\n  * Giờ bắt đầu ngày trong thời gian 24 giờ. Phải là 0-23\n  */\n  @Input() dayStartHour: number = 8;\n  /**\n  * Phút bắt đầu ngày. Phải là 0-59\n  */\n  @Input() dayStartMinute: number = 0;\n\n  /**\n   * The number of segments in an hour. Must divide equally into 60.\n   */\n  @Input() hourSegments: number = 4;\n\n  /**\n   * The height in pixels of each hour segment\n   */\n  @Input() hourSegmentHeight: number = 30;\n  /**\n   * The minimum height in pixels of each event\n   */\n  @Input() minimumEventHeight: number = 100;\n  /**\n  * The width in pixels of each hour segment\n  */\n  @Input() hourSegmentWidth: number = 200;\n  /**\n   * The duration of each segment group in minutes\n   */\n  @Input() hourDuration: number = 60;\n  @Input() widthColTime: number = 80;\n  //   /**\n  //   * The start number of the week.\n  //   * This is ignored when the `daysInWeek` input is also set as the `viewDate` will be used as the start of the week instead.\n  //   * ```\n  //   */\n  //   @Input() weekStartsOn: number = 1;\n  //   /**\n  // * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\n  // */\n  //   @Input() excludeDays: number[] = [];\n  //   /**\n  //    * The precision to display events.\n  //    * `days` will round event start and end dates to the nearest day and `minutes` will not do this rounding\n  //    */\n  //   @Input() precision: 'days' | 'minutes' = 'days';\n  //   /**\n  //  * An array of day indexes (0 = sunday, 1 = monday etc) that indicate which days are weekends\n  //  */\n  //   @Input() weekendDays!: number[];\n  //   /**\n  //    * The number of days in a week. Can be used to create a shorter or longer week view.\n  //    * The first day of the week will always be the `viewDate` and `weekStartsOn` if set will be ignored\n  //    */\n  //   @Input() daysInWeek: number = 1;\n  /**\n * A custom template to use for the current time marker\n */\n  @Input() currentTimeMarkerTemplate!: TemplateRef<any>;\n\n  /**\n   * @hidden\n   */\n  trackByHourSegment = trackByHourSegment;\n\n  weekViewHour: WeekViewHour[] = [];\n  activeDate: CandyDate = new CandyDate();\n  maxWidth: number = 0;\n  widthTable: number | null = null;\n  private listOfTemplateEventItem$ = new BehaviorSubject<TDSCanlendarEventInterface[]>([]);\n  @ContentChildren(TDSCalendarEventComponent, { descendants: true }) listEventComp!: QueryList<TDSCalendarEventComponent>;\n  @Output() tdsClickSegment = new EventEmitter<WeekViewHourSegment>();\n  listOfEvent: TDSCanlendarEventInterface[] = [];\n  dayView!: DayView;\n  paddingLeftContent = 16;\n  constructor(private destroy$: TDSDestroyService, private cdr: ChangeDetectorRef, private elementRef: ElementRef) { }\n\n  ngOnInit(): void {\n\n    this.listOfTemplateEventItem$.pipe(takeUntil(this.destroy$))\n      .subscribe((value: TDSCanlendarEventInterface[]) => {\n        let dayStart = {\n          hour: this.dayStartHour,\n          minute: this.dayStartMinute,\n        }\n        let dayEnd = {\n          hour: this.dayEndHour,\n          minute: this.dayEndMinute,\n        }\n        this.listOfEvent = [...value];\n        this.dayView = getDayView({\n          events: [...value], viewDate: this.viewDate, hourSegments: this.hourSegments, dayStart: dayStart,\n          dayEnd: dayEnd, eventWidth: this.hourSegmentWidth, hourDuration: this.hourDuration, minimumEventHeight: this.minimumEventHeight, segmentHeight: this.hourSegmentHeight\n        });\n        let width = this.paddingLeftContent;\n        let widthComp = this.elementRef.nativeElement.getBoundingClientRect().width;\n        this.dayView.events.forEach(e => {\n          const widtCol = e.left + e.width\n          if (width < widtCol) {\n            width = widtCol;\n          }\n        });\n        this.widthTable = width > widthComp ? width + this.widthColTime + this.paddingLeftContent : null;\n        this.maxWidth = width == 0 ? 0 : width;\n\n        this.cdr.markForCheck();\n      });\n  }\n\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.viewDate) {\n      this.buildTime();\n      this.cdr.markForCheck();\n    }\n  }\n  ngAfterContentInit(): void {\n    this.listEventComp.changes.pipe(\n      startWith(true),\n      switchMap(() =>\n        merge(\n          ...[\n            this.listEventComp.changes,\n            ...this.listEventComp.map(option => option.changes),\n          ]\n        ).pipe(startWith(true))\n      ),\n      takeUntil(this.destroy$)\n    ).subscribe(() => {\n      const listOfEventInterface = this.listEventComp.toArray().map(item => {\n        const { tdsEndDate, tdsStartDate, tdsData, tdsTemplate } = item;\n        return {\n          start: tdsStartDate,\n          end: tdsEndDate,\n          data: tdsData,\n          template: tdsTemplate,\n          allDay: false\n        };\n      });\n      this.listOfTemplateEventItem$.next(listOfEventInterface);\n\n    })\n  }\n  onClickSegment(e:MouseEvent,date:WeekViewHourSegment)\n  {\n    e.stopPropagation();\n    e.preventDefault();\n    this.tdsClickSegment.emit(date)\n  }\n  private buildTime() {\n    this.activeDate = new CandyDate(this.viewDate);\n    let dayStart = {\n      hour: this.dayStartHour,\n      minute: this.dayStartMinute,\n    }\n    let dayEnd = {\n      hour: this.dayEndHour,\n      minute: this.dayEndMinute,\n    }\n    this.weekViewHour = getDayViewHourGrid({\n      dayStart: dayStart,\n      dayEnd: dayEnd,\n      hourDuration: this.hourDuration,\n      viewDate: this.viewDate,\n      hourSegments: this.hourSegments\n    });\n    this.listOfTemplateEventItem$.next(this.listOfEvent);\n  }\n\n}\n","\n\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport { BooleanInput } from '@angular/cdk/coercion';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { CandyDate } from 'tds-ui/core/time';\nimport { TDSCalendarMode } from 'tds-ui/date-picker';\nimport { InputBoolean } from 'tds-ui/shared/utility';\n\nimport {\n  TDSDateCellDirective as DateCell,\n  TDSDateFullCellDirective as DateFullCell,\n  TDSMonthCellDirective as MonthCell,\n  TDSMonthFullCellDirective as MonthFullCell\n} from './calendar-cells';\n\ntype TDSCalendarDateTemplate = TemplateRef<{ $implicit: Date }>;\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'tds-calendar',\n  exportAs: 'tdsCalendar',\n  template: `\n    <tds-calendar-header\n      [tdsFullscreen]=\"tdsFullscreen\"\n      [(tdsViewDate)]=\"activeDate.nativeDate\"\n      [tdsMode]=\"tdsMode\"\n      (tdsModeChange)=\"onModeChange($event)\"\n      \n    ></tds-calendar-header>\n    <div class=\"tds-picker-calendar-body\">\n      <ng-container [ngSwitch]=\"tdsMode\">\n        <ng-container *ngSwitchCase=\"'date'\">\n          <tds-calendar-mode-day [viewDate]=\"activeDate.nativeDate\">\n            <ng-content></ng-content>\n          </tds-calendar-mode-day>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"'week'\">\n          tuần\n        </ng-container>\n        <ng-container *ngSwitchCase=\"'month'\">\n          tháng\n        </ng-container>\n        <ng-container *ngSwitchCase=\"'year'\">\n          năm\n        </ng-container>\n      </ng-container>\n    </div>\n    <!-- <div class=\"tds-picker-panel\">\n      <div class=\"tds-picker-{{ tdsMode === 'month' ? 'day' : 'month' }}-panel\">\n        <div class=\"\">\n          <ng-container *ngIf=\"tdsMode === 'month'; then monthModeTable; else yearModeTable\"></ng-container>\n        </div>\n      </div>\n    </div> -->\n    <!-- <ng-template #monthModeTable> -->\n      <!--  TODO [cellRender] [fullCellRender] -->\n      <!-- <date-table\n        [prefixCls]=\"prefixCls\"\n        [value]=\"activeDate\"\n        [activeDate]=\"activeDate\"\n        [cellRender]=\"$any(dateCell)\"\n        [fullCellRender]=\"$any(dateFullCell)\"\n        [disabledDate]=\"tdsDisabledDate\"\n        (valueChange)=\"onDateSelect($event)\"\n      ></date-table>\n    </ng-template> -->\n\n    <!--  TODO [cellRender] [fullCellRender] -->\n    <!-- <ng-template #yearModeTable>\n      <month-table\n        [prefixCls]=\"prefixCls\"\n        [value]=\"activeDate\"\n        [activeDate]=\"activeDate\"\n        [cellRender]=\"$any(monthCell)\"\n        [fullCellRender]=\"$any(monthFullCell)\"\n        (valueChange)=\"onDateSelect($event)\"\n      ></month-table>\n    </ng-template> -->\n  `,\n  host: {\n    class: 'tds-picker-calendar border border-primary-1 block',\n    '[class.tds-picker-calendar-full]': 'tdsFullscreen',\n    '[class.tds-picker-calendar-mini]': '!tdsFullscreen',\n    '[class.tds-picker-calendar-rtl]': `dir === 'rtl'`\n  },\n  providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => TDSCalendarComponent), multi: true }]\n})\nexport class TDSCalendarComponent implements ControlValueAccessor, OnChanges, OnInit, OnDestroy {\n  static ngAcceptInputType_tdsFullscreen: BooleanInput;\n\n  activeDate: CandyDate = new CandyDate();\n  prefixCls: string = 'tds-picker-calendar';\n  private destroy$ = new Subject<void>();\n  dir: Direction = 'ltr';\n\n  private onChangeFn: (date: Date) => void = () => { };\n  private onTouchFn: () => void = () => { };\n\n  @Input() tdsMode: TDSCalendarMode = 'month';\n  @Input() tdsValue?: Date;\n  @Input() tdsDisabledDate?: (date: Date) => boolean;\n\n  @Output() readonly tdsModeChange: EventEmitter<TDSCalendarMode> = new EventEmitter();\n  @Output() readonly tdsPanelChange: EventEmitter<{ date: Date; mode: TDSCalendarMode }> = new EventEmitter();\n  @Output() readonly tdsSelectChange: EventEmitter<Date> = new EventEmitter();\n  @Output() readonly tdsValueChange: EventEmitter<Date> = new EventEmitter();\n\n  /**\n   * Cannot use @Input and @ContentChild on one variable\n   * because { static: false } will make @Input property get delayed\n   **/\n  @Input() tdsDateCell?: TDSCalendarDateTemplate;\n  @ContentChild(DateCell, { static: false, read: TemplateRef }) tdsDateCellChild?: TDSCalendarDateTemplate;\n  get dateCell(): TDSCalendarDateTemplate {\n    return (this.tdsDateCell || this.tdsDateCellChild)!;\n  }\n\n  @Input() tdsDateFullCell?: TDSCalendarDateTemplate;\n  @ContentChild(DateFullCell, { static: false, read: TemplateRef }) tdsDateFullCellChild?: TDSCalendarDateTemplate;\n  get dateFullCell(): TDSCalendarDateTemplate {\n    return (this.tdsDateFullCell || this.tdsDateFullCellChild)!;\n  }\n\n  @Input() tdsMonthCell?: TDSCalendarDateTemplate;\n  @ContentChild(MonthCell, { static: false, read: TemplateRef }) tdsMonthCellChild?: TDSCalendarDateTemplate;\n  get monthCell(): TDSCalendarDateTemplate {\n    return (this.tdsMonthCell || this.tdsMonthCellChild)!;\n  }\n\n  @Input() tdsMonthFullCell?: TDSCalendarDateTemplate;\n  @ContentChild(MonthFullCell, { static: false, read: TemplateRef }) tdsMonthFullCellChild?: TDSCalendarDateTemplate;\n  get monthFullCell(): TDSCalendarDateTemplate {\n    return (this.tdsMonthFullCell || this.tdsMonthFullCellChild)!;\n  }\n\n  @Input() @InputBoolean() tdsFullscreen: boolean = true;\n\n  constructor(private cdr: ChangeDetectorRef, @Optional() private directionality: Directionality) { }\n\n  ngOnInit(): void {\n    this.dir = this.directionality.value;\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.dir = this.directionality.value;\n    });\n  }\n\n  onModeChange(mode: TDSCalendarMode): void {\n    this.tdsModeChange.emit(mode);\n    this.tdsPanelChange.emit({ date: this.activeDate.nativeDate, mode });\n  }\n\n  onYearSelect(year: number): void {\n    const date = this.activeDate.setYear(year);\n    this.updateDate(date);\n  }\n\n  onMonthSelect(month: number): void {\n    const date = this.activeDate.setMonth(month);\n    this.updateDate(date);\n  }\n\n  onDateSelect(date: CandyDate): void {\n    // Only activeDate is enough in calendar\n    // this.value = date;\n    this.updateDate(date);\n  }\n\n  writeValue(value: Date | null): void {\n    this.updateDate(new CandyDate(value as Date), false);\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: (date: Date) => void): void {\n    this.onChangeFn = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouchFn = fn;\n  }\n\n  private updateDate(date: CandyDate, touched: boolean = true): void {\n    this.activeDate = date;\n\n    if (touched) {\n      this.onChangeFn(date.nativeDate);\n      this.onTouchFn();\n      this.tdsSelectChange.emit(date.nativeDate);\n      this.tdsValueChange.emit(date.nativeDate);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.tdsValue) {\n      this.updateDate(new CandyDate(this.tdsValue), false);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'tds-calendar-mode-week',\n  templateUrl: './tds-calendar-mode-week.component.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TDSCalendarModeWeekComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>tds-calendar-mode-week works!</p>\n","import { ChangeDetectionStrategy, Component, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'tds-calendar-mode-month',\n  templateUrl: './tds-calendar-mode-month.component.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TDSCalendarModeMonthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>tds-calendar-mode-month works!</p>\n","import { ChangeDetectionStrategy, Component, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'tds-calendar-mode-year',\n  templateUrl: './tds-calendar-mode-year.component.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TDSCalendarModeYearComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>tds-calendar-mode-year works!</p>\n","\n\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { TDSButtonModule } from 'tds-ui/button';\nimport { LibPackerModule, TDSDatePickerModule } from 'tds-ui/date-picker';\nimport { TDSDropDownModule } from 'tds-ui/dropdown';\nimport { TDSI18nModule } from 'tds-ui/i18n';\nimport { TDSRadioModule } from 'tds-ui/radio';\nimport { TDSSelectModule } from 'tds-ui/select';\n\nimport {\n  TDSDateCellDirective,\n  TDSDateFullCellDirective,\n  TDSMonthCellDirective,\n  TDSMonthFullCellDirective\n} from './calendar-cells';\nimport { TDSCalendarHeaderComponent } from './calendar-header.component';\nimport { TDSCalendarComponent } from './calendar.component';\nimport { TDSCalendarDatepickerComponent } from './tds-calendar-datepicker.component';\nimport { TDSCalendarModeDayComponent } from './tds-calendar-mode-day.component';\nimport { TDSCalendarModeWeekComponent } from './tds-calendar-mode-week.component';\nimport { TDSCalendarModeMonthComponent } from './tds-calendar-mode-month.component';\nimport { TDSCalendarModeYearComponent } from './tds-calendar-mode-year.component';\nimport { TDSCalendarEventComponent } from './tds-calendar-event.component';\nimport { TDSCalendarCurrentTimeComponent } from './tds-calendar-current-time.component';\nimport { TDSOutletModule } from 'tds-ui/core/outlet';\n\n@NgModule({\n  declarations: [\n    TDSCalendarHeaderComponent,\n    TDSCalendarComponent,\n    TDSDateCellDirective,\n    TDSDateFullCellDirective,\n    TDSMonthCellDirective,\n    TDSMonthFullCellDirective,\n    TDSCalendarDatepickerComponent,\n    TDSCalendarModeDayComponent,\n    TDSCalendarModeWeekComponent,\n    TDSCalendarModeMonthComponent,\n    TDSCalendarModeYearComponent,\n    TDSCalendarEventComponent,\n    TDSCalendarCurrentTimeComponent\n  ],\n  exports: [\n    TDSCalendarComponent,\n    TDSDateCellDirective,\n    TDSDateFullCellDirective,\n    TDSMonthCellDirective,\n    TDSMonthFullCellDirective,\n    TDSCalendarDatepickerComponent,\n    TDSCalendarModeDayComponent,\n    TDSCalendarModeWeekComponent,\n    TDSCalendarModeMonthComponent,\n    TDSCalendarModeYearComponent,\n    TDSCalendarEventComponent,\n    TDSCalendarHeaderComponent,\n    TDSCalendarCurrentTimeComponent\n  ],\n  imports: [BidiModule,\n    CommonModule,\n    FormsModule,\n    TDSI18nModule,\n    TDSRadioModule,\n    TDSSelectModule,\n    LibPackerModule,\n    TDSDropDownModule,\n    TDSDatePickerModule,\n    TDSRadioModule,\n    TDSButtonModule,\n    TDSOutletModule\n  ]\n})\nexport class TDSCalendarModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["_c0","i1","DateCell","DateFullCell","MonthCell","MonthFullCell"],"mappings":"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"}