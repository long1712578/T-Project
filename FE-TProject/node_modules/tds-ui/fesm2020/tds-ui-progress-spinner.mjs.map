{"version":3,"file":"tds-ui-progress-spinner.mjs","sources":["../../../projects/tds-ui/progress-spinner/progress-spinner.component.ts","../../../projects/tds-ui/progress-spinner/spin.component.ts","../../../projects/tds-ui/progress-spinner/progress-spinner.module.ts","../../../projects/tds-ui/progress-spinner/tds-ui-progress-spinner.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component, ElementRef } from '@angular/core';\r\nimport {  CanColorCtor, mixinColor, TDSThemePalette } from 'tds-ui/shared/common';\r\n\r\nconst SPINNER_DEFAULT_COLOR = \"primary\";\r\n\r\n\r\n// Boilerplate for applying mixins to TButtonBase.\r\n/** @docs-private */\r\nclass TDSSpinnerBase {\r\n  constructor(public _elementRef: ElementRef) { }\r\n}\r\n\r\nconst _TDSSpinnerMixinBase: CanColorCtor &\r\n  typeof TDSSpinnerBase = mixinColor(TDSSpinnerBase, SPINNER_DEFAULT_COLOR);\r\n\r\n\r\n@Component({\r\n  selector: 'tds-spinner',\r\n  template: `\r\n  <svg class=\"animate-spin w-full h-full\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<path d=\"M8 0C9.58225 1.88681e-08 11.129 0.469192 12.4446 1.34824C13.7602 2.22729 14.7855 3.47672 15.391 4.93853C15.9965 6.40034 16.155 8.00887 15.8463 9.56072C15.5376 11.1126 14.7757 12.538 13.6569 13.6569C12.538 14.7757 11.1126 15.5376 9.56072 15.8463C8.00887 16.155 6.40034 15.9965 4.93853 15.391C3.47672 14.7855 2.22729 13.7602 1.34824 12.4446C0.469192 11.129 -3.77363e-08 9.58225 0 8L1.56233 8C1.56233 9.27325 1.93989 10.5179 2.64727 11.5766C3.35465 12.6352 4.36008 13.4604 5.53641 13.9476C6.71274 14.4349 8.00714 14.5624 9.25593 14.314C10.5047 14.0656 11.6518 13.4524 12.5521 12.5521C13.4524 11.6518 14.0656 10.5047 14.314 9.25593C14.5624 8.00714 14.4349 6.71274 13.9476 5.53641C13.4604 4.36008 12.6352 3.35465 11.5766 2.64727C10.5179 1.93989 9.27325 1.56233 8 1.56233L8 0Z\" fill=\"currentColor\"/>\r\n</svg>\r\n `,\r\n  inputs: [\"color\"],\r\n  host: {\r\n    'class': \"block relative overflow-hiden\",\r\n    '[class]':'cssColor'\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TDSProgressSpinnerComponent extends _TDSSpinnerMixinBase {\r\n  private _color: TDSThemePalette='primary';\r\n  get color() {\r\n    return this._color;\r\n  }\r\n  set color(value: TDSThemePalette) {\r\n    const colorPalette = value || this.defaultColor;\r\n\r\n    if (colorPalette !== this._color) {\r\n      // if (this._color) {\r\n      //   this._elementRef.nativeElement.classList.remove(this.getClassColor(this._color));\r\n      // }\r\n      // if (colorPalette) {\r\n      //   this._elementRef.nativeElement.classList.add(this.getClassColor(colorPalette));\r\n      // }\r\n      this.cssColor = this.getClassColor(colorPalette);\r\n      this._color = colorPalette;\r\n    }\r\n  }\r\n  cssColor:string = 'text-primary-1 dark:text-d-primary-1';\r\n  constructor(elementRef: ElementRef) {\r\n    super(elementRef)\r\n  }\r\n  \r\n  private getClassColor(color: TDSThemePalette): string {\r\n    let result = \"\";\r\n    switch (color) {\r\n      case 'primary':\r\n        result = 'text-primary-1 dark:text-d-primary-1'\r\n        break;\r\n      case 'secondary':\r\n        result = 'text-secondary-2 dark:text-d-secondary-2'\r\n        break;\r\n      case 'info':\r\n        result = 'text-info-500 dark:text-d-info-500'\r\n        break;\r\n      case 'warning':\r\n        result = 'text-warning-500 dark:text-d-warning-500'\r\n        break;\r\n      case 'error':\r\n        result = 'text-error-500 dark:text-d-error-500 '\r\n        break;\r\n      case 'black':\r\n        result = 'text-black-500'\r\n        break;\r\n      case 'white':\r\n        result = 'text-white'\r\n        break;\r\n      // case 'gray':\r\n      //   result = 'text-gray-500'\r\n      //   break;\r\n      case 'red':\r\n        result = 'text-base-red-500 dark:text-d-base-red-500 '\r\n        break;\r\n      case 'yellow':\r\n        result = 'text-base-yellow-500 dark:text-d-base-yellow-500'\r\n        break;\r\n      case 'green':\r\n        result = 'text-base-green-500 dark:text-d-base-green-500'\r\n        break;\r\n      case 'blue':\r\n        result = 'text-base-blue-500 dark:text-d-base-blue-500'\r\n        break;\r\n      case 'indigo':\r\n        result = 'text-base-indigo-500 dark:text-d-base-indigo-500'\r\n        break;\r\n      case 'purple':\r\n        result = 'text-base-purple-500 dark:text-d-base-purple-500'\r\n        break;\r\n      case 'pink':\r\n        result = 'text-base-pink-500 dark:text-d-base-pink-500'\r\n        break;\r\n      case 'amber':\r\n        result = 'text-base-amber-500 dark:text-d-base-amber-500'\r\n        break;\r\n      case 'sky':\r\n        result = 'text-base-sky-500 dark:text-d-base-sky-500'\r\n        break;\r\n      case 'lime':\r\n        result = 'text-base-lime-500 dark:text-d-base-lime-500'\r\n        break;\r\n      case 'teal':\r\n        result = 'text-base-teal-500 dark:text-d-base-teal-500'\r\n        break;\r\n      case 'orange':\r\n        result = 'text-base-orange-500 dark:text-d-base-orange-500'\r\n        break;\r\n      default:\r\n        result = \"text-primary-1 dark:text-d-primary-1\";\r\n        break;\r\n    }\r\n    return result;\r\n  }\r\n\r\n\r\n}\r\n","\r\n\r\nimport { Direction, Directionality } from '@angular/cdk/bidi';\r\nimport { BooleanInput, NumberInput } from '@angular/cdk/coercion';\r\nimport {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { BehaviorSubject, ReplaySubject, Subject, timer } from 'rxjs';\r\nimport { debounce, distinctUntilChanged, startWith, switchMap, takeUntil } from 'rxjs/operators';\r\nimport { TDSThemePalette } from 'tds-ui/shared/common';\r\nimport { InputBoolean, InputNumber, TDSSafeAny } from 'tds-ui/shared/utility';\r\nimport { ButtonSize, TDSConfigKey, TDSConfigService, WithConfig } from 'tds-ui/core/config';\r\nconst TDS_CONFIG_MODULE_NAME: TDSConfigKey = 'spin';\r\n\r\n@Component({\r\n  selector: 'tds-spin',\r\n  exportAs: 'tdsSpin',\r\n  preserveWhitespaces: false,\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: `\r\n    <ng-template #defaultTemplate>\r\n      <tds-spinner [color]=\"color\" class=\"w-8 h-8\"></tds-spinner>      \r\n    </ng-template>\r\n    <div *ngIf=\"isLoading\">\r\n      <div\r\n        class=\"tds-spin absolute top-0 left-0 z-10  w-full h-full box-border m-0 p-0 text-center flex flex-col items-center justify-center\"\r\n        [class.tds-spin-rtl]=\"dir === 'rtl'\"\r\n        [class.tds-spin-spinning]=\"isLoading\"\r\n        [class.opacity-100]=\"isLoading\"\r\n        [class.tds-spin-xl]=\"size === 'xl'\"\r\n        [class.tds-spin-sm]=\"size === 'sm'\"\r\n        [class.tds-spin-show-text]=\"tip\"\r\n      >\r\n        <ng-template [ngTemplateOutlet]=\"indicator || defaultTemplate\"></ng-template>\r\n        <div class=\"tds-spin-text mt-2 text-caption-2 font-regular text-neutral-1-700\" *ngIf=\"tip\">{{ tip }}</div>\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"!simple\" class=\"tds-spin-container flex flex-col h-full w-full\"\r\n     [class.tds-spin-blur]=\"isLoading\"\r\n     [ngClass]=\"{'select-none opacity-50 overflow-hidden pointer-events-none clear-both':isLoading}\"\r\n     >\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `,\r\n  host: {\r\n    '[class.relative]': '!simple',\r\n    '[class.block]':\"isLoading\"\r\n  }\r\n})\r\nexport class TDSSpinComponent implements OnChanges, OnDestroy, OnInit {\r\n  readonly _tdsModuleName: TDSConfigKey = TDS_CONFIG_MODULE_NAME;\r\n\r\n  static ngAcceptInputType_delay: NumberInput;\r\n  static ngAcceptInputType_simple: BooleanInput;\r\n  static ngAcceptInputType_spinning: BooleanInput;\r\n  @Input() @WithConfig() indicator: TemplateRef<TDSSafeAny> | null = null;\r\n  @Input() size: ButtonSize = 'md';\r\n  @Input() tip: string | null = null;\r\n  @Input() @InputNumber() delay = 0;\r\n  @Input() @InputBoolean() simple = false;\r\n  @Input() @InputBoolean() spinning = true;\r\n  @Input() color: TDSThemePalette = 'primary';\r\n  private destroy$ = new Subject<void>();\r\n  private spinning$ = new BehaviorSubject(this.spinning);\r\n  private delay$ = new ReplaySubject<number>(1);\r\n  isLoading = false;\r\n  dir: Direction = 'ltr';\r\n\r\n  constructor(\r\n    public tdsConfigService: TDSConfigService,\r\n    private cdr: ChangeDetectorRef,\r\n    @Optional() private directionality: Directionality\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    const loading$ = this.delay$.pipe(\r\n      startWith(this.delay),\r\n      distinctUntilChanged(),\r\n      switchMap(delay => {\r\n        if (delay === 0) {\r\n          return this.spinning$;\r\n        }\r\n\r\n        return this.spinning$.pipe(debounce(spinning => timer(spinning ? delay : 0)));\r\n      }),\r\n      takeUntil(this.destroy$)\r\n    );\r\n    loading$.subscribe(loading => {\r\n      this.isLoading = loading;\r\n      this.cdr.markForCheck();\r\n    });\r\n    this.tdsConfigService\r\n      .getConfigChangeEventForComponent(TDS_CONFIG_MODULE_NAME)\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(() => this.cdr.markForCheck());\r\n\r\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\r\n      this.dir = direction;\r\n      this.cdr.detectChanges();\r\n    });\r\n\r\n    this.dir = this.directionality.value;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const { spinning, delay } = changes;\r\n    if (spinning) {\r\n      this.spinning$.next(this.spinning);\r\n    }\r\n    if (delay) {\r\n      this.delay$.next(this.delay);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TDSProgressSpinnerComponent } from './progress-spinner.component';\r\nimport { TDSSpinComponent } from './spin.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TDSProgressSpinnerComponent,\r\n    TDSSpinComponent\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports:[\r\n    TDSProgressSpinnerComponent,\r\n    TDSSpinComponent\r\n  ]\r\n})\r\nexport class TDSSpinnerModule { }\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}