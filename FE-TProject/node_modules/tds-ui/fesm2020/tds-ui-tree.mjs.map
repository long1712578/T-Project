{"version":3,"file":"tds-ui-tree.mjs","sources":["../../../projects/tds-ui/tree/tree-drop-indicator.component.ts","../../../projects/tds-ui/tree/tree-indent.component.ts","../../../projects/tds-ui/tree/tree-node-checkbox.component.html","../../../projects/tds-ui/tree/tree-node-checkbox.component.ts","../../../projects/tds-ui/tree/tree-node-switcher.component.html","../../../projects/tds-ui/tree/tree-node-switcher.component.ts","../../../projects/tds-ui/tree/tree-node-title.component.ts","../../../projects/tds-ui/tree/tree-node.component.ts","../../../projects/tds-ui/tree/tree.service.ts","../../../projects/tds-ui/tree/tree.component.html","../../../projects/tds-ui/tree/tree.component.ts","../../../projects/tds-ui/tree/tree.module.ts","../../../projects/tds-ui/tree/tds-ui-tree.ts"],"sourcesContent":["\r\n\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { NgStyleInterface } from 'tds-ui/core/config';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'tds-tree-drop-indicator',\r\n  exportAs: 'TDSTreeDropIndicator',\r\n  template: ``,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false,\r\n  host: {\r\n    '[class.tds-tree-drop-indicator]': 'true',\r\n    '[style]': 'style'\r\n  }\r\n})\r\nexport class TDSTreeDropIndicatorComponent implements OnChanges {\r\n  @Input() dropPosition?: number;\r\n  @Input() level: number = 1;\r\n  @Input() direction: string = 'ltr';\r\n  style: NgStyleInterface = {};\r\n\r\n  constructor(private cdr: ChangeDetectorRef) {}\r\n\r\n  ngOnChanges(_changes: SimpleChanges): void {\r\n    this.renderIndicator(this.dropPosition!, this.direction);\r\n  }\r\n\r\n  renderIndicator(dropPosition: number, direction: string = 'ltr'): void {\r\n    const offset = 4;\r\n    const startPosition = direction === 'ltr' ? 'left' : 'right';\r\n    const endPosition = direction === 'ltr' ? 'right' : 'left';\r\n    const style: NgStyleInterface = {\r\n      [startPosition]: `${offset}px`,\r\n      [endPosition]: '0px'\r\n    };\r\n    switch (dropPosition) {\r\n      case -1:\r\n        style.top = `${-3}px`;\r\n        break;\r\n      case 1:\r\n        style.bottom = `${-3}px`;\r\n        break;\r\n      case 0:\r\n        // dropPosition === 0\r\n        style.bottom = `${-3}px`;\r\n        style[startPosition] = `${offset + 24}px`;\r\n        break;\r\n      default:\r\n        style.display = 'none';\r\n        break;\r\n    }\r\n    this.style = style;\r\n    this.cdr.markForCheck();\r\n  }\r\n}\r\n","\r\n\r\nimport { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'tds-tree-indent',\r\n  exportAs: 'tdsTreeIndent',\r\n  template: `\r\n    <span      \r\n      [class.tds-tree-indent-unit]=\"!selectMode\"\r\n      [class.tds-select-tree-indent-unit]=\"selectMode\"\r\n      [class.tds-select-tree-indent-unit-start]=\"selectMode && isStart[i]\"\r\n      [class.tds-tree-indent-unit-start]=\"!selectMode && isStart[i]\"\r\n      [class.tds-select-tree-indent-unit-end]=\"selectMode && isEnd[i]\"\r\n      [class.tds-tree-indent-unit-end]=\"!selectMode && isEnd[i]\"\r\n      [ngClass] =\"{'inline-block w-7':!selectMode}\"\r\n      class=\"relative \"\r\n      *ngFor=\"let _ of listOfUnit; let i = index\"\r\n    >    \r\n      <span class=\"absolute inset-0  -inset-y-1.5 border-l border-neutral-2-200\" style=\"left:10px\" *ngIf=\"!(!selectMode && isEnd[i])\">\r\n        &nbsp;        \r\n      </span>\r\n    </span>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false,\r\n  host: {\r\n    '[attr.aria-hidden]': 'true',\r\n    '[class.tds-tree-indent]': '!selectMode',\r\n    '[class.tds-select-tree-indent]': 'selectMode',\r\n    'class': \"items-stretch whitespace-nowrap select-none flex\"\r\n  }\r\n})\r\nexport class TDSTreeIndentComponent implements OnChanges {\r\n  @Input() treeLevel = 0;\r\n  @Input() isStart: boolean[] = [];\r\n  @Input() isEnd: boolean[] = [];\r\n  @Input() selectMode = false;\r\n\r\n  listOfUnit: number[] = [];\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const { treeLevel } = changes;\r\n    if (treeLevel) {\r\n      this.listOfUnit = [...new Array(treeLevel.currentValue || 0)];\r\n    }\r\n  }\r\n}\r\n","<!-- uncheck -->\r\n<label *ngIf=\"!checked && !indeterminate\" class=\"flex items-center mr-3\" [ngClass]=\"{'opacity-65 cursor-not-allowed':disabled,'group cursor-pointer ':!disabled}\">\r\n    <span\r\n        class=\"p-0.5 border rounded relative flex items-center justify-center box-content group-hover:ring group-hover:border-primary-1 group-hover:ring-opacity-20 group-hover:ring-primary-1 bg-white\">\r\n        <span class=\"h-3 w-3\">\r\n        </span>\r\n    </span>\r\n\r\n</label>\r\n<!-- check -->\r\n<label *ngIf=\"checked\" class=\"flex items-center mr-3\" [ngClass]=\"{'opacity-65 cursor-not-allowed':disabled,'group cursor-pointer ':!disabled}\">\r\n    <span\r\n        class=\"p-0.5 border rounded relative flex items-center justify-center box-content group-hover:ring group-hover:border-primary-1 group-hover:ring-opacity-20 group-hover:ring-primary-1 bg-primary-1 border-primary-1\">\r\n        <span class=\"h-3 w-3\">\r\n            <svg viewBox=\"0 0 12 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\">\r\n                <path\r\n                    d=\"M10.7307 0.90316C10.5348 0.707751 10.2694 0.598045 9.99275 0.598045C9.71605 0.598045 9.45061 0.707751 9.25471 0.90316L4.75471 5.40316L2.78572 3.4352C2.68953 3.33465 2.57426 3.25427 2.44661 3.19888C2.31895 3.14348 2.18152 3.11414 2.04237 3.11257C1.90323 3.111 1.76517 3.13728 1.6363 3.18978C1.50744 3.24229 1.39031 3.31999 1.29188 3.41836C1.19345 3.51672 1.11565 3.63376 1.06306 3.7626C1.01047 3.89143 0.984135 4.02946 0.985609 4.1686C0.987082 4.30775 1.01636 4.44521 1.07167 4.5729C1.12698 4.70059 1.20726 4.81594 1.30775 4.91219L4.01674 7.6202C4.21298 7.81573 4.47872 7.9255 4.75575 7.9255C5.03278 7.9255 5.29846 7.81573 5.4947 7.6202L10.7367 2.38021C10.8346 2.28323 10.9123 2.1678 10.9653 2.04061C11.0184 1.91343 11.0457 1.77698 11.0457 1.63918C11.0457 1.50138 11.0184 1.36494 10.9653 1.23775C10.9123 1.11057 10.8346 0.995193 10.7367 0.898216L10.7307 0.90316Z\"\r\n                    fill=\"#FFFFFF\"></path>\r\n            </svg>\r\n        </span>\r\n    </span>\r\n</label>\r\n\r\n\r\n<!-- indeterminate -->\r\n\r\n<label *ngIf=\"indeterminate\" class=\"flex items-center mr-3\" [ngClass]=\"{'opacity-65 cursor-not-allowed':disabled,'group cursor-pointer':!disabled}\">\r\n    <span\r\n        class=\"p-0.5 border rounded relative flex items-center justify-center box-content group-hover:ring group-hover:border-primary-1 group-hover:ring-opacity-20 group-hover:ring-primary-1 bg-primary-1 border-primary-1\">\r\n        <span class=\"h-3 w-3\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 12 4\" fill=\"none\" width=\"12\" height=\"12\">\r\n                <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\r\n                    d=\"M0.600006 2C0.600006 1.33726 1.13726 0.800003 1.80001 0.800003L10.2 0.800003C10.8627 0.800003 11.4 1.33726 11.4 2C11.4 2.66274 10.8627 3.2 10.2 3.2L1.80001 3.2C1.13726 3.2 0.600006 2.66274 0.600006 2Z\"\r\n                    fill=\"#FFFFFF\">\r\n                </path>\r\n            </svg>\r\n        </span>\r\n    </span>\r\n</label>","\r\n\r\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'tds-tree-node-checkbox[builtin]',\r\n  templateUrl: './tree-node-checkbox.component.html',\r\n  // template: `\r\n  //   <span [class.tds-tree-checkbox-inner]=\"!selectMode\" [class.tds-select-tree-checkbox-inner]=\"selectMode\"></span>\r\n  // `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false,\r\n  host: {\r\n    '[class.tds-select-tree-checkbox]': `selectMode`,\r\n    '[class.tds-select-tree-checkbox-checked]': `selectMode && isChecked`,\r\n    '[class.tds-select-tree-checkbox-indeterminate]': `selectMode && isHalfChecked`,\r\n    '[class.tds-select-tree-checkbox-disabled]': `selectMode && (isDisabled || isDisableCheckbox)`,\r\n    '[class.tds-tree-checkbox]': `!selectMode`,\r\n    '[class.tds-tree-checkbox-checked]': `!selectMode && isChecked`,\r\n    '[class.tds-tree-checkbox-indeterminate]': `!selectMode && isHalfChecked`,\r\n    '[class.tds-tree-checkbox-disabled]': `!selectMode && (isDisabled || isDisableCheckbox)`,\r\n    class:\"flex items-center\"\r\n  }\r\n})\r\nexport class TDSTreeNodeBuiltinCheckboxComponent {\r\n  @Input() selectMode = false;\r\n  @Input() isChecked?: boolean;\r\n  @Input() isHalfChecked?: boolean;\r\n  @Input() isDisabled?: boolean;\r\n  @Input() isDisableCheckbox?: boolean;\r\n  get checked() {\r\n    return !this.selectMode && this.isChecked\r\n  }\r\n  get indeterminate() {\r\n    \r\n    return !this.selectMode && this.isHalfChecked\r\n  }\r\n  get disabled() {\r\n    return !this.selectMode && (this.isDisabled || this.isDisableCheckbox)\r\n  }\r\n}\r\n","<ng-container *ngIf=\"isShowSwitchIcon\">\r\n    <ng-container *ngIf=\"!isLoading; else loadingTemplate\">\r\n      <ng-container *tdsStringTemplateOutlet=\"expandedIcon; context: { $implicit: context, origin: context.origin }\">\r\n        <!-- <i\r\n          nz-icon\r\n          nzType=\"caret-down\"\r\n          [class.tds-select-tree-switcher-icon]=\"selectMode\"\r\n          [class.tds-tree-switcher-icon]=\"!selectMode\"\r\n        ></i> -->\r\n        <span class=\"text-neutral-1-900 text-xl leading-none mr-2 cursor-pointer\" [ngClass]=\"{'tdsi-arrow-down-fill':!selectMode && isSwitcherOpen,'tdsi-arrow-right-fill':!(!selectMode && isSwitcherOpen)}\"></span>\r\n      </ng-container>\r\n    </ng-container>\r\n  </ng-container>\r\n  <ng-container *ngIf=\"showLine\">\r\n    <ng-container *ngIf=\"!isLoading; else loadingTemplate\">\r\n      <ng-container *tdsStringTemplateOutlet=\"expandedIcon; context: { $implicit: context, origin: context.origin }\">\r\n        <!-- <i\r\n          *ngIf=\"isShowLineIcon\"\r\n          nz-icon\r\n          [nzType]=\"isSwitcherOpen ? 'minus-square' : 'plus-square'\"\r\n          class=\"tds-tree-switcher-line-icon\"\r\n        ></i>\r\n        <i *ngIf=\"!isShowLineIcon\" nz-icon nzType=\"file\" class=\"tds-tree-switcher-line-icon\"></i> -->\r\n      </ng-container>\r\n    </ng-container>\r\n  </ng-container>\r\n  <ng-template #loadingTemplate>\r\n    <tds-spinner class=\"mr-2 w-4 h-4\">                          \r\n    </tds-spinner>\r\n    \r\n  </ng-template>","\r\n\r\nimport { ChangeDetectionStrategy, Component, Input, TemplateRef } from '@angular/core';\r\nimport { TDSTreeNode, TDSTreeNodeOptions } from 'tds-ui/core/tree';\r\n\r\n\r\n@Component({\r\n  selector: 'tds-tree-node-switcher',\r\n  templateUrl: './tree-node-switcher.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false,\r\n  host: {\r\n    '[class.tds-select-tree-switcher]': 'selectMode',\r\n    '[class.tds-select-tree-switcher-noop]': 'selectMode && isLeaf',\r\n    '[class.tds-select-tree-switcher_open]': 'selectMode && isSwitcherOpen',\r\n    '[class.tds-select-tree-switcher_close]': 'selectMode && isSwitcherClose',\r\n    '[class.tds-tree-switcher]': '!selectMode',\r\n    '[class.tds-tree-switcher-noop]': '!selectMode && isLeaf',\r\n    '[class.tds-tree-switcher_open]': '!selectMode && isSwitcherOpen',\r\n    '[class.tds-tree-switcher_close]': '!selectMode && isSwitcherClose',\r\n    'class':'flex items-center'\r\n\r\n  }\r\n})\r\nexport class TDSTreeNodeSwitcherComponent {\r\n  @Input() showExpand?: boolean;\r\n  @Input() showLine?: boolean;\r\n  @Input() expandedIcon?: TemplateRef<{ $implicit: TDSTreeNode; origin: TDSTreeNodeOptions }>;\r\n  @Input() selectMode = false;\r\n  @Input() context!: TDSTreeNode;\r\n  @Input() isLeaf?: boolean;\r\n  @Input() isLoading?: boolean;\r\n  @Input() isExpanded?: boolean;\r\n\r\n  get isShowLineIcon(): boolean {\r\n    return !this.isLeaf && !!this.showLine;\r\n  }\r\n\r\n  get isShowSwitchIcon(): boolean {\r\n    return !this.isLeaf && !this.showLine;\r\n  }\r\n\r\n  get isSwitcherOpen(): boolean {\r\n    return !!this.isExpanded && !this.isLeaf;\r\n  }\r\n\r\n  get isSwitcherClose(): boolean {\r\n    return !this.isExpanded && !this.isLeaf;\r\n  }\r\n}\r\n","\r\n\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Input,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { TDSTreeNode, TDSTreeNodeOptions } from 'tds-ui/core/tree';\r\n\r\n\r\n@Component({\r\n  selector: 'tds-tree-node-title',\r\n  template: `\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"treeTemplate\"\r\n      [ngTemplateOutletContext]=\"{ $implicit: context, origin: context.origin }\"\r\n    ></ng-template>\r\n    <ng-container *ngIf=\"!treeTemplate\">\r\n      <span\r\n        *ngIf=\"icon && showIcon\"\r\n        [class.tds-tree-icon__open]=\"isSwitcherOpen\"\r\n        [class.tds-tree-icon__close]=\"isSwitcherClose\"\r\n        [class.tds-tree-icon_loading]=\"isLoading\"\r\n        [class.tds-select-tree-iconEle]=\"selectMode\"\r\n        [class.tds-tree-iconEle]=\"!selectMode\"\r\n      >\r\n        <span\r\n          [class.tds-select-tree-iconEle]=\"selectMode\"\r\n          [class.tds-select-tree-icon__customize]=\"selectMode\"\r\n          [class.tds-tree-iconEle]=\"!selectMode\"\r\n          [class.tds-tree-icon__customize]=\"!selectMode\"\r\n        >\r\n          <i  *ngIf=\"icon\" [ngClass]=\"icon\" class=\"text-neutral-1-900 text-xl leading-none mr-2\"></i>\r\n        </span>\r\n      </span>\r\n      <span class=\"tds-tree-title text-body-2 font-regular text-neutral-1-900\" [innerHTML]=\"title | tdsHighlight: matchedValue:'i':'font-semibold'\"></span>\r\n      <tds-tree-drop-indicator\r\n        *ngIf=\"showIndicator\"\r\n        [dropPosition]=\"dragPosition\"\r\n        [level]=\"context.level\"\r\n      ></tds-tree-drop-indicator>\r\n    </ng-container>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false,\r\n  host: {\r\n    '[attr.title]': 'title',\r\n    '[attr.draggable]': 'canDraggable',\r\n    '[attr.aria-grabbed]': 'canDraggable',\r\n    '[class.draggable]': 'canDraggable',\r\n    '[class.tds-select-tree-node-content-wrapper]': `selectMode`,\r\n    '[class.tds-select-tree-node-content-wrapper-open]': `selectMode && isSwitcherOpen`,\r\n    '[class.tds-select-tree-node-content-wrapper-close]': `selectMode && isSwitcherClose`,\r\n    '[class.tds-select-tree-node-selected]': `selectMode && isSelected`,\r\n    '[class.tds-tree-node-content-wrapper]': `!selectMode`,\r\n    '[class.tds-tree-node-content-wrapper-open]': `!selectMode && isSwitcherOpen`,\r\n    '[class.tds-tree-node-content-wrapper-close]': `!selectMode && isSwitcherClose`,\r\n    '[class.tds-tree-node-selected]': `!selectMode && isSelected`,\r\n    'class':\"flex items-center\"\r\n  }\r\n})\r\nexport class TDSTreeNodeTitleComponent implements OnChanges {\r\n  @Input() searchValue!: string;\r\n  @Input() treeTemplate: TemplateRef<{ $implicit: TDSTreeNode; origin: TDSTreeNodeOptions }> | null = null;\r\n  @Input() draggable!: boolean;\r\n  @Input() showIcon!: boolean;\r\n  @Input() selectMode = false;\r\n  @Input() context!: TDSTreeNode;\r\n  @Input() icon!: string;\r\n  @Input() title!: string;\r\n  @Input() isLoading!: boolean;\r\n  @Input() isSelected!: boolean;\r\n  @Input() isDisabled!: boolean;\r\n  @Input() isMatched!: boolean;\r\n  @Input() isExpanded!: boolean;\r\n  @Input() isLeaf!: boolean;\r\n  // Drag indicator\r\n  @Input() showIndicator = true;\r\n  @Input() dragPosition?: number;\r\n\r\n  get canDraggable(): boolean | null {\r\n    return this.draggable && !this.isDisabled ? true : null;\r\n  }\r\n\r\n  get matchedValue(): string {\r\n    return this.isMatched ? this.searchValue : '';\r\n  }\r\n\r\n  get isSwitcherOpen(): boolean {\r\n    return this.isExpanded && !this.isLeaf;\r\n  }\r\n\r\n  get isSwitcherClose(): boolean {\r\n    return !this.isExpanded && !this.isLeaf;\r\n  }\r\n\r\n  constructor(private cdr: ChangeDetectorRef) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const { showIndicator, dragPosition } = changes;\r\n    if (showIndicator || dragPosition) {\r\n      this.cdr.markForCheck();\r\n    }\r\n  }\r\n}\r\n","\r\n\r\nimport { BooleanInput } from '@angular/cdk/coercion';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Host,\r\n  Input,\r\n  NgZone,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  Output,\r\n  Renderer2,\r\n  SimpleChange,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { fromEvent, Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { TDSNoAnimationDirective } from 'tds-ui/core/no-animation';\r\nimport { TDSFormatBeforeDropEvent, TDSFormatEmitEvent, TDSTreeBaseService, TDSTreeNode, TDSTreeNodeOptions } from 'tds-ui/core/tree';\r\nimport { InputBoolean } from 'tds-ui/shared/utility';\r\n\r\n\r\n@Component({\r\n  selector: 'tds-tree-node[builtin]',\r\n  exportAs: 'tdsTreeBuiltinNode',\r\n  template: `\r\n    <tds-tree-indent\r\n      [treeLevel]=\"treeNode.level\"\r\n      [selectMode]=\"selectMode\"\r\n      [isStart]=\"isStart\"\r\n      [isEnd]=\"isEnd\"\r\n    ></tds-tree-indent>\r\n    <tds-tree-node-switcher\r\n      *ngIf=\"showExpand\"\r\n      [showExpand]=\"showExpand\"\r\n      [showLine]=\"showLine\"\r\n      [expandedIcon]=\"expandedIcon\"\r\n      [selectMode]=\"selectMode\"\r\n      [context]=\"treeNode\"\r\n      [isLeaf]=\"isLeaf\"\r\n      [isExpanded]=\"isExpanded\"\r\n      [isLoading]=\"isLoading\"\r\n      (click)=\"clickExpand($event)\"\r\n    ></tds-tree-node-switcher>\r\n    <tds-tree-node-checkbox\r\n      builtin\r\n      *ngIf=\"checkable\"\r\n      (click)=\"clickCheckBox($event)\"\r\n      [selectMode]=\"selectMode\"\r\n      [isChecked]=\"isChecked\"\r\n      [isHalfChecked]=\"isHalfChecked\"\r\n      [isDisabled]=\"isDisabled\"\r\n      [isDisableCheckbox]=\"isDisableCheckbox\"\r\n    ></tds-tree-node-checkbox>\r\n    <tds-tree-node-title\r\n      [icon]=\"icon\"\r\n      [title]=\"title\"\r\n      [isLoading]=\"isLoading\"\r\n      [isSelected]=\"isSelected\"\r\n      [isDisabled]=\"isDisabled\"\r\n      [isMatched]=\"isMatched\"\r\n      [isExpanded]=\"isExpanded\"\r\n      [isLeaf]=\"isLeaf\"\r\n      [searchValue]=\"searchValue\"\r\n      [treeTemplate]=\"treeTemplate\"\r\n      [draggable]=\"draggable\"\r\n      [showIcon]=\"showIcon\"\r\n      [selectMode]=\"selectMode\"\r\n      [context]=\"treeNode\"\r\n      [showIndicator]=\"showIndicator\"\r\n      [dragPosition]=\"dragPos\"\r\n      (dblclick)=\"dblClick($event)\"\r\n      (click)=\"clickSelect($event)\"\r\n      (contextmenu)=\"contextMenu($event)\"\r\n    ></tds-tree-node-title>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false,\r\n  host: {\r\n    '[class.tds-select-tree-treenode]': `selectMode`,\r\n    '[class.tds-select-tree-treenode-disabled]': `selectMode && isDisabled`,\r\n    '[class.tds-select-tree-treenode-switcher-open]': `selectMode && isSwitcherOpen`,\r\n    '[class.tds-select-tree-treenode-switcher-close]': `selectMode && isSwitcherClose`,\r\n    '[class.tds-select-tree-treenode-checkbox-checked]': `selectMode && isChecked`,\r\n    '[class.tds-select-tree-treenode-checkbox-indeterminate]': `selectMode && isHalfChecked`,\r\n    '[class.tds-select-tree-treenode-selected]': `selectMode && isSelected`,\r\n    '[class.tds-select-tree-treenode-loading]': `selectMode && isLoading`,\r\n    '[class.tds-tree-treenode]': `!selectMode`,\r\n    '[class.tds-tree-treenode-disabled]': `!selectMode && isDisabled`,\r\n    '[class.tds-tree-treenode-switcher-open]': `!selectMode && isSwitcherOpen`,\r\n    '[class.tds-tree-treenode-switcher-close]': `!selectMode && isSwitcherClose`,\r\n    '[class.tds-tree-treenode-checkbox-checked]': `!selectMode && isChecked`,\r\n    '[class.tds-tree-treenode-checkbox-indeterminate]': `!selectMode && isHalfChecked`,\r\n    '[class.tds-tree-treenode-selected]': `!selectMode && isSelected`,\r\n    '[class.tds-tree-treenode-loading]': `!selectMode && isLoading`,\r\n    '[style.display]': 'displayStyle',\r\n    '(mousedown)': 'onMousedown($event)',\r\n    'class':'flex items-stretch py-1.5 hover:bg-neutral-3-50',\r\n    '[class.opacity-65]': `!selectMode && isDisabled`,\r\n  }\r\n})\r\nexport class TDSTreeNodeBuiltinComponent implements OnInit, OnChanges, OnDestroy {\r\n  static ngAcceptInputType_showLine: BooleanInput;\r\n  static ngAcceptInputType_showExpand: BooleanInput;\r\n  static ngAcceptInputType_checkable: BooleanInput;\r\n  static ngAcceptInputType_asyncData: BooleanInput;\r\n  static ngAcceptInputType_hideUnMatched: BooleanInput;\r\n  static ngAcceptInputType_noAnimation: BooleanInput;\r\n  static ngAcceptInputType_selectMode: BooleanInput;\r\n  static ngAcceptInputType_showIcon: BooleanInput;\r\n\r\n  /**\r\n   * for global property\r\n   */\r\n  @Input() icon: string = '';\r\n  @Input() title: string = '';\r\n  @Input() isLoading: boolean = false;\r\n  @Input() isSelected: boolean = false;\r\n  @Input() isDisabled: boolean = false;\r\n  @Input() isMatched: boolean = false;\r\n  @Input() isExpanded!: boolean;\r\n  @Input() isLeaf!: boolean;\r\n  @Input() isChecked?: boolean;\r\n  @Input() isHalfChecked?: boolean;\r\n  @Input() isDisableCheckbox?: boolean;\r\n  @Input() isSelectable?: boolean;\r\n  @Input() canHide?: boolean;\r\n  @Input() isStart: boolean[] = [];\r\n  @Input() isEnd: boolean[] = [];\r\n  @Input() treeNode!: TDSTreeNode;\r\n  @Input() @InputBoolean() showLine?: boolean;\r\n  @Input() @InputBoolean() showExpand?: boolean;\r\n  @Input() @InputBoolean() checkable?: boolean;\r\n  @Input() @InputBoolean() asyncData?: boolean;\r\n  @Input() @InputBoolean() hideUnMatched = false;\r\n  @Input() @InputBoolean() noAnimation = false;\r\n  @Input() @InputBoolean() selectMode = false;\r\n  @Input() @InputBoolean() showIcon = false;\r\n  @Input() expandedIcon?: TemplateRef<{ $implicit: TDSTreeNode; origin: TDSTreeNodeOptions }>;\r\n  @Input() treeTemplate: TemplateRef<{ $implicit: TDSTreeNode; origin: TDSTreeNodeOptions }> | null = null;\r\n  @Input() beforeDrop?: (confirm: TDSFormatBeforeDropEvent) => Observable<boolean>;\r\n  @Input() searchValue = '';\r\n  @Input() draggable: boolean = false;\r\n  @Output() readonly onClick = new EventEmitter<TDSFormatEmitEvent>();\r\n  @Output() readonly onDblClick = new EventEmitter<TDSFormatEmitEvent>();\r\n  @Output() readonly onContextMenu = new EventEmitter<TDSFormatEmitEvent>();\r\n  @Output() readonly onCheckBoxChange = new EventEmitter<TDSFormatEmitEvent>();\r\n  @Output() readonly onExpandChange = new EventEmitter<TDSFormatEmitEvent>();\r\n  @Output() readonly onDragStart = new EventEmitter<TDSFormatEmitEvent>();\r\n  @Output() readonly onDragEnter = new EventEmitter<TDSFormatEmitEvent>();\r\n  @Output() readonly onDragOver = new EventEmitter<TDSFormatEmitEvent>();\r\n  @Output() readonly onDragLeave = new EventEmitter<TDSFormatEmitEvent>();\r\n  @Output() readonly onDrop = new EventEmitter<TDSFormatEmitEvent>();\r\n  @Output() readonly tdsOnDragEnd = new EventEmitter<TDSFormatEmitEvent>();\r\n\r\n  /**\r\n   * drag var\r\n   */\r\n  destroy$ = new Subject<void>();\r\n  dragPos = 2;\r\n  dragPosClass: { [key: string]: string } = {\r\n    0: 'drag-over',\r\n    1: 'drag-over-gap-bottom',\r\n    '-1': 'drag-over-gap-top'\r\n  };\r\n  showIndicator = false;\r\n  /**\r\n   * default set\r\n   */\r\n  get displayStyle(): string {\r\n    // to hide unmatched nodes\r\n    return this.searchValue && this.hideUnMatched && !this.isMatched && !this.isExpanded && this.canHide\r\n      ? 'none'\r\n      : '';\r\n  }\r\n\r\n  get isSwitcherOpen(): boolean {\r\n    return this.isExpanded && !this.isLeaf;\r\n  }\r\n\r\n  get isSwitcherClose(): boolean {\r\n    return !this.isExpanded && !this.isLeaf;\r\n  }\r\n\r\n  onMousedown(event: MouseEvent): void {\r\n    if (this.selectMode) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * collapse node\r\n   *\r\n   * @param event\r\n   */\r\n  clickExpand(event: MouseEvent): void {\r\n    event.preventDefault();\r\n    if (!this.isLoading && !this.isLeaf) {\r\n      // set async state\r\n      if (this.asyncData && this.treeNode.children.length === 0 && !this.isExpanded) {\r\n        this.treeNode.isLoading = true;\r\n      }\r\n      this.treeNode.setExpanded(!this.isExpanded);\r\n    }\r\n    this.tdsTreeService.setExpandedNodeList(this.treeNode);\r\n    const eventNext = this.tdsTreeService.formatEvent('expand', this.treeNode, event);\r\n    this.onExpandChange.emit(eventNext);\r\n  }\r\n\r\n  clickSelect(event: MouseEvent): void {\r\n    event.preventDefault();\r\n    if (this.isSelectable && !this.isDisabled) {\r\n      this.treeNode.isSelected = !this.treeNode.isSelected;\r\n    }\r\n    this.tdsTreeService.setSelectedNodeList(this.treeNode);\r\n    const eventNext = this.tdsTreeService.formatEvent('click', this.treeNode, event);\r\n    this.onClick.emit(eventNext);\r\n  }\r\n\r\n  dblClick(event: MouseEvent): void {\r\n    event.preventDefault();\r\n    const eventNext = this.tdsTreeService.formatEvent('dblclick', this.treeNode, event);\r\n    this.onDblClick.emit(eventNext);\r\n  }\r\n\r\n  contextMenu(event: MouseEvent): void {\r\n    event.preventDefault();\r\n    const eventNext = this.tdsTreeService.formatEvent('contextmenu', this.treeNode, event);\r\n    this.onContextMenu.emit(eventNext);\r\n  }\r\n\r\n  /**\r\n   * check node\r\n   *\r\n   * @param event\r\n   */\r\n  clickCheckBox(event: MouseEvent): void {\r\n    event.preventDefault();\r\n    // return if node is disabled\r\n    if (this.isDisabled || this.isDisableCheckbox) {\r\n      return;\r\n    }\r\n    this.treeNode.isChecked = !this.treeNode.isChecked;\r\n    this.treeNode.isHalfChecked = false;\r\n    this.tdsTreeService.setCheckedNodeList(this.treeNode);\r\n    const eventNext = this.tdsTreeService.formatEvent('check', this.treeNode, event);\r\n    this.onCheckBoxChange.emit(eventNext);\r\n  }\r\n\r\n  clearDragClass(): void {\r\n    const dragClass = ['drag-over-gap-top', 'drag-over-gap-bottom', 'drag-over', 'drop-target'];\r\n    dragClass.forEach(e => {\r\n      this.renderer.removeClass(this.elementRef.nativeElement, e);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * drag event\r\n   *\r\n   * @param e\r\n   */\r\n  handleDragStart(e: DragEvent): void {\r\n    try {\r\n      // ie throw error\r\n      // firefox-need-it\r\n      e.dataTransfer!.setData('text/plain', this.treeNode.key!);\r\n    } catch (error) {\r\n      // empty\r\n    }\r\n    this.tdsTreeService.setSelectedNode(this.treeNode);\r\n    const eventNext = this.tdsTreeService.formatEvent('dragstart', this.treeNode, e);\r\n    this.onDragStart.emit(eventNext);\r\n  }\r\n\r\n  handleDragEnter(e: DragEvent): void {\r\n    e.preventDefault();\r\n    // reset position\r\n    this.showIndicator = this.treeNode.key !== this.tdsTreeService.getSelectedNode()?.key;\r\n    this.renderIndicator(2);\r\n    this.ngZone.run(() => {\r\n      const eventNext = this.tdsTreeService.formatEvent('dragenter', this.treeNode, e);\r\n      this.onDragEnter.emit(eventNext);\r\n    });\r\n  }\r\n\r\n  handleDragOver(e: DragEvent): void {\r\n    e.preventDefault();\r\n    const dropPosition = this.tdsTreeService.calcDropPosition(e);\r\n    if (this.dragPos !== dropPosition) {\r\n      this.clearDragClass();\r\n      this.renderIndicator(dropPosition);\r\n      // leaf node will pass\r\n      if (!(this.dragPos === 0 && this.isLeaf)) {\r\n        this.renderer.addClass(this.elementRef.nativeElement, this.dragPosClass[this.dragPos]);\r\n        this.renderer.addClass(this.elementRef.nativeElement, 'drop-target');\r\n      }\r\n    }\r\n    const eventNext = this.tdsTreeService.formatEvent('dragover', this.treeNode, e);\r\n    this.onDragOver.emit(eventNext);\r\n  }\r\n\r\n  handleDragLeave(e: DragEvent): void {\r\n    e.preventDefault();\r\n    this.renderIndicator(2);\r\n    this.clearDragClass();\r\n    const eventNext = this.tdsTreeService.formatEvent('dragleave', this.treeNode, e);\r\n    this.onDragLeave.emit(eventNext);\r\n  }\r\n\r\n  handleDragDrop(e: DragEvent): void {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    this.ngZone.run(() => {\r\n      this.showIndicator = false;\r\n      this.clearDragClass();\r\n      const node = this.tdsTreeService.getSelectedNode();\r\n      if (!node || (node && node.key === this.treeNode.key) || (this.dragPos === 0 && this.isLeaf)) {\r\n        return;\r\n      }\r\n      // pass if node is leafNo\r\n      const dropEvent = this.tdsTreeService.formatEvent('drop', this.treeNode, e);\r\n      const dragEndEvent = this.tdsTreeService.formatEvent('dragend', this.treeNode, e);\r\n      if (this.beforeDrop) {\r\n        this.beforeDrop({\r\n          dragNode: this.tdsTreeService.getSelectedNode()!,\r\n          node: this.treeNode,\r\n          pos: this.dragPos\r\n        }).subscribe((canDrop: boolean) => {\r\n          if (canDrop) {\r\n            this.tdsTreeService.dropAndApply(this.treeNode, this.dragPos);\r\n          }\r\n          this.onDrop.emit(dropEvent);\r\n          this.tdsOnDragEnd.emit(dragEndEvent);\r\n        });\r\n      } else if (this.treeNode) {\r\n        this.tdsTreeService.dropAndApply(this.treeNode, this.dragPos);\r\n        this.onDrop.emit(dropEvent);\r\n      }\r\n    });\r\n  }\r\n\r\n  handleDragEnd(e: DragEvent): void {\r\n    e.preventDefault();\r\n    this.ngZone.run(() => {\r\n      // if user do not custom beforeDrop\r\n      if (!this.beforeDrop) {\r\n        const eventNext = this.tdsTreeService.formatEvent('dragend', this.treeNode, e);\r\n        this.tdsOnDragEnd.emit(eventNext);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Listening to dragging events.\r\n   */\r\n  handDragEvent(): void {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      if (this.draggable) {\r\n        const nativeElement = this.elementRef.nativeElement;\r\n        this.destroy$ = new Subject<void>();\r\n        fromEvent<DragEvent>(nativeElement, 'dragstart')\r\n          .pipe(takeUntil(this.destroy$))\r\n          .subscribe((e: DragEvent) => this.handleDragStart(e));\r\n        fromEvent<DragEvent>(nativeElement, 'dragenter')\r\n          .pipe(takeUntil(this.destroy$))\r\n          .subscribe((e: DragEvent) => this.handleDragEnter(e));\r\n        fromEvent<DragEvent>(nativeElement, 'dragover')\r\n          .pipe(takeUntil(this.destroy$))\r\n          .subscribe((e: DragEvent) => this.handleDragOver(e));\r\n        fromEvent<DragEvent>(nativeElement, 'dragleave')\r\n          .pipe(takeUntil(this.destroy$))\r\n          .subscribe((e: DragEvent) => this.handleDragLeave(e));\r\n        fromEvent<DragEvent>(nativeElement, 'drop')\r\n          .pipe(takeUntil(this.destroy$))\r\n          .subscribe((e: DragEvent) => this.handleDragDrop(e));\r\n        fromEvent<DragEvent>(nativeElement, 'dragend')\r\n          .pipe(takeUntil(this.destroy$))\r\n          .subscribe((e: DragEvent) => this.handleDragEnd(e));\r\n      } else {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n      }\r\n    });\r\n  }\r\n\r\n  markForCheck(): void {\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  constructor(\r\n    public tdsTreeService: TDSTreeBaseService,\r\n    private ngZone: NgZone,\r\n    private renderer: Renderer2,\r\n    private elementRef: ElementRef,\r\n    private cdr: ChangeDetectorRef,\r\n    @Host() @Optional() public tdsnoAnimation?: TDSNoAnimationDirective\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.treeNode.component = this;  \r\n  }\r\n\r\n  ngOnChanges(changes: { [propertyName: string]: SimpleChange }): void {\r\n    const { draggable } = changes;\r\n    if (draggable) {\r\n      this.handDragEvent();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  private renderIndicator(dropPosition: number): void {\r\n    this.ngZone.run(() => {\r\n      this.showIndicator = dropPosition !== 2;\r\n      if (this.treeNode.key === this.tdsTreeService.getSelectedNode()?.key || (dropPosition === 0 && this.isLeaf)) {\r\n        return;\r\n      }\r\n      this.dragPos = dropPosition;\r\n      this.cdr.markForCheck();\r\n    });\r\n  }\r\n}\r\n","\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { TDSTreeBaseService } from 'tds-ui/core/tree';\r\n\r\n@Injectable()\r\nexport class TDSTreeService extends TDSTreeBaseService {\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n","<div role=\"tree\">\r\n    <input [ngStyle]=\"HIDDEN_STYLE\" />\r\n  </div>\r\n  <div class=\"tds-tree-list\" [class.tds-select-tree-list]=\"selectMode\">\r\n    <div>     \r\n      <cdk-virtual-scroll-viewport\r\n        *ngIf=\"virtualHeight\"\r\n        [class.tds-select-tree-list-holder-inner]=\"selectMode\"\r\n        [class.tds-tree-list-holder-inner]=\"!selectMode\"\r\n        [itemSize]=\"virtualItemSize\"\r\n        [minBufferPx]=\"virtualMinBufferPx\"\r\n        [maxBufferPx]=\"virtualMaxBufferPx\"\r\n        [style.height]=\"virtualHeight\"\r\n      >\r\n        <ng-container *cdkVirtualFor=\"let node of flattenNodes; trackBy: trackByFlattenNode\">\r\n          <ng-template\r\n            [ngTemplateOutlet]=\"nodeTemplate\"\r\n            [ngTemplateOutletContext]=\"{ $implicit: node }\"\r\n          ></ng-template>\r\n        </ng-container>\r\n      </cdk-virtual-scroll-viewport>\r\n\r\n      <div\r\n        *ngIf=\"!virtualHeight\"\r\n        [class.tds-select-tree-list-holder-inner]=\"selectMode\"\r\n        [class.tds-tree-list-holder-inner]=\"!selectMode\"\r\n        [@.disabled]=\"beforeInit || noAnimation?.noAnimation\"\r\n        [noAnimation]=\"noAnimation?.noAnimation\"\r\n        [@treeCollapseMotion]=\"flattenNodes.length\"\r\n      >\r\n        <ng-container *ngFor=\"let node of flattenNodes; trackBy: trackByFlattenNode\">\r\n          <ng-template\r\n            [ngTemplateOutlet]=\"nodeTemplate\"\r\n            [ngTemplateOutletContext]=\"{ $implicit: node }\"\r\n          ></ng-template>\r\n        </ng-container>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <ng-template #nodeTemplate let-treeNode>    \r\n    <tds-tree-node\r\n      builtin\r\n      [icon]=\"treeNode.icon\"\r\n      [title]=\"treeNode.title\"\r\n      [isLoading]=\"treeNode.isLoading\"\r\n      [isSelected]=\"treeNode.isSelected\"\r\n      [isDisabled]=\"treeNode.isDisabled\"\r\n      [isMatched]=\"treeNode.isMatched\"\r\n      [isExpanded]=\"treeNode.isExpanded\"\r\n      [isLeaf]=\"treeNode.isLeaf\"\r\n      [isStart]=\"treeNode.isStart\"\r\n      [isEnd]=\"treeNode.isEnd\"\r\n      [isChecked]=\"treeNode.isChecked\"\r\n      [isHalfChecked]=\"treeNode.isHalfChecked\"\r\n      [isDisableCheckbox]=\"treeNode.isDisableCheckbox\"\r\n      [isSelectable]=\"treeNode.isSelectable\"\r\n      [canHide]=\"treeNode.canHide\"\r\n      [treeNode]=\"treeNode\"\r\n      [selectMode]=\"selectMode\"\r\n      [showLine]=\"showLine\"\r\n      [expandedIcon]=\"expandedIcon\"\r\n      [draggable]=\"draggable\"\r\n      [checkable]=\"checkable\"\r\n      [showExpand]=\"showExpand\"\r\n      [asyncData]=\"asyncData\"\r\n      [searchValue]=\"searchValue\"\r\n      [hideUnMatched]=\"hideUnMatched\"\r\n      [beforeDrop]=\"beforeDrop\"\r\n      [showIcon]=\"showIcon\"\r\n      [treeTemplate]=\"treeTemplate || tdsTreeTemplateChild\"\r\n      (onExpandChange)=\"eventTriggerChanged($event)\"\r\n      (onClick)=\"eventTriggerChanged($event)\"\r\n      (onDblClick)=\"eventTriggerChanged($event)\"\r\n      (onContextMenu)=\"eventTriggerChanged($event)\"\r\n      (onCheckBoxChange)=\"eventTriggerChanged($event)\"\r\n      (onDragStart)=\"eventTriggerChanged($event)\"\r\n      (onDragEnter)=\"eventTriggerChanged($event)\"\r\n      (onDragOver)=\"eventTriggerChanged($event)\"\r\n      (onDragLeave)=\"eventTriggerChanged($event)\"\r\n      (onDragEnd)=\"eventTriggerChanged($any($event))\"\r\n      (onDrop)=\"eventTriggerChanged($event)\"\r\n    ></tds-tree-node>\r\n  </ng-template>","\r\n\r\nimport { Direction, Directionality } from '@angular/cdk/bidi';\r\nimport { BooleanInput } from '@angular/cdk/coercion';\r\nimport { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\r\nimport {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Host,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  Output,\r\n  SimpleChange,\r\n  SkipSelf,\r\n  TemplateRef,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { treeCollapseMotion } from 'tds-ui/core/animation';\r\nimport { TDSConfigKey, TDSConfigService, WithConfig } from 'tds-ui/core/config';\r\nimport { TDSNoAnimationDirective } from 'tds-ui/core/no-animation';\r\nimport { TDSFormatBeforeDropEvent, TDSFormatEmitEvent, TDSTreeBase, TDSTreeBaseService, TDSTreeHigherOrderServiceToken, TDSTreeNode, TDSTreeNodeKey, TDSTreeNodeOptions } from 'tds-ui/core/tree';\r\nimport { flattenTreeData } from 'tds-ui/core/tree';\r\nimport { InputBoolean, TDSSafeAny } from 'tds-ui/shared/utility';\r\n\r\n\r\n\r\nimport { TDSTreeService } from './tree.service';\r\n\r\nexport function TDSTreeServiceFactory(\r\n  higherOrderService: TDSTreeBaseService,\r\n  treeService: TDSTreeService\r\n): TDSTreeBaseService {\r\n  return higherOrderService ? higherOrderService : treeService;\r\n}\r\n\r\nconst TDS_CONFIG_MODULE_NAME: TDSConfigKey = 'tree';\r\n\r\n@Component({\r\n  selector: 'tds-tree',\r\n  exportAs: 'tdsTree',\r\n  animations: [treeCollapseMotion],\r\n  templateUrl:'./tree.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    TDSTreeService,\r\n    {\r\n      provide: TDSTreeBaseService,\r\n      useFactory: TDSTreeServiceFactory,\r\n      deps: [[new SkipSelf(), new Optional(), TDSTreeHigherOrderServiceToken], TDSTreeService]\r\n    },\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => TDSTreeComponent),\r\n      multi: true\r\n    }\r\n  ],\r\n  host: {\r\n    '[class.tds-select-tree]': `selectMode`,\r\n    '[class.tds-select-tree-show-line]': `selectMode && showLine`,\r\n    '[class.tds-select-tree-icon-hide]': `selectMode && !showIcon`,\r\n    '[class.tds-select-tree-block-node]': `selectMode && blockNode`,\r\n    '[class.tds-tree]': `!selectMode`,\r\n    '[class.tds-tree-rtl]': `dir === 'rtl'`,\r\n    '[class.tds-tree-show-line]': `!selectMode && showLine`,\r\n    '[class.tds-tree-icon-hide]': `!selectMode && !showIcon`,\r\n    '[class.tds-tree-block-node]': `!selectMode && blockNode`,\r\n    '[class.draggable-tree]': `draggable`,\r\n    'class':\"box-border m-0 p-0 border-0\"\r\n  }\r\n})\r\nexport class TDSTreeComponent\r\n  extends TDSTreeBase\r\n  implements OnInit, OnDestroy, ControlValueAccessor, OnChanges, AfterViewInit\r\n{\r\n  readonly _tdsModuleName: TDSConfigKey = TDS_CONFIG_MODULE_NAME;\r\n\r\n  static ngAcceptInputType_showIcon: BooleanInput;\r\n  static ngAcceptInputType_hideUnMatched: BooleanInput;\r\n  static ngAcceptInputType_blockNode: BooleanInput;\r\n  static ngAcceptInputType_expandAll: BooleanInput;\r\n  static ngAcceptInputType_selectMode: BooleanInput;\r\n  static ngAcceptInputType_checkStrictly: BooleanInput;\r\n  static ngAcceptInputType_showExpand: BooleanInput;\r\n  static ngAcceptInputType_showLine: BooleanInput;\r\n  static ngAcceptInputType_checkable: BooleanInput;\r\n  static ngAcceptInputType_asyncData: BooleanInput;\r\n  static ngAcceptInputType_draggable: BooleanInput;\r\n  static ngAcceptInputType_multiple: BooleanInput;\r\n\r\n  @Input() @InputBoolean() @WithConfig() showIcon: boolean = false;\r\n  @Input() @InputBoolean() @WithConfig() hideUnMatched: boolean = false;\r\n  @Input() @InputBoolean() @WithConfig() blockNode: boolean = false;\r\n  @Input() @InputBoolean() expandAll = false;\r\n  @Input() @InputBoolean() selectMode = false;\r\n  @Input() @InputBoolean() checkStrictly = false;\r\n  @Input() @InputBoolean() showExpand: boolean = true;\r\n  @Input() @InputBoolean() showLine = false;\r\n  @Input() @InputBoolean() checkable = false;\r\n  @Input() @InputBoolean() asyncData = false;\r\n  @Input() @InputBoolean() draggable: boolean = false;\r\n  @Input() @InputBoolean() multiple = false;\r\n  @Input() expandedIcon?: TemplateRef<{ $implicit: TDSTreeNode; origin: TDSTreeNodeOptions }>;\r\n  @Input() virtualItemSize = 28;\r\n  @Input() virtualMaxBufferPx = 500;\r\n  @Input() virtualMinBufferPx = 28;\r\n  @Input() virtualHeight: string | null = null;\r\n  @Input() treeTemplate?: TemplateRef<{ $implicit: TDSTreeNode; origin: TDSTreeNodeOptions }>;\r\n  @Input() beforeDrop?: (confirm: TDSFormatBeforeDropEvent) => Observable<boolean>;\r\n  @Input() data: TDSTreeNodeOptions[] | TDSTreeNode[] = [];\r\n  @Input() expandedKeys: TDSTreeNodeKey[] = [];\r\n  @Input() selectedKeys: TDSTreeNodeKey[] = [];\r\n  @Input() checkedKeys: TDSTreeNodeKey[] = [];\r\n  @Input() searchValue: string = '';\r\n  @Input() searchFunc?: (node: TDSTreeNodeOptions) => boolean;\r\n  @ContentChild('treeTemplate', { static: true }) tdsTreeTemplateChild!: TemplateRef<{\r\n    $implicit: TDSTreeNode;\r\n    origin: TDSTreeNodeOptions;\r\n  }>;\r\n  @ViewChild(CdkVirtualScrollViewport, { read: CdkVirtualScrollViewport })\r\n  cdkVirtualScrollViewport!: CdkVirtualScrollViewport;\r\n  flattenNodes: TDSTreeNode[] = [];\r\n  beforeInit = true;\r\n  dir: Direction = 'ltr';\r\n\r\n  @Output() readonly onExpandedKeysChange: EventEmitter<string[]> = new EventEmitter<string[]>();\r\n  @Output() readonly onSelectedKeysChange: EventEmitter<string[]> = new EventEmitter<string[]>();\r\n  @Output() readonly onCheckedKeysChange: EventEmitter<string[]> = new EventEmitter<string[]>();\r\n  @Output() readonly onSearchValueChange = new EventEmitter<TDSFormatEmitEvent>();\r\n  @Output() readonly onClick = new EventEmitter<TDSFormatEmitEvent>();\r\n  @Output() readonly onDblClick = new EventEmitter<TDSFormatEmitEvent>();\r\n  @Output() readonly onContextMenu = new EventEmitter<TDSFormatEmitEvent>();\r\n  @Output() readonly onCheckBoxChange = new EventEmitter<TDSFormatEmitEvent>();\r\n  @Output() readonly onExpandChange = new EventEmitter<TDSFormatEmitEvent>();\r\n  @Output() readonly onDragStart = new EventEmitter<TDSFormatEmitEvent>();\r\n  @Output() readonly onDragEnter = new EventEmitter<TDSFormatEmitEvent>();\r\n  @Output() readonly onDragOver = new EventEmitter<TDSFormatEmitEvent>();\r\n  @Output() readonly onDragLeave = new EventEmitter<TDSFormatEmitEvent>();\r\n  @Output() readonly onDrop = new EventEmitter<TDSFormatEmitEvent>();\r\n  @Output() readonly onDragEnd = new EventEmitter<TDSFormatEmitEvent>();\r\n\r\n  HIDDEN_STYLE = {\r\n    width: 0,\r\n    height: 0,\r\n    display: 'flex',\r\n    overflow: 'hidden',\r\n    opacity: 0,\r\n    border: 0,\r\n    padding: 0,\r\n    margin: 0\r\n  };\r\n\r\n  private destroy$ = new Subject<void>();\r\n\r\n  onChange: (value: TDSTreeNode[]) => void = () => null;\r\n  onTouched: () => void = () => null;\r\n\r\n  writeValue(value: TDSTreeNode[]): void {\r\n    this.handleNzData(value);\r\n  }\r\n\r\n  registerOnChange(fn: (_: TDSTreeNode[]) => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  /**\r\n   * Render all properties of nzTree\r\n   *\r\n   * @param changes: all changes from @Input\r\n   */\r\n  renderTreeProperties(changes: { [propertyName: string]: SimpleChange }): void {\r\n    let useDefaultExpandedKeys = false;\r\n    let _expandAll = false;\r\n    const {\r\n      data,\r\n      expandedKeys,\r\n      selectedKeys,\r\n      checkedKeys,\r\n      checkStrictly,\r\n      expandAll,\r\n      multiple,\r\n      searchValue\r\n    } = changes;\r\n\r\n    if (expandAll) {\r\n      useDefaultExpandedKeys = true;\r\n      _expandAll = this.expandAll;\r\n    }\r\n\r\n    if (multiple) {\r\n      this.tdsTreeService.isMultiple = this.multiple;\r\n    }\r\n\r\n    if (checkStrictly) {\r\n      this.tdsTreeService.isCheckStrictly = this.checkStrictly;\r\n    }\r\n\r\n    if (data) {\r\n      this.handleNzData(this.data);\r\n    }\r\n\r\n    if (checkedKeys) {\r\n      this.handleCheckedKeys(this.checkedKeys);\r\n    }\r\n\r\n    if (checkStrictly) {\r\n      this.handleCheckedKeys(null);\r\n    }\r\n\r\n    if (expandedKeys || expandAll) {\r\n      useDefaultExpandedKeys = true;\r\n      this.handleExpandedKeys(_expandAll || this.expandedKeys);\r\n    }\r\n\r\n    if (selectedKeys) {\r\n      this.handleSelectedKeys(this.selectedKeys, this.multiple);\r\n    }\r\n\r\n    if (searchValue) {\r\n      if (!(searchValue.firstChange && !this.searchValue)) {\r\n        useDefaultExpandedKeys = false;\r\n        this.handleSearchValue(searchValue.currentValue, this.searchFunc);\r\n        this.onSearchValueChange.emit(this.tdsTreeService.formatEvent('search', null, null));\r\n      }\r\n    }\r\n\r\n    // flatten data\r\n    const currentExpandedKeys = this.getExpandedNodeList().map(v => v.key);\r\n    const newExpandedKeys = useDefaultExpandedKeys ? _expandAll || this.expandedKeys : currentExpandedKeys;\r\n    this.handleFlattenNodes(this.tdsTreeService.rootNodes, newExpandedKeys);\r\n  }\r\n\r\n  trackByFlattenNode(_: number, node: TDSTreeNode): string {\r\n    return node.key;\r\n  }\r\n  // Deal with properties\r\n  /**\r\n   * data\r\n   *\r\n   * @param value\r\n   */\r\n  handleNzData(value: TDSSafeAny[]): void {\r\n    if (Array.isArray(value)) {\r\n      const data = this.coerceTreeNodes(value);\r\n      this.tdsTreeService.initTree(data);\r\n    }\r\n  }\r\n\r\n  handleFlattenNodes(data: TDSTreeNode[], expandKeys: TDSTreeNodeKey[] | true = []): void {\r\n    this.tdsTreeService.flattenTreeData(data, expandKeys);\r\n  }\r\n\r\n  handleCheckedKeys(keys: TDSTreeNodeKey[] | null): void {\r\n    this.tdsTreeService.conductCheck(keys, this.checkStrictly);\r\n  }\r\n\r\n  handleExpandedKeys(keys: TDSTreeNodeKey[] | true = []): void {\r\n    this.tdsTreeService.conductExpandedKeys(keys);\r\n  }\r\n\r\n  handleSelectedKeys(keys: TDSTreeNodeKey[], isMulti: boolean): void {\r\n    this.tdsTreeService.conductSelectedKeys(keys, isMulti);\r\n  }\r\n\r\n  handleSearchValue(value: string, searchFunc?: (node: TDSTreeNodeOptions) => boolean): void {\r\n    const dataList = flattenTreeData(this.tdsTreeService.rootNodes, true).map(v => v.data);\r\n    const checkIfMatched = (node: TDSTreeNode): boolean => {\r\n      if (searchFunc) {\r\n        return searchFunc(node.origin);\r\n      }\r\n      return !value || !node.title.toLowerCase().includes(value.toLowerCase()) ? false : true;\r\n    };\r\n    dataList.forEach(v => {\r\n      v.isMatched = checkIfMatched(v);\r\n      v.canHide = !v.isMatched;\r\n      if (!v.isMatched) {\r\n        v.setExpanded(false);\r\n        this.tdsTreeService.setExpandedNodeList(v);\r\n      } else {\r\n        // expand\r\n        this.tdsTreeService.expandNodeAllParentBySearch(v);\r\n      }\r\n      this.tdsTreeService.setMatchedNodeList(v);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handle emit event\r\n   *\r\n   * @param event\r\n   * handle each event\r\n   */\r\n  eventTriggerChanged(event: TDSFormatEmitEvent): void {\r\n    const node = event.node!;\r\n    switch (event.eventName) {\r\n      case 'expand':\r\n        this.renderTree();\r\n        this.onExpandChange.emit(event);\r\n        break;\r\n      case 'click':\r\n        this.onClick.emit(event);\r\n        break;\r\n      case 'dblclick':\r\n        this.onDblClick.emit(event);\r\n        break;\r\n      case 'contextmenu':\r\n        this.onContextMenu.emit(event);\r\n        break;\r\n      case 'check':\r\n        // Render checked state with nodes' property `isChecked`\r\n        this.tdsTreeService.setCheckedNodeList(node);\r\n        if (!this.checkStrictly) {\r\n          this.tdsTreeService.conduct(node);\r\n        }\r\n        // Cause check method will rerender list, so we need recover it and next the new event to user\r\n        const eventNext = this.tdsTreeService.formatEvent('check', node, event.event!);\r\n        this.onCheckBoxChange.emit(eventNext);\r\n        break;\r\n      case 'dragstart':\r\n        // if node is expanded\r\n        if (node.isExpanded) {\r\n          node.setExpanded(!node.isExpanded);\r\n          this.renderTree();\r\n        }\r\n        this.onDragStart.emit(event);\r\n        break;\r\n      case 'dragenter':\r\n        const selectedNode = this.tdsTreeService.getSelectedNode();\r\n        if (selectedNode && selectedNode.key !== node.key && !node.isExpanded && !node.isLeaf) {\r\n          node.setExpanded(true);\r\n          this.renderTree();\r\n        }\r\n        this.onDragEnter.emit(event);\r\n        break;\r\n      case 'dragover':\r\n        this.onDragOver.emit(event);\r\n        break;\r\n      case 'dragleave':\r\n        this.onDragLeave.emit(event);\r\n        break;\r\n      case 'dragend':\r\n        this.onDragEnd.emit(event);\r\n        break;\r\n      case 'drop':\r\n        this.renderTree();\r\n        this.onDrop.emit(event);\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Click expand icon\r\n   */\r\n  renderTree(): void {\r\n    this.handleFlattenNodes(\r\n      this.tdsTreeService.rootNodes,\r\n      this.getExpandedNodeList().map(v => v.key)\r\n    );\r\n    this.cdr.markForCheck();\r\n  }\r\n  // Handle emit event end\r\n\r\n  constructor(\r\n    tdsTreeService: TDSTreeBaseService,\r\n    public tdsConfigService: TDSConfigService,\r\n    private cdr: ChangeDetectorRef,\r\n    @Optional() private directionality: Directionality,\r\n    @Host() @Optional() public noAnimation?: TDSNoAnimationDirective\r\n  ) {\r\n    super(tdsTreeService);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.tdsTreeService.flattenNodes$.pipe(takeUntil(this.destroy$)).subscribe(data => {\r\n      this.flattenNodes = data;\r\n      this.cdr.markForCheck();\r\n    });\r\n\r\n    this.dir = this.directionality.value;\r\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\r\n      this.dir = direction;\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: { [propertyName: string]: SimpleChange }): void {\r\n    this.renderTreeProperties(changes);\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.beforeInit = false;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n}\r\n","\r\n\r\nimport { BidiModule } from '@angular/cdk/bidi';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { TDSHighlightModule } from 'tds-ui/core/highlight';\r\nimport { TDSNoAnimationModule } from 'tds-ui/core/no-animation';\r\nimport { TDSOutletModule } from 'tds-ui/core/outlet';\r\nimport { TDSSpinnerModule } from 'tds-ui/progress-spinner';\r\n\r\n\r\n\r\nimport { TDSTreeDropIndicatorComponent } from './tree-drop-indicator.component';\r\nimport { TDSTreeIndentComponent } from './tree-indent.component';\r\nimport { TDSTreeNodeBuiltinCheckboxComponent } from './tree-node-checkbox.component';\r\nimport { TDSTreeNodeSwitcherComponent } from './tree-node-switcher.component';\r\nimport { TDSTreeNodeTitleComponent } from './tree-node-title.component';\r\nimport { TDSTreeNodeBuiltinComponent } from './tree-node.component';\r\nimport { TDSTreeComponent } from './tree.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    BidiModule,\r\n    CommonModule,\r\n    TDSOutletModule,  \r\n    TDSNoAnimationModule,\r\n    TDSHighlightModule,\r\n    ScrollingModule,\r\n    TDSSpinnerModule\r\n  ],\r\n  declarations: [\r\n    TDSTreeComponent,\r\n    TDSTreeNodeBuiltinComponent,\r\n    TDSTreeIndentComponent,\r\n    TDSTreeNodeSwitcherComponent,\r\n    TDSTreeNodeBuiltinCheckboxComponent,\r\n    TDSTreeNodeTitleComponent,\r\n    TDSTreeDropIndicatorComponent\r\n  ],\r\n  exports: [TDSTreeComponent, TDSTreeNodeBuiltinComponent, TDSTreeIndentComponent]\r\n})\r\nexport class TDSTreeModule {}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["_c0","_c1","i1","i2","i3","i5","i7.TDSTreeNodeBuiltinComponent"],"mappings":"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"}