import * as i0 from '@angular/core';
import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';
import * as i1 from '@angular/common';
import { CommonModule } from '@angular/common';
import * as i2 from 'tds-ui/core/outlet';
import { TDSOutletModule } from 'tds-ui/core/outlet';
import { BidiModule } from '@angular/cdk/bidi';

function TDSDividerComponent_ng_container_1_ng_container_1_ng_container_5_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtext(1);
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r4 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(ctx_r4.tdsText);
} }
const _c0 = function (a0, a1) { return { "w-8": a0, "flex-auto": a1 }; };
function TDSDividerComponent_ng_container_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵelementStart(1, "div", 3)(2, "div", 4);
    i0.ɵɵelement(3, "div", 5);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(4, "div", 6);
    i0.ɵɵtemplate(5, TDSDividerComponent_ng_container_1_ng_container_1_ng_container_5_Template, 2, 1, "ng-container", 7);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(6, "div", 4);
    i0.ɵɵelement(7, "div", 5);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction2(7, _c0, ctx_r2.tdsOrientation === "left", ctx_r2.tdsOrientation !== "left"));
    i0.ɵɵadvance(1);
    i0.ɵɵclassMap(ctx_r2.tdsClass);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("tdsStringTemplateOutlet", ctx_r2.tdsText);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction2(10, _c0, ctx_r2.tdsOrientation === "right", ctx_r2.tdsOrientation !== "right"));
    i0.ɵɵadvance(1);
    i0.ɵɵclassMap(ctx_r2.tdsClass);
} }
function TDSDividerComponent_ng_container_1_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵelement(1, "div", 5);
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r3 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(1);
    i0.ɵɵclassMap(ctx_r3.tdsClass);
} }
function TDSDividerComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtemplate(1, TDSDividerComponent_ng_container_1_ng_container_1_Template, 8, 13, "ng-container", 2);
    i0.ɵɵtemplate(2, TDSDividerComponent_ng_container_1_ng_container_2_Template, 2, 2, "ng-container", 2);
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r0.tdsText);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", !ctx_r0.tdsText);
} }
function TDSDividerComponent_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵelement(1, "div", 8);
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(1);
    i0.ɵɵclassMap(ctx_r1.tdsClass);
} }
class TDSDividerComponent {
    constructor(elementRef) {
        this.elementRef = elementRef;
        this.tdsClass = 'border-neutral-2-100 dark:border-d-neutral-2-100 ';
        this.tdsType = 'horizontal';
        this.tdsOrientation = 'center';
        // TODO: move to host after View Engine deprecation
        this.elementRef.nativeElement.classList.add('tds-divider');
    }
}
TDSDividerComponent.ɵfac = function TDSDividerComponent_Factory(t) { return new (t || TDSDividerComponent)(i0.ɵɵdirectiveInject(i0.ElementRef)); };
TDSDividerComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TDSDividerComponent, selectors: [["tds-divider"]], inputs: { tdsClass: "tdsClass", tdsText: "tdsText", tdsType: "tdsType", tdsOrientation: "tdsOrientation" }, exportAs: ["tdsDivider"], decls: 3, vars: 3, consts: [[3, "ngSwitch"], [4, "ngSwitchCase"], [4, "ngIf"], [1, "w-full", "flex", "items-stretch"], [1, "flex", "flex-col", "justify-center", 3, "ngClass"], [1, "w-full", "border-t"], [1, "tds-divider-inner-text", "px-4", "text-body-2", "font-regular", "text-neutral-1-900", "dark:text-d-neutral-1-900"], [4, "tdsStringTemplateOutlet"], [1, "relative", "mx-2", "border-l", "align-middle", "inline-block", "min-h-[16px]"]], template: function TDSDividerComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementContainerStart(0, 0);
        i0.ɵɵtemplate(1, TDSDividerComponent_ng_container_1_Template, 3, 2, "ng-container", 1);
        i0.ɵɵtemplate(2, TDSDividerComponent_ng_container_2_Template, 2, 2, "ng-container", 1);
        i0.ɵɵelementContainerEnd();
    } if (rf & 2) {
        i0.ɵɵproperty("ngSwitch", ctx.tdsType);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngSwitchCase", "horizontal");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngSwitchCase", "vertical");
    } }, directives: [i1.NgSwitch, i1.NgSwitchCase, i1.NgIf, i1.NgClass, i2.TDSStringTemplateOutletDirective], encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSDividerComponent, [{
        type: Component,
        args: [{ selector: 'tds-divider', exportAs: 'tdsDivider', preserveWhitespaces: false, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {
                // '[class.tds-divider-horizontal]': `tdsType === 'horizontal'`,
                // '[class.tds-divider-vertical]': `tdsType === 'vertical'`,
                // '[class.tds-divider-with-text]': `tdsText`,
                // '[class.tds-divider-plain]': `tdsPlain`,
                // '[class.tds-divider-with-text-left]': `tdsText && tdsOrientation === 'left'`,
                // '[class.tds-divider-with-text-right]': `tdsText && tdsOrientation === 'right'`,
                // '[class.tds-divider-with-text-center]': `tdsText && tdsOrientation === 'center'`,
                // '[class.tds-divider-dashed]': `tdsDashed`,
                // '[class.inline-block]': `tdsType === 'vertical'`,
                // '[class.mx-2]': `tdsType === 'vertical'`,
                // '[class.align-middle]': `tdsType === 'vertical'`,
                // '[class.border-l]': `tdsType === 'vertical'`,
                // '[class.border-neutral-2-100]': `tdsType === 'vertical'`,
                // '[class.h-3.5]': `tdsType === 'vertical'`,
                }, template: "<ng-container [ngSwitch]=\"tdsType\">\r\n    <ng-container *ngSwitchCase=\"'horizontal'\">\r\n        <ng-container *ngIf=\"tdsText\">\r\n            <div class=\"w-full flex items-stretch\">\r\n                <div class=\"flex flex-col justify-center\"  [ngClass]=\"{'w-8':tdsOrientation === 'left','flex-auto':tdsOrientation !== 'left'}\">\r\n                    <div class=\"w-full border-t\" [class]=\"tdsClass\">\r\n\r\n                    </div>\r\n                </div>\r\n                <div class=\"tds-divider-inner-text px-4 text-body-2 font-regular text-neutral-1-900 dark:text-d-neutral-1-900\">\r\n                    <ng-container *tdsStringTemplateOutlet=\"tdsText\">{{ tdsText }}</ng-container>\r\n                </div>\r\n                <div class=\"flex flex-col justify-center\" [ngClass]=\"{'w-8':tdsOrientation === 'right','flex-auto':tdsOrientation !== 'right'}\">\r\n                    <div class=\"w-full border-t\" [class]=\"tdsClass\">\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"!tdsText\">\r\n            <div class=\"w-full border-t\" [class]=\"tdsClass\"></div>\r\n        </ng-container>\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'vertical'\">\r\n        <div class=\"relative mx-2 border-l align-middle inline-block min-h-[16px]\" [class]=\"tdsClass\" ></div>\r\n    </ng-container>\r\n</ng-container>" }]
    }], function () { return [{ type: i0.ElementRef }]; }, { tdsClass: [{
            type: Input
        }], tdsText: [{
            type: Input
        }], tdsType: [{
            type: Input
        }], tdsOrientation: [{
            type: Input
        }] }); })();

class TDSDividerModule {
}
TDSDividerModule.ɵfac = function TDSDividerModule_Factory(t) { return new (t || TDSDividerModule)(); };
TDSDividerModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: TDSDividerModule });
TDSDividerModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [[BidiModule, CommonModule, TDSOutletModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSDividerModule, [{
        type: NgModule,
        args: [{
                imports: [BidiModule, CommonModule, TDSOutletModule],
                declarations: [TDSDividerComponent],
                exports: [TDSDividerComponent]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0.ɵɵsetNgModuleScope(TDSDividerModule, { declarations: [TDSDividerComponent], imports: [BidiModule, CommonModule, TDSOutletModule], exports: [TDSDividerComponent] }); })();

/**
 * Generated bundle index. Do not edit.
 */

export { TDSDividerComponent, TDSDividerModule };
//# sourceMappingURL=tds-ui-divider.mjs.map
