import * as i0 from '@angular/core';
import { Pipe, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';

// Regular Expressions for parsing tags and attributes
const SURROGATE_PAIR_REGEXP = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g;
// ! to ~ is the ASCII range.
const NON_ALPHANUMERIC_REGEXP = /([^\#-~ |!])/g;
/**
 * Escapes all potentially dangerous characters, so that the
 * resulting string can be safely inserted into attribute or
 * element text.
 */
function encodeEntities(value) {
    return value
        .replace(/&/g, '&amp;')
        .replace(SURROGATE_PAIR_REGEXP, (match) => {
        const hi = match.charCodeAt(0);
        const low = match.charCodeAt(1);
        return `&#${(hi - 0xd800) * 0x400 + (low - 0xdc00) + 0x10000};`;
    })
        .replace(NON_ALPHANUMERIC_REGEXP, (match) => `&#${match.charCodeAt(0)};`)
        .replace(/</g, '&lt;')
        .replace(/>/g, '&gt;');
}
class TDSHighlightPipe {
    constructor() {
        this.UNIQUE_WRAPPERS = ['##==-open_tag-==##', '##==-close_tag-==##'];
    }
    transform(value, highlightValue, flags, klass) {
        if (!highlightValue) {
            return value;
        }
        // Escapes regex keyword to interpret these characters literally
        const searchValue = new RegExp(highlightValue.replace(/([.*+?^=!:${}()|[\]\/\\])/g, '\\$&'), flags);
        const wrapValue = value.replace(searchValue, `${this.UNIQUE_WRAPPERS[0]}$&${this.UNIQUE_WRAPPERS[1]}`);
        return encodeEntities(wrapValue)
            .replace(new RegExp(this.UNIQUE_WRAPPERS[0], 'g'), klass ? `<span class="${klass}">` : '<span>')
            .replace(new RegExp(this.UNIQUE_WRAPPERS[1], 'g'), '</span>');
    }
}
TDSHighlightPipe.ɵfac = function TDSHighlightPipe_Factory(t) { return new (t || TDSHighlightPipe)(); };
TDSHighlightPipe.ɵpipe = /*@__PURE__*/ i0.ɵɵdefinePipe({ name: "tdsHighlight", type: TDSHighlightPipe, pure: true });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSHighlightPipe, [{
        type: Pipe,
        args: [{
                name: 'tdsHighlight',
                pure: true
            }]
    }], null, null); })();

class TDSHighlightModule {
}
TDSHighlightModule.ɵfac = function TDSHighlightModule_Factory(t) { return new (t || TDSHighlightModule)(); };
TDSHighlightModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: TDSHighlightModule });
TDSHighlightModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSHighlightModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule],
                exports: [TDSHighlightPipe],
                declarations: [TDSHighlightPipe]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0.ɵɵsetNgModuleScope(TDSHighlightModule, { declarations: [TDSHighlightPipe], imports: [CommonModule], exports: [TDSHighlightPipe] }); })();

/**
 * Generated bundle index. Do not edit.
 */

export { TDSHighlightModule, TDSHighlightPipe };
//# sourceMappingURL=tds-ui-core-highlight.mjs.map
