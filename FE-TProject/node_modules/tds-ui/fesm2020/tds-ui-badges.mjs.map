{"version":3,"file":"tds-ui-badges.mjs","sources":["../../../projects/tds-ui/badges/preset-colors.ts","../../../projects/tds-ui/badges/badge-sup.component.ts","../../../projects/tds-ui/badges/badge.component.ts","../../../projects/tds-ui/badges/ribbon.component.ts","../../../projects/tds-ui/badges/badge.module.ts","../../../projects/tds-ui/badges/tds-ui-badges.ts"],"sourcesContent":["\r\n\r\nexport const badgePresetColors: readonly string[] = [\r\n  'pink',\r\n  'red',\r\n  'yellow',\r\n  'orange',\r\n  'cyan',\r\n  'green',\r\n  'blue',\r\n  'purple',\r\n  'geekblue',\r\n  'magenta',\r\n  'volcano',\r\n  'gold',\r\n  'lime'\r\n];\r\n","\r\n\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { TDSSafeAny } from 'tds-ui/shared/utility';\r\nimport { ButtonSize } from \"tds-ui/core/config\";\r\nimport { zoomBadgeMotion } from 'tds-ui/core/animation';\r\n@Component({\r\n  selector: 'tds-badge-sup',\r\n  exportAs: 'tdsBadgeSup',\r\n  preserveWhitespaces: false,\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [zoomBadgeMotion],\r\n  template: `\r\n    <ng-container *ngIf=\"_count <= overflowCount; else overflowTemplate\">\r\n      <span\r\n        [noAnimation]=\"noAnimation\"\r\n        *ngFor=\"let n of maxNumberArray; let i = index\"\r\n        class=\"tds-scroll-number-only relative inline-block h-5\"\r\n        [style.transform]=\"'translateY(' + -countArray[i] * 100 + '%)'\"\r\n        style=\"transition: all .3s cubic-bezier(.645,.045,.355,1)\"\r\n      >\r\n        <ng-container *ngIf=\"!dot && countArray[i] !== undefined\">\r\n          <p\r\n            *ngFor=\"let p of countSingleArray\"\r\n            class=\"tds-scroll-number-only-unit h-5 m-0 \" \r\n            [class.current]=\"p === countArray[i]\"\r\n          >\r\n            {{ p }}\r\n          </p>\r\n        </ng-container>\r\n      </span>\r\n    </ng-container>\r\n    <ng-template #overflowTemplate>{{ overflowCount }}+</ng-template>\r\n  `,\r\n  host: {\r\n    '[@.disabled]': `disableAnimation`,\r\n    '[@zoomBadgeMotion]': '',\r\n    '[attr.title]': `title === null ? '' : title || count`,\r\n    '[style]': `styleCss`,\r\n    '[style.right.px]': `offset && offset[0] ? -offset[0] : null`,\r\n    '[style.margin-top.px]': `offset && offset[1] ? offset[1] : null`,\r\n    '[class.tds-badge-count]': `!dot`,\r\n    '[class.tds-badge-dot]': `dot`,\r\n    '[class.tds-badge-multiple-words]': `countArray.length >= 2`,\r\n    '[class.px-1.5]': `!dot && countArray.length < 2`,\r\n    '[class.px-2]': `!dot && countArray.length >= 2`,\r\n    '[class]': \"cls\"\r\n  }\r\n})\r\nexport class TDSBadgeSupComponent implements OnInit, OnChanges {\r\n  @Input() offset?: [number, number];\r\n  @Input() title?: string | null | undefined;\r\n  @Input() tdsStyle: { [key: string]: string } | null = null;\r\n  @Input() dot = false;\r\n  @Input() overflowCount: number = 99;\r\n  @Input() disableAnimation = false;\r\n  @Input() count?: number | TemplateRef<TDSSafeAny>;\r\n  @Input() noAnimation = false;\r\n  @Input() standalone = false;\r\n  @Input() size: ButtonSize = 'md';\r\n  @Input() placement: 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight' = 'topRight';\r\n  // @Input() tdsClass: string | null = null;\r\n  _cls: string = '';\r\n  maxNumberArray: string[] = [];\r\n  countArray: number[] = [];\r\n  _count: number = 0;\r\n  countSingleArray = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n\r\n  constructor(private elementRef: ElementRef) {\r\n    // TODO: move to host after View Engine deprecation\r\n    this.elementRef.nativeElement.classList.add('tds-scroll-number');\r\n  }\r\n\r\n  generateMaxNumberArray(): void {\r\n    this.maxNumberArray = this.overflowCount.toString().split('');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.generateMaxNumberArray();\r\n    this.buildCls();\r\n  }\r\n  get cls(): string {\r\n    return this._cls;\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const { overflowCount, count, standalone, tdsStyle, tdsClass } = changes;\r\n    if (count && typeof count.currentValue === 'number') {\r\n      this._count = Math.max(0, count.currentValue);\r\n      this.countArray = this._count\r\n        .toString()\r\n        .split('')\r\n        .map(item => +item);\r\n    }\r\n    if (overflowCount) {\r\n      this.generateMaxNumberArray();\r\n    }\r\n    // if (bgColor) {\r\n    //   this.buildCls();\r\n    // }\r\n  }\r\n  buildCls() {\r\n    \r\n    let placement = this.getPlacement();\r\n    let str = \"overflow-hidden  min-w-5 h-5 py-0 text-xs  text-center font-semibold whitespace-nowrap rounded-full  leading-5 \"\r\n    if (!this.dot) {\r\n      if (!this.standalone)\r\n        this._cls = str + \" absolute \" + placement;\r\n      else {\r\n        this._cls = str + \" relative block \";\r\n      }\r\n    } else {\r\n      this._cls = \"absolute z-auto overflow-hidden py-0  rounded-full \";\r\n      switch (this.size) {\r\n        case 'sm':\r\n          this._cls += 'h-1.5 w-1.5 ';\r\n          break;\r\n        case 'md':\r\n          this._cls += 'h-2 w-2 ';\r\n          break;\r\n        case 'lg':\r\n          this._cls += 'h-2.5 w-2.5 ';\r\n          break;\r\n        default:\r\n          this._cls += 'h-2 w-2 ';\r\n          break;\r\n      }\r\n      this._cls += placement;\r\n    }\r\n\r\n    // if (this.tdsClass) {\r\n    //   this._cls = this._cls + this.tdsClass;\r\n    // }\r\n  }\r\n  get styleCss(): { [key: string]: string } | null {\r\n    let style: { [key: string]: string } | null = null;\r\n    if (!this.standalone) {\r\n      switch (this.placement) {\r\n        case 'topRight':\r\n          style = {\r\n            ['transform']: 'translate(50%,-50%)',\r\n            ['transform-origin']: '100% 0'\r\n          }\r\n          break;\r\n        case 'topLeft':\r\n          style = {\r\n            ['transform']: 'translate(-50%,-50%)',\r\n            ['transform-origin']: '0 0'\r\n          }\r\n          break;\r\n        case 'bottomLeft':\r\n          style = {\r\n            ['transform']: 'translate(-50%,50%)',\r\n            ['transform-origin']: '100% 0'\r\n          }\r\n          break;\r\n        case 'bottomRight':\r\n          style = {\r\n            ['transform']: 'translate(50%,50%)',\r\n            ['transform-origin']: '0 100%'\r\n          }\r\n          break;\r\n        default:\r\n          style = {\r\n            ['transform']: 'translate(-50%,50%)',\r\n            ['transform-origin']: '100% 0'\r\n          }\r\n          break;\r\n      }\r\n     \r\n    }\r\n    if (!!this.tdsStyle) {\r\n      if (style != null)\r\n        return Object.assign({}, style, this.tdsStyle);\r\n      return this.tdsStyle;\r\n    }\r\n    return style\r\n  }\r\n  getPlacement() {\r\n    let result = \"top-0 right-0\"\r\n    switch (this.placement) {\r\n      case 'topRight':\r\n        result = \"top-0 right-0\"\r\n        break;\r\n      case 'topLeft':\r\n        result = \"top-0 left-0\"\r\n        break;\r\n      case 'bottomLeft':\r\n        result = \"bottom-0 left-0\"\r\n        break;\r\n      case 'bottomRight':\r\n        result = \"bottom-0 right-0\"\r\n        break;\r\n      default:\r\n        result = \"top-0 right-0\"\r\n        break;\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","\r\n\r\nimport { Direction, Directionality } from '@angular/cdk/bidi';\r\nimport { BooleanInput } from '@angular/cdk/coercion';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  Host,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  Renderer2,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { InputBoolean, TDSSafeAny } from 'tds-ui/shared/utility';\r\nimport { ButtonSize, TDSConfigKey, TDSConfigService, WithConfig } from \"tds-ui/core/config\";\r\n\r\n\r\n\r\nimport { badgePresetColors } from './preset-colors';\r\nimport { TDSBadgeStatusType } from './types';\r\nimport { zoomBadgeMotion } from 'tds-ui/core/animation';\r\nimport { TDSNoAnimationDirective } from 'tds-ui/core/no-animation';\r\n\r\nconst TDS_CONFIG_MODULE_NAME: TDSConfigKey = 'badge';\r\n\r\n@Component({\r\n  selector: 'tds-badge',\r\n  exportAs: 'tdsBadge',\r\n  preserveWhitespaces: false,\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [zoomBadgeMotion],\r\n  template: `\r\n  <div class=\"box-border m-0 p-0 relative inline-block leading-none\">\r\n  <ng-container *ngIf=\"(status || (color && !standalone)) && !dot\">\r\n      <span\r\n        class=\"tds-badge-status-dot {{ colorStatus || presetColor }} relative -top-px inline-block  align-middle rounded-full\"\r\n        [style.background]=\"!presetColor && color\"\r\n        [ngClass]=\"{'w-2 h-2':size =='md','w-1.5 h-1.5':size == 'sm','w-2.5 h-2.5':size =='lg'}\"\r\n        [ngStyle]=\"tdsStyle\"\r\n      ></span>\r\n      <span class=\"tds-badge-status-text ml-2\" *ngIf='text'>\r\n        <ng-container *tdsStringTemplateOutlet=\"text\">{{ text }}</ng-container>\r\n      </span>\r\n    </ng-container>\r\n    <ng-content></ng-content>\r\n    <ng-container *tdsStringTemplateOutlet=\"count\">\r\n      <tds-badge-sup\r\n        *ngIf=\"showSup\"\r\n        [offset]=\"offset\"\r\n        [title]=\"title\"\r\n        [tdsStyle]=\"tdsStyle\"\r\n        [dot]=\"dot\"\r\n        [size]=\"size\"\r\n        [overflowCount]=\"overflowCount\"\r\n        [disableAnimation]=\"!!(standalone || status || color || noAnimation?.noAnimation)\"\r\n        [count]=\"count\"\r\n        [noAnimation]=\"!!noAnimation?.noAnimation\"\r\n        [standalone]=\"standalone\"\r\n        [class]=\"tdsClass\"\r\n        [placement]=\"placement\"\r\n      ></tds-badge-sup>\r\n    </ng-container>\r\n  </div>\r\n\r\n    \r\n    \r\n  `,\r\n  host: {\r\n    '[class.tds-badge-status]': 'status',\r\n    '[class.tds-badge-not-a-wrapper]': '!!(standalone || status || color)',\r\n    '[class.align-middle]': '!!(standalone || status || color) && !status',\r\n    '[class.align-baseline]': 'status',\r\n    'class': \"box-border m-0 p-0 relative inline-block leading-none\"\r\n  }\r\n})\r\nexport class TDSBadgeComponent implements OnChanges, OnDestroy, OnInit {\r\n  readonly _tdsModuleName: TDSConfigKey = TDS_CONFIG_MODULE_NAME;\r\n  static ngAcceptInputType_showZero: BooleanInput;\r\n  static ngAcceptInputType_showDot: BooleanInput;\r\n  static ngAcceptInputType_dot: BooleanInput;\r\n  static ngAcceptInputType_standalone: BooleanInput;\r\n  showSup = false;\r\n  presetColor: string | null = null;\r\n  dir: Direction = 'ltr';\r\n  private destroy$ = new Subject<void>();\r\n  @Input() @InputBoolean() showZero: boolean = false;\r\n  @Input() @InputBoolean() showDot = true;\r\n  @Input() @InputBoolean() standalone = false;\r\n  @Input() @InputBoolean() dot = false;\r\n  @Input() @WithConfig() overflowCount: number = 99;\r\n  @Input() @WithConfig() color?: string = undefined;\r\n  @Input() tdsStyle: { [key: string]: string }  | null = null;\r\n  @Input() text?: string | TemplateRef<void> | null = null;\r\n  @Input() title?: string | null | undefined;\r\n  @Input() status?: TDSBadgeStatusType | string;\r\n  @Input() count?: number | TemplateRef<TDSSafeAny>;\r\n  @Input() offset?: [number, number];\r\n  @Input() tdsClass?: string = \"bg-primary-1 dark:bg-d-primary-1 text-white\";\r\n  /**\r\n   * dùng cho status\r\n   */\r\n  @Input() size: ButtonSize = 'md';\r\n  @Input() placement: 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight' = 'topRight';\r\n  constructor(\r\n    public tdsConfigService: TDSConfigService,\r\n    private renderer: Renderer2,\r\n    private cdr: ChangeDetectorRef,\r\n    private elementRef: ElementRef,\r\n    @Optional() private directionality: Directionality,\r\n    @Host() @Optional() public noAnimation?: TDSNoAnimationDirective\r\n  ) {\r\n    // TODO: move to host after View Engine deprecation\r\n    this.elementRef.nativeElement.classList.add('tds-badge');\r\n  }\r\n  ngOnInit(): void {\r\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\r\n      this.dir = direction;\r\n      this.prepareBadgeForRtl();\r\n      this.cdr.detectChanges();\r\n    });\r\n    this.dir = this.directionality.value;\r\n    this.prepareBadgeForRtl();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const { color, showDot, dot, count, showZero } = changes;\r\n    if (color) {\r\n      this.presetColor = this.color && badgePresetColors.indexOf(this.color) !== -1 ? this.color : null;\r\n    }\r\n    if (showDot || dot || count || showZero) {\r\n      this.showSup = (this.showDot && this.dot) || this.count! > 0 || (this.count! <= 0 && this.showZero);\r\n    }\r\n  }\r\n\r\n  private prepareBadgeForRtl(): void {\r\n    if (this.isRtlLayout) {\r\n      this.renderer.addClass(this.elementRef.nativeElement, 'tds-badge-rtl');\r\n    } else {\r\n      this.renderer.removeClass(this.elementRef.nativeElement, 'tds-badge-rtl');\r\n    }\r\n  }\r\n\r\n  get isRtlLayout(): boolean {\r\n    return this.dir === 'rtl';\r\n  }\r\n\r\n  get colorStatus() {\r\n    if (!!this.status) {\r\n      return this.convertClass()\r\n    }\r\n    return null\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n  private convertClass() {\r\n    let result = null;\r\n\r\n    switch (this.status) {\r\n      case 'primary':\r\n        result = 'bg-primary-1 dark:bg-d-primary-1';\r\n        break;\r\n      case 'secondary':\r\n        result = 'bg-neutral-1-400 dark:bg-d-neutral-1-400';\r\n        break;\r\n      case 'success':\r\n        result = 'bg-success-400 dark:bg-d-success-400';\r\n        break;\r\n      case 'info':\r\n        result = 'bg-info-400 dark:bg-d-info-400';\r\n        break;\r\n      case 'warning':\r\n        result = 'bg-warning-400 dark:bg-d-warning-400';\r\n        break;\r\n      case 'error':\r\n        result = 'bg-error-400 dark:bg-d-error-400';\r\n        break;\r\n      default:\r\n        result = this.status;\r\n        break;\r\n\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","\r\n\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\n\r\nimport { badgePresetColors } from './preset-colors';\r\n\r\n@Component({\r\n  selector: 'tds-ribbon',\r\n  exportAs: 'tdsRibbon',\r\n  preserveWhitespaces: false,\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <ng-content></ng-content>\r\n    <div\r\n      class=\"tds-ribbon\"\r\n      [class]=\"presetColor && 'tds-ribbon-color-' + presetColor\"\r\n      [class.tds-ribbon-placement-end]=\"placement === 'end'\"\r\n      [class.tds-ribbon-placement-start]=\"placement === 'start'\"\r\n      [style.background-color]=\"!presetColor && color\"\r\n    >\r\n      <ng-container *tdsStringTemplateOutlet=\"text\">{{ text }}</ng-container>\r\n      <div class=\"tds-ribbon-corner\" [style.color]=\"!presetColor && color\"></div>\r\n    </div>\r\n  `\r\n})\r\nexport class TDSRibbonComponent implements OnChanges {\r\n  @Input() color: string | undefined;\r\n  @Input() placement: 'start' | 'end' = 'end';\r\n  @Input() text: string | TemplateRef<void> | null = null;\r\n  presetColor: string | null = null;\r\n\r\n  constructor(private elementRef: ElementRef) {\r\n    // TODO: move to host after View Engine deprecation\r\n    this.elementRef.nativeElement.classList.add('tds-ribbon-wrapper');\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const { color } = changes;\r\n    if (color) {\r\n      this.presetColor = this.color && badgePresetColors.indexOf(this.color) !== -1 ? this.color : null;\r\n    }\r\n  }\r\n}\r\n","\r\n\r\nimport { BidiModule } from '@angular/cdk/bidi';\r\nimport { ObserversModule } from '@angular/cdk/observers';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { TDSNoAnimationModule } from 'tds-ui/core/no-animation';\r\nimport { TDSOutletModule } from 'tds-ui/core/outlet';\r\n\r\nimport { TDSBadgeSupComponent } from './badge-sup.component';\r\nimport { TDSBadgeComponent } from './badge.component';\r\nimport { TDSRibbonComponent } from './ribbon.component';\r\n\r\n@NgModule({\r\n  declarations: [TDSBadgeComponent, TDSBadgeSupComponent, TDSRibbonComponent],\r\n  exports: [TDSBadgeComponent, TDSRibbonComponent],\r\n  imports: [BidiModule, CommonModule, ObserversModule, TDSOutletModule, TDSNoAnimationModule]\r\n})\r\nexport class TDSBadgeModule {}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1","i2","_c0","i6.TDSBadgeSupComponent"],"mappings":"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"}