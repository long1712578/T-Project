import { __decorate } from 'tslib';
import * as i0 from '@angular/core';
import { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, NgModule } from '@angular/core';
import { Subject } from 'rxjs';
import { InputBoolean } from 'tds-ui/shared/utility';
import * as i1 from '@angular/common';
import { CommonModule } from '@angular/common';
import { BidiModule } from '@angular/cdk/bidi';
import { FormsModule } from '@angular/forms';

function TDSTagComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵelementStart(1, "div", 3);
    i0.ɵɵelementContainer(2, 4);
    i0.ɵɵelementEnd();
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    const _r3 = i0.ɵɵreference(5);
    i0.ɵɵadvance(1);
    i0.ɵɵclassMap(ctx_r0.cssClass);
    i0.ɵɵproperty("ngStyle", ctx_r0.tdsStyle);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngTemplateOutlet", _r3);
} }
const _c0 = function (a0, a1, a2) { return { "pr-0.5 pl-1": a0, "py-0.5 pr-1 pl-1.5": a1, "py-1 pr-1.5 pl-2": a2 }; };
function TDSTagComponent_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    const _r6 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵelementStart(1, "div", 5)(2, "span", 6);
    i0.ɵɵelementContainer(3, 4);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(4, "span", 7);
    i0.ɵɵlistener("click", function TDSTagComponent_ng_container_2_Template_span_click_4_listener($event) { i0.ɵɵrestoreView(_r6); const ctx_r5 = i0.ɵɵnextContext(); return ctx_r5.onClickClose($event); });
    i0.ɵɵelementEnd()();
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    const _r3 = i0.ɵɵreference(5);
    i0.ɵɵadvance(1);
    i0.ɵɵclassMapInterpolate1("bg-neutral-3-200 dark:bg-d-neutral-3-200  border border-transparent inline-flex border-box items-center hover:bg-neutral-3-300  dark:hover:bg-d-neutral-3-300  ", ctx_r1.getRounded, "");
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction3(6, _c0, ctx_r1.size === "sm", ctx_r1.size === "md", ctx_r1.size === "lg"))("ngStyle", ctx_r1.tdsStyle);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngTemplateOutlet", _r3);
} }
const _c1 = function (a0, a1, a2, a3, a4) { return { "ring-primary-1 border-primary-1 bg-primary-1 focus:bg-primary-1 focus:border-primary-1 ring-opacity-20 focus:ring text-white": a0, "text-neutral-1-600 dark:text-d-neutral-1-600 border-neutral-2-200  dark:border-d-neutral-2-200 hover:bg-neutral-3-50 dark:hover:bg-d-neutral-3-200": a1, "py-0.5 px-3.5": a2, "py-1 px-4": a3, "py-1.5 px-5": a4 }; };
function TDSTagComponent_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵelementStart(1, "button", 5);
    i0.ɵɵelementContainer(2, 4);
    i0.ɵɵelementEnd();
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext();
    const _r3 = i0.ɵɵreference(5);
    i0.ɵɵadvance(1);
    i0.ɵɵclassMapInterpolate1("text-body-2 w-full font-semibold border focus:outline-none ", ctx_r2.getRounded, "");
    i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction5(6, _c1, ctx_r2.checked, !ctx_r2.checked, ctx_r2.size === "sm", ctx_r2.size === "md", ctx_r2.size === "lg"))("ngStyle", ctx_r2.tdsStyle);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngTemplateOutlet", _r3);
} }
function TDSTagComponent_ng_template_4_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵprojection(0);
} }
const _c2 = ["*"];
class TDSTagComponent {
    constructor(_cdr, renderer, elementRef) {
        this._cdr = _cdr;
        this.renderer = renderer;
        this.elementRef = elementRef;
        this.mode = 'default';
        this.type = 'default';
        this.status = 'secondary';
        this.checked = false;
        this.size = "md";
        this.disabled = false;
        this.rounded = null;
        this.close = new EventEmitter();
        this.checkedChange = new EventEmitter();
        this.cssClass = '';
        this.destroy$ = new Subject();
    }
    ngOnInit() {
        this.buildCss();
    }
    ngOnDestroy() {
        this.destroy$.next();
        this.destroy$.complete();
    }
    ngOnChanges(changes) {
        // const { size, disabled, rounded } = changes;
        // if (size || disabled || rounded) {
        this.buildCss();
        this._cdr.markForCheck();
        // }
    }
    onClickClose(e) {
        if (this.mode === 'closeable' && !this.disabled) {
            this.close.emit(e);
            if (!e.defaultPrevented) {
                this.renderer.removeChild(this.renderer.parentNode(this.elementRef.nativeElement), this.elementRef.nativeElement);
            }
        }
    }
    updateCheckedStatus() {
        if (this.mode === 'checkable' && !this.disabled) {
            this.checked = !this.checked;
            this.checkedChange.emit(this.checked);
        }
    }
    buildCss() {
        if (this.mode == 'default') {
            if (this.type == 'default') {
                this.cssClass = this.cssDefault();
            }
            else {
                this.cssClass = this.cssOutline();
            }
        }
    }
    get getRounded() {
        if (this.rounded) {
            return this.rounded;
        }
        else {
            if (this.mode === 'checkable') {
                return 'rounded-md';
            }
            else {
                return 'rounded';
            }
        }
    }
    cssDefault() {
        let cls = 'px-2 py-0.5  text-caption-2 font-semibold text-white ';
        let clsBackground = this.convertClass();
        return ` ${cls}  ${this.getRounded} ${clsBackground}`;
    }
    cssOutline() {
        let cls = 'px-2 py-0.5  text-caption-2 font-semibold  border';
        let clsBackground = this.convertOutlineClass();
        return ` ${cls}  ${this.getRounded} ${clsBackground}`;
    }
    convertClass() {
        let result = null;
        switch (this.status) {
            case 'primary':
                result = 'bg-primary-1 dark:bg-d-primary-1';
                break;
            case 'secondary':
                result = 'bg-neutral-1-400 dark:bg-d-neutral-1-300';
                break;
            case 'success':
                result = 'bg-success-400 dark:bg-d-success-400';
                break;
            case 'info':
                result = 'bg-info-400 dark:bg-d-info-400';
                break;
            case 'warning':
                result = 'bg-warning-400 dark:bg-d-warning-400';
                break;
            case 'error':
                result = 'bg-error-400 dark:bg-d-error-400';
                break;
            default:
                result = this.status;
                break;
        }
        return result;
    }
    convertOutlineClass() {
        let result = null;
        switch (this.status) {
            case 'primary':
                result = ' bg-primary-3 text-primary-1 border-primary-1 dark:bg-d-primary-3 dark:text-d-primary-1 dark:border-d-primary-1';
                break;
            case 'secondary':
                result = ' bg-neutral-3-100 border-neutral-1-300 border text-neutral-1-700 dark:bg-d-neutral-3-100 dark:border-d-neutral-1-300 dark:text-d-neutral-1-700';
                break;
            case 'success':
                result = ' bg-success-100 border-success-300  text-success-400 dark:bg-d-success-100 dark:border-d-success-300  dark:text-d-success-400';
                break;
            case 'info':
                result = ' bg-info-100 border-info-300  text-info-400 dark:bg-d-info-100 dark:border-d-info-300  dark:text-d-info-400';
                break;
            case 'warning':
                result = ' bg-warning-100 border-warning-300  text-warning-400 dark:bg-d-warning-100 dark:border-d-warning-300  dark:text-d-warning-400';
                break;
            case 'error':
                result = 'bg-error-100 border-error-300  text-error-400 dark:bg-d-error-100 dark:border-d-error-300  dark:text-d-error-400';
                break;
            default:
                result = this.status;
                break;
        }
        return result;
    }
}
TDSTagComponent.ɵfac = function TDSTagComponent_Factory(t) { return new (t || TDSTagComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef)); };
TDSTagComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TDSTagComponent, selectors: [["tds-tag"]], hostAttrs: [1, "group", "inline-flex", "box-content"], hostBindings: function TDSTagComponent_HostBindings(rf, ctx) { if (rf & 1) {
        i0.ɵɵlistener("click", function TDSTagComponent_click_HostBindingHandler() { return ctx.updateCheckedStatus(); });
    } }, inputs: { mode: "mode", type: "type", status: "status", tdsStyle: "tdsStyle", checked: "checked", size: "size", disabled: "disabled", rounded: "rounded" }, outputs: { close: "close", checkedChange: "checkedChange" }, exportAs: ["tdsTag"], features: [i0.ɵɵNgOnChangesFeature], ngContentSelectors: _c2, decls: 6, vars: 4, consts: [[3, "ngSwitch"], [4, "ngSwitchCase"], ["content", ""], [3, "ngStyle"], [3, "ngTemplateOutlet"], [3, "ngClass", "ngStyle"], [1, "text-body-2", "font-regular", "text-neutral-1-900", "dark:text-d-neutral-1-900"], [1, "ml-2", "tdsi-close-fill", "cursor-pointer", "text-base", "leading-4", "text-neutral-1-500", "dark:text-d-neutral-1-500", "group-hover:text-neutral-1-700", "dark:group-hover:text-d-neutral-1-700", 3, "click"]], template: function TDSTagComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵprojectionDef();
        i0.ɵɵelementContainerStart(0, 0);
        i0.ɵɵtemplate(1, TDSTagComponent_ng_container_1_Template, 3, 4, "ng-container", 1);
        i0.ɵɵtemplate(2, TDSTagComponent_ng_container_2_Template, 5, 10, "ng-container", 1);
        i0.ɵɵtemplate(3, TDSTagComponent_ng_container_3_Template, 3, 12, "ng-container", 1);
        i0.ɵɵelementContainerEnd();
        i0.ɵɵtemplate(4, TDSTagComponent_ng_template_4_Template, 1, 0, "ng-template", null, 2, i0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        i0.ɵɵproperty("ngSwitch", ctx.mode);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngSwitchCase", "default");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngSwitchCase", "closeable");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngSwitchCase", "checkable");
    } }, directives: [i1.NgSwitch, i1.NgSwitchCase, i1.NgStyle, i1.NgTemplateOutlet, i1.NgClass], encapsulation: 2, changeDetection: 0 });
__decorate([
    InputBoolean()
], TDSTagComponent.prototype, "checked", void 0);
__decorate([
    InputBoolean()
], TDSTagComponent.prototype, "disabled", void 0);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSTagComponent, [{
        type: Component,
        args: [{ selector: 'tds-tag', exportAs: 'tdsTag', preserveWhitespaces: false, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: {
                    class: "group inline-flex box-content",
                    '(click)': 'updateCheckedStatus()'
                }, template: "<ng-container [ngSwitch]=\"mode\">\r\n    <ng-container *ngSwitchCase=\"'default'\">\r\n        <div [class]=\"cssClass\" [ngStyle]=\"tdsStyle!\">\r\n            <ng-container [ngTemplateOutlet]=\"content\"></ng-container>\r\n        </div>\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'closeable'\">\r\n        <div class=\"bg-neutral-3-200 dark:bg-d-neutral-3-200  border border-transparent inline-flex border-box items-center hover:bg-neutral-3-300  dark:hover:bg-d-neutral-3-300  {{getRounded}}\"\r\n            [ngClass]=\"{'pr-0.5 pl-1':size === 'sm',\r\n        'py-0.5 pr-1 pl-1.5':size === 'md',\r\n        'py-1 pr-1.5 pl-2':size === 'lg'\r\n        }\" [ngStyle]=\"tdsStyle!\">\r\n            <span class=\"text-body-2 font-regular text-neutral-1-900 dark:text-d-neutral-1-900\">\r\n                <ng-container [ngTemplateOutlet]=\"content\"></ng-container>\r\n            </span>\r\n            <span (click)=\"onClickClose($event)\"\r\n                class=' ml-2 tdsi-close-fill cursor-pointer text-base leading-4  text-neutral-1-500 dark:text-d-neutral-1-500   group-hover:text-neutral-1-700 dark:group-hover:text-d-neutral-1-700'>\r\n            </span>\r\n        </div>\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'checkable'\">\r\n        <button class=\"text-body-2 w-full font-semibold border focus:outline-none {{getRounded}}\" [ngClass]=\"{'ring-primary-1 border-primary-1 bg-primary-1 focus:bg-primary-1 focus:border-primary-1 ring-opacity-20 focus:ring text-white': checked,\r\n        'text-neutral-1-600 dark:text-d-neutral-1-600 border-neutral-2-200  dark:border-d-neutral-2-200 hover:bg-neutral-3-50 dark:hover:bg-d-neutral-3-200': !checked,       \r\n        'py-0.5 px-3.5':size === 'sm',\r\n        'py-1 px-4':size === 'md',\r\n        'py-1.5 px-5':size === 'lg'\r\n        }\" [ngStyle]=\"tdsStyle!\">\r\n            <ng-container [ngTemplateOutlet]=\"content\"></ng-container>\r\n        </button>\r\n    </ng-container>\r\n</ng-container>\r\n<ng-template #content>\r\n    <ng-content></ng-content>\r\n</ng-template>" }]
    }], function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.Renderer2 }, { type: i0.ElementRef }]; }, { mode: [{
            type: Input
        }], type: [{
            type: Input
        }], status: [{
            type: Input
        }], tdsStyle: [{
            type: Input
        }], checked: [{
            type: Input
        }], size: [{
            type: Input
        }], disabled: [{
            type: Input
        }], rounded: [{
            type: Input
        }], close: [{
            type: Output
        }], checkedChange: [{
            type: Output
        }] }); })();

class TDSTagModule {
}
TDSTagModule.ɵfac = function TDSTagModule_Factory(t) { return new (t || TDSTagModule)(); };
TDSTagModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: TDSTagModule });
TDSTagModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [[BidiModule, CommonModule, FormsModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSTagModule, [{
        type: NgModule,
        args: [{
                imports: [BidiModule, CommonModule, FormsModule],
                declarations: [TDSTagComponent],
                exports: [TDSTagComponent]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0.ɵɵsetNgModuleScope(TDSTagModule, { declarations: [TDSTagComponent], imports: [BidiModule, CommonModule, FormsModule], exports: [TDSTagComponent] }); })();

/**
 * Generated bundle index. Do not edit.
 */

export { TDSTagComponent, TDSTagModule };
//# sourceMappingURL=tds-ui-tag.mjs.map
