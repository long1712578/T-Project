import { CommonModule } from '@angular/common';
import * as i0 from '@angular/core';
import { Directive, Optional, Inject, Input, NgModule } from '@angular/core';
import { coerceElement } from '@angular/cdk/coercion';
import { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';

const DISABLED_CLASSNAME = 'tds-animate-disabled';
class TDSNoAnimationDirective {
    constructor(element, renderer, animationType) {
        this.element = element;
        this.renderer = renderer;
        this.animationType = animationType;
        this.noAnimation = false;
    }
    ngOnChanges() {
        this.updateClass();
    }
    ngAfterViewInit() {
        this.updateClass();
    }
    updateClass() {
        const element = coerceElement(this.element);
        if (!element) {
            return;
        }
        if (this.noAnimation || this.animationType === 'NoopAnimations') {
            this.renderer.addClass(element, DISABLED_CLASSNAME);
        }
        else {
            this.renderer.removeClass(element, DISABLED_CLASSNAME);
        }
    }
}
TDSNoAnimationDirective.ɵfac = function TDSNoAnimationDirective_Factory(t) { return new (t || TDSNoAnimationDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };
TDSNoAnimationDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: TDSNoAnimationDirective, selectors: [["", "noAnimation", ""]], inputs: { noAnimation: "noAnimation" }, exportAs: ["noAnimation"], features: [i0.ɵɵNgOnChangesFeature] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSNoAnimationDirective, [{
        type: Directive,
        args: [{
                selector: '[noAnimation]',
                exportAs: 'noAnimation'
            }]
    }], function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: undefined, decorators: [{
                type: Optional
            }, {
                type: Inject,
                args: [ANIMATION_MODULE_TYPE]
            }] }]; }, { noAnimation: [{
            type: Input
        }] }); })();

class TDSNoAnimationModule {
}
TDSNoAnimationModule.ɵfac = function TDSNoAnimationModule_Factory(t) { return new (t || TDSNoAnimationModule)(); };
TDSNoAnimationModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: TDSNoAnimationModule });
TDSNoAnimationModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TDSNoAnimationModule, [{
        type: NgModule,
        args: [{
                declarations: [TDSNoAnimationDirective],
                exports: [TDSNoAnimationDirective],
                imports: [CommonModule]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0.ɵɵsetNgModuleScope(TDSNoAnimationModule, { declarations: [TDSNoAnimationDirective], imports: [CommonModule], exports: [TDSNoAnimationDirective] }); })();

/**
 * Generated bundle index. Do not edit.
 */

export { TDSNoAnimationDirective, TDSNoAnimationModule };
//# sourceMappingURL=tds-ui-core-no-animation.mjs.map
