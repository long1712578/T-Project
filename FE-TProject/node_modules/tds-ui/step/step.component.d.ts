import { BooleanInput } from '@angular/cdk/coercion';
import { ChangeDetectorRef, OnDestroy, TemplateRef } from '@angular/core';
import { Subject } from 'rxjs';
import { ButtonSize, NgClassType } from "tds-ui/core/config";
import * as i0 from "@angular/core";
export declare class TDSStepComponent implements OnDestroy {
    private cdr;
    static ngAcceptInputType_disabled: BooleanInput;
    processDotTemplate?: TemplateRef<void>;
    tdsTitle?: string | TemplateRef<void>;
    subtitle?: string | TemplateRef<void>;
    description?: string | TemplateRef<void>;
    disabled: boolean;
    get status(): string;
    set status(status: string);
    isCustomStatus: boolean;
    private _status;
    get icon(): NgClassType | TemplateRef<void> | undefined;
    set icon(value: NgClassType | TemplateRef<void> | undefined);
    oldAPIIcon: boolean;
    private _icon?;
    customProcessTemplate?: TemplateRef<{
        $implicit: TemplateRef<void>;
        status: string;
        index: number;
    }>;
    mode: 'default' | 'bar';
    direction: string;
    first: boolean;
    index: number;
    last: boolean;
    outStatus: string;
    showProcessDot: boolean;
    clickable: boolean;
    showStep: boolean;
    click$: Subject<number>;
    classMapTail: NgClassType;
    borderStyle: string;
    backgroundColor: string;
    private _size;
    get size(): ButtonSize;
    set size(size: ButtonSize);
    private _labelPlacement;
    get labelPlacement(): 'horizontal' | 'vertical';
    set labelPlacement(labelPlacement: 'horizontal' | 'vertical');
    get currentIndex(): number;
    set currentIndex(current: number);
    private _currentIndex;
    get activeBar(): boolean;
    constructor(cdr: ChangeDetectorRef);
    onClick(): void;
    enable(): void;
    disable(): void;
    markForCheck(): void;
    ngOnDestroy(): void;
    get onlyTitle(): boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSStepComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TDSStepComponent, "tds-step", ["tdsStep"], { "tdsTitle": "tdsTitle"; "subtitle": "subtitle"; "description": "description"; "disabled": "disabled"; "status": "status"; "icon": "icon"; }, {}, never, never>;
}
//# sourceMappingURL=step.component.d.ts.map