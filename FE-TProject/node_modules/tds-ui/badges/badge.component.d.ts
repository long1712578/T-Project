import { Direction, Directionality } from '@angular/cdk/bidi';
import { BooleanInput } from '@angular/cdk/coercion';
import { ChangeDetectorRef, ElementRef, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChanges, TemplateRef } from '@angular/core';
import { TDSSafeAny } from 'tds-ui/shared/utility';
import { ButtonSize, TDSConfigKey, TDSConfigService } from "tds-ui/core/config";
import { TDSBadgeStatusType } from './types';
import { TDSNoAnimationDirective } from 'tds-ui/core/no-animation';
import * as i0 from "@angular/core";
export declare class TDSBadgeComponent implements OnChanges, OnDestroy, OnInit {
    tdsConfigService: TDSConfigService;
    private renderer;
    private cdr;
    private elementRef;
    private directionality;
    noAnimation?: TDSNoAnimationDirective | undefined;
    readonly _tdsModuleName: TDSConfigKey;
    static ngAcceptInputType_showZero: BooleanInput;
    static ngAcceptInputType_showDot: BooleanInput;
    static ngAcceptInputType_dot: BooleanInput;
    static ngAcceptInputType_standalone: BooleanInput;
    showSup: boolean;
    presetColor: string | null;
    dir: Direction;
    private destroy$;
    showZero: boolean;
    showDot: boolean;
    standalone: boolean;
    dot: boolean;
    overflowCount: number;
    color?: string;
    tdsStyle: {
        [key: string]: string;
    } | null;
    text?: string | TemplateRef<void> | null;
    title?: string | null | undefined;
    status?: TDSBadgeStatusType | string;
    count?: number | TemplateRef<TDSSafeAny>;
    offset?: [number, number];
    tdsClass?: string;
    /**
     * dùng cho status
     */
    size: ButtonSize;
    placement: 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight';
    constructor(tdsConfigService: TDSConfigService, renderer: Renderer2, cdr: ChangeDetectorRef, elementRef: ElementRef, directionality: Directionality, noAnimation?: TDSNoAnimationDirective | undefined);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    private prepareBadgeForRtl;
    get isRtlLayout(): boolean;
    get colorStatus(): string | null | undefined;
    ngOnDestroy(): void;
    private convertClass;
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSBadgeComponent, [null, null, null, null, { optional: true; }, { optional: true; host: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TDSBadgeComponent, "tds-badge", ["tdsBadge"], { "showZero": "showZero"; "showDot": "showDot"; "standalone": "standalone"; "dot": "dot"; "overflowCount": "overflowCount"; "color": "color"; "tdsStyle": "tdsStyle"; "text": "text"; "title": "title"; "status": "status"; "count": "count"; "offset": "offset"; "tdsClass": "tdsClass"; "size": "size"; "placement": "placement"; }, {}, never, ["*"]>;
}
//# sourceMappingURL=badge.component.d.ts.map