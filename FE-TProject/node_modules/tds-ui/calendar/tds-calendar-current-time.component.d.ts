import { ChangeDetectorRef, NgZone, OnChanges, SimpleChanges, TemplateRef } from '@angular/core';
import { BehaviorSubject, Observable } from 'rxjs';
import { TDSDestroyService } from 'tds-ui/core/services';
import * as i0 from "@angular/core";
export declare class TDSCalendarCurrentTimeComponent implements OnChanges {
    private zone;
    private cdr;
    private destroy$;
    columnDate: Date;
    dayStartHour: number;
    dayStartMinute: number;
    dayEndHour: number;
    dayEndMinute: number;
    hourSegments: number;
    hourDuration: number;
    hourSegmentHeight: number;
    customTemplate: TemplateRef<any>;
    widthColTime: number;
    columnDate$: BehaviorSubject<Date | undefined>;
    marker$: Observable<{
        isVisible: boolean;
        top: number;
        now: Date;
    }>;
    constructor(zone: NgZone, cdr: ChangeDetectorRef, destroy$: TDSDestroyService);
    ngOnChanges(changes: SimpleChanges): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSCalendarCurrentTimeComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TDSCalendarCurrentTimeComponent, "tds-calendar-current-time", never, { "columnDate": "columnDate"; "dayStartHour": "dayStartHour"; "dayStartMinute": "dayStartMinute"; "dayEndHour": "dayEndHour"; "dayEndMinute": "dayEndMinute"; "hourSegments": "hourSegments"; "hourDuration": "hourDuration"; "hourSegmentHeight": "hourSegmentHeight"; "customTemplate": "customTemplate"; "widthColTime": "widthColTime"; }, {}, never, never>;
}
//# sourceMappingURL=tds-calendar-current-time.component.d.ts.map