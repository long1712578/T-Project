import { ChangeDetectorRef, EventEmitter, OnChanges, OnInit, SimpleChanges } from '@angular/core';
import { CandyDate, WeekDayIndex } from 'tds-ui/core/time';
import { TDSCalendarMode } from 'tds-ui/date-picker';
import { DateHelperService, TDSCalendarI18nInterface, TDSI18nService } from 'tds-ui/i18n';
import * as i0 from "@angular/core";
export declare class TDSCalendarDatepickerComponent implements OnInit, OnChanges {
    private cdr;
    private i18n;
    private dateHelper;
    tdsMode: TDSCalendarMode;
    tdsViewDate: Date;
    locale: TDSCalendarI18nInterface;
    tdsWeekStartsOn: WeekDayIndex | undefined;
    readonly tdsViewDateChange: EventEmitter<Date>;
    readonly tdsValueChange: EventEmitter<Date[]>;
    activeDate: CandyDate;
    formatDate: string;
    viewDate: string;
    dropdownVisible: boolean;
    constructor(cdr: ChangeDetectorRef, i18n: TDSI18nService, dateHelper: DateHelperService);
    ngOnChanges(changes: SimpleChanges): void;
    ngOnInit(): void;
    onChangeDatePicker(result: Date): void;
    onNextPrevious(e: MouseEvent, step: number): void;
    private updateFormatDate;
    valueChange(): void;
    onDropdownOutsideClick(): void;
    private getDayOfWeek;
    private getDayOfMonth;
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSCalendarDatepickerComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TDSCalendarDatepickerComponent, "tds-calendar-datepicker", ["tdsCalendarDatepicker"], { "tdsMode": "tdsMode"; "tdsViewDate": "tdsViewDate"; "locale": "locale"; "tdsWeekStartsOn": "tdsWeekStartsOn"; }, { "tdsViewDateChange": "tdsViewDateChange"; "tdsValueChange": "tdsValueChange"; }, never, never>;
}
//# sourceMappingURL=tds-calendar-datepicker.component.d.ts.map