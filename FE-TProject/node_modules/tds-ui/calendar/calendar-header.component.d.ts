import { ChangeDetectorRef, EventEmitter, OnChanges, OnInit, SimpleChanges } from '@angular/core';
import { CandyDate } from 'tds-ui/core/time';
import { TDSCalendarMode } from 'tds-ui/date-picker';
import { DateHelperService, TDSI18nService as I18n } from 'tds-ui/i18n';
import * as i0 from "@angular/core";
export declare class TDSCalendarHeaderComponent implements OnInit, OnChanges {
    private i18n;
    private dateHelper;
    private cdr;
    tdsMode: TDSCalendarMode;
    tdsFullscreen: boolean;
    tdsViewDate: Date;
    readonly tdsModeChange: EventEmitter<TDSCalendarMode>;
    readonly tdsActiveDateChange: EventEmitter<CandyDate>;
    readonly tdsViewDateChange: EventEmitter<Date>;
    hiddenTodaybtn: boolean;
    activeDate: CandyDate;
    get activeYear(): number;
    get activeMonth(): number;
    get size(): "sm" | "md";
    get dayTypeText(): string;
    get weekTypeText(): string;
    get yearTypeText(): string;
    get monthTypeText(): string;
    get toDayTypeText(): string;
    constructor(i18n: I18n, dateHelper: DateHelperService, cdr: ChangeDetectorRef);
    ngOnInit(): void;
    onToday(e: MouseEvent): void;
    onModeChange(e: TDSCalendarMode): void;
    onValueChange(date: Date): void;
    ngOnChanges(changes: SimpleChanges): void;
    private updateDate;
    private checkHiddenTodayBtn;
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSCalendarHeaderComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TDSCalendarHeaderComponent, "tds-calendar-header", ["tdsCalendarHeader"], { "tdsMode": "tdsMode"; "tdsFullscreen": "tdsFullscreen"; "tdsViewDate": "tdsViewDate"; }, { "tdsModeChange": "tdsModeChange"; "tdsActiveDateChange": "tdsActiveDateChange"; "tdsViewDateChange": "tdsViewDateChange"; }, never, never>;
}
//# sourceMappingURL=calendar-header.component.d.ts.map