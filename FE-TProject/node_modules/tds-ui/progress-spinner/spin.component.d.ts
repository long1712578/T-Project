import { Direction, Directionality } from '@angular/cdk/bidi';
import { BooleanInput, NumberInput } from '@angular/cdk/coercion';
import { ChangeDetectorRef, OnChanges, OnDestroy, OnInit, SimpleChanges, TemplateRef } from '@angular/core';
import { TDSThemePalette } from 'tds-ui/shared/common';
import { TDSSafeAny } from 'tds-ui/shared/utility';
import { ButtonSize, TDSConfigKey, TDSConfigService } from 'tds-ui/core/config';
import * as i0 from "@angular/core";
export declare class TDSSpinComponent implements OnChanges, OnDestroy, OnInit {
    tdsConfigService: TDSConfigService;
    private cdr;
    private directionality;
    readonly _tdsModuleName: TDSConfigKey;
    static ngAcceptInputType_delay: NumberInput;
    static ngAcceptInputType_simple: BooleanInput;
    static ngAcceptInputType_spinning: BooleanInput;
    indicator: TemplateRef<TDSSafeAny> | null;
    size: ButtonSize;
    tip: string | null;
    delay: number;
    simple: boolean;
    spinning: boolean;
    color: TDSThemePalette;
    private destroy$;
    private spinning$;
    private delay$;
    isLoading: boolean;
    dir: Direction;
    constructor(tdsConfigService: TDSConfigService, cdr: ChangeDetectorRef, directionality: Directionality);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSSpinComponent, [null, null, { optional: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TDSSpinComponent, "tds-spin", ["tdsSpin"], { "indicator": "indicator"; "size": "size"; "tip": "tip"; "delay": "delay"; "simple": "simple"; "spinning": "spinning"; "color": "color"; }, {}, never, ["*"]>;
}
//# sourceMappingURL=spin.component.d.ts.map