import { ElementRef, EventEmitter, OnChanges, SimpleChanges } from "@angular/core";
import { CanDisable, CanDisableCtor, TDSThemePalette } from "tds-ui/shared/common";
import { ButtonSize, NgClassInterface } from "tds-ui/core/config";
import { TDSButtonMenuTrigger } from "tds-ui/button-menu";
import * as i0 from "@angular/core";
declare class TAButtonSplitBase {
    _elementRef: ElementRef;
    constructor(_elementRef: ElementRef);
}
declare const _TButtonSplitMixinBase: CanDisableCtor & typeof TAButtonSplitBase;
export declare class TDSButtonSplit extends _TButtonSplitMixinBase implements CanDisable, OnChanges {
    defaultColor: TDSThemePalette;
    private _color;
    private _size;
    listClassLabel: Array<string>;
    listClassButton: Array<string>;
    readonly clickButton: EventEmitter<MouseEvent>;
    trigger: TDSButtonMenuTrigger;
    buttonElement: ElementRef;
    disabled: boolean;
    ngClsButton: NgClassInterface;
    ngClsLabel: NgClassInterface;
    get color(): TDSThemePalette;
    set color(val: TDSThemePalette);
    get size(): ButtonSize;
    set size(val: ButtonSize);
    constructor(elementRef: ElementRef);
    ngOnChanges(changes: SimpleChanges): void;
    private p_UpdateClass;
    _getHostElement(): any;
    onClickLabel(event: MouseEvent): void;
    onClickDropdown(event: MouseEvent): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSButtonSplit, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TDSButtonSplit, "tds-button-split", never, { "disabled": "disabled"; "color": "color"; "size": "size"; }, { "clickButton": "clickButton"; }, never, [".js-label", ".js-content"]>;
}
export {};
//# sourceMappingURL=button-split.d.ts.map