import { Direction, Directionality } from '@angular/cdk/bidi';
import { BooleanInput, NumberInput } from '@angular/cdk/coercion';
import { ChangeDetectorRef, EventEmitter, OnChanges, OnDestroy, OnInit, TemplateRef } from '@angular/core';
import { Observable, Subscription } from 'rxjs';
import { TDSI18nService, TDSUploadI18nInterface } from 'tds-ui/i18n';
import { TDSIconRenderTemplate, TDSShowUploadList, TDSUploadChangeParam, TDSUploadFile, TDSUploadListType, TDSUploadTransformFileType, TDSUploadType, TDSUploadXHRArgs, UploadFilter, ZipButtonOptions } from './interface';
import { TDSUploadBtnComponent } from './upload-btn.component';
import { TDSUploadListComponent } from './upload-list.component';
import * as i0 from "@angular/core";
export declare class TDSUploadComponent implements OnInit, OnChanges, OnDestroy {
    private cdr;
    private i18n;
    private directionality;
    static ngAcceptInputType_limit: NumberInput;
    static ngAcceptInputType_size: NumberInput;
    static ngAcceptInputType_directory: BooleanInput;
    static ngAcceptInputType_isOpenFileDialogOnClick: BooleanInput;
    static ngAcceptInputType_disabled: BooleanInput;
    static ngAcceptInputType_multiple: BooleanInput;
    static ngAcceptInputType_showUploadList: BooleanInput | TDSShowUploadList;
    static ngAcceptInputType_showButton: BooleanInput;
    static ngAcceptInputType_withCredentials: BooleanInput;
    private destroy$;
    uploadComp: TDSUploadBtnComponent;
    listComp: TDSUploadListComponent;
    locale: TDSUploadI18nInterface;
    dir: Direction;
    type: TDSUploadType;
    limit: number;
    size: number;
    fileType?: string;
    accept?: string | string[];
    action?: string | ((file: TDSUploadFile) => string | Observable<string>);
    directory: boolean;
    isOpenFileDialogOnClick: boolean;
    beforeUpload?: (file: TDSUploadFile, fileList: TDSUploadFile[]) => boolean | Observable<boolean>;
    customRequest?: (item: TDSUploadXHRArgs) => Subscription;
    data?: {} | ((file: TDSUploadFile) => {} | Observable<{}>);
    filter: UploadFilter[];
    fileList: TDSUploadFile[];
    disabled: boolean;
    headers?: {} | ((file: TDSUploadFile) => {} | Observable<{}>);
    listType: TDSUploadListType;
    multiple: boolean;
    name: string;
    private _showUploadList;
    set showUploadList(value: boolean | TDSShowUploadList);
    get showUploadList(): boolean | TDSShowUploadList;
    showButton: boolean;
    withCredentials: boolean;
    remove?: (file: TDSUploadFile) => boolean | Observable<boolean>;
    preview?: (file: TDSUploadFile) => void;
    previewFile?: (file: TDSUploadFile) => Observable<string>;
    previewIsImage?: (file: TDSUploadFile) => boolean;
    transformFile?: (file: TDSUploadFile) => TDSUploadTransformFileType;
    download?: (file: TDSUploadFile) => void;
    iconRender: TDSIconRenderTemplate | null;
    fileListRender: TemplateRef<void> | null;
    readonly uploadChange: EventEmitter<TDSUploadChangeParam>;
    readonly fileListChange: EventEmitter<TDSUploadFile[]>;
    _btnOptions?: ZipButtonOptions;
    private zipOptions;
    constructor(cdr: ChangeDetectorRef, i18n: TDSI18nService, directionality: Directionality);
    private fileToObject;
    private getFileItem;
    private removeFileItem;
    private onStart;
    private onProgress;
    private onSuccess;
    private onError;
    private dragState?;
    fileDrop(e: DragEvent): void;
    private detectChangesList;
    onRemove: (file: TDSUploadFile) => void;
    private prefixCls;
    classList: string[];
    private setClassMap;
    ngOnInit(): void;
    ngOnChanges(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSUploadComponent, [null, null, { optional: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TDSUploadComponent, "tds-upload", ["tdsUpload"], { "type": "type"; "limit": "limit"; "size": "size"; "fileType": "fileType"; "accept": "accept"; "action": "action"; "directory": "directory"; "isOpenFileDialogOnClick": "isOpenFileDialogOnClick"; "beforeUpload": "beforeUpload"; "customRequest": "customRequest"; "data": "data"; "filter": "filter"; "fileList": "fileList"; "disabled": "disabled"; "headers": "headers"; "listType": "listType"; "multiple": "multiple"; "name": "name"; "showUploadList": "showUploadList"; "showButton": "showButton"; "withCredentials": "withCredentials"; "remove": "remove"; "preview": "preview"; "previewFile": "previewFile"; "previewIsImage": "previewIsImage"; "transformFile": "transformFile"; "download": "download"; "iconRender": "iconRender"; "fileListRender": "fileListRender"; }, { "uploadChange": "uploadChange"; "fileListChange": "fileListChange"; }, never, ["*"]>;
}
//# sourceMappingURL=upload.component.d.ts.map