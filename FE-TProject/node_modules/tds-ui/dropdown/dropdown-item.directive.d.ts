import { BooleanInput } from '@angular/cdk/coercion';
import { AfterContentInit, ChangeDetectorRef, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';
import { Subject } from 'rxjs';
import { TDSMenuService } from 'tds-ui/menu';
import * as i0 from "@angular/core";
export declare class TDSDropDownItemDirective implements OnInit, OnChanges, OnDestroy, AfterContentInit {
    private TDSMenuService;
    private cdr;
    static ngAcceptInputType_disabled: BooleanInput;
    static ngAcceptInputType_selected: BooleanInput;
    private destroy$;
    selected$: Subject<boolean>;
    disabled: boolean;
    selected: boolean;
    /** clear all item selected status except this */
    clickMenuItem(e: MouseEvent): void;
    constructor(TDSMenuService: TDSMenuService, cdr: ChangeDetectorRef);
    ngOnInit(): void;
    ngAfterContentInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSDropDownItemDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<TDSDropDownItemDirective, "[tds-dropdown-item]", ["tdsDropdownItem"], { "disabled": "disabled"; "selected": "selected"; }, {}, never>;
}
//# sourceMappingURL=dropdown-item.directive.d.ts.map