import { ElementRef, EventEmitter, NgZone, OnChanges, SimpleChanges, TemplateRef } from '@angular/core';
import { ButtonSize } from 'tds-ui/core/config';
import { TDSDestroyService } from 'tds-ui/core/services';
import * as i0 from "@angular/core";
export declare class TDSOptionItem implements OnChanges {
    private elementRef;
    private ngZone;
    private destroy$;
    selected: boolean;
    activated: boolean;
    item: any;
    grouped: boolean;
    disabled: boolean;
    showState: boolean;
    label: string | number | null;
    value: any | null;
    activatedValue: any | null;
    listOfSelectedValue: any[];
    template: TemplateRef<any> | null;
    compareWith: (o1: any, o2: any) => boolean;
    hideSelected: boolean;
    size: ButtonSize;
    readonly itemClick: EventEmitter<any>;
    readonly itemHover: EventEmitter<any>;
    constructor(elementRef: ElementRef<HTMLElement>, ngZone: NgZone, destroy$: TDSDestroyService);
    ngOnChanges(changes: SimpleChanges): void;
    ngOnInit(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSOptionItem, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TDSOptionItem, "tds-option-item", never, { "item": "item"; "grouped": "grouped"; "disabled": "disabled"; "showState": "showState"; "label": "label"; "value": "value"; "activatedValue": "activatedValue"; "listOfSelectedValue": "listOfSelectedValue"; "template": "template"; "compareWith": "compareWith"; "hideSelected": "hideSelected"; "size": "size"; }, { "itemClick": "itemClick"; "itemHover": "itemHover"; }, never, never>;
}
//# sourceMappingURL=select-option-item.d.ts.map