import { TemplateRef } from '@angular/core';
import * as i0 from "@angular/core";
export declare class TDSItemLabelDirective {
    template: TemplateRef<any>;
    constructor(template: TemplateRef<any>);
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSItemLabelDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<TDSItemLabelDirective, "[tds-item-tmp]", never, {}, {}, never>;
}
export declare class TDSOptionTemplateDirective {
    template: TemplateRef<any>;
    constructor(template: TemplateRef<any>);
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSOptionTemplateDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<TDSOptionTemplateDirective, "[tds-option-tmp]", never, {}, {}, never>;
}
export declare class TDSOptgroupTemplateDirective {
    template: TemplateRef<any>;
    constructor(template: TemplateRef<any>);
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSOptgroupTemplateDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<TDSOptgroupTemplateDirective, "[tds-optgroup-tmp]", never, {}, {}, never>;
}
export declare class TDSLabelTemplateDirective {
    template: TemplateRef<any>;
    constructor(template: TemplateRef<any>);
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSLabelTemplateDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<TDSLabelTemplateDirective, "[tds-label-tmp]", never, {}, {}, never>;
}
export declare class TDSMultiLabelTemplateDirective {
    template: TemplateRef<any>;
    constructor(template: TemplateRef<any>);
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSMultiLabelTemplateDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<TDSMultiLabelTemplateDirective, "[tds-multi-label-tmp]", never, {}, {}, never>;
}
export declare class TDSHeaderTemplateDirective {
    template: TemplateRef<any>;
    constructor(template: TemplateRef<any>);
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSHeaderTemplateDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<TDSHeaderTemplateDirective, "[tds-header-tmp]", never, {}, {}, never>;
}
export declare class TDSFooterTemplateDirective {
    template: TemplateRef<any>;
    constructor(template: TemplateRef<any>);
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSFooterTemplateDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<TDSFooterTemplateDirective, "[tds-footer-tmp]", never, {}, {}, never>;
}
export declare class TDSNotFoundTemplateDirective {
    template: TemplateRef<any>;
    constructor(template: TemplateRef<any>);
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSNotFoundTemplateDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<TDSNotFoundTemplateDirective, "[tds-notfound-tmp]", never, {}, {}, never>;
}
export declare class TDSTypeToSearchTemplateDirective {
    template: TemplateRef<any>;
    constructor(template: TemplateRef<any>);
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSTypeToSearchTemplateDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<TDSTypeToSearchTemplateDirective, "[tds-typetosearch-tmp]", never, {}, {}, never>;
}
export declare class TDSLoadingTextTemplateDirective {
    template: TemplateRef<any>;
    constructor(template: TemplateRef<any>);
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSLoadingTextTemplateDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<TDSLoadingTextTemplateDirective, "[tds-loadingtext-tmp]", never, {}, {}, never>;
}
export declare class TDSTagTemplateDirective {
    template: TemplateRef<any>;
    constructor(template: TemplateRef<any>);
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSTagTemplateDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<TDSTagTemplateDirective, "[tds-tag-tmp]", never, {}, {}, never>;
}
export declare class TDSLoadingSpinnerTemplateDirective {
    template: TemplateRef<any>;
    constructor(template: TemplateRef<any>);
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSLoadingSpinnerTemplateDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<TDSLoadingSpinnerTemplateDirective, "[tds-loadingspinner-tmp]", never, {}, {}, never>;
}
//# sourceMappingURL=select.directive.d.ts.map