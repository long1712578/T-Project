import { Platform } from '@angular/cdk/platform';
import { ChangeDetectorRef, QueryList, Renderer2 } from '@angular/core';
import { Observable } from 'rxjs';
import { TDSCarouselContentDirective } from '../carousel-content.directive';
import { TDSCarouselComponentAsSource, PointerVector } from '../typings';
import { TDSCarouselBaseStrategy } from './base-strategy';
interface TDSCarouselTransformStrategyOptions {
    direction: 'left' | 'right';
}
export declare class TDSCarouselTransformStrategy extends TDSCarouselBaseStrategy<TDSCarouselTransformStrategyOptions> {
    private isDragging;
    private isTransitioning;
    private get vertical();
    constructor(carouselComponent: TDSCarouselComponentAsSource, cdr: ChangeDetectorRef, renderer: Renderer2, platform: Platform, options?: TDSCarouselTransformStrategyOptions);
    dispose(): void;
    withCarouselContents(contents: QueryList<TDSCarouselContentDirective> | null): void;
    switch(_f: number, _t: number): Observable<void>;
    dragging(_vector: PointerVector): void;
    private verticalTransform;
    private horizontalTransform;
    private prepareVerticalContext;
    private prepareHorizontalContext;
}
export {};
//# sourceMappingURL=transform-strategy.d.ts.map