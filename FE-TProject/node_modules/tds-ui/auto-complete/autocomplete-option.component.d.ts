import { BooleanInput } from '@angular/cdk/coercion';
import { ChangeDetectorRef, ElementRef, EventEmitter } from '@angular/core';
import { TDSSafeAny } from 'tds-ui/shared/utility';
import { TDSAutocompleteOptgroupComponent } from './autocomplete-optgroup.component';
import * as i0 from "@angular/core";
export declare class TDSAutoOptionSelectionChange {
    source: TDSAutocompleteOptionComponent;
    isUserInput: boolean;
    constructor(source: TDSAutocompleteOptionComponent, isUserInput?: boolean);
}
export declare class TDSAutocompleteOptionComponent {
    private changeDetectorRef;
    private element;
    TDSAutocompleteOptgroupComponent: TDSAutocompleteOptgroupComponent;
    static ngAcceptInputType_disabled: BooleanInput;
    size: 'sm' | 'md' | 'lg';
    value: TDSSafeAny;
    label?: string;
    disabled: boolean;
    readonly selectionChange: EventEmitter<TDSAutoOptionSelectionChange>;
    readonly mouseEntered: EventEmitter<TDSAutocompleteOptionComponent>;
    active: boolean;
    selected: boolean;
    constructor(changeDetectorRef: ChangeDetectorRef, element: ElementRef, TDSAutocompleteOptgroupComponent: TDSAutocompleteOptgroupComponent);
    select(emit?: boolean): void;
    onMouseEnter(): void;
    deselect(): void;
    /** Git display label */
    getLabel(): string;
    /** Set active (only styles) */
    setActiveStyles(): void;
    /** Unset active (only styles) */
    setInactiveStyles(): void;
    scrollIntoViewIfNeeded(): void;
    selectViaInteraction(): void;
    private emitSelectionChangeEvent;
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSAutocompleteOptionComponent, [null, null, { optional: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TDSAutocompleteOptionComponent, "tds-auto-option", ["tdsAutoOption"], { "size": "size"; "value": "value"; "label": "label"; "disabled": "disabled"; }, { "selectionChange": "selectionChange"; "mouseEntered": "mouseEntered"; }, never, ["*"]>;
}
//# sourceMappingURL=autocomplete-option.component.d.ts.map