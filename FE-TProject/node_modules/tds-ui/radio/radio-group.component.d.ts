import { Direction, Directionality } from '@angular/cdk/bidi';
import { BooleanInput } from '@angular/cdk/coercion';
import { ChangeDetectorRef, ElementRef, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { OnChangeType, OnTouchedType, TDSSafeAny } from 'tds-ui/shared/utility';
import { ButtonSize } from "tds-ui/core/config";
import { TDSRadioService } from './radio.service';
import * as i0 from "@angular/core";
export declare type TDSRadioButtonStyle = 'outline' | 'solid';
export declare class TDSRadioGroupComponent implements OnInit, ControlValueAccessor, OnDestroy, OnChanges {
    private cdr;
    private tdsRadioService;
    private elementRef;
    private directionality;
    static ngAcceptInputType_disabled: BooleanInput;
    private value;
    private destroy$;
    onChange: OnChangeType;
    onTouched: OnTouchedType;
    disabled: boolean;
    buttonStyle: TDSRadioButtonStyle;
    size: ButtonSize;
    tdsName: string | null;
    dir: Direction;
    constructor(cdr: ChangeDetectorRef, tdsRadioService: TDSRadioService, elementRef: ElementRef, directionality: Directionality);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    writeValue(value: TDSSafeAny): void;
    registerOnChange(fn: OnChangeType): void;
    registerOnTouched(fn: OnTouchedType): void;
    setDisabledState(isDisabled: boolean): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSRadioGroupComponent, [null, null, null, { optional: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TDSRadioGroupComponent, "tds-radio-group", ["tdsRadioGroup"], { "disabled": "disabled"; "buttonStyle": "buttonStyle"; "size": "size"; "tdsName": "tdsName"; }, {}, never, ["*"]>;
}
//# sourceMappingURL=radio-group.component.d.ts.map