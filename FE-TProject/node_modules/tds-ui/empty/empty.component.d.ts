import { ChangeDetectorRef, OnChanges, OnDestroy, OnInit, SimpleChanges, TemplateRef } from '@angular/core';
import { TDSEmptyI18nInterface, TDSI18nService } from 'tds-ui/i18n';
import * as i0 from "@angular/core";
declare const TDSEmptyDefaultImages: readonly ["default", "simple"];
declare type TDSEmptyNotFoundImageType = typeof TDSEmptyDefaultImages[number] | null | string | TemplateRef<void>;
export declare class TDSEmptyComponent implements OnChanges, OnInit, OnDestroy {
    private i18n;
    private cdr;
    notFoundImage: TDSEmptyNotFoundImageType;
    notFoundContent?: string | TemplateRef<void> | null;
    notFoundFooter?: string | TemplateRef<void>;
    isContentString: boolean;
    isImageBuildIn: boolean;
    locale: TDSEmptyI18nInterface;
    private readonly destroy$;
    constructor(i18n: TDSI18nService, cdr: ChangeDetectorRef);
    ngOnChanges(changes: SimpleChanges): void;
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSEmptyComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TDSEmptyComponent, "tds-empty", ["tdsEmpty"], { "notFoundImage": "notFoundImage"; "notFoundContent": "notFoundContent"; "notFoundFooter": "notFoundFooter"; }, {}, never, never>;
}
export {};
//# sourceMappingURL=empty.component.d.ts.map