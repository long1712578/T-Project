import { AfterContentInit, ChangeDetectorRef, EventEmitter, OnChanges, OnDestroy, OnInit, QueryList, SimpleChanges } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { Router } from '@angular/router';
import { OnChangeType, OnTouchedType, TDSSafeAny } from 'tds-ui/shared/utility';
import { TDSFilterStatusItemComponent } from './filter-status-item.component';
import { TDSFilterStatusLinkComponent } from './filter-status-link.component';
import { TDSFilterStatusService } from './filter-status.service';
import * as i0 from "@angular/core";
export declare class TDSFilterStatusComponent implements OnInit, OnDestroy, AfterContentInit, OnChanges, ControlValueAccessor {
    private cdr;
    private tdsFilterStatusService;
    private router;
    private _value;
    get value(): TDSSafeAny;
    set value(v: TDSSafeAny);
    disabled: boolean;
    linkRouter: boolean;
    linkExact: boolean;
    readonly selectChangeEvent: EventEmitter<any>;
    listChild: QueryList<TDSFilterStatusItemComponent>;
    listLinkChild: QueryList<TDSFilterStatusLinkComponent>;
    links: QueryList<TDSFilterStatusLinkComponent>;
    private destroy$;
    constructor(cdr: ChangeDetectorRef, tdsFilterStatusService: TDSFilterStatusService, router: Router);
    ngOnInit(): void;
    ngOnDestroy(): void;
    ngAfterContentInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    onChange: OnChangeType;
    onTouched: OnTouchedType;
    writeValue(value: TDSSafeAny): void;
    registerOnChange(fn: OnChangeType): void;
    registerOnTouched(fn: OnTouchedType): void;
    private setSelectedIndex;
    private setUpRouter;
    private updateRouterActive;
    private findShouldActiveTabIndex;
    private isLinkActive;
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSFilterStatusComponent, [null, { optional: true; }, { optional: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TDSFilterStatusComponent, "tds-filter-status", ["tdsFilterStatus"], { "disabled": "disabled"; "linkRouter": "linkRouter"; "linkExact": "linkExact"; }, { "selectChangeEvent": "selectChange"; }, ["listChild", "listLinkChild"], ["*"]>;
}
//# sourceMappingURL=filter-status.component.d.ts.map