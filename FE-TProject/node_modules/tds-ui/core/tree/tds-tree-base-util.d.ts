import { TDSSafeAny } from 'tds-ui/shared/utility';
import { FlattenNode, TDSTreeNode, TDSTreeNodeKey } from './tds-tree-base-node';
export declare function isCheckDisabled(node: TDSTreeNode): boolean;
export declare function isInArray(needle: TDSSafeAny, haystack: TDSSafeAny[]): boolean;
export declare function getPosition(level: string | number, index: number): string;
export declare function getKey(key: TDSTreeNodeKey, pos: string): TDSTreeNodeKey;
/**
 * Flat nest tree data into flatten list. This is used for virtual list render.
 *
 * @param treeNodeList Origin data node list
 * @param expandedKeys
 * need expanded keys, provides `true` means all expanded (used in `rc-tree-select`).
 */
export declare function flattenTreeData(treeNodeList?: TDSTreeNode[], expandedKeys?: TDSTreeNodeKey[] | true): FlattenNode[];
//# sourceMappingURL=tds-tree-base-util.d.ts.map