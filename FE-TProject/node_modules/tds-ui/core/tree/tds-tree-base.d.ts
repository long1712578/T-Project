import { TDSSafeAny } from 'tds-ui/shared/utility';
import { TDSTreeNode } from './tds-tree-base-node';
import { TDSTreeBaseService } from './tds-tree-base.service';
export declare class TDSTreeBase {
    tdsTreeService: TDSTreeBaseService;
    constructor(tdsTreeService: TDSTreeBaseService);
    /**
     * Coerces a value({@link any[]}) to a TreeNodes({@link TDSTreeNode[]})
     */
    coerceTreeNodes(value: TDSSafeAny[]): TDSTreeNode[];
    /**
     * Get all nodes({@link TDSTreeNode})
     */
    getTreeNodes(): TDSTreeNode[];
    /**
     * Get {@link TDSTreeNode} with key
     */
    getTreeNodeByKey(key: string): TDSTreeNode | null;
    /**
     * Get checked nodes(merged)
     */
    getCheckedNodeList(): TDSTreeNode[];
    /**
     * Get selected nodes
     */
    getSelectedNodeList(): TDSTreeNode[];
    /**
     * Get half checked nodes
     */
    getHalfCheckedNodeList(): TDSTreeNode[];
    /**
     * Get expanded nodes
     */
    getExpandedNodeList(): TDSTreeNode[];
    /**
     * Get matched nodes(if searchValue is not null)
     */
    getMatchedNodeList(): TDSTreeNode[];
}
//# sourceMappingURL=tds-tree-base.d.ts.map