import { PipeTransform } from '@angular/core';
import * as i0 from "@angular/core";
export declare type ByteUnit = 'B' | 'kB' | 'KB' | 'MB' | 'GB' | 'TB';
export declare class TDSBytesPipe implements PipeTransform {
    static formats: {
        [key: string]: {
            max: number;
            prev?: ByteUnit;
        };
    };
    transform(input: any, decimal?: number, from?: ByteUnit, to?: ByteUnit): any;
    static formatResult(result: number, unit: string): string;
    static calculateResult(format: {
        max: number;
        prev?: ByteUnit;
    }, bytes: number): number;
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSBytesPipe, never>;
    static ɵpipe: i0.ɵɵPipeDeclaration<TDSBytesPipe, "tdsBytes">;
}
//# sourceMappingURL=tds-bytes.pipe.d.ts.map