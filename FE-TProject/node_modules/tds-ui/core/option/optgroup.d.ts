/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import { BooleanInput } from '@angular/cdk/coercion';
import { InjectionToken } from '@angular/core';
import { CanDisable, CanDisableCtor } from 'tds-ui/shared/common';
import { TDSOptionParentComponent } from './option-parent';
import * as i0 from "@angular/core";
/** @docs-private */
declare class TDSOptgroupBase {
}
declare const _TDSOptgroupMixinBase: CanDisableCtor & typeof TDSOptgroupBase;
export declare class _TDSOptgroupBase extends _TDSOptgroupMixinBase implements CanDisable {
    /** Label for the option group. */
    label: string;
    /** Unique id for the underlying label. */
    _labelId: string;
    /** Whether the group is in inert a11y mode. */
    _inert: boolean;
    constructor(parent?: TDSOptionParentComponent);
    static ngAcceptInputType_disabled: BooleanInput;
    static ɵfac: i0.ɵɵFactoryDeclaration<_TDSOptgroupBase, [{ optional: true; }]>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<_TDSOptgroupBase, never, never, { "label": "label"; }, {}, never>;
}
/**
 * Injection token that can be used to reference instances of `TDSOptgroup`. It serves as
 * alternative token to the actual `TDSOptgroup` class which could cause unnecessary
 * retention of the class and its component metadata.
 */
export declare const TDS_OPTGROUP: InjectionToken<TDSOptgroup>;
/**
 * Component that is used to group instances of `tds-option`.
 */
export declare class TDSOptgroup extends _TDSOptgroupBase {
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSOptgroup, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TDSOptgroup, "tds-optgroup", ["tdsOptgroup"], { "disabled": "disabled"; }, {}, never, ["*", "tds-option, ng-container"]>;
}
export {};
//# sourceMappingURL=optgroup.d.ts.map