import { Observable } from "rxjs";
import { TDSResizeService } from "./resize";
import { MediaMatcher } from '@angular/cdk/layout';
import * as i0 from "@angular/core";
export declare enum TDSBreakpointEnum {
    xxl = "xxl",
    xl = "xl",
    lg = "lg",
    md = "md",
    sm = "sm",
    xs = "xs"
}
export declare type BreakpointMap = {
    [key in TDSBreakpointEnum]: string;
};
export declare type BreakpointBooleanMap = {
    [key in TDSBreakpointEnum]: boolean;
};
export declare type TDSBreakpointKey = keyof typeof TDSBreakpointEnum;
export declare const gridResponsiveMap: BreakpointMap;
export declare const siderResponsiveMap: BreakpointMap;
export declare class TDSBreakpointService {
    private resizeService;
    private mediaMatcher;
    constructor(resizeService: TDSResizeService, mediaMatcher: MediaMatcher);
    subscribe(breakpointMap: BreakpointMap): Observable<TDSBreakpointEnum>;
    subscribe(breakpointMap: BreakpointMap, fullMap: true): Observable<BreakpointBooleanMap>;
    private matchMedia;
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSBreakpointService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<TDSBreakpointService>;
}
//# sourceMappingURL=breakpoint.d.ts.map