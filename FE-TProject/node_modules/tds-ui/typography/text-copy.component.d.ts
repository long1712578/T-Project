import { Clipboard } from '@angular/cdk/clipboard';
import { ChangeDetectorRef, ElementRef, EventEmitter, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';
import { TDSTSType } from 'tds-ui/core/config';
import { TDSI18nService, TDSTextI18nInterface } from 'tds-ui/i18n';
import * as i0 from "@angular/core";
export declare class TDSTextCopyComponent implements OnInit, OnDestroy, OnChanges {
    private host;
    private cdr;
    private clipboard;
    private i18n;
    copied: boolean;
    copyId: any;
    locale: TDSTextI18nInterface;
    nativeElement: any;
    copyTooltip: TDSTSType | null;
    copedTooltip: TDSTSType | null;
    copyIcon: TDSTSType;
    copedIcon: TDSTSType;
    private destroy$;
    text: string;
    tooltips?: [TDSTSType, TDSTSType] | null;
    icons: [TDSTSType, TDSTSType];
    readonly textCopy: EventEmitter<string>;
    constructor(host: ElementRef, cdr: ChangeDetectorRef, clipboard: Clipboard, i18n: TDSI18nService);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    onClick(): void;
    onCopied(): void;
    private updateTooltips;
    private updateIcons;
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSTextCopyComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TDSTextCopyComponent, "tds-text-copy", ["tdsTextCopy"], { "text": "text"; "tooltips": "tooltips"; "icons": "icons"; }, { "textCopy": "textCopy"; }, never, never>;
}
//# sourceMappingURL=text-copy.component.d.ts.map