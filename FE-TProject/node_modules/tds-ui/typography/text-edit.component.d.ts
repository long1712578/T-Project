import { ChangeDetectorRef, ElementRef, EventEmitter, NgZone, OnDestroy, OnInit } from '@angular/core';
import { TDSTSType } from 'tds-ui/core/config';
import { TDSI18nService, TDSTextI18nInterface } from 'tds-ui/i18n';
import { TDSAutosizeDirective } from 'tds-ui/tds-input';
import * as i0 from "@angular/core";
export declare class TDSTextEditComponent implements OnInit, OnDestroy {
    private zone;
    private host;
    private cdr;
    private i18n;
    editing: boolean;
    locale: TDSTextI18nInterface;
    private destroy$;
    text?: string;
    icon: TDSTSType;
    tooltip?: null | TDSTSType;
    readonly startEditing: EventEmitter<void>;
    readonly endEditing: EventEmitter<string>;
    textarea: ElementRef<HTMLTextAreaElement>;
    autosizeDirective: TDSAutosizeDirective;
    beforeText?: string;
    currentText?: string;
    nativeElement: any;
    constructor(zone: NgZone, host: ElementRef, cdr: ChangeDetectorRef, i18n: TDSI18nService);
    ngOnInit(): void;
    ngOnDestroy(): void;
    onClick(): void;
    confirm(): void;
    onInput(event: Event): void;
    onEnter(event: Event): void;
    onCancel(): void;
    focusAndSetValue(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSTextEditComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TDSTextEditComponent, "tds-text-edit", ["tdsTextEdit"], { "text": "text"; "icon": "icon"; "tooltip": "tooltip"; }, { "startEditing": "startEditing"; "endEditing": "endEditing"; }, never, never>;
}
//# sourceMappingURL=text-edit.component.d.ts.map