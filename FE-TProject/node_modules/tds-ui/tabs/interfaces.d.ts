import { Observable } from 'rxjs';
import { TDSSafeAny } from 'tds-ui/shared/utility';
export declare type TDSTabPosition = 'top' | 'bottom' | 'left' | 'right';
export declare type TDSTabType = 'line' | 'card' | 'editable-card';
export declare type TDSTabsCanDeactivateFn = (fromIndex: number, toIndex: number) => Observable<boolean> | Promise<boolean> | boolean;
export declare type TDSTabPositionMode = 'horizontal' | 'vertical';
export interface TDSAnimatedInterface {
    inkBar: boolean;
    tabPane: boolean;
}
export declare class TDSTabChangeEvent {
    index?: number;
    tab: TDSSafeAny;
}
export interface TDSTabScrollListOffset {
    x: number;
    y: number;
}
export declare type TDSTabScrollListOffsetEvent = TDSTabScrollListOffset & {
    event: Event;
};
interface TDSTabWheelScrollEvent {
    type: 'wheel';
    event: WheelEvent;
}
interface TDSTabTouchScrollEvent {
    type: 'touchstart' | 'touchmove' | 'touchend';
    event: TouchEvent;
}
export declare type TDSTabScrollEvent = TDSTabTouchScrollEvent | TDSTabWheelScrollEvent;
export declare type TDSTabScrollEventHandlerFun<T extends TDSTabScrollEvent['event']> = (event: T) => void;
export interface TabTemplateContext {
    visible: boolean;
    active: boolean;
}
export {};
//# sourceMappingURL=interfaces.d.ts.map