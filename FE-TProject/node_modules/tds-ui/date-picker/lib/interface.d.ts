import { TemplateRef } from '@angular/core';
import { TDSSafeAny } from 'tds-ui/shared/utility';
export interface PanelSelector {
    className: string;
    title?: string;
    label: string;
    onClick(value: TDSSafeAny): void;
    data?: Array<{
        id: TDSSafeAny;
        name: TDSSafeAny;
    }>;
    value?: TDSSafeAny;
}
export interface DateCell {
    trackByIndex: any;
    value: Date;
    content: TemplateRef<Date> | string;
    onClick(): void;
    onMouseEnter(): void;
    isDisabled: boolean;
    isSelected: boolean;
    label?: string;
    title?: string;
    cellRender?: TemplateRef<Date> | string;
    fullCellRender?: TemplateRef<Date> | string;
    isToday?: boolean;
    classMap?: object;
    isStartSingle?: boolean;
    isEndSingle?: boolean;
    isSelectedStart?: boolean;
    isSelectedEnd?: boolean;
    isHoverStart?: boolean;
    isHoverEnd?: boolean;
    isInHoverRange?: boolean;
    isInSelectedRange?: boolean;
    isRangeStartNearHover?: boolean;
    isRangeEndNearHover?: boolean;
    isFirstCellInPanel?: boolean;
    isLastCellInPanel?: boolean;
    cellIndex?: number;
}
export interface DateBodyRow {
    trackByIndex: any;
    dateCells: DateCell[];
    isActive?: boolean;
    weekNum?: number;
    classMap?: object;
    rowIndex?: number;
}
export interface DecadeCell extends DateCell {
    isBiggerThanEnd?: boolean;
    isLowerThanStart?: boolean;
}
export interface YearCell extends DateCell {
    isSameDecade?: boolean;
}
//# sourceMappingURL=interface.d.ts.map