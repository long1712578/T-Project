import { Direction } from '@angular/cdk/bidi';
import { TemplateRef, Type } from '@angular/core';
import { TDSSafeAny } from 'tds-ui/shared/utility';
import { TDSDrawerRef } from './drawer-ref';
export declare type TDSDrawerPlacement = 'left' | 'right' | 'top' | 'bottom';
export interface TDSDrawerOptionsOfComponent<T = TDSSafeAny, D = TDSSafeAny> {
    closable?: boolean;
    maskClosable?: boolean;
    closeOnNavigation?: boolean;
    direction?: Direction;
    mask?: boolean;
    keyboard?: boolean;
    noAnimation?: boolean;
    title?: string | TemplateRef<{}>;
    footer?: string | TemplateRef<{}>;
    content?: TemplateRef<{
        $implicit: D;
        drawerRef: TDSDrawerRef;
    }> | Type<T>;
    contentParams?: D;
    maskStyle?: object;
    bodyStyle?: object;
    wrapClassName?: string;
    width?: number | string | null;
    height?: number | string | null;
    placement?: TDSDrawerPlacement;
    zIndex?: number;
    offsetX?: number;
    offsetY?: number;
}
export interface TDSDrawerOptions<T = TDSSafeAny, D = TDSSafeAny> extends TDSDrawerOptionsOfComponent<T, D> {
    onCancel?(): Promise<any>;
}
//# sourceMappingURL=drawer-options.d.ts.map