import { Overlay } from '@angular/cdk/overlay';
import { TDSDrawerOptions, TDSDrawerOptionsOfComponent } from './drawer-options';
import { TDSDrawerRef } from './drawer-ref';
import * as i0 from "@angular/core";
export declare class DrawerBuilderForService<T, R> {
    private overlay;
    private options;
    private drawerRef;
    private overlayRef;
    private unsubscribe$;
    constructor(overlay: Overlay, options: TDSDrawerOptions);
    getInstance(): TDSDrawerRef<T, R>;
    updateOptions(options: TDSDrawerOptionsOfComponent): void;
}
export declare class TDSDrawerService {
    private overlay;
    constructor(overlay: Overlay);
    create<T = any, D = undefined, R = any>(options: TDSDrawerOptions<T, D extends undefined ? {} : D>): TDSDrawerRef<T, R>;
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSDrawerService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<TDSDrawerService>;
}
//# sourceMappingURL=drawer.service.d.ts.map