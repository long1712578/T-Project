import { FocusMonitor } from "@angular/cdk/a11y";
import { ChangeDetectorRef, ElementRef, EventEmitter, OnInit } from "@angular/core";
import { ControlValueAccessor } from "@angular/forms";
import { CanDisableCtor, HasTabIndexCtor } from "tds-ui/shared/common";
import { typeSwitch } from "./type";
import * as i0 from "@angular/core";
export declare const TDS_SWITCH_VALUE_ACCESSOR: any;
export declare class TdsSwitchChange {
    source: TDSSwitch;
    checked: boolean;
    constructor(source: TDSSwitch, checked: boolean);
}
export declare class TdsSwitchBase {
    _elementRef: ElementRef;
    constructor(_elementRef: ElementRef);
}
export declare const _TdsSwitchMixinBase: HasTabIndexCtor & CanDisableCtor & typeof TdsSwitchBase;
export declare class TDSSwitch extends _TdsSwitchMixinBase implements OnInit, ControlValueAccessor {
    private _focusMonitor;
    private _changeDetectorRef;
    private _size;
    private _disabled;
    get size(): typeSwitch;
    set size(value: typeSwitch);
    active: boolean;
    private onChange;
    private onTouched;
    private _checked;
    get checked(): boolean;
    set checked(value: boolean);
    get disabled(): any;
    set disabled(value: any);
    readonly change: EventEmitter<TdsSwitchChange>;
    _inputElement: ElementRef;
    constructor(elementRef: ElementRef, _focusMonitor: FocusMonitor, _changeDetectorRef: ChangeDetectorRef, tabIndex: string);
    ngOnInit(): void;
    _onTouched: () => any;
    _onChangeEvent(event: any): void;
    _onInputClick(event: Event): void;
    writeValue(value: any): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    setDisabledState(isDisabled: boolean): void;
    focus(): void;
    toggle(): void;
    private _emitChangeEvent;
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSSwitch, [null, null, null, { attribute: "tabindex"; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TDSSwitch, "tds-switch", ["tdsSwitch"], { "size": "size"; "checked": "checked"; "disabled": "disabled"; }, { "change": "change"; }, never, never>;
}
//# sourceMappingURL=switch.d.ts.map