import { Locale } from 'date-fns';
export interface TDSPaginationI18nInterface {
    items_per_page: string;
    jump_to: string;
    jump_to_confirm: string;
    page: string;
    prev_page: string;
    next_page: string;
    prev_5: string;
    next_5: string;
    prev_3: string;
    next_3: string;
}
export interface TDSGlobalI18nInterface {
    placeholder: string;
}
export interface TDSDatePickerI18nInterface {
    lang: TDSDatePickerLangI18nInterface;
    timePickerLocale: TDSTimePickerI18nInterface;
}
export interface TDSCalendarI18nInterface {
    today: string;
    now: string;
    backToToday: string;
    ok: string;
    clear: string;
    day: string;
    week: string;
    month: string;
    year: string;
    timeSelect: string;
    dateSelect: string;
    monthSelect: string;
    yearSelect: string;
    decadeSelect: string;
    yearFormat: string;
    monthFormat?: string;
    dateFormat: string;
    dayFormat: string;
    dateTimeFormat: string;
    monthBeforeYear?: boolean;
    previousMonth: string;
    nextMonth: string;
    previousYear: string;
    nextYear: string;
    previousDecade: string;
    nextDecade: string;
    previousCentury: string;
    nextCentury: string;
}
export interface TDSDatePickerLangI18nInterface extends TDSCalendarI18nInterface {
    placeholder?: string;
    yearPlaceholder?: string;
    quarterPlaceholder?: string;
    monthPlaceholder?: string;
    weekPlaceholder?: string;
    rangePlaceholder?: string[];
    rangeYearPlaceholder?: string[];
    rangeMonthPlaceholder?: string[];
    rangeWeekPlaceholder?: string[];
}
export interface TDSTimePickerI18nInterface {
    placeholder?: string;
    rangePlaceholder?: string[];
    time?: string;
}
export declare type ValidateMessage = string | (() => string);
export declare type TDSCascaderI18nInterface = TDSGlobalI18nInterface;
export interface TDSTableI18nInterface {
    filterTitle?: string;
    filterConfirm?: string;
    filterReset?: string;
    selectAll?: string;
    selectInvert?: string;
    selectionAll?: string;
    sortTitle?: string;
    expand?: string;
    collapse?: string;
    triggerDesc?: string;
    triggerAsc?: string;
    cancelSort?: string;
}
export interface TDSModalI18nInterface {
    okText: string;
    cancelText: string;
    justOkText: string;
}
export interface TDSPopconfirmI18nInterface {
    okText: string;
    cancelText: string;
}
export interface TDSTransferI18nInterface {
    titles?: string[];
    searchPlaceholder?: string;
    itemUnit?: string;
    itemsUnit?: string;
}
export interface TDSUploadI18nInterface {
    uploading?: string;
    removeFile?: string;
    uploadError?: string;
    previewFile?: string;
    downloadFile?: string;
}
export interface TDSEmptyI18nInterface {
    description: string;
}
export interface TDSTextI18nInterface {
    edit: string;
    copy: string;
    copied: string;
    expand: string;
    collapse?: string;
}
export interface TDSI18nInterface {
    locale: string;
    Pagination: TDSPaginationI18nInterface;
    DatePicker: TDSDatePickerI18nInterface;
    TimePicker: TDSTimePickerI18nInterface;
    Calendar: TDSDatePickerI18nInterface;
    global?: TDSGlobalI18nInterface;
    Table: TDSTableI18nInterface;
    Modal: TDSModalI18nInterface;
    Popconfirm: TDSPopconfirmI18nInterface;
    Transfer: TDSTransferI18nInterface;
    Upload: TDSUploadI18nInterface;
    Empty: TDSEmptyI18nInterface;
    Text?: TDSTextI18nInterface;
}
export declare type DateLocale = Locale;
//# sourceMappingURL=tds-i18n.interface.d.ts.map