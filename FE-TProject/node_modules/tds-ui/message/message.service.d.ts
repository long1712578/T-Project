import { Overlay } from '@angular/cdk/overlay';
import { Injector, TemplateRef } from '@angular/core';
import { TDSSingletonService } from 'tds-ui/core/services';
import { TDSMNService } from './base';
import { TDSMessageContainerComponent } from './message-container.component';
import { TDSMessageDataOptions, TDSMessageRef } from './typings';
import * as i0 from "@angular/core";
export declare class TDSMessageService extends TDSMNService {
    protected container?: TDSMessageContainerComponent;
    protected componentPrefix: string;
    constructor(tdsSingletonService: TDSSingletonService, overlay: Overlay, injector: Injector);
    success(content: string | TemplateRef<void>, options?: TDSMessageDataOptions): TDSMessageRef;
    error(content: string | TemplateRef<void>, options?: TDSMessageDataOptions): TDSMessageRef;
    info(content: string | TemplateRef<void>, options?: TDSMessageDataOptions): TDSMessageRef;
    warning(content: string | TemplateRef<void>, options?: TDSMessageDataOptions): TDSMessageRef;
    loading(content: string | TemplateRef<void>, options?: TDSMessageDataOptions): TDSMessageRef;
    create(type: 'success' | 'info' | 'warning' | 'error' | 'loading' | string, content: string | TemplateRef<void>, options?: TDSMessageDataOptions): TDSMessageRef;
    private createInstance;
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSMessageService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<TDSMessageService>;
}
//# sourceMappingURL=message.service.d.ts.map