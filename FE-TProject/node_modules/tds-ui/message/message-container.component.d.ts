import { ChangeDetectorRef } from '@angular/core';
import { Subject } from 'rxjs';
import { Direction } from '@angular/cdk/bidi';
import { TDSMNContainerComponent } from './base';
import { TDSMessageData } from './typings';
import { TDSConfigService } from 'tds-ui/core/config';
import * as i0 from "@angular/core";
export declare class TDSMessageContainerComponent extends TDSMNContainerComponent {
    readonly destroy$: Subject<void>;
    dir: Direction;
    instances: Array<Required<TDSMessageData>>;
    top?: string | null;
    constructor(cdr: ChangeDetectorRef, tdsConfigService: TDSConfigService);
    protected subscribeConfigChange(): void;
    protected updateConfig(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSMessageContainerComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TDSMessageContainerComponent, "tds-message-container", ["tdsMessageContainer"], {}, {}, never, never>;
}
//# sourceMappingURL=message-container.component.d.ts.map