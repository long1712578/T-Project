import { AfterContentInit, ChangeDetectorRef, OnChanges, OnDestroy, OnInit, QueryList, SimpleChanges, TemplateRef } from '@angular/core';
import { Direction, Directionality } from '@angular/cdk/bidi';
import { TDSTimelineItemComponent } from './timeline-item.component';
import { TimelineService } from './timeline.service';
import { TDSTimelineMode } from './typings';
import * as i0 from "@angular/core";
export declare class TDSTimelineComponent implements AfterContentInit, OnChanges, OnDestroy, OnInit {
    private cdr;
    private timelineService;
    private directionality;
    listOfItems: QueryList<TDSTimelineItemComponent>;
    tdsMode: TDSTimelineMode;
    tdsPending?: string | boolean | TemplateRef<void>;
    tdsPendingDot?: string | TemplateRef<void>;
    tdsReverse: boolean;
    isPendingBoolean: boolean;
    timelineItems: TDSTimelineItemComponent[];
    dir: Direction;
    hasLabelItem: boolean;
    private destroy$;
    constructor(cdr: ChangeDetectorRef, timelineService: TimelineService, directionality: Directionality);
    ngOnChanges(changes: SimpleChanges): void;
    ngOnInit(): void;
    ngAfterContentInit(): void;
    ngOnDestroy(): void;
    private updateChildren;
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSTimelineComponent, [null, null, { optional: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TDSTimelineComponent, "tds-timeline", ["tdsTimeline"], { "tdsMode": "tdsMode"; "tdsPending": "tdsPending"; "tdsPendingDot": "tdsPendingDot"; "tdsReverse": "tdsReverse"; }, {}, ["listOfItems"], ["*"]>;
}
//# sourceMappingURL=timeline.component.d.ts.map