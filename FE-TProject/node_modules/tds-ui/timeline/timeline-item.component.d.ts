import { ChangeDetectorRef, OnChanges, SimpleChanges, TemplateRef } from '@angular/core';
import { TimelineService } from './timeline.service';
import { TDSTimelineItemColor, TDSTimelineMode, TDSTimelinePosition } from './typings';
import * as i0 from "@angular/core";
export declare class TDSTimelineItemComponent implements OnChanges {
    private cdr;
    private timelineService;
    template: TemplateRef<void>;
    tdsPosition?: TDSTimelinePosition;
    tdsColor: TDSTimelineItemColor;
    tdsDot?: string | TemplateRef<void>;
    tdsLabel?: string | TemplateRef<void>;
    isLast: boolean;
    isPending: boolean;
    isReverse: boolean;
    borderColor: string | null;
    position?: TDSTimelinePosition;
    mode: TDSTimelineMode;
    isFirst: boolean;
    constructor(cdr: ChangeDetectorRef, timelineService: TimelineService);
    ngOnChanges(changes: SimpleChanges): void;
    detectChanges(): void;
    private updateCustomColor;
    getPositon(): "left" | "right";
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSTimelineItemComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TDSTimelineItemComponent, "tds-timeline-item, [tds-timeline-item]", ["tdsTimelineItem"], { "tdsPosition": "tdsPosition"; "tdsColor": "tdsColor"; "tdsDot": "tdsDot"; "tdsLabel": "tdsLabel"; }, {}, never, ["*"]>;
}
//# sourceMappingURL=timeline-item.component.d.ts.map