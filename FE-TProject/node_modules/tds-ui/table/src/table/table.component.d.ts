import { Direction, Directionality } from '@angular/cdk/bidi';
import { BooleanInput } from '@angular/cdk/coercion';
import { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';
import { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, OnChanges, OnDestroy, OnInit, SimpleChanges, TemplateRef, TrackByFunction } from '@angular/core';
import { TDSSafeAny } from 'tds-ui/shared/utility';
import { TDSTableDataService } from '../table-data.service';
import { TDSTableStyleService } from '../table-style.service';
import { TDSTableLayout, TDSTablePaginationPosition, TDSTableQueryParams, TDSTableSize } from '../table.types';
import { TDSTableInnerScrollComponent } from './table-inner-scroll.component';
import { TDSTableVirtualScrollDirective } from './table-virtual-scroll.directive';
import { ButtonSize, TDSConfigKey, TDSConfigService } from 'tds-ui/core/config';
import { PaginationItemRenderContext } from 'tds-ui/pagination';
import { TDSResizeObserver } from 'tds-ui/core/resize-observers';
import * as i0 from "@angular/core";
export declare class TDSTableComponent<T> implements OnInit, OnDestroy, OnChanges, AfterViewInit {
    private elementRef;
    private tdsResizeObserver;
    private tdsConfigService;
    private cdr;
    private tdsTableStyleService;
    private tdsTableDataService;
    private directionality;
    readonly _tdsModuleName: TDSConfigKey;
    static ngAcceptInputType_frontPagination: BooleanInput;
    static ngAcceptInputType_templateMode: BooleanInput;
    static ngAcceptInputType_showPagination: BooleanInput;
    static ngAcceptInputType_loading: BooleanInput;
    static ngAcceptInputType_bordered: BooleanInput;
    static ngAcceptInputType_outerBordered: BooleanInput;
    static ngAcceptInputType_showSizeChanger: BooleanInput;
    static ngAcceptInputType_hideOnSinglePage: BooleanInput;
    static ngAcceptInputType_showQuickJumper: BooleanInput;
    static ngAcceptInputType_simple: BooleanInput;
    tableLayout: TDSTableLayout;
    showTotal: TemplateRef<{
        $implicit: number;
        range: [number, number];
    }> | null;
    showRefresh: boolean;
    itemRender: TemplateRef<PaginationItemRenderContext> | null;
    title: string | TemplateRef<TDSSafeAny> | null;
    footer: string | TemplateRef<TDSSafeAny> | null;
    noResult: string | TemplateRef<TDSSafeAny> | undefined;
    pageSizeOptions: number[];
    virtualItemSize: number;
    virtualMaxBufferPx: number;
    virtualMinBufferPx: number;
    virtualForTrackBy: TrackByFunction<T>;
    loadingDelay: number;
    pageIndex: number;
    pageSize: number;
    total: number;
    widthConfig: ReadonlyArray<string | null>;
    listData: readonly T[];
    paginationPosition: TDSTablePaginationPosition;
    scroll: {
        x?: string | null;
        y?: string | null;
    };
    paginationType: ButtonSize;
    frontPagination: boolean;
    templateMode: boolean;
    showPagination: boolean;
    loading: boolean;
    outerBordered: boolean;
    loadingIndicator: TemplateRef<TDSSafeAny> | null;
    bordered: boolean;
    size: TDSTableSize;
    showSizeChanger: boolean;
    hideOnSinglePage: boolean;
    showQuickJumper: boolean;
    simple: boolean;
    readonly pageSizeChange: EventEmitter<number>;
    readonly pageIndexChange: EventEmitter<number>;
    readonly queryParams: EventEmitter<TDSTableQueryParams>;
    readonly currentPageDataChange: EventEmitter<readonly T[]>;
    readonly clickRefresh: EventEmitter<MouseEvent>;
    /** public data for ngFor tr */
    data: readonly T[];
    cdkVirtualScrollViewport?: CdkVirtualScrollViewport;
    scrollX: string | null;
    scrollY: string | null;
    theadTemplate: TemplateRef<TDSSafeAny> | null;
    listOfAutoColWidth: ReadonlyArray<string | null>;
    listOfManualColWidth: ReadonlyArray<string | null>;
    hasFixLeft: boolean;
    hasFixRight: boolean;
    isShowPagination: boolean;
    private destroy$;
    private loading$;
    private templateMode$;
    dir: Direction;
    virtualScrollDirective: TDSTableVirtualScrollDirective<T>;
    tdsTableInnerScrollComponent: TDSTableInnerScrollComponent<T>;
    verticalScrollBarWidth: number;
    onPageSizeChange(size: number): void;
    onPageIndexChange(index: number): void;
    constructor(elementRef: ElementRef, tdsResizeObserver: TDSResizeObserver, tdsConfigService: TDSConfigService, cdr: ChangeDetectorRef, tdsTableStyleService: TDSTableStyleService, tdsTableDataService: TDSTableDataService<T>, directionality: Directionality);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    onClickRefresh(e: MouseEvent): void;
    private setScrollOnChanges;
    private updateShowPagination;
    private getWidthHost;
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSTableComponent<any>, [null, null, null, null, null, null, { optional: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TDSTableComponent<any>, "tds-table", ["tdsTable"], { "tableLayout": "tableLayout"; "showTotal": "showTotal"; "showRefresh": "showRefresh"; "itemRender": "itemRender"; "title": "title"; "footer": "footer"; "noResult": "noResult"; "pageSizeOptions": "pageSizeOptions"; "virtualItemSize": "virtualItemSize"; "virtualMaxBufferPx": "virtualMaxBufferPx"; "virtualMinBufferPx": "virtualMinBufferPx"; "virtualForTrackBy": "virtualForTrackBy"; "loadingDelay": "loadingDelay"; "pageIndex": "pageIndex"; "pageSize": "pageSize"; "total": "total"; "widthConfig": "widthConfig"; "listData": "listData"; "paginationPosition": "paginationPosition"; "scroll": "scroll"; "paginationType": "paginationType"; "frontPagination": "frontPagination"; "templateMode": "templateMode"; "showPagination": "showPagination"; "loading": "loading"; "outerBordered": "outerBordered"; "loadingIndicator": "loadingIndicator"; "bordered": "bordered"; "size": "size"; "showSizeChanger": "showSizeChanger"; "hideOnSinglePage": "hideOnSinglePage"; "showQuickJumper": "showQuickJumper"; "simple": "simple"; }, { "pageSizeChange": "pageSizeChange"; "pageIndexChange": "pageIndexChange"; "queryParams": "queryParams"; "currentPageDataChange": "currentPageDataChange"; "clickRefresh": "clickRefresh"; }, ["virtualScrollDirective"], ["*"]>;
}
//# sourceMappingURL=table.component.d.ts.map