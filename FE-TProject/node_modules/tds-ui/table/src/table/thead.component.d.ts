import { AfterContentInit, AfterViewInit, ElementRef, EventEmitter, OnDestroy, OnInit, QueryList, Renderer2, TemplateRef } from '@angular/core';
import { TDSSafeAny } from 'tds-ui/shared/utility';
import { TDSThAddOnComponent } from '../cell/th-addon.component';
import { TDSTableDataService } from '../table-data.service';
import { TDSTableStyleService } from '../table-style.service';
import { TDSTrDirective } from './tr.directive';
import * as i0 from "@angular/core";
export declare class TDSTheadComponent<T> implements AfterContentInit, OnDestroy, AfterViewInit, OnInit {
    private elementRef;
    private renderer;
    private tdsTableStyleService;
    private tdsTableDataService;
    private destroy$;
    isInsideTable: boolean;
    templateRef: TemplateRef<TDSSafeAny>;
    listOfNzTrDirective: QueryList<TDSTrDirective>;
    listOfNzThAddOnComponent: QueryList<TDSThAddOnComponent<T>>;
    readonly sortOrderChange: EventEmitter<{
        key: TDSSafeAny;
        value: string | null;
    }>;
    constructor(elementRef: ElementRef, renderer: Renderer2, tdsTableStyleService: TDSTableStyleService, tdsTableDataService: TDSTableDataService<T>);
    ngOnInit(): void;
    ngAfterContentInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSTheadComponent<any>, [null, null, { optional: true; }, { optional: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TDSTheadComponent<any>, "thead:not(.tds-table-thead)", never, {}, { "sortOrderChange": "sortOrderChange"; }, ["listOfNzTrDirective", "listOfNzThAddOnComponent"], ["*"]>;
}
//# sourceMappingURL=thead.component.d.ts.map