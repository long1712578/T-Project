import { BooleanInput } from '@angular/cdk/coercion';
import { ChangeDetectorRef, EventEmitter, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';
import { Subject } from 'rxjs';
import { TDSTableFilterFn, TDSTableFilterList, TDSTableFilterValue, TDSTableSortFn, TDSTableSortOrder } from '../table.types';
import * as i0 from "@angular/core";
export declare class TDSThAddOnComponent<T> implements OnChanges, OnInit, OnDestroy {
    private cdr;
    static ngAcceptInputType_showSort: BooleanInput;
    static ngAcceptInputType_showFilter: BooleanInput;
    static ngAcceptInputType_customFilter: BooleanInput;
    manualClickOrder$: Subject<TDSThAddOnComponent<T>>;
    calcOperatorChange$: Subject<unknown>;
    filterValue: TDSTableFilterValue;
    _sortOrder: TDSTableSortOrder;
    _sortDirections: TDSTableSortOrder[];
    private sortOrderChange$;
    private destroy$;
    private isNzShowSortChanged;
    private isNzShowFilterChanged;
    columnKey?: string;
    filterMultiple: boolean;
    sortOrder: TDSTableSortOrder;
    sortPriority: number | boolean;
    sortDirections: TDSTableSortOrder[];
    filters: TDSTableFilterList;
    sortFn: TDSTableSortFn<T> | boolean | null;
    filterFn: TDSTableFilterFn<T> | boolean | null;
    showSort: boolean;
    showFilter: boolean;
    customFilter: boolean;
    readonly checkedChange: EventEmitter<boolean>;
    readonly sortOrderChange: EventEmitter<string | null>;
    readonly filterChange: EventEmitter<any>;
    getNextSortDirection(_sortDirections: TDSTableSortOrder[], current: TDSTableSortOrder): TDSTableSortOrder;
    emitNextSortValue(): void;
    setSortOrder(order: TDSTableSortOrder): void;
    clearSortOrder(): void;
    onFilterValueChange(value: TDSTableFilterValue): void;
    updateCalcOperator(): void;
    constructor(cdr: ChangeDetectorRef);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSThAddOnComponent<any>, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TDSThAddOnComponent<any>, "th[columnKey], th[sortFn], th[sortOrder], th[filters], th[showSort], th[showFilter], th[customFilter]", never, { "columnKey": "columnKey"; "filterMultiple": "filterMultiple"; "sortOrder": "sortOrder"; "sortPriority": "sortPriority"; "sortDirections": "sortDirections"; "filters": "filters"; "sortFn": "sortFn"; "filterFn": "filterFn"; "showSort": "showSort"; "showFilter": "showFilter"; "customFilter": "customFilter"; }, { "checkedChange": "checkedChange"; "sortOrderChange": "sortOrderChange"; "filterChange": "filterChange"; }, never, ["[tds-th-extra]", "tds-filter-trigger", "*"]>;
}
//# sourceMappingURL=th-addon.component.d.ts.map