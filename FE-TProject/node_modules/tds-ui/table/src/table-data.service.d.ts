import { OnDestroy } from '@angular/core';
import { BehaviorSubject, Observable } from 'rxjs';
import { TDSTableFilterFn, TDSTableFilterValue, TDSTableQueryParams, TDSTableSortFn, TDSTableSortOrder } from './table.types';
import * as i0 from "@angular/core";
export declare class TDSTableDataService<T> implements OnDestroy {
    private destroy$;
    private pageIndex$;
    private frontPagination$;
    private pageSize$;
    private listOfData$;
    pageIndexDistinct$: Observable<number>;
    pageSizeDistinct$: Observable<number>;
    listOfCalcOperator$: BehaviorSubject<{
        key?: string | undefined;
        sortFn: TDSTableSortFn<T> | null | boolean;
        sortOrder: TDSTableSortOrder;
        filterFn: TDSTableFilterFn<T> | null | boolean;
        filterValue: TDSTableFilterValue;
        sortPriority: number | boolean;
    }[]>;
    queryParams$: Observable<TDSTableQueryParams>;
    private listOfDataAfterCalc$;
    private listOfFrontEndCurrentPageData$;
    listOfCurrentPageData$: Observable<T[]>;
    total$: Observable<number>;
    updatePageSize(size: number): void;
    updateFrontPagination(pagination: boolean): void;
    updatePageIndex(index: number): void;
    updateListOfData(list: readonly T[]): void;
    constructor();
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TDSTableDataService<any>, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<TDSTableDataService<any>>;
}
//# sourceMappingURL=table-data.service.d.ts.map